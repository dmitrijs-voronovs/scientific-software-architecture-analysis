quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11218,test,test-ntuple-serialize,11218,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test-ntuple-serialize']
Testability,gold is not evolving anymore and causes problems. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12384:115,test,tested,115,https://root.cern,https://github.com/root-project/root/pull/12384,1,['test'],['tested']
Testability,graph: update test/stressGraphics_builtinzlib.ref for el9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16492:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/16492,1,['test'],['test']
Testability,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:1828,test,test-dev,1828,https://root.cern,https://github.com/root-project/root/issues/16038,1,['test'],['test-dev']
Testability,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121:21,test,test-TClingLoadUnloadFile,21,https://root.cern,https://github.com/root-project/root/issues/14121,1,['test'],['test-TClingLoadUnloadFile']
Testability,"gtest-math-matrix-test-testMatrixTSparse fails on aarch64, ppc64le and s390x with gcc 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:18,test,test-testMatrixTSparse,18,https://root.cern,https://github.com/root-project/root/issues/14446,1,['test'],['test-testMatrixTSparse']
Testability,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591:335,test,tests,335,https://root.cern,https://github.com/root-project/root/pull/5591,2,['test'],"['test', 'tests']"
Testability,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:4037,Test,Test,4037,https://root.cern,https://github.com/root-project/root/pull/12681,16,"['Test', 'test']","['Test', 'testRooFuncWrapper']"
Testability,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:2061,test,test,2061,https://root.cern,https://github.com/root-project/root/issues/7433,1,['test'],['test']
Testability,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 37: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 38: Division by zero in /opt/root_src/tree/tree/src/TBranchElement.cxx:2947; /opt/root_src/tree/tree/src/TBranchElement.cxx:2955:106: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming field 'fObject' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:4535; 2: Taking false branch in /opt/root_src/tree/tree/src/TBranch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:31572,Test,TestBit,31572,https://root.cern,https://github.com/root-project/root/issues/7429,1,['Test'],['TestBit']
Testability,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is < kSplitCollectionOfPointers in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 39: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 40: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2952; 41: Taking false branch in /opt/root_src/tree/tree/src/TBr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:35050,Test,TestBit,35050,https://root.cern,https://github.com/root-project/root/issues/7429,1,['Test'],['TestBit']
Testability,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is >= kSplitCollectionOfPointers in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 39: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 40: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2959; 41: Taking false branch in /opt/root_src/tree/tree/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:38910,Test,TestBit,38910,https://root.cern,https://github.com/root-project/root/issues/7429,1,['Test'],['TestBit']
Testability,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738:22495,log,log,22495,https://root.cern,https://github.com/root-project/root/issues/12738,1,['log'],['log']
Testability,"har*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11581:1363,test,test,1363,https://root.cern,https://github.com/root-project/root/issues/11581,1,['test'],['test']
Testability,"has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9028,test,test,9028,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"have encountered an issue when calling simple functions inside a `TTree::Scan`. For example, if I consider a function whose prototype is ; `int func(int a)`; and call it in a `TTree::Scan`; `t->Scan(""func(myBranch)"")`. it will always be called with 0 as argument. This happens also when passing a constant argument (`t->Scan(""func(2)"")`). This issue doesn't appear in root 6.28. Cheers,; Marino. ### Reproducer. To reproduce the bug just call the `test()` function in the following piece of code; ```; root[] .L filename.C; root[] test(); ```. If this macro is run with root 6.28, the `cout` in `testfunc` will correctly print the values of the branches and `testfunc` column in the Scan will show the correct output of the formula `a+b*c`. When run with ROOT 6.30, the `cout` will print `0 0 0` and the `testfunc` column will always be 0. ```; #include <iostream>; #include <string>; #include <TFile.h>; #include <TTree.h>. using namespace std;. float testfunc(int a, int b, float c); {; cout << a << "" "" << b << "" "" << c << endl;; return a + b * c;; }. void createTree(const string &filename); {; cout << ""Creating tree in file "" << filename << endl;; TFile *f = TFile::Open(filename.c_str(), ""RECREATE"");; TTree *t = new TTree(""t"", ""t"");; int a;; int b;; float c;; t->Branch(""a"", &a, ""a/I"");; t->Branch(""b"", &b, ""b/I"");; t->Branch(""c"", &c, ""c/F"");; for (int i = 0; i < 10; ++i); {; a = i;; b = i + 1;; c = i + 2;; t->Fill();; }; t->Write();; f->Close();; cout << ""Tree created"" << endl;; }. void runExampleScan(const string &filename); {; cout << ""Running example scan"" << endl;; TFile *f = TFile::Open(filename.c_str());; TTree *t = (TTree *)f->Get(""t"");; t->Scan(""a:b:c:testfunc(a,b,c)"", """", ""colsize=20"");; delete t;; delete f;; }. void runExampleDraw(const string &filename); {; gROOT->SetBatch();; TCanvas *c = new TCanvas(""c"", ""c"", 800, 600);; cout << ""Running example draw"" << endl;; TFile *f = TFile::Open(filename.c_str());; TTree *t = (TTree *)f->Get(""t"");; t->Draw(""testfunc(a,b,c)"", """"",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14405:1061,test,testfunc,1061,https://root.cern,https://github.com/root-project/root/issues/14405,1,['test'],['testfunc']
Testability,"he correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl; ; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->; I tested this with a `RooRealSumPdf` but I'm not sure it is the only one affected or if it is anything with an internal integral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:3034,test,tested,3034,https://root.cern,https://github.com/root-project/root/issues/11578,1,['test'],['tested']
Testability,"he getattr; call, but it is _not_ an instance of TemplateProxy. It is rather an instance; of CPPOverload:. ```; (gdb) p *pysi; $1 = {ob_base = {ob_refcnt = 2, ; ob_type = 0x7ffff75fcfe0 <CPyCppyy::CPPOverload_Type>}, fSelf = 0x0, ; fTemplateArgs = 0x770e650, fWeakrefList = 0x7fffd65c0240, ; fTI = {<std::__shared_ptr<CPyCppyy::TemplateInfo, (__gnu_cxx::_Lock_policy)2>> = {<std::__shared_ptr_access<CPyCppyy::TemplateInfo, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, _M_ptr = 0x7fffd88d0710, _M_refcount = {; _M_pi = 0x1}}, <No data fields>}}; (gdb) p mtName; $2 = {; _M_dataplus = {<std::allocator<char>> = {<std::__new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x7fffffff7cd0 ""__call__""}, ; _M_string_length = 8, {_M_local_buf = ""__call__\000\230d\a\000\000\000"", ; _M_allocated_capacity = 6872330769136836447}}; (gdb) p setupSetItem; $3 = true; (gdb) p isConstructor; $4 = false; (gdb) p isTemplate; $5 = false; ```. If i treat this as a special case and add an explicit test on the type. ```; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyr; oot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; index bda60720cf..897d7b4967 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; @@ -245,14 +245,21 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass); ; // for operator[]/() that returns by ref, also add __setitem__; if (setupSetItem) {; - TemplateProxy* pysi = (TemplateProxy*)PyObject_GetAttrString(pyclass, const_cast<char*>(""__setitem__""));; - if (!pysi) {; - pysi = TemplateProxy_New(mtCppName, ""__setitem__"", pyclass);; - PyObject_SetAttrString(pyclass, const_cast<char*>(""__setitem__""), (PyObject*)pysi);; + auto setitemMeth = new CPPSetItem(scope, method);; + PyObject* pysi_o = PyObject_GetAttrString(pyclass, const_cast<char*>(""__setitem__""));; + if (pysi_o && CPPOverload_Check(pysi_o)) {; + ((CPPOverload*)pysi_o)->Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410:4636,test,test,4636,https://root.cern,https://github.com/root-project/root/issues/13410,1,['test'],['test']
Testability,"he use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1716,test,tested,1716,https://root.cern,https://github.com/root-project/root/pull/16442,1,['test'],['tested']
Testability,"here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:153:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillParHelper<TH1D>, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' reques",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:2121,test,test-jupyroot,2121,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406:393,test,test,393,https://root.cern,https://github.com/root-project/root/issues/12406,6,"['Test', 'test']","['Test', 'test']"
Testability,"his=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6757,test,tests,6757,https://root.cern,https://github.com/root-project/root/issues/6939,2,['test'],"['test', 'tests']"
Testability,"hment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:2794,test,test,2794,https://root.cern,https://github.com/root-project/root/issues/11353,1,['test'],['test']
Testability,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:25493,test,tests,25493,https://root.cern,https://github.com/root-project/root/issues/15799,1,['test'],['tests']
Testability,"hon/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:3340,assert,assertion,3340,https://root.cern,https://github.com/root-project/root/issues/6597,1,['assert'],['assertion']
Testability,"houtGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9920,test,test-ntuple-rdf,9920,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test-ntuple-rdf']
Testability,"hreads:; ===========================================================; #0 0x00007fe989ecb46c in waitpid () from /lib64/libc.so.6; #1 0x00007fe989e48f62 in do_system () from /lib64/libc.so.6; #2 0x00007fe98ba740bc in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #3 0x00007fe98ba716d5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:1332,test,test,1332,https://root.cern,https://github.com/root-project/root/issues/6428,1,['test'],['test']
Testability,https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29347/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/. TCling::GetDataMember is triggering deserialization. I think; we had RAII here in the past but maybe it was accidentaly deleted?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2162:64,test,testReport,64,https://root.cern,https://github.com/root-project/root/pull/2162,1,['test'],['testReport']
Testability,"https://github.com/root-project/root/pull/16258 proposes to disable many `DynamicLibraryManager` tests on macOS that never worked on that platform since their introduction (they pass fine on Linux). The tests should be debugged, fixed, and eventually re-enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16270:97,test,tests,97,https://root.cern,https://github.com/root-project/root/issues/16270,2,['test'],['tests']
Testability,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7524:321,test,test,321,https://root.cern,https://github.com/root-project/root/pull/7524,1,['test'],['test']
Testability,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8938:1511,log,log,1511,https://root.cern,https://github.com/root-project/root/pull/8938,3,"['log', 'test']","['log', 'logging', 'tests']"
Testability,i.e. fix ROOT-10792 (and add a test).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5693:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/5693,1,['test'],['test']
Testability,"i2.h:36:9: note: previous definition is here; 151: #define FOREGROUND_GREEN 0x0002 // text color contains green.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_RED 4; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here; 151: #define FOREGROUND_RED 0x0004 // text color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here; 151: SetConsoleTextAttribute(; 151: ^; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:1891,test,test,1891,https://root.cern,https://github.com/root-project/root/pull/3312,1,['test'],['test']
Testability,"iDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); + return TST->getArg(index).getAsType();; }; }; }; ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:7851,test,testing,7851,https://root.cern,https://github.com/root-project/root/issues/11259,1,['test'],['testing']
Testability,ial-dataframe-df001_introduction-py ............................ Passed 7.77 sec; Start 1077: tutorial-dataframe-df007_snapshot-py; 1075/1231 Test #1075: tutorial-dataframe-df004_cutFlowReport-py ........................... Passed 5.88 sec; Start 1078: tutorial-dataframe-df008_createDataSetFromScratch-py; 1076/1231 Test #1073: tutorial-dataframe-df002_dataModel-py ............................... Passed 8.55 sec; Start 1079: tutorial-dataframe-df010_trivialDataSource-py; 1077/1231 Test #1079: tutorial-dataframe-df010_trivialDataSource-py ....................... Passed 3.14 sec; Start 1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py; 1078/1231 Test #1078: tutorial-dataframe-df008_createDataSetFromScratch-py ................ Passed 3.91 sec; Start 1081: tutorial-dataframe-df014_CSVDataSource-py; 1079/1231 Test #1076: tutorial-dataframe-df006_ranges-py .................................. Passed 7.30 sec; Start 1082: tutorial-dataframe-df016_vecOps-py; Start 1083: tutorial-dataframe-df017_vecOpsHEP-py; 1081/1231 Test #1077: tutorial-dataframe-df007_snapshot-py ................................ Passed 9.12 sec; Start 1084: tutorial-dataframe-df019_Cache-py; 1082/1231 Test #1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py .............. Passed 5.30 sec; Start 1085: tutorial-dataframe-df021_createTGraph-py; 1083/1231 Test #1082: tutorial-dataframe-df016_vecOps-py .................................. Passed 4.06 sec; Start 1086: tutorial-dataframe-df024_Display-py; 1084/1231 Test #1083: tutorial-dataframe-df017_vecOpsHEP-py ............................... Passed 3.68 sec; Start 1087: tutorial-dataframe-df026_AsNumpyArrays-py; 1085/1231 Test #1081: tutorial-dataframe-df014_CSVDataSource-py ........................... Passed 7.49 sec; Start 1090: tutorial-dataframe-df031_Stats-py; 1087/1231 Test #1085: tutorial-dataframe-df021_createTGraph-py ............................ Passed 3.08 sec; Start 1091: tutorial-dataframe-df032_MakeNumpyDataFrame-py; 1088/1231 T,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:12261,Test,Test,12261,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"iate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:5684,test,test-products,5684,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,"ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:6644,test,tests,6644,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],['tests']
Testability,"ib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_construct.h:108:6 ; 229: #4 0x7f5aa515d8f7 in void std::_Destroy<ROOT::Experimental::NodeInfo*>(ROOT::Experimental::NodeInfo*, ROOT::Experimental::NodeInfo*) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_construct.h:136:7 ; 229: #5 0x7f5aa515d8f7 in void std::_Destroy<ROOT::Experimental::NodeInfo*, ROOT::Experimental::NodeInfo>(ROOT::Experimental::NodeInfo*, ROOT::Experimental::NodeInfo*, std::allocator<ROOT::Experimental::NodeInfo>&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_construct.h:206:7 ; 229: #6 0x7f5aa515d8f7 in std::vector<ROOT::Experimental::NodeInfo, std::allocator<ROOT::Experimental::NodeInfo> >::~vector() /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:567:2 ; 229: #7 0x7f5aa515d8f7 in ROOT::Experimental::RooFitDriver::~RooFitDriver() /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooFitDriver.cxx:252:1; 229: #8 0x7f5aa4cca57d in (anonymous namespace)::RooAbsRealWrapper::~RooAbsRealWrapper() /home/jhahnfel/ROOT/src/roofit/roofitcore/src/BatchModeHelpers.cxx:215:10; 229: #9 0x7f5aa4cca57d in (anonymous namespace)::RooAbsRealWrapper::~RooAbsRealWrapper() /home/jhahnfel/ROOT/src/roofit/roofitcore/src/BatchModeHelpers.cxx:213:4; 229: #10 0x37f28f in std::default_delete<RooAbsReal>::operator()(RooAbsReal*) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/unique_ptr.h:81:2; 229: #11 0x37f28f in std::unique_ptr<RooAbsReal, std::default_delete<RooAbsReal> >::~unique_ptr() /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/unique_ptr.h:277:4 ; 229: #12 0x37f28f in testRooFitDriver_SimpleLikelihoodFit_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofitcore/test/testRooFitDriver.cxx:100:1; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10009:3538,Test,TestBody,3538,https://root.cern,https://github.com/root-project/root/issues/10009,5,"['Test', 'test']","['TestBody', 'test', 'testRooFitDriver', 'tests']"
Testability,"ibGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:260:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:1701,assert,assert,1701,https://root.cern,https://github.com/root-project/root/pull/14335,2,['assert'],['assert']
Testability,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7362:961,test,testInterpreterLock,961,https://root.cern,https://github.com/root-project/root/issues/7362,2,['test'],"['testImt', 'testInterpreterLock']"
Testability,"ibe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:1038,test,test,1038,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"ibs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:3282,test,test,3282,https://root.cern,https://github.com/root-project/root/issues/10704,1,['test'],['test']
Testability,"ibutions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:4424,test,testRooGradMinimizer,4424,https://root.cern,https://github.com/root-project/root/pull/8294,1,['test'],['testRooGradMinimizer']
Testability,"ich is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warnin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3220,TEST,TESTS,3220,https://root.cern,https://github.com/root-project/root/issues/12427,1,['TEST'],['TESTS']
Testability,"ick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C; 10:#include ""encoder.hxx"". ./src/./tutorials/tmva/TMVA_SOFIE_GNN.py; 127:ROOT.gInterpreter.Declare('#include ""encoder.hxx""'); ```. So at least both of those test are uses the same generated file name (I can't find it in the repository) `encoder.hxx` and are still allowed to run in parallel ... leading to unstable result. ### Reproducer. Rerun https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971. ### ROOT version. master. ### Installation method. both local install and CI. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16680:2160,test,test,2160,https://root.cern,https://github.com/root-project/root/issues/16680,1,['test'],['test']
Testability,"icles_m is a vector<double> and index is an integer, all of these are branches of a tree.; The command; `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `; returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior; I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8497:1172,test,tested,1172,https://root.cern,https://github.com/root-project/root/issues/8497,1,['test'],['tested']
Testability,"ict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:3820,test,test,3820,https://root.cern,https://github.com/root-project/root/pull/5960,1,['test'],['test']
Testability,"ied one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:3587,test,test,3587,https://root.cern,https://github.com/root-project/root/pull/5960,1,['test'],['test']
Testability,"ies that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1174,Test,Test,1174,https://root.cern,https://github.com/root-project/root/issues/10704,1,['Test'],['Test']
Testability,"iew3D.cxx:1741:20: warning: Value stored to 'count' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'count' is never read in /opt/root_src/graf3d/g3d/src/TView3D.cxx:1741; /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800:14: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800; /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyze",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:57488,log,logicalShape,57488,https://root.cern,https://github.com/root-project/root/issues/7531,1,['log'],['logicalShape']
Testability,"if ""[skip ci]"" is detected in the PR title, the CI does not start. This is done to have at least one string in common with the ones the GH CI uses for commits.; The test of this PR is that the CI does not start given its title.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15524:165,test,test,165,https://root.cern,https://github.com/root-project/root/pull/15524,1,['test'],['test']
Testability,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13712:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/13712,2,['test'],"['test', 'tested']"
Testability,"ild/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:8663,test,testing,8663,https://root.cern,https://github.com/root-project/root/issues/12428,1,['test'],['testing']
Testability,"ilding module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6328,assert,assert,6328,https://root.cern,https://github.com/root-project/root/issues/13453,1,['assert'],['assert']
Testability,"ile. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->S",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1031,Test,TestClass,1031,https://root.cern,https://github.com/root-project/root/issues/8268,2,"['Test', 'test']","['TestClass', 'test']"
Testability,"ils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:11694,test,tests,11694,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"ils>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/minimistjs/minimist/commit/c590d75b741a12b5423e2b299f38a7f7c7d25a18""><code>c590d75</code></a> v1.2.7</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83c3c""><code>0ebf4eb</code></a> [meta] add <code>auto-changelog</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/e115b63fa9d3909f33b00a2db647ff79068388de""><code>e115b63</code></a> [actions] add reusable workflows</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a> [meta] add <code>safe-publish-latest</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/f58745b9bb84348e1be72af7dbba5840c7c13013""><code>f58745b</code></a> [eslint] add eslint; rules to enable later are warnings</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a> [Tests] add <code>aud</code> in <code>posttest</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/236f4a07e4ebe5ee44f1496ec6974991ab293ffd""><code>236f4a0</code></a> [readme] rename and add badges</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65""><code>ab03356</code></a> [Dev Deps] switch from <code>covert</code> to <code>nyc</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a> [Dev Deps] update <code>covert</code>, <code>tape</code>; remove unnecessary <code>tap</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a""><code>783a49b</code></a> [meta] create FUNDING.yml; add <code>funding</code> in package.json</li>; <li>Additional commits viewable in <a href=""https://github.com/minimistjs/minimist/compare/v0.0.8...v1.2.7"">compare view</a></li>; </ul>; </details>; <",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:6308,Test,Tests,6308,https://root.cern,https://github.com/root-project/root/pull/11865,1,['Test'],['Tests']
Testability,"imistjs/minimist/compare/v1.2.5...v1.2.6"">v1.2.6</a> - 2022-03-21</h2>; <h3>Commits</h3>; <ul>; <li>test from prototype pollution PR <a href=""https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a></li>; <li>isConstructorOrProto adapted from PR <a href=""https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:3774,test,test,3774,https://root.cern,https://github.com/root-project/root/pull/11865,1,['test'],['test']
Testability,"in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 26: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 28: Returning from 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 29: Loop condition is true. Entering loop body in /opt/root_src/proof/proof/src/TProof.cxx:5148; 30: 'pof' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5150; 31: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5150; 32: Calling 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 33: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 35: Returning from 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 36: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5151; 37: Calling 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 38: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407; 39: Returning from 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 40: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5151; 41: 'pof' is not equal to 'pf' in /opt/root_src/proof/proof/src/TProof.cxx:5152; 42: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5152; 43: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TProof.cxx:5154; /opt/root_src/proof/proof/src/TProof.cxx:5165:38: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'action' is not equal to 0 in /opt/root_src/proof/proof/src/TProof.cxx:4936; 2: Taking false branch in /opt/root_src/proof/proof/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7534:24790,Test,TestBit,24790,https://root.cern,https://github.com/root-project/root/issues/7534,1,['Test'],['TestBit']
Testability,"in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""). if __name__ == ""__main__"":; main(); ```; just setup ROOT from a LCG release and run it, it will print memory use on each iteration, for me it grows by ~35MB on each loop. ### Setup; Tested this with ROOT 6.24.06 from LCG_101 and ROOT 6.26.04 from LCG_102 on CentOS7 host (x86_64-centos7-gcc11-opt). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099:2255,Test,Tested,2255,https://root.cern,https://github.com/root-project/root/issues/11099,1,['Test'],['Tested']
Testability,"in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1455,sandbox,sandbox,1455,https://root.cern,https://github.com/root-project/root/issues/10777,1,['sandbox'],['sandbox']
Testability,"in addition, adapt tests accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1497:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/1497,1,['test'],['tests']
Testability,in presence of an overloaded operator().; The test for these changes can be found in roottest: https://github.com/root-project/roottest/pull/1024. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). Fixes: https://github.com/root-project/root/issues/13410,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13820:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/13820,2,['test'],"['test', 'tested']"
Testability,"in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.08 0.903015; python-cpp-cpp 12.03 11.26 0.935993; python-cpp-advanced 11.55 10.83 0.937662; pyroot-pyz-rdataframe-histo-profile 11.24 7.37 0.655694; python-basic-basic 10.11 9.95 0.984174; python-stl-stl 8.35 7.87 0.942515; pyroot-pyz-rtensor 6.94 2.32 0.334294; python-ttree-ttree 6.15 5.70 0.926829; python-basic-datatype 5.87 5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:3071,test,tests,3071,https://root.cern,https://github.com/root-project/root/pull/14507,1,['test'],['tests']
Testability,"in the enclosing expression, the value is never actually read from 'st' in /opt/root_src/proof/proof/src/TProofServ.cxx:5159; /opt/root_src/proof/proofbench/src/TProofBench.cxx:499:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 2: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 3: 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 4: Left side of '&&' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 5: Calling 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 6: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 11: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 12: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 13: Assuming 'nmdesc' is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 14: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 15: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:426; 16: Left side of '||' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:427; 17: Calling 'TString::Contains' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:429; 18: 's' is non-null in /opt/root_src/core/base/inc/TString.h:625; 19: '?' condition is true in /opt/root_src/core/base/inc/TString.h:625; 20: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:625; 21: Retu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7534:54452,Test,TestBit,54452,https://root.cern,https://github.com/root-project/root/issues/7534,1,['Test'],['TestBit']
Testability,"inHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5035",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:3051,test,tests,3051,https://root.cern,https://github.com/root-project/root/issues/8008,2,['test'],"['testBuildDir', 'tests']"
Testability,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:6155,test,testing,6155,https://root.cern,https://github.com/root-project/root/issues/7654,1,['test'],['testing']
Testability,inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1830,log,logger,1830,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"ince we moved to TCMalloc (instead of JeMalloc) for `cmsRun` we have seen some failures in `TROOT::EndOfProcessCleanups` upon destruction of `TString` (and some other destructors) affecting CMSSW ROOT6 (version `6.29.01`) and ROOT628 (version `6.28.05`) IBs (`el8_amd64_gcc11`). We reported the issue in the cmssw repo at [#42468](https://github.com/cms-sw/cmssw/issues/42468). ### Reproducer. The errors can be reproduced on lxplus as follows:; ```; lxplus816:~> cmssw-el8; Singularity> cd /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/; Singularity> cmsenv; Singularity> cd /tmp/avalenzu/; Singularity> cmsRun /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ``` . And for gdb:; ```; Singularity> gdb cmsRun; (gdb) run /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ```. A sample stacktrace upon destruction of the `TString`:; ```; Thread 1 (Thread 0x7ffff413fc80 (LWP 3407688) ""cmsRun""):; #0 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:1125,test,test,1125,https://root.cern,https://github.com/root-project/root/issues/13429,1,['test'],['test']
Testability,"include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:4673,test,tests,4673,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,"include lzo, lz4, zopfli, and brotli as compression algorithms in root. Essentially what is in [pseyfert/root-compression](https://github.com/pseyfert/root-compression) but built into root instead of as LD_PRELOAD hack. open issues:; - run benchmarks in this version; - extensive testing (e.g. various platforms); - decide which parts are worth pursuing; - review license compatibilities (LZO is GPL, i.e. incompatible with root; LZ4 is BSD; ZOPFLI is APACHE; BROTLI is MIT); - for lz4, there is also #81. It is worth reviewing the differences. notable features:; - zopfli compresses in the zlib format and can thus be read even with root versions w/o zopfli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/177:240,benchmark,benchmarks,240,https://root.cern,https://github.com/root-project/root/pull/177,2,"['benchmark', 'test']","['benchmarks', 'testing']"
Testability,"increase test coverage accordingly and add 2 tutorials, one in C++ and one in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3743:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/3743,1,['test'],['test']
Testability,"indings. https://github.com/root-project/root/blob/a940bdbc40d9a0cdac8975c287e1cb7ada0d0c65/builtins/xrootd/CMakeLists.txt#L43. given 2c23502137acd9276fc21da300ab3d562278d57f (from @peremato in 2015). I am unclear on the specifics of explicitly disabling the Python bindings from being built as there is no associated PR for the commit. If there is not a modern reason for this to stay disabled (my assumption is that there is and I am missing it), updating to XRootD `v5.4.1` would allow for the Python bindings to be optionally enabled and to be build safely with the improvements to the Python bindings build process (and also bring along new features and bug fixes). If there are reasons to keep XRootD below `v5.4.X` then this Issue can get closed. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Make a PR similar to PR #7335 that would update the builtin to XRootD [`v5.4.1`](https://github.com/xrootd/xrootd/releases/tag/v5.4.1). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. There isn't a bug explicitly here, but for a discussion on the Python 3 binding and modern `setuptools` issue that was resolved in XRootD `v5.4.1` see the links in additional context. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Not relevant for this issue, but all instances related to the XRootD issues were tested in ROOT `v6.24/06`. ### Additional context; <!--; Add any other context about the problem here.; -->. * https://github.com/xrootd/xrootd/issues/1579; * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/58; * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:2710,test,tested,2710,https://root.cern,https://github.com/root-project/root/issues/9967,1,['test'],['tested']
Testability,ing 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'rc' is >= 0 in /opt/root_src/main/src/xpdtest.cxx:93; 2: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:93; 3: 'rc' is <= 0 in /opt/root_src/main/src/xpdtest.cxx:96; 4: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:96; 5: 'verbose' is false in /opt/root_src/main/src/xpdtest.cxx:99; 6: '?' condition is false in /opt/root_src/main/src/xpdtest.cxx:99; 7: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:105; 8: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:110; 9: 'rc' is equal to 0 in /opt/root_src/main/src/xpdtest.cxx:134; 10: Left side of '&&' is true in /opt/root_src/main/src/xpdtest.cxx:134; 11: 'test' is <= 1 in /opt/root_src/main/src/xpdtest.cxx:134; 12: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:134; 13: Calling default constructor for 'TUrl' in /opt/root_src/main/src/xpdtest.cxx:146; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/io/io/src/TFile.cxx:3794; 2: Taking false branch in /opt/root_src/io/io/src/TFile.cxx:3794; 3: Calling default constructor for 'TUrl' in /opt/root_src/io/io/src/TFile.cxx:3801; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Control jumps to 'case 166:' at line 313 in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:194; 2: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:314; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/bas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:36298,test,test,36298,https://root.cern,https://github.com/root-project/root/issues/7412,1,['test'],['test']
Testability,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:3763,Test,Test,3763,https://root.cern,https://github.com/root-project/root/issues/8097,12,['Test'],['Test']
Testability,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11186:1281,test,test,1281,https://root.cern,https://github.com/root-project/root/issues/11186,9,"['Test', 'test']","['TestBody', 'test', 'testRooPoisson', 'tests']"
Testability,"ing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:; 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4582,assert,assertion,4582,https://root.cern,https://github.com/root-project/root/issues/6597,10,"['Assert', 'TEST', 'Test', 'assert', 'test']","['AssertionError', 'TEST', 'Test', 'assert', 'assertion', 'tests']"
Testability,"inging other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it however so I would create a separate issue if I find the time to test and confirm it later. ### Reproducer. Files in archive: examine_mcbm_beam_2019_03.geo.root, check_overlaps.C, root_overlaps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cxx; index fc93cc8b82..0e77517729 100644; --- a/geom/geompainter/src/TGeoChecker.cxx; +++ b/geom/geompainter/src/TGeoChecker.cxx; @@ -1193,7 +1193,7 @@ TGeoOverlap *TGeoChecker::MakeCheckOverlap(const char *name, TGeoVolume *vol1, T; /// Check illegal overlaps for volume VOL within a limit OVLP by sampling npoints; /// inside the volume shape. -void TGeoChecker::Chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:3131,test,test,3131,https://root.cern,https://github.com/root-project/root/issues/14675,1,['test'],['test']
Testability,"installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:977,test,tests,977,https://root.cern,https://github.com/root-project/root/issues/16242,3,['test'],"['test', 'test-TestRModelParserPyTorch', 'tests']"
Testability,interpreter fails with assertion in debug builds on ARM when upgrading gcc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789:23,assert,assertion,23,https://root.cern,https://github.com/root-project/root/issues/14789,1,['assert'],['assertion']
Testability,"interpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:4466,test,tests,4466,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,"ion found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7943,Test,Test,7943,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"ion/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9774,Test,Test,9774,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"ionWrapperDefaultArg (1 ms); [ RUN ] TClingCallFunc.TemplateFunctionWrapper; [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms); [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType; [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms); [ RUN ] TClingCallFunc.MemberMethodWrapper; [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperNodiscard; [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr; [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorRO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3457,test,test,3457,https://root.cern,https://github.com/root-project/root/issues/14512,1,['test'],['test']
Testability,"irst attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### O",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1328,test,test,1328,https://root.cern,https://github.com/root-project/root/issues/16577,1,['test'],['test']
Testability,"issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1269,test,test,1269,https://root.cern,https://github.com/root-project/root/issues/12430,2,['test'],"['test', 'testRooProdPdf']"
Testability,"istOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440; #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", ; typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478; #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084:3728,test,test,3728,https://root.cern,https://github.com/root-project/root/issues/14084,2,['test'],['test']
Testability,"isting code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:1824,test,test,1824,https://root.cern,https://github.com/root-project/root/pull/5960,1,['test'],['test']
Testability,"it within the ROOT prompt in 6.28 and master.; In ROOT master and 6,28 it seems the vector is initialised with the values used the first time and not with the new ones. ; It works fine in 6.26, where the second time the vector passed to the DummyBroadCast function is initialised correctly. . ```; .L testBroadCast.hxx; Test1::Session s1;; Test2::Session s2;; ```. Here is the code : `testBroadCast.hxx`. ```; #include <iostream>; #include <vector>. template<class T>; void DummyBroadCast(const T* data, std::vector<size_t> shape, std::vector<size_t> targetShape) {. std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;. }. namespace Test1 {. struct Session {; ; std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(64);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 4, 4 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);. }. };; }. namespace Test2 {. struct Session {. std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(100);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 5, 5 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);; // DummyBroadCast(tensor_conv0bias, { 4 , 1 , 1 }, { 2 , 4 , 5, 5 });. }. };; }; ```; ; This affects some failures seen in SOFIE test like ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164:1814,test,test,1814,https://root.cern,https://github.com/root-project/root/issues/12164,3,['test'],"['test', 'testReport']"
Testability,"ite here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:2464,assert,assert,2464,https://root.cern,https://github.com/root-project/root/pull/5627,2,['assert'],['assert']
Testability,"ithub.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.08 0.903015; python-cpp-cpp 12.03 11.26 0.935993; python-cpp-advanced 11.55 10.83 0.937662; pyroot-pyz-rdataframe-histo-profile 11.24 7.37 0.655694; python-basic-basic 10.11 9.95 0.984174; python-stl-stl 8.35 7.87 0.942515; pyroot-pyz-rtensor 6.94 2.32 0.334294; python-ttree-ttree 6.15 5.70 0.926829; python-basic-datatype 5.87 5.86 0.998296; python-pickle-write 5.56 5.56 1.000000; python-basic-overload 5.29 5.30 1.001890; python-pythonizations-pythonizations 5.27 5.20 0.986717; python-pythonizations-smartptr 5.04 4.89 0.970238; python-basic-operator 4.79 4.74 0.989562; python-cpp-cpp11 4.72 4.69 0.993644; python-memory-memory 4.62 4.48 0.96969",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:3456,test,tests,3456,https://root.cern,https://github.com/root-project/root/pull/14507,1,['test'],['tests']
Testability,"ittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:1439,Test,Test,1439,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"ity; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; FAILED (failures=1); ~~~. ### Expected behavior. No failure. This test did not fail with numpy 1.23. ### To Reproduce. 1. The failing test is part of the source distribution. ### Setup. 1. ROOT version 6.26.10; 2. Operating system Fedora Rawhide i686; 3. How you obtained ROOT - package build from source. ### Additional context. Package build from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1773,Test,TestRooDataSetNumpy,1773,https://root.cern,https://github.com/root-project/root/issues/12162,8,"['Assert', 'Test', 'assert', 'test']","['AssertionError', 'Test', 'TestRooDataSetNumpy', 'assertEqual', 'test', 'tests']"
Testability,ixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002; ```; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:1032,test,tests,1032,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,"iz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time on some experiments (data + code available on demand from Auger group, ask me). I am available for help in testing and possibly integrating and maintaining this addition, just let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:1509,benchmark,benchmarks,1509,https://root.cern,https://github.com/root-project/root/pull/40,4,"['Benchmark', 'benchmark', 'test']","['Benchmark', 'benchmark', 'benchmarks', 'testing']"
Testability,"ization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|14,45|18,89|13,03|; |osx 10.14| roottest-cling| 88,96|118,94|100,1|; |osx 10.14| roottest-python| 107,57|60,93|100,88|; |osx 10.14| roottest-root-hist| 10,25|23,25|11,77|; |osx 10.14| roottest-root-math| 8,33|21,23|9,27|; |osx 10.14| roottest-root-tree| 555|840,89|510,97|; |osx 10.14| roottest-root-treeformula | 235,44|402,82|228,91|. We think in `-j8` we lose the advantage of the new PR because the PCH had the rootmaps read in memory and restarting the processes allowed the kernel efficiently reuse that memory. Whereas, the modules and this PR scans the libraries from disk and builds in-memory optimization data structures. Reading from disk seems to be the bottleneck (not verified) but if that's an issue in future we can write out the index making subsequent runs at *almost* zero cost.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:2275,test,test,2275,https://root.cern,https://github.com/root-project/root/pull/4717,1,['test'],['test']
Testability,"izeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:13124,test,test,13124,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15792:1469,test,tests,1469,https://root.cern,https://github.com/root-project/root/issues/15792,1,['test'],['tests']
Testability,"ject/commit/95dd17848383315050a5d64051bd695d0a653c51; - https://github.com/llvm/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696:1183,test,tests,1183,https://root.cern,https://github.com/root-project/root/pull/15696,2,['test'],"['test-testHistFactory', 'tests']"
Testability,"jhahnfel/ROOT/src/core/base/inc/Bytes.h:442:48; 352: #2 0x7f7ffe26e9d0 in TBufferFile::ReadInt(int&) /home/jhahnfel/ROOT/src/io/io/inc/TBufferFile.h:401:4; 352: #3 0x7f80011965fc in TLeafI::ReadBasket(TBuffer&) /home/jhahnfel/ROOT/src/tree/tree/src/TLeafI.cxx:165:9; 352: #4 0x7f8001055b29 in TBranch::ReadLeavesImpl(TBuffer&) /home/jhahnfel/ROOT/src/tree/tree/src/TBranch.cxx:2382:13; 352: #5 0x7f800106b4a9 in TBranch::GetEntry(long long, int) /home/jhahnfel/ROOT/src/tree/tree/src/TBranch.cxx:1691:4; 352: #6 0x7f800125eea0 in TTree::GetEntry(long long, int)::$_3::operator()() const /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:5628:23; 352: #7 0x7f800125d3c8 in TTree::GetEntry(long long, int) /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:5703:7; 352: #8 0x50a984 in TestContex::runApplicationPhase(TString) /home/jhahnfel/ROOT/src/tmva/tmva/test/crossvalidation/TestCrossValidationSerialise.cxx:188:13; 352: #9 0x50b2a3 in TestCvSerialise(TMVA::Types::EMVA, TString, TString) /home/jhahnfel/ROOT/src/tmva/tmva/test/crossvalidation/TestCrossValidationSerialise.cxx:231:7; 352: #10 0x50b6e2 in TestCrossValidationSerialise() /home/jhahnfel/ROOT/src/tmva/tmva/test/crossvalidation/TestCrossValidationSerialise.cxx:240:7; 352: #11 0x50b8b3 in main /home/jhahnfel/ROOT/src/tmva/tmva/test/crossvalidation/TestCrossValidationSerialise.cxx:255:4; 352: #12 0x7f7ffad0aca2 in __libc_start_main (/lib64/libc.so.6+0x3aca2); 352: #13 0x42361d in _start (/home/jhahnfel/ROOT/build-clang-asan-debug/tmva/tmva/test/crossvalidation/testCrossValidationSerialise+0x42361d); 352:; 352: Address 0x7f7ff4e1b880 is located in stack of thread T0 at offset 128 in frame; 352: #0 0x7f7feed1f30f in cling::LookupHelper::findType(llvm::StringRef, cling::LookupHelper::DiagSetting) const (/home/jhahnfel/ROOT/build-clang-asan-debug/lib/libCling.so+0xdd430f); ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010:1435,Test,TestCrossValidationSerialise,1435,https://root.cern,https://github.com/root-project/root/issues/10010,9,"['Test', 'test']","['TestCrossValidationSerialise', 'test', 'testCrossValidationSerialise']"
Testability,json: improve logic of removing typeinfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3215:14,log,logic,14,https://root.cern,https://github.com/root-project/root/pull/3215,1,['log'],['logic']
Testability,"just' ROOT. The trigger is the auto-loading of a library that has a dictionary with has forward decl string .. which all starts with:; ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; extern int __Cling_Autoloading_Map;; ....; ```. The order of parsing is (with many ellipsis):; ```; ""<<< cling interactive line includer >>>"" : line 9 : #include “standalone.C”; standalone.C : line 1 : #pragma GCC diagnostic push; standalone.C : line 2 : #pragma GCC diagnostic ignored ""-Wuninitialized"" // Inserted in Diag map; standalone.C : line 3 : #pragma GCC diagnostic ignored ""-Wsign-conversion"" // Inserted in Diag map; standalone.C : line 8 : struct TTUBE {} ; // triggers auto-loading and thus recursive parsing. ""<<< cling interactive line includer >>>"" : line 10 : parse dict fwd declare string; input_line_9 : line 2 : #pragma clang diagnostic ignored ""-Wkeyword-compat"" // Inserted in Diag map; input_line_9 : line 3 : #pragma clang diagnostic ignored ""-Wignored-attributes"" // Inserted in Diag map; input_line_9 : line 4 : #pragma clang diagnostic ignored ""-Wreturn-type-c-linkage"" // Inserted in Diag map. end of file. standalone.C : line 12 : #pragma GCC diagnostic pop // Inserted in Diag map; ```; The last line triggers the assert because when recording the state change, it records it as being from; ```; standalone.C : line 12; ""<<< cling interactive line includer >>>"" : line 9; ```; but when recording the last one, it notices that the last state change that happened, indirectly, for the file '<<< cling interactive line includer >>>' happened at line 10 (because of the pragma in input_line_9 which is 'recorded' as being included by line 10),; which makes that the state change for ```standalone.C:12``` happens 'ealier' than the last state change as far as the pseudo-file ""<<< cling interactive line includer >>>"" is concerned. For that pseudo-file, the last state change happened line 10 but the state change bbeing processed happens line 9 (where Standalone.C is being included).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4882:1426,assert,assert,1426,https://root.cern,https://github.com/root-project/root/pull/4882,2,['assert'],['assert']
Testability,"k the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	222",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:1028,log,log,1028,https://root.cern,https://github.com/root-project/root/issues/9436,1,['log'],['log']
Testability,"k; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 te",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:2219,Assert,AssertionError,2219,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Assert'],['AssertionError']
Testability,"ke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; FAILED (failures=1); ~~~. ### Expected behavior. No failure. This test did not fail with numpy 1.23. ### To Reproduce. 1. The failing test is part of the source distribution. ### Setup. 1. ROOT version 6.26.10; 2. Operating system Fedora Rawhide i686; 3. How ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1567,Test,TestRooDataSetNumpy,1567,https://root.cern,https://github.com/root-project/root/issues/12162,1,['Test'],['TestRooDataSetNumpy']
Testability,"keLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 10840: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticCommon.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 10842: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandList.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandList.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 10860: 217>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\StmtDataCollectors.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\StmtDataCollectors.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; ```. **Error log:**; [ROOT_build.log](https://github.com/root-project/root/files/10216877/ROOT_build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:6317,log,log,6317,https://root.cern,https://github.com/root-project/root/issues/11881,3,['log'],['log']
Testability,"keTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:5850,test,test-products,5850,https://root.cern,https://github.com/root-project/root/issues/10861,1,['test'],['test-products']
Testability,"king false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:971; 61: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 62: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 63: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 64: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 65: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 66: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 67: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 68: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 69: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 70: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 71: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 72: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 73: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which partic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:101504,Test,TestBit,101504,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Test'],['TestBit']
Testability,"kipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1587,log,logon,1587,https://root.cern,https://github.com/root-project/root/issues/11977,2,['log'],"['logoff', 'logon']"
Testability,"l (allowing a ""builtin_lz4"" option in CMake analogous to ""builtin_lzma""). I am unable to test this on Windows currently. The LZ4 algorithm focuses on decompression speed while sacrificing compression ratio. Compression level < 4 uses the ""LZ4 compression"" algorithm while compression level >= 4 uses ""LZ4HC"" (HC = high compression) variant. LZ4HC is comparable to zlib in speeds, but has approximately 20% larger file size. To evaluate, I use the Event executable in the test/ directory. I extend this to allow the compression algorithm be specified via CLI. Example invocation:. time ./Event 4000 6 99 1 1000 4; time ./Event 4000 4 99 0 1000 4. Here, the CLI arguments are:; - 1: Number of events (4000); - 2: Compression ratio (6); - 3: Split level (99); - 4: 1 for write, 0 for read.; - 5: Number of tracks per event (1000).; - 6: Compression algorithm (1 = zlib, 2 = lzma, 4 = lz4. 3 is the deprecated zlib-like algorithm). I extended MainEvent.cxx to include TTreePerfStats information, which gives us access to the compression-time-only rates. Performance results (testing on a 2.6GHz Intel Westmere E56xx-based VM) summary:. LZ4HC compression:; - File size: 231MB; - 14.7MB/s CPU time for writing. ZLIB level-6 compression:; - File size: 189MB; - 10.5MB/s CPU time for writing.; Summary: LZ4HC compression resulted in a file 20% larger. Compression time was 44% faster. LZMA level-6 compression:; - File size: 163MB; - .62MB/s CPU time for writing.; Summary: LZMA compression resulted in a file 13% smaller. Compression time was 16x slower than ZLIB level-6. LZ4 decompression:; - 233MB/s CPU time for decompression only.; - 189MB/s CPU time for reading. ZLIB decompression:; - 118MB/s CPU time for decompression only; - 104MB/s CPU time for reading.; Summary: LZ4 decompression was 97% faster, resulting in 81% faster reading for this case. LZMA decompression:; - 15.4MB/s CPU time for decompression only; - 14.7MB/s CPU time for reading.; Summary: LZMA decompression was 7x slower than zlib.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/59:1237,test,testing,1237,https://root.cern,https://github.com/root-project/root/pull/59,1,['test'],['testing']
Testability,"l data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:3501,test,tests,3501,https://root.cern,https://github.com/root-project/root/issues/12426,2,['test'],"['test', 'tests']"
Testability,"l test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:10030,Test,Test,10030,https://root.cern,https://github.com/root-project/root/issues/12426,2,"['Test', 'test']","['Test', 'test-ntuple-rdf']"
Testability,"l&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:5940,test,tests,5940,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,l-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataframe-test-dataframe-resptr; 406/1231 Test #383: gtest-tree-dataframe-test-dataframe-resptr .......................... Passed 0.61 sec; Start 384: gtest-tree-dataframe-test-dataframe-take; 407/1231 Test #382: gtest-tree-dataframe-test-dataframe-leaves .......................... Passed 2.14 sec; Start 385: gtest-tree-dataframe-test-dataframe-entrylist; 408/1231 Test #385: gtest-tree-dataframe-test-dataframe-entrylist ....................... Passed 0.90 sec; Start 386: gtest-tree-dat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:2945,test,test-dataframe-snapshot,2945,https://root.cern,https://github.com/root-project/root/pull/10300,3,"['Test', 'test']","['Test', 'test-dataframe-helpers', 'test-dataframe-snapshot']"
Testability,"l/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315; #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119; #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96; #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434; #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578; #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:12043,test,test,12043,https://root.cern,https://github.com/root-project/root/issues/13034,3,['test'],['test']
Testability,"l: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; version = ""2021-09-01"";; src = root-source;; cmakeFlags = (map (oldFlag:; if oldFlag == ""-Dimt=OFF"" then ""-Dimt=ON""; else if oldFlag == ""-Dssl=OFF"" then ""-Dssl=ON""; # else if oldFlag == ""-Dgfal=OFF"" then ""-Dgfal=ON""; # else if oldFlag == ""-Dxrootd=OFF"" then ""-Dxrootd=ON""; else oldFlag; ) oldAttrs.cmakeFlags) ++ [; ""-DCMAKE_BUILD_TYPE=RelWithDebInfo""; ];; buildInputs = oldAttrs.buildInputs ++ (with pkgs-root; [; tbb # for implicit multithreading; openssl # for ssl support; ]);; });; }); ];; };; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]) ++ (with pkgs;[; gawk; gitAndTools.gitFull; ]);; };; packagesSub = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; inherit (pkgs.gitAndTools) git gitFull;; };; run = pkgs.writeShellScriptBin ""run"" ''; export PATH=""${ with packagesSub; pkgs.lib.makeBinPath [ root gcc gnumake cmake gawk gitFull ]}:$PATH""; if test -n ""${devShell.shellHook}""; then; . ""${devShell.shellHook}"";; fi; exec ""$@""; '';; ana = pkgs.callPackage ./ana.nix { inherit (packagesSub) root; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; inherit devShell;; defaultPackage = run;; packages = packagesSub // {; srcRaw = self;; inherit run ana;; };; });; }; ```. `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""927ce1afc1db40869a463a37ea2738c27d425f80"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:12705,test,test,12705,https://root.cern,https://github.com/root-project/root/issues/9240,1,['test'],['test']
Testability,"l::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8449,test,test-ntuple-minifile,8449,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test-ntuple-minifile']
Testability,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:3897,test,test,3897,https://root.cern,https://github.com/root-project/root/issues/8899,2,['test'],['test']
Testability,"lang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:6145,test,tests,6145,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],['tests']
Testability,"latform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1194,Test,Test,1194,https://root.cern,https://github.com/root-project/root/issues/10704,1,['Test'],['Test']
Testability,"ld (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:8555,test,testing,8555,https://root.cern,https://github.com/root-project/root/issues/12428,1,['test'],['testing']
Testability,"ld/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:19510,test,test,19510,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"ld: warning: -undefined dynamic_lookup may not work with chained fixups. Rely on explicit linking, and only specify -undefined dynamic_lookup where really needed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432:228,test,tested,228,https://root.cern,https://github.com/root-project/root/pull/11432,1,['test'],['tested']
Testability,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15156:1331,test,test,1331,https://root.cern,https://github.com/root-project/root/issues/15156,3,['test'],['test']
Testability,le '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 00; 1148: 0x0fefe1c23d70: 03 f9 f9 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9; 1148: 0x0fefe1c23d80: 00 00 00 00 00 04 f9 f9 f9 f9 f9 f9 03 f9 f9 f9; 1148: 0x0fefe1c23d90: 02 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00; 1148: Shadow byte legend (one shadow byte represents 8 application bytes):; 1148: Addressable: 00; 1148: Partially addressable: 01 02 03 04 05 06 07; 1148: Heap left redzone: fa; 1148: Freed heap region: fd; 1148: Stack left redzone: f1; 1148: Stack mid redzone: f2; 1148: Stack right redzone: f3; 1148: Stack after return: f5; 1148: Stack use after scope: f8; 1148: Global redzone: f9; 1148: Global init order: f6; 1148: Poisoned by user: f7; 1148: Container overflow: fc; 1148: Array cookie: ac; 1148: Intra object redzone: bb; 1148: ASan internal: fe; 1148: Left alloca redzone: ca; 1148: Right alloca redzone: cb; 1148: ==4075620==ABORTING; ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629:18017,test,test,18017,https://root.cern,https://github.com/root-project/root/issues/11629,2,['test'],['test']
Testability,"le included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):; Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'; ```; The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas?. ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:2232,log,log,2232,https://root.cern,https://github.com/root-project/root/issues/14520,1,['log'],['log']
Testability,"le test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-seriali",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:10234,Test,Test,10234,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Test'],['Test']
Testability,"lect(TObject*) /home/jhahnfel/ROOT/src/core/cont/src/TCollection.cxx:736:4; 418: #5 0x7f1c620480aa in TList::Delete(char const*) /home/jhahnfel/ROOT/src/core/cont/src/TList.cxx:537:13; 418: #6 0x7f1c6203423b in THashList::Delete(char const*) /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:215:14; 418: #7 0x7f1c6312616e in TDirectoryFile::Close(char const*) /home/jhahnfel/ROOT/src/io/io/src/TDirectoryFile.cxx:572:27; 418: #8 0x7f1c6317a52b in TFile::Close(char const*) /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:942:20; 418: #9 0x7f1c631788ad in TFile::~TFile() /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:527:4; 418: #10 0x7f1c63179ae8 in TFile::~TFile() /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:526:1; 418: #11 0x53554a in BulkApiMultipleTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiMultiple.cxx:305:4. [...]. 418: previously allocated by thread T0 here:; 418: #0 0x530e28 in operator new(unsigned long) (/home/jhahnfel/ROOT/build-clang-asan-debug/tree/tree/test/testBulkApiMultiple+0x530e28); 418: #1 0x7f1c61f3a2d4 in TStorage::ObjectAlloc(unsigned long) /home/jhahnfel/ROOT/src/core/base/src/TStorage.cxx:330:19; 418: #2 0x559734 in TObject::operator new(unsigned long) /home/jhahnfel/ROOT/src/core/base/inc/TObject.h:167:46; 418: #3 0x7f1c66d6373e in ROOT::new_TTree(void*) /home/jhahnfel/ROOT/build-clang-asan-debug/tree/tree/G__Tree.cxx:4183:36; 418: #4 0x7f1c6214d5f9 in TClass::NewObject(TClass::ENewType, bool) const /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4956:14; 418: #5 0x7f1c6214d23a in TClass::New(TClass::ENewType, bool) const /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4933:15; 418: #6 0x7f1c6322497b in TKey::ReadObjectAny(TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TKey.cxx:1077:21; 418: #7 0x7f1c6312be65 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TDirectoryFile.cxx:1098:25; 418: #8 0x7f1c674d4205 in void TDirectory::GetObject<TTree>(char const*, TTree*&) /ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10012:2460,test,test,2460,https://root.cern,https://github.com/root-project/root/issues/10012,2,['test'],"['test', 'testBulkApiMultiple']"
Testability,"lem. as it provides ; 1. neither the parameters used in the top call ; 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** ; (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `); ```diff; diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx; index b8acf771d9..2f844b98da 100644; --- a/graf2d/graf/src/TTF.cxx; +++ b/graf2d/graf/src/TTF.cxx; @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize); }; ; Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;; - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)); - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");; + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);; + if (err); + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);; }; ; ////////////////////////////////////////////////////////////////////////////////; ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter).; The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**; In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592:2381,test,test,2381,https://root.cern,https://github.com/root-project/root/issues/14592,1,['test'],['test']
Testability,"les diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:; * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine.; * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time.; * (no)dict2 -- Tests are run once again after running (no)dict1-cold;; * (no)dict3 -- Tests are run once again after running (no)dict2;; * (no)dict4 -- Tests are run once again after running (no)dict3;; * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012:1329,Test,Tests,1329,https://root.cern,https://github.com/root-project/root/pull/3012,2,"['Test', 'test']","['Tests', 'test']"
Testability,"lib/libRIO.so; #8 0x00007f935cc63f51 in TBranchElement::ReadLeavesMember(TBuffer&) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #9 0x00007f935cc56bd4 in TBranch::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #10 0x00007f935cc6f4f9 in TBranchElement::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #11 0x00007f935ccb5801 in TTree::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #12 0x00007f9335473a51 in fitSignalShapeSimul(int*, int, int, int, int, int, double*, double*, double*, double*, double*, double*) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #13 0x00007f933547ba70 in all(int, int, int, int) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #14 0x00007f9334277091 in ?? (); #15 0x0000000100000000 in ?? (); #16 0x00007f933547b720 in ?? () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #17 0x000000012f52f130 in ?? (); #18 0x000000000084ad90 in ?? (); #19 0x00007f9365b486b0 in ?? () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #20 0x00007ffe2f52f560 in ?? (); #21 0x00007f9334277000 in ?? (); #22 0x00007f9365acc1d2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) [clone .part.248] () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #23 0x00007f9365ace8b9 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /cvmfs/cms.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:7934,test,test,7934,https://root.cern,https://github.com/root-project/root/issues/7496,1,['test'],['test']
Testability,"lingCallFunc.FunctionWrapperNodiscard (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr; [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun; [ OK ] TClingMethodInfo.TemplateFun (1 ms); [ RUN ] TClingMethodInfo.Ctors; [ OK ] TClingMethodInfo.Ctors (4 ms); [----------] 5 tests from TClingMethodInfo (90 ms total); [----------] Global test environment tear-down; [==========] 33 tests from 4 test suites ran. (7341 ms total); [ PASSED ] 32 tests.; [ F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3866,test,test,3866,https://root.cern,https://github.com/root-project/root/issues/14512,1,['test'],['test']
Testability,"ll.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they curren",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2054,test,tested,2054,https://root.cern,https://github.com/root-project/root/pull/8596,1,['test'],['tested']
Testability,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1509,test,test,1509,https://root.cern,https://github.com/root-project/root/pull/11153,1,['test'],['test']
Testability,llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp; [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/extern,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:2397,test,tests,2397,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,log message was missing a closing parenthesis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1859:0,log,log,0,https://root.cern,https://github.com/root-project/root/pull/1859,1,['log'],['log']
Testability,"lse; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test. **My setup**; 1. ROOT version: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:2835,test,test,2835,https://root.cern,https://github.com/root-project/root/issues/11353,1,['test'],['test']
Testability,"lts to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/te",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:1214,test,test,1214,https://root.cern,https://github.com/root-project/root/issues/10693,1,['test'],['test']
Testability,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true bran,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:23615,assert,assert,23615,https://root.cern,https://github.com/root-project/root/issues/7531,2,['assert'],['assert']
Testability,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:18511,assert,assert,18511,https://root.cern,https://github.com/root-project/root/issues/7531,2,['assert'],['assert']
Testability,"lude ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<arra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1265,test,test,1265,https://root.cern,https://github.com/root-project/root/issues/8268,1,['test'],['test']
Testability,"lue*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F468D4: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F2EF9F: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6C20B67: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2438); ==290973== by 0x6C215B6: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2582); ==290973== by 0x6C24E6E: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3545); ==290973== by 0x4C06042: TApplication::ExecuteFile(ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:2525,test,testing,2525,https://root.cern,https://github.com/root-project/root/issues/14433,1,['test'],['testing']
Testability,"lue*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F468D4: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F2EF9F: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6C20B67: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2438); ==292588== by 0x6C215B6: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2582); ==292588== by 0x6C24E6E: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3545); ==292588== by 0x4C06042: TApplication::ExecuteFile(ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14438:2717,test,testing,2717,https://root.cern,https://github.com/root-project/root/issues/14438,1,['test'],['testing']
Testability,"lues are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1196,Test,TestGetPartIntList,1196,https://root.cern,https://github.com/root-project/root/issues/12430,1,['Test'],['TestGetPartIntList']
Testability,"lumns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:1455,Test,TestVar,1455,https://root.cern,https://github.com/root-project/root/issues/8857,1,['Test'],['TestVar']
Testability,"ly tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:1286,Assert,Assertion,1286,https://root.cern,https://github.com/root-project/root/pull/5462,1,['Assert'],['Assertion']
Testability,"ly, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from https://root.cern/reference/ with the pull request update test; - [ ] https://github.com/root-project/jenkins-pipelines/issues/10 jenkins parsing log fine-tune. ### Additional context; See https://root.cern/for_developers/doxygen/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:1667,Test,Test,1667,https://root.cern,https://github.com/root-project/root/issues/9953,3,"['Test', 'log', 'test']","['Test', 'log', 'test']"
Testability,"m /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:7147,test,tests,7147,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],['tests']
Testability,m libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TIn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:2388,assert,assert,2388,https://root.cern,https://github.com/root-project/root/pull/14335,2,['assert'],['assert']
Testability,"m name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, even the global namespace. What is a sane solution here?; - [ ] How many copies we are doing finally? What is the performance?; - [ ] What happens in MT scenarios? Put in a test case!; - [ ] We have to ship the public cppyy interface with the ROOT headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:4269,test,test,4269,https://root.cern,https://github.com/root-project/root/pull/3488,1,['test'],['test']
Testability,"m to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:2517,log,logs,2517,https://root.cern,https://github.com/root-project/root/issues/12645,1,['log'],['logs']
Testability,"m/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696:1676,test,tests,1676,https://root.cern,https://github.com/root-project/root/pull/15696,2,['test'],"['tested', 'tests']"
Testability,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15399:2339,log,log,2339,https://root.cern,https://github.com/root-project/root/issues/15399,4,['log'],['log']
Testability,"mIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:2448,test,test,2448,https://root.cern,https://github.com/root-project/root/pull/13295,7,['test'],"['test', 'testHistFactory', 'tests']"
Testability,"maes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is working:; ```; .L tutorials/fit/cmaesGausFit.C++g; cmaesGausFit(); ```. Please see instructions and links from PR #40 for more tests, performance checks, etc... Once everything is fine, I'll be able to squash all commits into a single one if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:1982,test,test,1982,https://root.cern,https://github.com/root-project/root/pull/507,2,['test'],"['test', 'tests']"
Testability,"make_unique<ConcreteFilterType> requires many different type; instantiations, but we actually always upcast to unique_ptr<FilterBase>,; so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6131:226,benchmark,benchmarks,226,https://root.cern,https://github.com/root-project/root/pull/6131,1,['benchmark'],['benchmarks']
Testability,"mal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=off"" ""-Dsqlite=off"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=off"" ""-Dtest_distrdf_pyspark=off"" ""-Dtesting=on"" ""-Dtmva-cpu=on"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=off"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=off"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. This is the notebook it tries to run:; https://github.com/root-project/roottest/blob/master/python/JupyROOT/Cpp_IMT_Canvas.ipynb. And this is a minimal reproducer if you reverse engineer what the test does:; ```; root@bbb56c35bcff:~/build# jupyter nbconvert --debug --to notebook --ExecutePreprocessor.enabled=True ../roottest/python/JupyROOT/Cpp_IMT_Canvas.ipynb; [...]; [NbConvertApp] Executing cell:; ROOT::EnableImplicitMT();; TCanvas c(""c"", ""c"");; c.Draw();; [NbConvertApp] msg_type: status; [NbConvertApp] content: {'execution_state': 'busy'}; [NbConvertApp] msg_type: execute_input; [NbConvertApp] content: {'code': 'ROOT::EnableImplicitMT();\nTCanvas c(""c"", ""c"");\nc.Draw();', 'execution_count': 1}; ```. You can make it pass by:; - Enabling webgui (it seems to create an image based on the output); - Or by running with `--ExecutePreprocessor.enabled=False`. ### ROOT version. Master. ### Installation method. From source. ### Operating system. registry.cern.ch/root-ci/ubuntu2404-cuda. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:2708,test,test,2708,https://root.cern,https://github.com/root-project/root/issues/16689,1,['test'],['test']
Testability,"may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libeve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:1107,test,tests,1107,https://root.cern,https://github.com/root-project/root/issues/9436,1,['test'],['tests']
Testability,"md64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3317; #6 0x00002af4f3e830c9 in TStreamerInfo::Compile (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3191; #7 0x00002af4f3e6c1ae in TStreamerInfo::BuildOld (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:2547; #8 0x00002af4f45f22ad in TClass::GetStreamerInfo (this=0x2af536bcd800, version=6) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/core/meta/src/TClass.cxx:4619; #9 0x00002af4f3e6fd3e in TStreamerInfo::ForceWriteInfo (this=0x2af531d13300, file=0x2af4fb7ede00, force=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:3156; #10 0x00002af4f35f6aa1 in TTreeCloner::CopyStreamerInfos (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:465; #11 0x00002af4f35f5ad0 in TTreeCloner::Exec (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:202; #12 0x00002af551da8999 in edm::RootOutputTree::fastCloneTTree(TTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_11_2_ROOT622_X_2020-11-02-2300/lib/slc7_amd64_gcc820/libIOPoolOutput.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:3429,test,tests,3429,https://root.cern,https://github.com/root-project/root/issues/6767,5,['test'],"['testBuildDir', 'tests']"
Testability,me-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec; Start 455: tutorial-dataframe-df008_createDataSetFromScratch; 476/1231 Test #452: tutorial-dataframe-df005_fillAnyObject .............................. Passed 6.60 sec; Start 456: tutorial-dataframe-df009_FromScratchVSTTree; 477/1231 Test #453: tutorial-dataframe-df006_ranges ..................................... Passed 7.33 sec; Start 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455: tutorial-dataframe-df008_createDataSetFromScratch ................... Passed 3.90 sec; Start 458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings; 479/1231 Test #394: gtest-tree-dataframe-test-dataframe-concurrency ..................... Passed 44.21 sec; Start 459: tutorial-dataframe-df014_CSVDataSource; 480/1231 Test #456: tutorial-dataframe-df009_FromScratchVSTTree ......................... Passed 4.16 sec; Start 460: tutorial-dataframe-df015_LazyDataSource; 481/1231 Test #454: tutorial-dataframe-df007_snapshot ................................... Passed 9.31 sec; Start 461: tutorial-dataframe-df016_vecOps; 482/1231 Test #457: tutorial-dataframe-df010_trivialDataSource .......................... Passed 3.32 sec; Start 462: tutorial-dataframe-df017_vecOpsHEP; 483/1231 Test #458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ................. Passed 5.07 sec; Start 463: tutorial-dataframe-df018_customActions; 484/1231 Test #461: tutorial-dataframe-df016_vecOps ..................................... Passed 3.80 sec; Start 464: tutorial-dataframe-df019_Cache; 485/1231 Test #462: tutorial-dataframe-df017_vecOpsHEP .................................. Passed 4.31 sec; Start 465: tutorial-dataframe-df020_helpers; 486/1231 Test #459: tutorial-dataframe-df014_CSVDataSource .............................. Passed 6.87 sec; Start 466: tutorial-dataframe-df021_createTGraph; 487/1231 Test #460: tutorial-dataframe-df015_LazyDataSource ................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:8469,Test,Test,8469,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"me. . Yet **many application require just a minimal ROOT IO** with saving data to files in ROOT format. Even without reflection, generating dictionaries and etc. - flat root files with `vector<value>` as the max complexity. . ## Describe the solution you'd like. In the ideal world I would be glad to have really modular ROOT build where I could choose that I want to have just a basic IO and get root installation witch is done in minutes and resulting binaries would be just megabytes in size. . ## Describe alternatives you've considered. - Surprisingly one can achieve such behavior with uproot. The only caveat is that you have to call python from C++ which is slow and feels perverse. Still compilation time of the whole python is much less and for sure python is preinstalled on all linux systems. . - Geant4 has some C++ library for writing root files and one even can find it on github ([It is diana_hep. Isn't it?](https://github.com/diana-hep/inexlib_rio)) but it doesn't allow to save something like arrays or something like `vector<double>`. I'm talking about at least some basic IO but not that basic. uproot is a good example. Also there is no documentation, no one touched it in years and I doubt about the code quality (at least I didn't find any tests, user responses etc.). - One can try to minimize root installation by switching off options. But it doesn't affect space and compilation time much. It still hundreds of megabytes (500 something) and takes almost the same time to compile. . ## Additional context. - I'm talking about C++ solution. ; - I know about ROOT team efforts to make root installation more modular. But haven't heard any progress on this and not sure that it is about such level of modularity; - I heard something about using system llvm, but I'm afraid even this wouldn't solve the issue; - Even javascript root can open root files in javascript and I'm surprised it is not possible in C++ without building WHOLE elephant. ; - Pitch phrase ""uproot for c++""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6471:2143,test,tests,2143,https://root.cern,https://github.com/root-project/root/issues/6471,1,['test'],['tests']
Testability,"me/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:1879,Test,Test,1879,https://root.cern,https://github.com/root-project/root/issues/6597,1,['Test'],['Test']
Testability,"mentalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2625,stub,stubs-,2625,https://root.cern,https://github.com/root-project/root/issues/13450,1,['stub'],['stubs-']
Testability,"merInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:102613,Test,TestBit,102613,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Test'],['TestBit']
Testability,message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/VariableTransformBase.h: mutab,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2593,log,logger,2593,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanup <a href=""https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2""><code>67d3722</code></a></li>; <li>console.dir -&gt; console.log <a href=""https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:4114,test,tests,4114,https://root.cern,https://github.com/root-project/root/pull/11865,1,['test'],['tests']
Testability,minor typo errors solved... # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14206:93,test,tested,93,https://root.cern,https://github.com/root-project/root/pull/14206,1,['test'],['tested']
Testability,"mit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ socke",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:4273,test,testRooRealL,4273,https://root.cern,https://github.com/root-project/root/pull/8294,1,['test'],['testRooRealL']
Testability,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:2218,Test,Test,2218,https://root.cern,https://github.com/root-project/root/pull/9035,6,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" <<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15141:1259,test,test,1259,https://root.cern,https://github.com/root-project/root/pull/15141,1,['test'],['test']
Testability,"mote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:4344,test,test,4344,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,mpareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8083,test,test,8083,https://root.cern,https://github.com/root-project/root/pull/5054,4,['test'],['test']
Testability,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:7746,test,test,7746,https://root.cern,https://github.com/root-project/root/pull/5054,5,['test'],['test']
Testability,mpareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8454,test,test,8454,https://root.cern,https://github.com/root-project/root/pull/5054,4,['test'],['test']
Testability,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:3773,test,test,3773,https://root.cern,https://github.com/root-project/root/pull/8294,1,['test'],['test']
Testability,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('; 2548 | while (CurPtr+16 <= BufferEnd &&; | ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:6460,test,tests,6460,https://root.cern,https://github.com/root-project/root/issues/9424,6,['test'],"['testBuildDir', 'tests']"
Testability,mva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1521,log,logger,1521,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"mva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2723,test,test,2723,https://root.cern,https://github.com/root-project/root/issues/9487,1,['test'],['test']
Testability,"n file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:1315,assert,assert,1315,https://root.cern,https://github.com/root-project/root/issues/14302,1,['assert'],['assert']
Testability,"n glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:2956,test,test,2956,https://root.cern,https://github.com/root-project/root/pull/5960,1,['test'],['test']
Testability,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:2793,test,test,2793,https://root.cern,https://github.com/root-project/root/pull/8700,6,['test'],"['test', 'teststatistics-pr-dependencies-']"
Testability,"n test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:4006,Test,Test,4006,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"n up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:2255,test,test,2255,https://root.cern,https://github.com/root-project/root/issues/10704,2,"['Test', 'test']","['Test', 'test']"
Testability,"n with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs; ).astype(dtype=dtype); return x, y. def _test_XGBBinary(label):; """"""; Compare response of XGB classifier and TMVA tree inference system.; """"""; x, y = create_dataset(1000, 10, 2); xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10); bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(); y_bdt = bdt.Compute(x).squeeze(); np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":; _test_XGBBinary(""default""); ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:4074,test,testXGBBinary,4074,https://root.cern,https://github.com/root-project/root/issues/15197,3,['test'],"['testXGBBinary', 'testing']"
Testability,"n you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1368,test,test,1368,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,"n't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_type. This cleans up some code duplication in LikelihoodSerial and LikelihoodJob, which previously used the type only in their ctors, and avoids dynamic_casts later, e.g. on when calculating offsets.; * A RooSubsidiaryL can now also be computed with LikelihoodSerial and LikelihoodJob; this case was still missing in their evaluation functions.; * The LikelihoodSerial, LikelihoodJob and LikelihoodGradientJob ""ConstrainedAndOffset"" test cases used the wrong argument for the constrained parameter. These are now corrected from alpha_bkg_obs_A to become alpha_bkg_A.; * In LikelihoodJobTest, the added test case ""UnbinnedGaussian1DSelectedParameterValues"" shows where splitting over events can lead to bit-wise differences. This test will be useful in the future if further precision enhancements are made. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:4185,test,test,4185,https://root.cern,https://github.com/root-project/root/pull/12202,4,['test'],"['test', 'tested']"
Testability,"n('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3939,Test,Test,3939,https://root.cern,https://github.com/root-project/root/issues/7936,1,['Test'],['Test']
Testability,"n... "" << std::endl;; c->SetOwner(false);; auto iter = c->MakeIterator();; while (auto element = iter->Next()); {; deleteTCollections(element);; }; delete iter;; delete c;; }; else; {; delete obj;; }; }. void test(); {; int bins{10}, min{0}, max{10};; TObjArray *main = new TObjArray();; main->SetOwner(false);. auto *collectionInside = new TList();; collectionInside->SetOwner(true);. TH1I *histo1DinsideCollection = new TH1I(""histo 1d"", ""histo 1d"", bins, min, max);; histo1DinsideCollection->Fill(2);; collectionInside->Add(histo1DinsideCollection);. main->Add(collectionInside);; std::cout << "" ====== Listing elements in lists... ====== "" << std::endl;; for (int i = 0; i < main->GetEntries(); ++i); {; std::cout << ""main["" << i << ""] = "" << main->At(i) << "" is a: "" << main->At(i)->ClassName() << "" with title: "" << ((TNamed *)(main->At(i)))->GetTitle() << std::endl;; }; for (int i = 0; i < collectionInside->GetEntries(); ++i); {; std::cout << ""\t collectionInside["" << i << ""] = "" << collectionInside->At(i) << "" is a: "" << collectionInside->At(i)->ClassName() << "" with title: "" << ((TNamed *)(collectionInside->At(i)))->GetTitle() << std::endl;; }; std::cout << "" ====== Deleting... ====== "" << std::endl;; deleteTCollections(main);; return;; }; ```. ### ROOT version. ```; ROOT v6.30/01; Built for linuxx8664gcc on Jan 30 2024, 16:24:12; From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8; With c++ (GCC) 12.2.0; Binary directory: /ssd_data/builds/latest/sw/ubuntu2204_x86-64/ROOT/526782cfe8-local1/bin; ```. ### Installation method. aliBuild. ### Operating system. Ubuntu 22.04.01. ### Additional context. ```bash; $> uname -ra; Linux <hostname> 6.2.0-39-generic #40~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Nov 16 10:53:04 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; $> lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.3 LTS; Release:	22.04; Codename:	jammy; ```. [test.txt](https://github.com/root-project/root/files/14112818/test.txt). CC: @ktf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504:3115,test,test,3115,https://root.cern,https://github.com/root-project/root/issues/14504,2,['test'],['test']
Testability,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:3495,TEST,TEST,3495,https://root.cern,https://github.com/root-project/root/issues/14155,1,['TEST'],['TEST']
Testability,"n/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:10328,test,test,10328,https://root.cern,https://github.com/root-project/root/issues/12428,1,['test'],['test']
Testability,"n: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15294,Test,Test,15294,https://root.cern,https://github.com/root-project/root/issues/12426,2,"['Test', 'test']","['Test', 'test-ntuple-types']"
Testability,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:3206,Test,Test,3206,https://root.cern,https://github.com/root-project/root/issues/15091,2,['Test'],['Test']
Testability,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:5271,test,test,5271,https://root.cern,https://github.com/root-project/root/issues/8518,5,['test'],['test']
Testability,"nContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:11290,test,test,11290,https://root.cern,https://github.com/root-project/root/issues/16578,1,['test'],['test']
Testability,"nLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:2169,test,tests,2169,https://root.cern,https://github.com/root-project/root/issues/8008,2,['test'],"['testBuildDir', 'tests']"
Testability,"n_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT com",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1357,test,test,1357,https://root.cern,https://github.com/root-project/root/issues/10704,1,['test'],['test']
Testability,name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6580) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6f70) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb73d0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bbad50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5b80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5eb0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc8710) already deleted (list name = TList); (TFile *) 0x558b199f9480; ```. ### Reproducer. Using: https://cburr.web.cern.ch/root-crash.root. This is enough to see warnings:. ```bash; root -l -b -q myfile.root; ```. Using `hadd` results in a segfault:. ```bash; hadd -f505 /tmp/test.root myfile.root. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2d879f62ee in TList::FindObject(TObject const*) const () from /home/cburr/miniconda3/envs/test4/bin/../lib/libCore.so.6.24; #7 0x00007f2d879f354a in THashTable::FindObject(TObject const*) const () from /home/cburr/miniconda3/envs/test4/bin/../lib/libCore.so.6.24; #8 0x00007f2d879f1739 in THashList::Remove(TObject*) () from /home/cburr/miniconda3/envs/test4/bin/../lib/libCore.so.6.24; #9 0x00007f2d883c69c8 in TTree::~TTree() () from /home/cburr/miniconda3/envs/test4/bin/../lib/libTree.so.6.24; #10 0x00007f2d883c712a in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793:3126,test,test,3126,https://root.cern,https://github.com/root-project/root/issues/14793,1,['test'],['test']
Testability,napshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:6248,Test,Test,6248,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:8840,test,tests,8840,https://root.cern,https://github.com/root-project/root/issues/11385,1,['test'],['tests']
Testability,"nclude/llvm/ADT/PointerUnion.h:199; 8: Returning from 'PointerUnion::is' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 9: Returning the value 1, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 10: Returning from 'Decl::isInSemaDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 11: Taking true branch in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 12: Calling 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 13: Calling 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 14: Left side of '&&' is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 15: '?' condition is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 16: expanded from macro 'assert' in /usr/include/assert.h:93; 17: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:207; 18: Returning from 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 19: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 20: Returning from 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 21: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 22: Returning from 'Decl::getDeclContext' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 23: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 24: Return",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:9757,assert,assert,9757,https://root.cern,https://github.com/root-project/root/issues/7423,2,['assert'],['assert']
Testability,"ncludes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6443,stub,stubs-,6443,https://root.cern,https://github.com/root-project/root/issues/13453,1,['stub'],['stubs-']
Testability,"nction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11188:1503,test,tests,1503,https://root.cern,https://github.com/root-project/root/issues/11188,3,['test'],"['test', 'testRooFitFunction', 'tests']"
Testability,"nd it fact should not be implemented.; // It is unnecessary because it forwards to the generator of the underlying Pdf; RooBinSamplingPdf binSamplingPdf(""binSamplingPdf"", ""binSamplingPdf"", x, crystalBall);. RooDataHist templHist{""templHist"", ""templHist"", x};; templHist.set(x.getBin(), 100.0, -1.0);. RooDataSet templData{""templData"", ""templData"", x};; for (int i = 0; i < x.numBins(); ++i) {; x.setBin(i);; templData.add(x);; }; x.setVal(2.5);. // no interpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc(): 100 nan; RooHistPdf(): 500 nan; RooKeysPdf(): 0.201299 nan; RooCrystalBall(): 1 nan; RooCBShape(): 1 nan; RooWrapperPdf(): 100 nan; RooBinSamplingPdf(): 0.308511 nan. RooHistFunc(x): 100 105; RooHistPdf(x): 5 105; RooKeysPdf(x): 0.218569 0.205937; RooCrystalBall(x): 9.92564 9.92564; RooCBShape(x): 9.92564 9.92564; RooWrapperPdf(x): 5 105; RooBinSamplingPdf(x): 3.06217 9.925",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:1605,test,test,1605,https://root.cern,https://github.com/root-project/root/issues/12317,1,['test'],['test']
Testability,"nent(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(67): get_filename_component(_ROOT_INCLUDE_DIRS /usr/lib64/cmake/ROOT/../../../include REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(71): get_filename_component(ROOT_INCLUDE_DIRS /usr/include REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_LIB; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(75): get_filename_component(_ROOT_LIBRARY_DIR /usr/lib64/cmake/ROOT/../../root REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(79): get_filename_component(ROOT_LIBRARY_DIR /usr/lib/root REALPATH ); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:2582,log,log-level,2582,https://root.cern,https://github.com/root-project/root/pull/5084,2,['log'],['log-level']
Testability,nes-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp; [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-v,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:2915,test,tests,2915,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,netxng: add possibility to control log verbosity with NetXNG.Debug,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2243:35,log,log,35,https://root.cern,https://github.com/root-project/root/pull/2243,1,['log'],['log']
Testability,new test for v7 text,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1703:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1703,1,['test'],['test']
Testability,"nfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af536e87740, i=0, compinfo=0x2af59072d588) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3317; #6 0x00002af4f3e830c9 in TStreamerInfo::Compile (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3191; #7 0x00002af4f3e6c1ae in TStreamerInfo::BuildOld (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:2547; #8 0x00002af4f45f22ad in TClass::GetStreamerInfo (this=0x2af536bcd800, version=6) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/core/meta/src/TClass.cxx:4619; #9 0x00002af4f3e6fd3e in TStreamerInfo::ForceWriteInfo (this=0x2af531d13300, file=0x2af4fb7ede00, force=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:3156; #10 0x00002af4f35f6aa1 in TTreeCloner::CopyStreamerInfos (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:465; #11 0x00002af4f35f5ad0 in TTreeCloner::Exec (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:202; #12 0x00002a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:2874,test,tests,2874,https://root.cern,https://github.com/root-project/root/issues/6767,2,['test'],"['testBuildDir', 'tests']"
Testability,"ng at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #8 0x00007fb451224a01 in TGeoPainter::Paint(char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #9 0x00007fb451222460 in TGeoPainter::DrawVolume(TGeoVolume*, char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #10 0x0000000000400a94 in main (); ===========================================================; ```. ### Expected behavior; Loading of the *.GDML file without issues - default behaviour for non-existing ""type"" argument. ### To Reproduce; 1. Create a GDML file with G4 (10.5) containing a tessellated object; 2. Importing it with ROOT TGeoManager::Import(). ### Setup; 1. ROOT version: 6.22.02; 2. Operating system: CC7; 3. How you obtained ROOT: built myself. ### Additional context; I add an example *gdml file with the missing ""type"" attribute in the tessellated object. The CAD part are here the simple ""Cubes"" for testing - tiny things at the very front. Don't get confused by the ""normal"" G4 geometry ""TPC' object in the center; [withTessCAD.gdml.zip](https://github.com/root-project/root/files/5583749/withTessCAD.gdml.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:4353,test,testing,4353,https://root.cern,https://github.com/root-project/root/issues/6868,1,['test'],['testing']
Testability,ng failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx...; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_BLUE 1; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here; 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_GREEN 2; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here; 151: #define FOREGROUND_GREEN 0x0002 // text color contains green.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_RED 4; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here; 151: #define FOREGROUND_RED 0x0004 // text color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 151: bool __stdcall Set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:1057,test,test,1057,https://root.cern,https://github.com/root-project/root/pull/3312,1,['test'],['test']
Testability,"ng is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36:24 |; | From heads/master@9645b3aa |; | With g++ (Spack GCC) 13.1.0 |. ### Installation method. SPACK with build Cache (but technically any). ### Operating system. Linux but likely any. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1447,stub,stubs-,1447,https://root.cern,https://github.com/root-project/root/issues/14372,1,['stub'],['stubs-']
Testability,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8307:1752,test,testWSsimulvsprod,1752,https://root.cern,https://github.com/root-project/root/issues/8307,3,"['Log', 'test']","['Log', 'testWSsimulvsprod']"
Testability,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 13: Execution continues on line 1347 in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 14: Calling 'SweepEvent' in /opt/root_src/graf3d/eve7/glu/sweep.c:1347; 15: Assuming field 'activeRegion' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 16: Loop condition is false. Execution continues on line 1101 in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 17: 'regUp' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Assuming 'eTopLeft' is not equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 20: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 21: Calling 'AddRightEdges' in /opt/root_src/graf3d/eve7/glu/sweep.c:1116; 22: Assuming '' is < '' in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 23: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:17549,assert,assert,17549,https://root.cern,https://github.com/root-project/root/issues/7531,4,['assert'],['assert']
Testability,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 65: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:26835,assert,assert,26835,https://root.cern,https://github.com/root-project/root/issues/7531,2,['assert'],['assert']
Testability,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:22277,TEST,TEST,22277,https://root.cern,https://github.com/root-project/root/issues/12715,2,['TEST'],['TEST']
Testability,"ninja rightfully said:; ```; ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist; ninja explain: core/newdelete/move_header_core_newdelete is dirty; ninja explain: move_headers is dirty; ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13755:478,test,tested,478,https://root.cern,https://github.com/root-project/root/pull/13755,1,['test'],['tested']
Testability,"nittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I reco",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2512,test,test,2512,https://root.cern,https://github.com/root-project/root/issues/7936,1,['test'],['test']
Testability,"nkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:10040,test,tests,10040,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"nment variable FC to be set to find the correct Fortran compiler under some circumstances. This should now be fixed. Finding out whether a compiler is found in Cmake seems to be really; hard. In particular a non-found Fortran compiler caused issues on MacOS; (ROOT-8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1123,test,test,1123,https://root.cern,https://github.com/root-project/root/pull/891,1,['test'],['test']
Testability,nning 33 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from TClingTests; [ RUN ] TClingTests.GenerateDictionaryErrorHandling; [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms); [ RUN ] TClingTests.GenerateDictionaryRegression; [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms); [ RUN ] TClingTests.GenerateDictionary; [ OK ] TClingTests.GenerateDictionary (3057 ms); [ RUN ] TClingTests.GetEnumWithSameVariableName; [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms); [ RUN ] TClingTests.MakeInterpreterValue; [ OK ] TClingTests.MakeInterpreterValue (2 ms); [ RUN ] TClingTests.GetClassSharedLibs; [ OK ] TClingTests.GetClassSharedLibs (0 ms); [ RUN ] TClingTests.GetSharedLibDeps; [ OK ] TClingTests.GetSharedLibDeps (722 ms); [ RUN ] TClingTests.ClingLookupHelper; [ OK ] TClingTests.ClingLookupHelper (985 ms); [ RUN ] TClingTests.ROOT10499; [ OK ] TClingTests.ROOT10499 (5 ms); [----------] 9 tests from TClingTests (7180 ms total); [----------] 15 tests from TClingCallFunc; [ RUN ] TClingCallFunc.Void; [ OK ] TClingCallFunc.Void (1 ms); [ RUN ] TClingCallFunc.Conversions; [ OK ] TClingCallFunc.Conversions (2 ms); [ RUN ] TClingCallFunc.FunctionWrapper; [ OK ] TClingCallFunc.FunctionWrapper (1 ms); [ RUN ] TClingCallFunc.FunctionWrapperPointer; [ OK ] TClingCallFunc.FunctionWrapperPointer (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperReference; [ OK ] TClingCallFunc.FunctionWrapperReference (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperVoid; [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg; [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperVariadic; [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg; [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms); [ RUN ] TClingCallFunc.TemplateFunctionWrapper; [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms); [ RUN ] ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:1565,test,tests,1565,https://root.cern,https://github.com/root-project/root/issues/14512,2,['test'],['tests']
Testability,"normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:1473,test,test,1473,https://root.cern,https://github.com/root-project/root/issues/12645,1,['test'],['test']
Testability,"notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that te",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2657,Test,Test,2657,https://root.cern,https://github.com/root-project/root/issues/7936,2,"['Test', 'test']","['Test', 'test']"
Testability,"now that failed roottest causes the ROOT CI workflow to fail, reporing needs to happen also if the workflow failed, otherwise only successful tests are reported. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12823:142,test,tests,142,https://root.cern,https://github.com/root-project/root/pull/12823,2,['test'],"['tested', 'tests']"
Testability,"nput file to the output ; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling `AddReadAction`. An STL collection's TClass (like `c1` and `c2`)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af536e87740, i=0, compinfo=0x2af59072d588) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3317; #6 0x00002af4f3e830c9 in TStreamerInfo::Compile (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3191; #7 0x00002af4f3e6c1ae in TStreamerInfo::BuildOld (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:2547; #8 0x00002af4f45f22ad in TClass::GetStreamerInfo (this=0x2af536bcd800, version=6) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/core/meta/src/TClass.cxx:4619; #9 0x00002af4f3e6fd3e in TStreamerInfo::ForceWriteInfo (this=0x2af531d13300, file=0x2af4fb7ede00, force=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:3156; #10 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:2346,test,tests,2346,https://root.cern,https://github.com/root-project/root/issues/6767,2,['test'],"['testBuildDir', 'tests']"
Testability,"nsistent proxy names in RooGamma; b9cfff2e71 [RF][HF] More efficient creation of combined dataset in HistFactory; 8ca8d848ae [RF][HS3] Necessary tweaks to pass tests also with `rapidyaml` backend; 66615833e5 [RF][HS3] Add IO of external constrains from/to ModelConfig; 2607947ee3 [RF][HF] Add missing LinkDefs for systematics classes in HistFactory; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; 1b886c3e77 [RF] Improve Copy Constructor of HypoTestResult; 2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad7711af6 [RF] Fix several memory leaks in `RooProdPdf::rearrangeProduct()`; ab420820bb [RF] Remove unused `binb` variable in RooBinnedGenContext; 81fbc904d4 [RF] Less manual memory management in RooFit; ff32c33446 [RF] Modernize memory management in RooStats; d89d54ce65 [RF] Fix `getPropagatedError()` negative parameter case for zero error; 4542e761eb [RF] Flag `RooAbsArg::getObservables()` as returning owning pointer; c246acb066 [RF] Always use `addOwned()` overload that takes `unique_ptr`; f17180742c [RF] Add `ExternalConstraints`, createNLL() and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:1846,test,test,1846,https://root.cern,https://github.com/root-project/root/pull/12905,1,['test'],['test']
Testability,nsistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1281,log,logger,1281,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"nson (Failed); 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed); 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed); 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed); 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed); 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed); 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed); 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed); 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed); 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed); 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed); 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed); 	252 - gtest-roofit-roostats-test-testSPlot (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while running CTest; ```; With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:; ```; 99% tests passed, 17 tests failed out of 1232; Label Time Summary:; longtest = 540.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:1698,test,test-testSPlot,1698,https://root.cern,https://github.com/root-project/root/issues/10409,13,['test'],"['test-datasource-ntuple', 'test-ntuple-basics', 'test-ntuple-extended', 'test-ntuple-merger', 'test-ntuple-minifile', 'test-ntuple-serialize', 'test-stresshistofit', 'test-stresshistofit-interpreted', 'test-stresshistogram', 'test-stresshistogram-interpreted', 'test-testSPlot', 'tests']"
Testability,"nsor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py .............................",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3792,Test,Test,3792,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"nstprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:7602,test,tests,7602,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],['tests']
Testability,"nt at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:16087,test,tests,16087,https://root.cern,https://github.com/root-project/root/issues/12771,1,['test'],['tests']
Testability,"nt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:4936,test,tests,4936,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['tests']
Testability,"nto the root system.; ## Getting started; Required additional librairies; - ROOT; - for running tests you need Google Tests; - for running benchs, you need Google Benchs and XGBoost. ### Run tests ; Update the makefile in the tests folder, then execute `make clean && make && ./testAll.exe`; At the end of this text is a setup file for a new installation of ubuntu 18.04. ### Code structure; Here below we show the structure of the repository with the files of interest.; .; ├── bench.py; ├── bench.sh; ├── build/; ├── data/; ├── experiments/; │ ├── arrayBdtPreds.cxx; │ ├── data/; │ ├── generate_data.py; │ ├── makefile; │ ├── readme.md; │ ├── run_all.sh; │ └── setup.h; ├── figures/; ├── generated_files/; ├── include/; │ ├── BranchedTree.hxx; │ ├── BranchlessTree.hxx; │ ├── CodeGeneratorsJIT.hxx; │ ├── ForestHelpers.hxx; │ ├── json.hpp; │ ├── RForestInference.hxx; │ └── TreeHelpers.hxx; ├── makefile_bench.make; ├── README.md; ├── run.sh; ├── src/; │ └── benchmark.cxx; ├── tests/; │ ├── build/; │ ├── data/; │ │ ├── events.csv; │ │ ├── model.json; │ │ ├── model.rabbit; │ │ ├── multiclass_events.csv; │ │ ├── multiclass_model.json; │ │ ├── multiclass_model.rabbit; │ │ ├── multiclass_python_groundtruths.csv; │ │ ├── multiclass_python_predictions.csv; │ │ ├── multiclass_python_scores.csv; │ │ ├── python_predictions.csv; │ │ ├── regression_events.csv; │ │ ├── regression_model.json; │ │ ├── regression_model.rabbit; │ │ ├── regression_python_groundtruths.csv; │ │ ├── regression_python_predictions.csv; │ │ ├── regression_python_scores.csv; │ ├── forestBDTest.hxx; │ ├── helpersBDTest.hxx; │ ├── makefile; │ ├── readme.md; │ ├── RegressionBDTest.hxx; │ ├── run_all.sh; │ ├── testAll.cxx; ├── train_classifiers_examples.py; └── utils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everything in the home folder. Please modify for your needs.; ```bash; #!/bin/bash; cd; # can be ran with yes | bash this_file.sh # to say yes when prompted. sudo apt update ; yes | su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:1156,test,tests,1156,https://root.cern,https://github.com/root-project/root/pull/4351,1,['test'],['tests']
Testability,"ntry=0x55e760617f50, self=self entry=0x55e75ccfd080, offset=<optimized out>, ctxt=ctxt entry=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #27 0x00007f5b8debc46c in CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (this=0x55e760617f50, self= 0x7f5b8080ef50: 0x7f5b808043c0, args=0x7f5b8e1ab040, kwds=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #28 0x00007f5b8dec09fe in CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, PyObject*, PyObject*) (pymeth=0x7f5b8080ef40, args=0x7f5b8e1ab040, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #29 0x00007f5b8e941333 in _PyObject_MakeTpCall () at /usr/lib/libpython3.9.so.1.0; #30 0x00007f5b8e93d218 in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #31 0x00007f5b8e936fd9 in () at /usr/lib/libpython3.9.so.1.0; #32 0x00007f5b8e948b8e in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #33 0x00007f5b8e93aec9 in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #34 0x00007f5b8e94896b in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #35 0x00007f5b8e93858e in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #36 0x00007f5b8e94896b in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #37 0x00007f5b8e93858e in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #38 0x00007f5b8e94896b in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #39 0x00007f5b8e95795b in () at /usr/lib/libpython3.9.so.1.0; #40 0x00007f5b8ea3cac6 in () at /usr/lib/libpython3.9.so.1.0; #41 0x00007f5b8ea17554 in () at /usr/lib/libpython3.9.so.1.0; #42 0x00007f5b8e62c259 in start_thread () at /usr/lib/libpthread.so.0; #43 0x00007f5b8e7425e3 in clone () at /usr/lib/libc.so.6; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:5015,test,tested,5015,https://root.cern,https://github.com/root-project/root/pull/9139,1,['test'],['tested']
Testability,"ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:10460,test,test,10460,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:5310,assert,asserts,5310,https://root.cern,https://github.com/root-project/root/issues/8193,1,['assert'],['asserts']
Testability,nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14140:150,test,tested,150,https://root.cern,https://github.com/root-project/root/pull/14140,1,['test'],['tested']
Testability,"o a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1130,test,test,1130,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:13643,test,test,13643,https://root.cern,https://github.com/root-project/root/issues/13996,2,['test'],"['test', 'testdata']"
Testability,"o::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:10869,test,tests,10869,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"o<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:11308,test,tests,11308,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"oading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:1791,test,test,1791,https://root.cern,https://github.com/root-project/root/issues/10693,1,['test'],['test']
Testability,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:4379,test,test,4379,https://root.cern,https://github.com/root-project/root/pull/5960,5,['test'],['test']
Testability,"obably have; incompatible bins. Rather than wait for failures like. `Error in <Merge>: Cannot merge histograms - limits are inconsistent`. that happen only when the distributed execution has already started and; may be hidden inside worker logs, raise an error in the local user; machine. An example of the error raised with this change: running this snippet; ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; from dask.distributed import Client, LocalCluster. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":; df = RDataFrame(10, daskclient = create_connection()).Define(""x"",""rdfentry_""); m = ROOT.RDF.TH1DModel(""name"",""title"",10,0,10); df.Histo1D(m, ""x""); print(""After first Histo1D""); df.Histo1D((""name"",""title"",10,0,10), ""x""); print(""After second Histo1D""); df.Histo1D(""x""); print(""After third Histo1D""); ```; results in; ```; After first Histo1D; After second Histo1D; Traceback (most recent call last):; File ""/home/vpadulan/projects/rootcode/distrdf-histo-nomodel/test.py"", line 17, in <module>; df.Histo1D(""x""); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Proxy.py"", line 240, in _create_new_op; op = Operation.create_op(self.proxied_node._new_op_name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 118, in create_op; return SUPPORTED_OPERATIONS[name](name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 60, in __init__; raise TypeError(textwrap.fill(message)); TypeError: A histogram was created without a model. This cannot work in; distributed mode because histograms resulting from different tasks; would have incompatible bins. Please make sure to pass the histogram; model as the first argument to the function. See the RDataFrame docs; for help.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:1323,test,test,1323,https://root.cern,https://github.com/root-project/root/pull/10368,1,['test'],['test']
Testability,"ocessing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:14091,assert,assert,14091,https://root.cern,https://github.com/root-project/root/issues/11515,1,['assert'],['assert']
Testability,"ode. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:; * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine.; * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time.; * (no)dict2 -- Tests are run once again after running (no)dict1-cold;; * (no)dict3 -- Tests are run once again after running (no)dict2;; * (no)dict4 -- Tests are run once again after running (no)dict3;; * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012:1237,Test,Tests,1237,https://root.cern,https://github.com/root-project/root/pull/3012,2,"['Test', 'test']","['Tests', 'test']"
Testability,"ode></a> [Dev Deps] update <code>covert</code>, <code>tape</code>; remove unnecessary <code>tap</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a""><code>783a49b</code></a> [meta] create FUNDING.yml; add <code>funding</code> in package.json</li>; <li>Additional commits viewable in <a href=""https://github.com/minimistjs/minimist/compare/v0.0.8...v1.2.7"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~ljharb"">ljharb</a>, a new releaser for minimist since your current version.</p>; </details>; <br />. Updates `mkdirp` from 0.5.1 to 0.5.6; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/92f086d2e28c6848951776fbe8ecadcf54c80c29""><code>92f086d</code></a> 0.5.6</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/2a2812536c0d3e23dce78978e1d4691d7ff445a7""><code>2a28125</code></a> clean up tests</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/c905d653e9cd294f7124c83ad499d95baed17088""><code>c905d65</code></a> update minimist</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/049cf185c9e91727bc505b796a2d16a4fe70d64d""><code>049cf18</code></a> 0.5.5</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/bea638225aa991095f29a9e16d914effa0c134fe""><code>bea6382</code></a> Remove unnecessary umask calls</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/42a012cc6dbd4648790f380df88190bb697dbb9c""><code>42a012c</code></a> 0.5.4</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/2867920c08dc6c47bad0ea5b385a8e78bade0c8f""><code>2867920</code></a> fix infinite loop on windows machines</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d784e70d1eb3fc73bcda52f22f57ec55c00c2525""><code>d784e70</code></a> 0.5.3</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d612c5dd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:7875,test,tests,7875,https://root.cern,https://github.com/root-project/root/pull/11865,1,['test'],['tests']
Testability,of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13763:118,test,tested,118,https://root.cern,https://github.com/root-project/root/pull/13763,1,['test'],['tested']
Testability,"of/src/TProof.cxx:5623; 38: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5623; 39: Assuming the condition is false in /opt/root_src/proof/proof/src/TProof.cxx:5623; 40: expanded from macro 'gDirectory' in /opt/root_src/core/base/inc/TDirectory.h:290; 41: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5623; 42: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:5623; 43: 'el' is null in /opt/root_src/proof/proof/src/TProof.cxx:5632; 44: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5632; 45: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5633; 46: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5633; 47: Assuming 'f' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5635; 48: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 49: Calling 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 50: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 51: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 52: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 53: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 54: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 55: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 56: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 57: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 58: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5635; 59: Calling 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5638; 60: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 61: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:24",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7534:37171,Test,TestBit,37171,https://root.cern,https://github.com/root-project/root/issues/7534,1,['Test'],['TestBit']
Testability,"offsets: one for each likelihood component. This makes a difference only for RooSumL fits, i.e. simultaneous PDF fits or fits with constraint or global observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:1656,test,testLikelihoodGradientJob,1656,https://root.cern,https://github.com/root-project/root/pull/12202,3,['test'],"['test', 'testLikelihoodGradientJob']"
Testability,"og below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ O",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1154,test,tests,1154,https://root.cern,https://github.com/root-project/root/issues/12430,1,['test'],['tests']
Testability,ogger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1977,log,logger,1977,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"oi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:4471,test,testMPFEnll,4471,https://root.cern,https://github.com/root-project/root/pull/8294,1,['test'],['testMPFEnll']
Testability,"oid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01; Built for linuxx8664gcc on Jul 03 2023, 09:06:02; From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:1911,test,test,1911,https://root.cern,https://github.com/root-project/root/issues/13155,1,['test'],['test']
Testability,"ol testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context; None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:2664,log,logs,2664,https://root.cern,https://github.com/root-project/root/issues/9370,1,['log'],['logs']
Testability,"ol:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>; | |-DeclStmt 0x2b442a0 <line:1:1, col:28>; | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'; | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2; | `-NullStmt 0x2b442b8 <line:2:1>; |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [2] .q. ```. ### Setup. 1. ROOT version; * 6.22/08. ```; ROOT Version: 6.22/08; Built for linuxx8664gcc on Mar 10 2021, 14:20:04; From tags/v6-22-08@v6-22-08; ```. * 6.25/01; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```. 2. Operating system: NixOS, a linux distribution; * `nix-info -m`; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20211006_53e4794`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf); * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:11710,sandbox,sandbox,11710,https://root.cern,https://github.com/root-project/root/issues/9261,1,['sandbox'],['sandbox']
Testability,"olation; 304: ******************************************************************; 304: * SYS: FreeBSD hack 13.2-RELEASE-p1 FreeBSD 13.2-RELEASE-p1 GENERIC; 304: ******************************************************************; 304: ******************************************************************; 304: * ROOTMARKS =4262.5 * Root6.29/01 20221221/1150; 304: ******************************************************************; 304: Time at the end of job = 18.882812 seconds; 304: Generating stack trace...; 304: 0x0000000826fefe68 in _ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_1 at /usr/include/c++/v1/__hash_table:2070 from /home/mkrzewic/build/root/lib/libTree.so; 304: 0x0000000830314f3e in TClass::TDeclNameRegistry::AddQualifiedName(char const*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x0000000830315169 in TClass::InsertTClassInRegistryRAII::~InsertTClassInRegistryRAII() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x000000083032618c in TClass::SetUnloaded() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008302d88cb in ROOT::RemoveClass(char const*, TClass*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008303344d7 in ROOT::TGenericClassInfo::~TGenericClassInfo() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: CMake Error at /home/mkrzewic/build/root/RootTestDriver.cmake:232 (message):; 304: error code: 129; 304:; 304:; 1/1 Test #304: test-stressroofit-batchmode-cpu ...***Failed 22.19 sec; ```. ### Reproducer. ctest -V -R test-stressroofit-batchmode-cpu. ### ROOT version. master. ### Installation method. source. ### Operating system. freeBSD 13.2p1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13200:2351,Test,Test,2351,https://root.cern,https://github.com/root-project/root/issues/13200,3,"['Test', 'test']","['Test', 'test-stressroofit-batchmode-cpu']"
Testability,"ollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; ```; and these:; ```; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3 (found suitable version ""3.11.6"", minimum required is ""3.0"") found components: Interpreter ; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/13:/usr/include/x86_64-linux-gnu/c++/13:/usr/include/c++/13/backward' at runtime.; -- And then fallback to: 'x86_64-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:2145,test,tests,2145,https://root.cern,https://github.com/root-project/root/issues/14479,1,['test'],['tests']
Testability,"ollowing main lines:; ```; unsigned char* escape_ptr = PQescapeBytea((const unsigned char*)mem, sz, &mxsz);; unsigned char* binary_ptr = PQunescapeBytea((const unsigned char*)escape_ptr, &mxsz);; ```; 1. 'PQunescapeBytea' conversion is not exactly the inverse of 'PQescapeBytea': 'PQescapeBytea' doubles quotes, but 'PQunescapeBytea' doesn't change quotes (doesn't remove added quotes).; So double quotes should be reduced to single ones after the conversion. Otherwise, a bytea field stored in the database has two quotes instead of original single ones.; 2. The solution works for PostgreSQL 8 (except 1. cases), because it escapes special characters with two backslashes, but since PostgreSQL 9.3 the special characters are escaped with one backslash. It means that PQunescapeBytea returns the special characters to original symbols refused by database encoding (UTF8 by default).; e.g. for CREATE TABLE test ( d bytea NOT NULL );; ```; TSQLStatement* stmt = my_db->Statement(""insert into test(d) values ($1)"");; int d = 8332;; stmt->NextIteration();; stmt->SetBinary(0, &d, sizeof(int));; stmt->Process();; ...; stmt = my_db->Statement(""select d from test"");; stmt->Process();; stmt->StoreResult();; while (stmt->NextResultRow()) {; void* mem = 0; Long_t size_mem = 0;; stmt->GetBinary(0, mem, size_mem);; int* val = new int;; memcpy(val, mem, size_mem);; cout<<""Binary size: ""<<size_mem<<"". Int value: ""<<*val<<endl;; }; ```; PostgreSQL 8 works well:. > 8c2000 // before PQescapeBytea; > \\\\214 \\\\000\\\\000 // before PQunescapeBytea; > 5c323134205c3030305c303030 // after PQunescapeBytea; > Binary size: 4. Int value: 8332 // original value. but PostgreSQL 12 refuses to write data:. > 8c2000 // before PQescapeBytea; > \214 \000\000 // before PQunescapeBytea; > 8c2000 // after PQunescapeBytea; > Error in <TPgSQLStatement::Process>: Code: 7 Msg: ERROR: invalid byte sequence for encoding ""UTF8"": 0x8c. I see 3 possible solutions:; 1. Check PostgreSQL version, and if it is higher or equal t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127:1433,test,test,1433,https://root.cern,https://github.com/root-project/root/issues/7127,2,['test'],['test']
Testability,"om the top directory of the repository. There are several options to customize the build, the main ones are:. | Option | Description |; |----------------------|-------------|; | -DCOVERAGE=1 | Enables test coverage analysis with gcov; | -DMEMCHECK=1 | Enables memory checking with valgrind; | -DSTATIC_ANALYSIS=1 | Enables static analysis with clang-tidy; | -DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:1226,test,test,1226,https://root.cern,https://github.com/root-project/root/pull/14999,3,['test'],['test']
Testability,"om/geom/src/TGeoPhysicalNode.cxx:140; 7: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 8: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 9: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 20: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 21: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 22: Returning from 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 23: Taking true branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 24: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 25: Loop condition is false. Execution continues on line 168 in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 26: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:168; 27: Loop condition is false. Execution continues on line 204 in /opt/root_src/ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:58646,Test,TestBit,58646,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Test'],['TestBit']
Testability,"om/src/TGeoPgon.cxx:1893:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPgon.cxx:1893; /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:210:9: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'newmat' is non-null in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 2: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 3: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 5: Assuming 'newmat' is not equal to 'gGeoIdentity' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 6: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 7: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 8: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 9: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:57807,Test,TestBit,57807,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Test'],['TestBit']
Testability,"ome/linev/build/webgui/lib/libCling.so; #29 0x00007fcae6e4f233 in clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) () from /home/linev/build/webgui/lib/libCling.so; #30 0x00007fcae6e55b4a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] () from /home/linev/build/webgui/lib/libCling.so; #31 0x00007fcae6d5b733 in clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/linev/build/webgui/lib/libCling.so; #32 0x00007fcae72ca4a0 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/linev/build/webgui/lib/libCling.so; #33 0x00007fcae6c6f8cf in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/linev/build/webgui/lib/libCling.so; #34 0x00007fcae6c33a89 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/linev/build/webgui/lib/libCling.so; #35 0x00007fcae6c34a1c in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #36 0x00007fcae6b974f1 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/linev/build/webgui/lib/libCling.so; #37 0x00007fcae6b9784a in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/linev/build/webgui/lib/libCling.so; #38 0x00007fcae6c852be in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/linev/build/webgui/lib/libCling.so; ===========================================================; ```. ### Reproducer. Provided. ### ROOT version. Tested master and 6.28 branch on Linux. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252:6276,Test,Tested,6276,https://root.cern,https://github.com/root-project/root/issues/13252,1,['Test'],['Tested']
Testability,"ommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:18508,test,test,18508,https://root.cern,https://github.com/root-project/root/issues/12372,1,['test'],['test']
Testability,ompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:7374,test,test,7374,https://root.cern,https://github.com/root-project/root/pull/5054,1,['test'],['test']
Testability,"on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\rel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1060,test,test,1060,https://root.cern,https://github.com/root-project/root/pull/11153,1,['test'],['test']
Testability,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:9673,Test,Test,9673,https://root.cern,https://github.com/root-project/root/issues/10528,8,['Test'],['Test']
Testability,"on of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477:1820,test,testing-asan,1820,https://root.cern,https://github.com/root-project/root/pull/15477,2,['test'],"['tested', 'testing-asan']"
Testability,"on2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:1454,test,test,1454,https://root.cern,https://github.com/root-project/root/pull/5960,2,['test'],['test']
Testability,"onTag{},; ^; input_line_35:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<Bool_t>>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x563bdc7d7910), {""Muon_tightId""}, 1, reinterpret_cast<weak_ptr<TH1D>*>(0x563bdc7d77a0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x563bdc7d7a80), reinterpret_cast<ROOT::Internal::RDF::RBookedCustomColumns*>(0x563bdc7d9150));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RVec.hxx:387:19: note: selected 'begin' function with iterator type 'ROOT::VecOps::RVec<bool>::const_iterator' (aka 'std::_Bit_const_iterator'); const_iterator begin() const noexcept { return fData.begin(); }; ^; In module 'ROOTDataFrame':; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/ActionHelpers.hxx:190:18: error: non-const lvalue reference to type 'bool' cannot bind to a temporary of type 'std::_Bit_const_iterator::const_reference' (aka 'bool'); for (auto &v : vs) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillHelper::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:4254,test,test-jupyroot,4254,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,"ont/src/TRefArray.cxx:337; 14: Assuming 'idx' is >= field 'fLowerBound' in /opt/root_src/core/cont/src/TRefArray.cxx:338; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:338; 16: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:342; 17: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:342; 18: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:346; 19: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 20: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 21: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 22: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 23: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 25: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 26: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 27: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 36: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 37: 'valid' is true in /opt/root_src/core/cont/src/TR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:18563,Test,TestBit,18563,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Test'],['TestBit']
Testability,"oodJob enabled. In detail, this PR changes the following:. - Increased precision:; * Per-component offsets: instead of one offset for the total LikelihoodWrapper, we switched to a vector of offsets: one for each likelihood component. This makes a difference only for RooSumL fits, i.e. simultaneous PDF fits or fits with constraint or global observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:1534,test,tests,1534,https://root.cern,https://github.com/root-project/root/pull/12202,5,['test'],"['testLikelihoodGradientJob', 'testLikelihoodJob', 'testLikelihoodSerial', 'tests']"
Testability,"ool'); for (auto &v : vs) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillHelper::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:5625,test,test-jupyroot,5625,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,"oom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|14,45|18,89|13,03|; |osx 10.14| roottest-cling| 88,96|118,94|100,1|; |osx 10.14| roottest-python| 107,57|60,93|100,88|; |osx 10.14| roottest-root-hist| 10,25|23,25|11,77|; |osx 10.14| roottest-root-math| 8,33|21,23|9,27|; |osx 10.14| roottest-root-tree| 555|8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:1629,test,test,1629,https://root.cern,https://github.com/root-project/root/pull/4717,1,['test'],['test']
Testability,"oot-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:7943,Test,TestBody,7943,https://root.cern,https://github.com/root-project/root/issues/12428,1,['Test'],['TestBody']
Testability,"oot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:3575,test,tests,3575,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],"['testBuildDir', 'tests']"
Testability,"ootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000119925s elapsed).; graph: X: 42,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. ### Reproducer. compiled version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph<int, int>(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. JITted version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Fedora 39. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15686:3087,assert,assert,3087,https://root.cern,https://github.com/root-project/root/issues/15686,2,['assert'],['assert']
Testability,"oottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:3537,assert,assertion,3537,https://root.cern,https://github.com/root-project/root/issues/6597,1,['assert'],['assertion']
Testability,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750:2765,Test,Tests,2765,https://root.cern,https://github.com/root-project/root/pull/15750,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"or is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:1443,log,log,1443,https://root.cern,https://github.com/root-project/root/issues/7982,1,['log'],['log']
Testability,"or.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3124,assert,assertEqual,3124,https://root.cern,https://github.com/root-project/root/issues/12429,1,['assert'],['assertEqual']
Testability,"ore real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8597,Test,Test,8597,https://root.cern,https://github.com/root-project/root/issues/12426,2,"['Test', 'test']","['Test', 'test-ntuple-minifile']"
Testability,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:3956,test,tested,3956,https://root.cern,https://github.com/root-project/root/pull/8596,1,['test'],['tested']
Testability,ore.CallAndMessage]; 1: Calling 'TGLScenePad::PadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:222; 2: 'pad' is equal to field 'fPad' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:235; 3: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:235; 4: Calling 'TGLScenePad::SubPadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:242; 5: Assuming the condition is false in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 6: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 7: Assuming 'prims' is non-null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:174; 8: '?' condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:174; 9: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:175; 10: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:175; 11: Calling 'TGLScenePad::ObjectPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:176; 12: Assuming 'log' is null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:192; 13: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:192; 14: Assuming the condition is false in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:197; 15: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:197; 16: Assuming the condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:202; 17: Taking true branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:202; 18: Calling 'TGLScenePad::SubPadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:204; 19: Assuming the condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 20: Taking true branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 21: Calling 'TGLScenePad::ComposePolymarker' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:172; 22: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:709; 23: Assuming 'dPm' is null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:711; 24: Assuming pointer v,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:1093,log,log,1093,https://root.cern,https://github.com/root-project/root/issues/7531,1,['log'],['log']
Testability,ore/newdelete/src/NewDelete.cxx:143; 12: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 13: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 14: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 15: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 16: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 17: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 18: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 19: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 20: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 21: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 22: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 23: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 24: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 27: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 29: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 30: Assuming 'gFreeIfTMapFile' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:282; 31: Left side of '||' is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:283; 32: Memory is released in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:61148,Test,TestMagic,61148,https://root.cern,https://github.com/root-project/root/issues/7426,1,['Test'],['TestMagic']
Testability,ore/newdelete/src/NewDelete.cxx:413; 10: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 11: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 12: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 13: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 14: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 15: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 16: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 17: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 18: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 19: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 20: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 21: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 22: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 23: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 24: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 25: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 26: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:420; 27: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 28: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 29: Assuming 'size' is > 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 30: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 31: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:424; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:64293,Test,TestMagic,64293,https://root.cern,https://github.com/root-project/root/issues/7426,1,['Test'],['TestMagic']
Testability,ore/newdelete/src/NewDelete.cxx:413; 11: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 12: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 13: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 14: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 15: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 16: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 17: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 18: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 19: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 20: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 21: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 22: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 23: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 24: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 25: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 26: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 27: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:420; 28: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 29: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 30: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 31: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 32: Dereference of null pointer in /opt/root_src/core/newdelete/src/NewDelete.cxx:426; 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:67744,Test,TestMagic,67744,https://root.cern,https://github.com/root-project/root/issues/7426,1,['Test'],['TestMagic']
Testability,ore/newdelete/src/NewDelete.cxx:453; 12: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 13: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 14: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 15: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 16: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 17: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 18: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 19: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 20: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 21: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 22: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 23: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 24: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 27: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 28: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:460; 29: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 30: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 31: Assuming 'size' is > 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 32: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:464; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:71019,Test,TestMagic,71019,https://root.cern,https://github.com/root-project/root/issues/7426,1,['Test'],['TestMagic']
Testability,ore/newdelete/src/NewDelete.cxx:453; 13: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 14: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 15: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 16: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 17: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 18: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 19: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 20: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 21: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 22: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 23: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 24: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 25: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 26: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 27: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 29: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:460; 30: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 31: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 32: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 33: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 34: Dereference of null pointer in /opt/root_src/core/newdelete/src/NewDelete.cxx:466; 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:74640,Test,TestMagic,74640,https://root.cern,https://github.com/root-project/root/issues/7426,1,['Test'],['TestMagic']
Testability,"orkspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:9064,test,tests,9064,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],"['testBuildDir', 'tests']"
Testability,"orrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9069,test,tests,9069,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['tests']
Testability,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:1895,test,tests,1895,https://root.cern,https://github.com/root-project/root/issues/8474,2,['test'],"['test', 'tests']"
Testability,"ot for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1421,Test,TestGetPartIntList,1421,https://root.cern,https://github.com/root-project/root/issues/12430,1,['Test'],['TestGetPartIntList']
Testability,"ot-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/root/issues/11411; * https://github.com/root-project/root/issues/11596. ## Upstream contributions to cppyy in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:2783,test,tests,2783,https://root.cern,https://github.com/root-project/root/pull/14507,1,['test'],['tests']
Testability,"ot.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1231,test,testArg,1231,https://root.cern,https://github.com/root-project/root/issues/9547,1,['test'],['testArg']
Testability,"ot_src/core/cont/src/TRefArray.cxx:479; 22: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:479; 23: Assuming 'newSize' is equal to 0 in /opt/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participate",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:15019,Test,TestBit,15019,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Test'],['TestBit']
Testability,"ot_src/geom/geom/src/TGeoNavigator.cxx:594; 27: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 28: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 29: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 31: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 32: Calling 'TGeoNavigator::CrossDivisionCell' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 33: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 34: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 35: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:41904,Test,TestBit,41904,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Test'],['TestBit']
Testability,"ote, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:1017,test,test-products,1017,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:921,test,tests,921,https://root.cern,https://github.com/root-project/root/issues/16553,2,['test'],"['test-TestRModelParserKeras', 'tests']"
Testability,owing errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:1134,Test,Test,1134,https://root.cern,https://github.com/root-project/root/pull/5054,2,"['Test', 'test']","['Test', 'test']"
Testability,"owing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`.; See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:; - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file.; - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use.; ```; +-------------------------+-------------------------------+; | Redeclaration kind | Time (us) for 1000000 lookups |; +-------------------------+-------------------------------+; | ForVisibleRedeclaration | 27617 |; | NotForRedeclaration | 717458 |; +-------------------------+-------------------------------+; ```. ## Checklist:; - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9788:2028,test,tested,2028,https://root.cern,https://github.com/root-project/root/pull/9788,1,['test'],['tested']
Testability,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:3756,Test,Test,3756,https://root.cern,https://github.com/root-project/root/issues/7654,12,['Test'],['Test']
Testability,"p; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:5689,test,tests,5689,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,"p>::type; ^; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1057:12: note: definition of 'std::is_copy_assignable<MyClass>' is not complete until the closing '}'; struct is_copy_assignable; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""dict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h""; #include ""OtherClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1060:7: error: static_assert failed ""template argument must be a complete class or an unbounded array""; static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; root [2]; ```; The error vanishes if the assertion is first applied to another class belonging to the same dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<OtherClass>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; (const bool) true; root [3]; ```; but not on a class from another dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<TH1F>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:3997,assert,assertion,3997,https://root.cern,https://github.com/root-project/root/issues/10512,1,['assert'],['assertion']
Testability,"pand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 19: Assuming 'newSize' is >= 0 in /opt/root_src/core/cont/src/TRefArray.cxx:475; 20: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:475; 21: Assuming 'newSize' is not equal to field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:479; 22: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:479; 23: Assuming 'newSize' is equal to 0 in /opt/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:14743,Test,TestBit,14743,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Test'],['TestBit']
Testability,"panda 2.2 used to be the more recent version and a special check was needed in case a version older that 2.2 was used.; Some options were backward incompatible between version older that 2.2 and version 2.2. Now on the jenkins machine used to build the guides, the pandoc version is 2.5 so we do not need to check on pandoc version anymore. And the way the test was done produced a wrong set of options for versions above 2.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5931:357,test,test,357,https://root.cern,https://github.com/root-project/root/pull/5931,1,['test'],['test']
Testability,parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13957:129,test,tested,129,https://root.cern,https://github.com/root-project/root/pull/13957,1,['test'],['tested']
Testability,"path elements starting with ""."" should not be ignored, only ""./"" itself.; Fixes issue #9697. (cherry picked from commit 37a396c)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10073:193,test,tested,193,https://root.cern,https://github.com/root-project/root/pull/10073,1,['test'],['tested']
Testability,"pening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->ProcessEvents();. return 0;; }; ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708:1638,test,tests,1638,https://root.cern,https://github.com/root-project/root/issues/13708,1,['test'],['tests']
Testability,"pilation error with gcc 13. ## Changes or fixes:; ~~~; In file included from .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.cxx:1: .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:40:24: error: 'uint32_t' does not name a type; 40 | namespace SG { typedef uint32_t sgkey_t; }; | ^~~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:6:1: note: 'uint32_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; 5 | #include <vector>; +++ |+#include <cstdint>; 6 |; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: error: 'uint8_t' does not name a type; 43 | uint8_t m_nbits, m_nmantissa;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: error: 'uint8_t' does not name a type; 45 | uint8_t m_flags;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:46:8: error: 'sgkey_t' in namespace 'SG' does not name a type; 46 | SG::sgkey_t m_sgkey = 123;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: error: 'uint8_t' does not name a type; 47 | const uint8_t c_uint = 10;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; gmake[2]: *** [tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/build.make:79: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/CustomStruct.cxx.o] Error 1; gmake[2]: Leaving directory '.../root-6.26.10/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:53506: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12065:1145,test,test,1145,https://root.cern,https://github.com/root-project/root/pull/12065,7,['test'],"['test', 'tested']"
Testability,"pileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774:1139,test,test,1139,https://root.cern,https://github.com/root-project/root/issues/7774,1,['test'],['test']
Testability,"poses) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af536e87740, i=0, compinfo=0x2af59072d588) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3317; #6 0x00002af4f3e830c9 in TStreamerInfo::Compile (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3191; #7 0x00002af4f3e6c1ae in TStreamerInfo::BuildOld (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:2547; #8 0x00002af4f45f22ad in TClass::GetStreamerInfo (this=0x2af536bcd800, version=6) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/core/meta/src/TClass.cxx:4619; #9 0x00002af4f3e6fd3e in TStreamerInfo::ForceWriteInfo (this=0x2af531d13300, file=0x2af4fb7ede00, force=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:3156; #10 0x00002af4f35f6aa1 in TTreeCloner::CopyStreamerInfos (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:465; #11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:2608,test,tests,2608,https://root.cern,https://github.com/root-project/root/issues/6767,2,['test'],"['testBuildDir', 'tests']"
Testability,"provided compiler build. So nothing is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36:24 |; | From heads/master@9645b3aa |; | With g++ (Spack GCC) 13.1.0 |. ### Installation method. SPACK with build Cache (but technically any). ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1415,stub,stubs,1415,https://root.cern,https://github.com/root-project/root/issues/14372,1,['stub'],['stubs']
Testability,"ps://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:1198,test,test,1198,https://root.cern,https://github.com/root-project/root/pull/12449,1,['test'],['test']
Testability,"pstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Decla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:1186,test,test,1186,https://root.cern,https://github.com/root-project/root/pull/12449,1,['test'],['test']
Testability,"ption of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:1425,assert,assert,1425,https://root.cern,https://github.com/root-project/root/issues/11602,1,['assert'],['assert']
Testability,"put file; TestVar1.GetSize(): 1000	n: 5; Error in <TTree::Branch>: The class requested (ROOT::VecOps::RVec<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> > >) for the branch ""TestVar2"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (ROOT::VecOps::RVec<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> > >) to avoid to write corrupted data.; RDataFrame::Run: event loop was interrupted; terminate called after throwing an instance of 'std::logic_error'; what(): Trying to insert a null branch address. ```. ### Setup; 1. ROOT version: 6.25/01, built against commit 24ea49d4702ba0aa9b1ea5521950520154ee151c on the master branch.; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20211006_53e4794`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT:; Custom build with Nix package manager against the Nixpkgs revision [60e709069fa2fbcfca943d8f6df8dc6d33c67025](https://github.com/ShamrockLee/nixpkgs/tree/60e709069fa2fbcfca943d8f6df8dc6d33c67025), a custom fork against the master branch of [NixOS/Nixpkgs](https://github.com/NixOS/nixpkgs), with the root source overrided. The gcc version is `10.3.0`. ### Additional context; Nix Flake setup to build ROOT:. `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{self, nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:10570,sandbox,sandbox,10570,https://root.cern,https://github.com/root-project/root/issues/9240,1,['sandbox'],['sandbox']
Testability,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7511:168,test,tests,168,https://root.cern,https://github.com/root-project/root/pull/7511,3,['test'],"['test', 'tests']"
Testability,"pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:13846,assert,assert,13846,https://root.cern,https://github.com/root-project/root/issues/11515,1,['assert'],['assert']
Testability,"python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3771,Test,Test,3771,https://root.cern,https://github.com/root-project/root/issues/16552,1,['Test'],['Test']
Testability,"python: /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::UsingDecl; From = clang::Decl]: Assertion `Val && ""isa<> used on a null pointer""' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359:231,Assert,Assertion,231,https://root.cern,https://github.com/root-project/root/issues/6359,1,['Assert'],['Assertion']
Testability,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:1640,Test,Test,1640,https://root.cern,https://github.com/root-project/root/issues/10528,4,['Test'],['Test']
Testability,"r const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:12908,test,tests,12908,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:2682,test,tests,2682,https://root.cern,https://github.com/root-project/root/pull/11525,3,['test'],"['tested', 'tests']"
Testability,"r errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afteri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2147,test,testRooAbsPdf,2147,https://root.cern,https://github.com/root-project/root/issues/10478,2,['test'],"['test', 'testRooAbsPdf']"
Testability,"r existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::Regis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1233,test,tests,1233,https://root.cern,https://github.com/root-project/root/issues/9583,1,['test'],['tests']
Testability,"r,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2312,test,test,2312,https://root.cern,https://github.com/root-project/root/pull/11153,1,['test'],['test']
Testability,"r-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:5372,test,tests,5372,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],['tests']
Testability,"r.cpp:0:0; #29 0x0000000001c40f00 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) Parser.cpp:0:0; #30 0x000000000152a89e cling::IncrementalParser::ParseInternal(llvm::StringRef) IncrementalParser.cpp:0:0; #31 0x0000000001529c34 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:5404,test,test-products,5404,https://root.cern,https://github.com/root-project/root/issues/10861,1,['test'],['test-products']
Testability,"r/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:2616,test,tests,2616,https://root.cern,https://github.com/root-project/root/issues/8008,2,['test'],"['testBuildDir', 'tests']"
Testability,"r/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:1913,test,tests,1913,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],"['testBuildDir', 'tests']"
Testability,r; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1594,log,logger,1594,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,rame-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec; Start 455: tutorial-dataframe-df008_createDataSetFromScratch; 476/1231 Test #452: tutorial-dataframe-df005_fillAnyObject .............................. Passed 6.60 sec; Start 456: tutorial-dataframe-df009_FromScratchVSTTree; 477/1231 Test #453: tutorial-dataframe-df006_ranges ..................................... Passed 7.33 sec; Start 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455: tutorial-dataframe-df008_createDataSetFromScratch ................... Passed 3.90 sec; Start 458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings; 479/1231 Test #394: gtest-tree-dataframe-test-dataframe-concurrency ..................... Passed 44.21 sec; Start 459: tutorial-dataframe-df014_CSVDataSource; 480/1231 Test #456: tutorial-dataframe-df009_FromScratchVSTTree ......................... Passed 4.16 sec; Start 460: tutorial-dataframe-df015_LazyDataSource; 481/1231 Test #454: tutorial-dataframe-df007_snapshot ................................... Passed 9.31 sec; Start 461: tutorial-dataframe-df016_vecOps; 482/1231 Test #457: tutorial-dataframe-df010_trivialDataSource .......................... Passed 3.32 sec; Start 462: tutorial-dataframe-df017_vecOpsHEP; 483/1231 Test #458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ................. Passed 5.07 sec; Start 463: tutorial-dataframe-df018_customActions; 484/1231 Test #461: tutorial-dataframe-df016_vecOps ..................................... Passed 3.80 sec; Start 464: tutorial-dataframe-df019_Cache; 485/1231 Test #462: tutorial-dataframe-df017_vecOpsHEP .................................. Passed 4.31 sec; Start 465: tutorial-dataframe-df020_helpers; 486/1231 Test #459: tutorial-dataframe-df014_CSVDataSource ....................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:8310,Test,Test,8310,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,rame-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataframe-test-dataframe-resptr; 406/1231 Test #383: gtest-tree-dataframe-test-dataframe-resptr .......................... Passed 0.61 sec; Start 384: gtest-tree-dataframe-test-dataframe-take; 407/1231 Test #382: gtest-tree-dataframe-test-dataframe-leaves .......................... Passed 2.14 sec; Start 385: gtest-tree-dataframe-test-dataframe-entrylist; 408/1231 Test #385: gtest-tree-dataframe-test-dataframe-entrylist ....................... Passed 0.90 sec; Start 386: gtest-tree-dataframe-test-dataframe-merge-results; 409/1231 Test #386: gtest-tree-dataframe-test-dataframe-merge-results ................... Passed 0.54 sec; Start 387: gtest-tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:3109,test,test-dataframe-display,3109,https://root.cern,https://github.com/root-project/root/pull/10300,3,"['Test', 'test']","['Test', 'test-dataframe-cache', 'test-dataframe-display']"
Testability,"rameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2117,test,test,2117,https://root.cern,https://github.com/root-project/root/issues/10478,1,['test'],['test']
Testability,"rapperVoid (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg; [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperVariadic; [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg; [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms); [ RUN ] TClingCallFunc.TemplateFunctionWrapper; [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms); [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType; [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms); [ RUN ] TClingCallFunc.MemberMethodWrapper; [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperNodiscard; [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr; [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3113,test,tests,3113,https://root.cern,https://github.com/root-project/root/issues/14512,2,['test'],['tests']
Testability,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11305,Test,Test,11305,https://root.cern,https://github.com/root-project/root/issues/12426,2,"['Test', 'test']","['Test', 'test-ntuple-serialize']"
Testability,"rator new(unsigned long) (vg_replace_malloc.c:483); ==292588== by 0x4C720ED: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:292); ==292588== by 0x4014E7: TObject::operator new(unsigned long) (TObject.h:181); ==292588== by 0x2C725C36: TMVA::DataSet::GetResults(TString const&, TMVA::Types::ETreeType, TMVA::Types::EAnalysisType) (DataSet.cxx:287); ==292588== by 0x2C7BD2CB: TMVA::MethodBase::AddClassifierOutput(TMVA::Types::ETreeType) (MethodBase.cxx:874); ==292588== by 0x2C7BBD3E: TMVA::MethodBase::TrainMethod() (MethodBase.cxx:689); ==292588== by 0x2C775BCE: TMVA::Factory::TrainAllMethods() (Factory.cxx:1173); ==292588== by 0x4F963FE: ???; ==292588== by 0x4F9107E: ???; ==292588== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F468D4: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14438:1942,test,testing,1942,https://root.cern,https://github.com/root-project/root/issues/14438,1,['test'],['testing']
Testability,"rc/TGCocoa.mm:849; [/Users/user/Z/lib/libGui.so] TGWindow::TGWindow(TGWindow const*, int, int, unsigned int, unsigned int, unsigned int, int, unsigned int, void*, SetWindowAttributes_t*, unsigned int) /Users/user/Projects/ROOT/root/gui/gui/src/TGWindow.cxx:64; [/Users/user/Z/lib/libGui.so] TGFrame::TGFrame(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:147; [/Users/user/Z/lib/libGui.so] TGCompositeFrame::TGCompositeFrame(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:848; [/Users/user/Z/lib/libGui.so] TGMainFrame::TGMainFrame(TGWindow const*, unsigned int, unsigned int, unsigned int) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:1431; [/Users/user/Z/lib/libGui.so] TGMainFrame::TGMainFrame(TGWindow const*, unsigned int, unsigned int, unsigned int) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:1485; [/Users/user/XXX/zevis/test/./frame.exe] main /Users/user/XXX/zevis/test/frame.cxx:81; [/usr/lib/system/libdyld.dylib] start (no debug info); ```. ### Expected behavior; No FPE. ### To Reproduce; ```; #include <TApplication.h>; #include <TGClient.h>; #include <TGFrame.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:2293,test,test,2293,https://root.cern,https://github.com/root-project/root/issues/6758,1,['test'],['test']
Testability,"rc/TGeoNavigator.cxx:557; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 31: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 32: Calling 'TGeoNavigator::CrossDivisionCell' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 33: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 34: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 35: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:42177,Test,TestBit,42177,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Test'],['TestBit']
Testability,"rc/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14888,test,test,14888,https://root.cern,https://github.com/root-project/root/issues/9595,1,['test'],['test']
Testability,redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLog,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:2331,test,testLikelihoodJob,2331,https://root.cern,https://github.com/root-project/root/pull/13295,1,['test'],['testLikelihoodJob']
Testability,ree-dataframe-test-dataframe-take ............................ Passed 2.19 sec; Start 388: gtest-tree-dataframe-test-dataframe-vary; 411/1231 Test #387: gtest-tree-dataframe-test-dataframe-samplecallback .................. Passed 1.09 sec; Start 389: gtest-tree-dataframe-test-datasource-more; 412/1231 Test #380: gtest-tree-dataframe-test-dataframe-display ......................... Passed 10.54 sec; Start 390: gtest-tree-dataframe-test-datasource-root; Start 391: gtest-tree-dataframe-test-datasource-trivial; 414/1231 Test #390: gtest-tree-dataframe-test-datasource-root ........................... Passed 4.54 sec; Start 392: gtest-tree-dataframe-test-datasource-lazy; 415/1231 Test #392: gtest-tree-dataframe-test-datasource-lazy ........................... Passed 0.28 sec; Start 393: gtest-tree-dataframe-test-datasource-csv; 416/1231 Test #388: gtest-tree-dataframe-test-dataframe-vary ............................ Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .........................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:5177,test,test-dataframe-concurrency,5177,https://root.cern,https://github.com/root-project/root/pull/10300,3,"['Test', 'test']","['Test', 'test-dataframe-concurrency', 'test-dataframe-snapshot']"
Testability,refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9591:169,test,tested,169,https://root.cern,https://github.com/root-project/root/pull/9591,1,['test'],['tested']
Testability,"resolves #12268; resolves #12267. [skip-ci]. I did big changes to the python script so bundling macOS and windows to a single PR makes thing easier. ## Main changes:; - Adds macOS 13 builds (ARM64); - Adds Windows 10 builds (x64, x86). ## Minor fixes:; - Disable running script as root; - Use non-root user inside containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12539:347,test,tested,347,https://root.cern,https://github.com/root-project/root/pull/12539,1,['test'],['tested']
Testability,"rializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateFie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:14912,test,tests,14912,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['tests']
Testability,"rializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:14933,test,tests,14933,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['tests']
Testability,"root -l -b -q 'TMVAClassification.C(""BDTG"")' 4.06s user 1.01s system 147% cpu 3.423 total; root -l -b -q 'TMVARegression.C(""BDTG"")' 14.52s user 2.47s system 149% cpu 11.396 total; root -l -b -q 'TMVAMulticlass.C(""BDTG"")' 16.51s user 2.81s system 181% cpu 10.645 total. After:; root -l -b -q 'TMVAClassification.C(""BDTG"")' 3.99s user 0.97s system 149% cpu 3.310 total; root -l -b -q 'TMVARegression.C(""BDTG"")' 13.60s user 2.51s system 147% cpu 10.924 total; root -l -b -q 'TMVAMulticlass.C(""BDTG"")' 19.52s user 3.87s system 242% cpu 9.631 total. ## Output comparison. Summary: output identical before and after. ```; Classification; ==============. Top line: before; Bottom line: after. DataSet MVA Signal efficiency: from test sample (from training sample); Name: Method: @B=0.01 @B=0.10 @B=0.30; ------------------------------------------------------------------------------------------; dataset BDTG : 0.206 (0.540) 0.705 (0.858) 0.902 (0.928); dataset BDTG : 0.206 (0.540) 0.705 (0.858) 0.902 (0.928). Regression; ==========. Top line: before; Bottom line: after. DataSet Name: MVA Method: <Bias> <Bias_T> RMS RMS_T | MutInf MutInf_T; dataset BDTG : 0.198 0.165 2.60 2.00 | 3.084 3.149; dataset BDTG : 0.198 0.165 2.60 2.00 | 3.084 3.149. Multiclass; ==========. Top line: before; Bottom line: after. Dataset MVA Method ROC AUC Sig eff@B=0.01 Sig eff@B=0.10 Sig eff@B=0.30; Name: / Class: test (train) test (train) test (train) test (train). After:; dataset BDTG; ------------------------------; Signal 0.966 (0.981) 0.486 (0.659) 0.910 (0.955) 0.994 (0.996); Signal 0.966 (0.981) 0.486 (0.659) 0.910 (0.955) 0.994 (0.996); ; bg0 0.905 (0.932) 0.252 (0.325) 0.716 (0.801) 0.908 (0.955); bg0 0.905 (0.932) 0.252 (0.325) 0.716 (0.801) 0.908 (0.955); ; bg1 0.951 (0.955) 0.463 (0.465) 0.850 (0.845) 0.970 (0.979); bg1 0.951 (0.955) 0.463 (0.465) 0.850 (0.845) 0.970 (0.979). bg2 0.977 (0.984) 0.598 (0.709) 0.945 (0.971) 0.996 (0.998); bg2 0.977 (0.984) 0.598 (0.709) 0.945 (0.971) 0.996 (0.998). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2631:1551,test,test,1551,https://root.cern,https://github.com/root-project/root/pull/2631,4,['test'],['test']
Testability,"root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:; ```; [ 98%] Generating etc/allDict.cxx.pch; /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; ```; root 6.14.06 no longer ignores such errors and makepch.py fails:; ```; [ 98%] Generating etc/allDict.cxx.pch; /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h; ```; This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2933:85,log,log,85,https://root.cern,https://github.com/root-project/root/pull/2933,1,['log'],['log']
Testability,root-6.24.2-1.el8 rebuild on mock on tmpfs one test fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8895:29,mock,mock,29,https://root.cern,https://github.com/root-project/root/issues/8895,2,"['mock', 'test']","['mock', 'test']"
Testability,"root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:12651,assert,assert,12651,https://root.cern,https://github.com/root-project/root/issues/7518,1,['assert'],['assert']
Testability,root/io/bigevent tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8905:17,test,tests,17,https://root.cern,https://github.com/root-project/root/issues/8905,1,['test'],['tests']
Testability,root/io/cint tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8921:13,test,tests,13,https://root.cern,https://github.com/root-project/root/issues/8921,1,['test'],['tests']
Testability,root/io/compression tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8907:20,test,tests,20,https://root.cern,https://github.com/root-project/root/issues/8907,1,['test'],['tests']
Testability,root/io/datamodelevolution tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8908:27,test,tests,27,https://root.cern,https://github.com/root-project/root/issues/8908,1,['test'],['tests']
Testability,root/io/event tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8906:14,test,tests,14,https://root.cern,https://github.com/root-project/root/issues/8906,1,['test'],['tests']
Testability,root/io/newClassDef test fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8922:20,test,test,20,https://root.cern,https://github.com/root-project/root/issues/8922,1,['test'],['test']
Testability,root/io/perf tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8910:13,test,tests,13,https://root.cern,https://github.com/root-project/root/issues/8910,1,['test'],['tests']
Testability,root/io/references tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8909:19,test,tests,19,https://root.cern,https://github.com/root-project/root/issues/8909,1,['test'],['tests']
Testability,"root/pull/12970; 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13044:1667,test,test,1667,https://root.cern,https://github.com/root-project/root/pull/13044,1,['test'],['test']
Testability,root/tree/addresses tests fail with ASAN enabled - buffer overflow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8917:20,test,tests,20,https://root.cern,https://github.com/root-project/root/issues/8917,1,['test'],['tests']
Testability,root/tree/evolution tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8918:20,test,tests,20,https://root.cern,https://github.com/root-project/root/issues/8918,1,['test'],['tests']
Testability,root/tree/friend tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8916:17,test,tests,17,https://root.cern,https://github.com/root-project/root/issues/8916,1,['test'],['tests']
Testability,root/tree/treeproblem tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8919:22,test,tests,22,https://root.cern,https://github.com/root-project/root/issues/8919,1,['test'],['tests']
Testability,root/treeformula/event tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8911:23,test,tests,23,https://root.cern,https://github.com/root-project/root/issues/8911,1,['test'],['tests']
Testability,root/treeformula/references test fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8912:28,test,test,28,https://root.cern,https://github.com/root-project/root/issues/8912,1,['test'],['test']
Testability,root/treeformula/retobj tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8913:24,test,tests,24,https://root.cern,https://github.com/root-project/root/issues/8913,1,['test'],['tests']
Testability,root/treeformula/schemaEvolution tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8914:33,test,tests,33,https://root.cern,https://github.com/root-project/root/issues/8914,1,['test'],['tests']
Testability,root/treeformula/sync tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8915:22,test,tests,22,https://root.cern,https://github.com/root-project/root/issues/8915,1,['test'],['tests']
Testability,root/treeproxy tests fail with ASAN enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8920:15,test,tests,15,https://root.cern,https://github.com/root-project/root/issues/8920,1,['test'],['tests']
Testability,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:6326,test,test-products,6326,https://root.cern,https://github.com/root-project/root/pull/5462,4,['test'],['test-products']
Testability,rootbrowse is not tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6785:18,test,tested,18,https://root.cern,https://github.com/root-project/root/issues/6785,1,['test'],['tested']
Testability,roottest / testing should not be done if the build failed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6441:11,test,testing,11,https://root.cern,https://github.com/root-project/root/issues/6441,1,['test'],['testing']
Testability,roottools CMake target purpose is to provide handle to used as a dependency in roottest.git.; It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279:150,test,tests,150,https://root.cern,https://github.com/root-project/root/pull/3279,1,['test'],['tests']
Testability,"round the buggy address:; 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd; 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa; 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa; =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd; 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00; 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==934566==ABORTING; ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:5029,test,test,5029,https://root.cern,https://github.com/root-project/root/issues/8027,1,['test'],['test']
Testability,"rpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc(): 100 nan; RooHistPdf(): 500 nan; RooKeysPdf(): 0.201299 nan; RooCrystalBall(): 1 nan; RooCBShape(): 1 nan; RooWrapperPdf(): 100 nan; RooBinSamplingPdf(): 0.308511 nan. RooHistFunc(x): 100 105; RooHistPdf(x): 5 105; RooKeysPdf(x): 0.218569 0.205937; RooCrystalBall(x): 9.92564 9.92564; RooCBShape(x): 9.92564 9.92564; RooWrapperPdf(x): 5 105; RooBinSamplingPdf(x): 3.06217 9.92564. RooHistFunc(x,y): 100 105; RooHistPdf(x,y): 5 105; RooKeysPdf(x,y): 0.218569 0.205937; RooCrystalBall(x,y): 9.92564 9.92564; RooCBShape(x,y): 9.92564 9.92564; RooWrapperPdf(x,y): 5 105; RooBinSamplingPdf(x,y): 3.06217 9.92564; ```; * It's probably okay to not return values when the normalization set is empty, although it could easily implemented to do it (well, maybe not for the `RooAddPdf`...); * Expect for the crystal ball functions, the values a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:1969,test,test,1969,https://root.cern,https://github.com/root-project/root/issues/12317,7,['test'],['test']
Testability,"rray('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:4017,log,log,4017,https://root.cern,https://github.com/root-project/root/issues/16070,1,['log'],['log']
Testability,"rror message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01; Built for linuxx8664gcc on Jul 03 2023, 09:06:02; From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:2063,test,test,2063,https://root.cern,https://github.com/root-project/root/issues/13155,1,['test'],['test']
Testability,rs .................................... Passed 3.82 sec; Start 471: tutorial-dataframe-df031_Stats; 492/1231 Test #468: tutorial-dataframe-df023_aggregate .................................. Passed 2.25 sec; 498/1231 Test #470: tutorial-dataframe-df025_RNode ...................................... Passed 2.80 sec; 502/1231 Test #464: tutorial-dataframe-df019_Cache ...................................... Passed 7.71 sec; 506/1231 Test #471: tutorial-dataframe-df031_Stats ...................................... Passed 3.82 sec; 507/1231 Test #469: tutorial-dataframe-df024_Display .................................... Passed 4.58 sec; Start 1071: tutorial-dataframe-df000_simple-py; Start 1072: tutorial-dataframe-df001_introduction-py; Start 1073: tutorial-dataframe-df002_dataModel-py; Start 1074: tutorial-dataframe-df003_profiles-py; 1072/1231 Test #1071: tutorial-dataframe-df000_simple-py .................................. Passed 2.85 sec; Start 1075: tutorial-dataframe-df004_cutFlowReport-py; 1073/1231 Test #1074: tutorial-dataframe-df003_profiles-py ................................ Passed 5.32 sec; Start 1076: tutorial-dataframe-df006_ranges-py; 1074/1231 Test #1072: tutorial-dataframe-df001_introduction-py ............................ Passed 7.77 sec; Start 1077: tutorial-dataframe-df007_snapshot-py; 1075/1231 Test #1075: tutorial-dataframe-df004_cutFlowReport-py ........................... Passed 5.88 sec; Start 1078: tutorial-dataframe-df008_createDataSetFromScratch-py; 1076/1231 Test #1073: tutorial-dataframe-df002_dataModel-py ............................... Passed 8.55 sec; Start 1079: tutorial-dataframe-df010_trivialDataSource-py; 1077/1231 Test #1079: tutorial-dataframe-df010_trivialDataSource-py ....................... Passed 3.14 sec; Start 1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py; 1078/1231 Test #1078: tutorial-dataframe-df008_createDataSetFromScratch-py ................ Passed 3.91 sec; Start 1081: tutorial-dataframe-df014_CSVDataSource-py;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:11053,Test,Test,11053,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8678,Test,Test,8678,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,"run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104; #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395; #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615; #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395; #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:2183,test,tests,2183,https://root.cern,https://github.com/root-project/root/issues/12957,2,['test'],"['testBuildDir', 'tests']"
Testability,"running rootdrawtree without arguments leads to a crash; ```; [user@host]$ rootdrawtree ; /usr/include/c++/8/bits/stl_vector.h:932: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::reference = std::__cxx11::basic_string<char>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.; *** Break *** abort; ```; root 6.22.08 from EPEL on CentOS8 x86_64 . Sorry if that is a duplicate. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8778:479,Assert,Assertion,479,https://root.cern,https://github.com/root-project/root/issues/8778,1,['Assert'],['Assertion']
Testability,"running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:10243,Test,TestBody,10243,https://root.cern,https://github.com/root-project/root/issues/12428,1,['Test'],['TestBody']
Testability,"ryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. Typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3645,Test,Test,3645,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,s .............................. Passed 3.66 sec; Start 468: tutorial-dataframe-df023_aggregate; 489/1231 Test #466: tutorial-dataframe-df021_createTGraph ............................... Passed 2.94 sec; Start 469: tutorial-dataframe-df024_Display; 490/1231 Test #467: tutorial-dataframe-df022_useKahan ................................... Passed 3.26 sec; Start 470: tutorial-dataframe-df025_RNode; 491/1231 Test #465: tutorial-dataframe-df020_helpers .................................... Passed 3.82 sec; Start 471: tutorial-dataframe-df031_Stats; 492/1231 Test #468: tutorial-dataframe-df023_aggregate .................................. Passed 2.25 sec; 498/1231 Test #470: tutorial-dataframe-df025_RNode ...................................... Passed 2.80 sec; 502/1231 Test #464: tutorial-dataframe-df019_Cache ...................................... Passed 7.71 sec; 506/1231 Test #471: tutorial-dataframe-df031_Stats ...................................... Passed 3.82 sec; 507/1231 Test #469: tutorial-dataframe-df024_Display .................................... Passed 4.58 sec; Start 1071: tutorial-dataframe-df000_simple-py; Start 1072: tutorial-dataframe-df001_introduction-py; Start 1073: tutorial-dataframe-df002_dataModel-py; Start 1074: tutorial-dataframe-df003_profiles-py; 1072/1231 Test #1071: tutorial-dataframe-df000_simple-py .................................. Passed 2.85 sec; Start 1075: tutorial-dataframe-df004_cutFlowReport-py; 1073/1231 Test #1074: tutorial-dataframe-df003_profiles-py ................................ Passed 5.32 sec; Start 1076: tutorial-dataframe-df006_ranges-py; 1074/1231 Test #1072: tutorial-dataframe-df001_introduction-py ............................ Passed 7.77 sec; Start 1077: tutorial-dataframe-df007_snapshot-py; 1075/1231 Test #1075: tutorial-dataframe-df004_cutFlowReport-py ........................... Passed 5.88 sec; Start 1078: tutorial-dataframe-df008_createDataSetFromScratch-py; 1076/1231 Test #1073: tutorial-dataframe-df002_dataModel-p,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:10578,Test,Test,10578,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:1763,test,test,1763,https://root.cern,https://github.com/root-project/root/pull/11731,3,['test'],"['test', 'tested']"
Testability,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:2890,assert,assertion,2890,https://root.cern,https://github.com/root-project/root/pull/13783,2,"['assert', 'test']","['assertion', 'tests']"
Testability,"s in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:1437,Test,Test,1437,https://root.cern,https://github.com/root-project/root/pull/13783,2,"['Test', 'test']","['Test', 'tests']"
Testability,"s such, we should take care of properly cleaning up every such call. . Found by valgrind:; ```; ==292588== 2,501,112 (152 direct, 2,500,960 indirect) bytes in 1 blocks are definitely lost in loss record 29,428 of 29,428; ==292588== at 0x4843F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==292588== by 0x4C720ED: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:292); ==292588== by 0x4014E7: TObject::operator new(unsigned long) (TObject.h:181); ==292588== by 0x2C725C36: TMVA::DataSet::GetResults(TString const&, TMVA::Types::ETreeType, TMVA::Types::EAnalysisType) (DataSet.cxx:287); ==292588== by 0x2C7BD2CB: TMVA::MethodBase::AddClassifierOutput(TMVA::Types::ETreeType) (MethodBase.cxx:874); ==292588== by 0x2C7BBD3E: TMVA::MethodBase::TrainMethod() (MethodBase.cxx:689); ==292588== by 0x2C775BCE: TMVA::Factory::TrainAllMethods() (Factory.cxx:1173); ==292588== by 0x4F963FE: ???; ==292588== by 0x4F9107E: ???; ==292588== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==292588== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14438:1729,test,testing,1729,https://root.cern,https://github.com/root-project/root/issues/14438,1,['test'],['testing']
Testability,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:4422,test,test,4422,https://root.cern,https://github.com/root-project/root/pull/11049,4,['test'],"['test', 'tested', 'tests']"
Testability,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14016:1750,Test,TestSfinae,1750,https://root.cern,https://github.com/root-project/root/issues/14016,2,['Test'],['TestSfinae']
Testability,"s) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillParHelper<TH1D>::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:153:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillParHelper<TH1D>, const std::ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:1652,test,test-jupyroot,1652,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:3630,test,tests,3630,https://root.cern,https://github.com/root-project/root/issues/10704,12,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"s. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();. // make sure that each key has a distinct timestamp to maximally; // provoke different hashes for streamer info in each file; std::this_thread::sleep_for(1100ms);; }. }; ```. Test event loop:; ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threads:. + Baseline:; Percent of CPU this job got: 391%; Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486:1113,test,testwrite,1113,https://root.cern,https://github.com/root-project/root/pull/9486,1,['test'],['testwrite']
Testability,"s.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:1192,test,tests,1192,https://root.cern,https://github.com/root-project/root/issues/8008,2,['test'],"['testBuildDir', 'tests']"
Testability,"s/; ├── generated_files/; ├── include/; │ ├── BranchedTree.hxx; │ ├── BranchlessTree.hxx; │ ├── CodeGeneratorsJIT.hxx; │ ├── ForestHelpers.hxx; │ ├── json.hpp; │ ├── RForestInference.hxx; │ └── TreeHelpers.hxx; ├── makefile_bench.make; ├── README.md; ├── run.sh; ├── src/; │ └── benchmark.cxx; ├── tests/; │ ├── build/; │ ├── data/; │ │ ├── events.csv; │ │ ├── model.json; │ │ ├── model.rabbit; │ │ ├── multiclass_events.csv; │ │ ├── multiclass_model.json; │ │ ├── multiclass_model.rabbit; │ │ ├── multiclass_python_groundtruths.csv; │ │ ├── multiclass_python_predictions.csv; │ │ ├── multiclass_python_scores.csv; │ │ ├── python_predictions.csv; │ │ ├── regression_events.csv; │ │ ├── regression_model.json; │ │ ├── regression_model.rabbit; │ │ ├── regression_python_groundtruths.csv; │ │ ├── regression_python_predictions.csv; │ │ ├── regression_python_scores.csv; │ ├── forestBDTest.hxx; │ ├── helpersBDTest.hxx; │ ├── makefile; │ ├── readme.md; │ ├── RegressionBDTest.hxx; │ ├── run_all.sh; │ ├── testAll.cxx; ├── train_classifiers_examples.py; └── utils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everything in the home folder. Please modify for your needs.; ```bash; #!/bin/bash; cd; # can be ran with yes | bash this_file.sh # to say yes when prompted. sudo apt update ; yes | sudo apt upgrade. # Install all the stuff with apt. sudo apt install clang # to use clang; sudo apt install g++-7 gcc-7 # to use gcc; sudo apt install libx11-dev build-essential cmake ; sudo apt install git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:1859,test,testAll,1859,https://root.cern,https://github.com/root-project/root/pull/4351,1,['test'],['testAll']
Testability,"s/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh. # Execute python script; python2 dataframe_vs_tree.py; """"""; RT.gROOT.SetBatch(True) ; RT.EnableImplicitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:1385,test,test,1385,https://root.cern,https://github.com/root-project/root/issues/7169,1,['test'],['test']
Testability,"s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1113,test,test,1113,https://root.cern,https://github.com/root-project/root/issues/12430,1,['test'],['test']
Testability,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:1673,test,testRooFuncWrapper,1673,https://root.cern,https://github.com/root-project/root/pull/12681,2,['test'],['testRooFuncWrapper']
Testability,"s::VectorLooper::ReadCollectionBool(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libRIO.so; #6 0x00007f36d02af085 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libRIO.so; #7 0x00007f36cf9d57bc in TBranchElement::ReadLeavesMakeClass(TBuffer&) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libTree.so; #8 0x00007f36cf9ba029 in TBranch::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libTree.so; #9 0x00007f36cf9d4025 in TBranchElement::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libTree.so; #10 0x00007f36cfa2f4c0 in TTree::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc11/cms/cmssw/CMSSW_13_0_0_pre4/external/slc7_amd64_gcc11/bin/../../../../../../../slc7_amd64_gcc11/lcg/root/6.26.07-3c8fea8a0ce2aca35570ac22afed05d0/lib/libTree.so; #11 0x000000000040ffbd in HBHEMuonOfflineAnalyzer::Loop() (); #12 0x000000000041960f in main (); ===========================================================. [1] + Exit 139 ./OfflineMain.exe /eos/cms/store/group/dpg_hcal/comm_hcal/Harjot/Jupyter_Notebooks/Validation_PU.root mc22PU.root 0 3 >& mc22PU.log; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370:5236,log,log,5236,https://root.cern,https://github.com/root-project/root/issues/12370,1,['log'],['log']
Testability,"s=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:14294,test,tests,14294,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],"['testBuildDir', 'tests']"
Testability,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8306,Test,Test,8306,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,"s\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib; ```; Another patch will be applied in `roottest`, removing the `RUN_SERIAL` flag on many tests, allowing to save quite some time when running roottest in parallel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:4261,test,tests,4261,https://root.cern,https://github.com/root-project/root/pull/10247,1,['test'],['tests']
Testability,"sable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:637,Test,Test,637,https://root.cern,https://github.com/root-project/root/pull/9035,1,['Test'],['Test']
Testability,"se description of what the wrong behavior is.; -->; Everytime I call fitTo there seems to be various roofit objects that are created and are not cleaned after every iteration. I cannot get RooTrace::dump() to output anything but I am able to use RooTrace::printObjectCounts() to output the object counts. It seems fitTo creates a bunch of RooAbsCollection objects that are not cleaned which starts to consume all the memory. I can see the resident memory usage go up when looking at the top command. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Well, ideally, I hope that I would be able to call fitTo all the times I would like. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; I will include it here since it is really short program. ```; void test(){. RooTrace::active(kTRUE);; RooTrace::mark();; RooRealVar x(""x"",""x"",-10,10);; RooDataSet d(""d"",""d"",RooArgSet(x));; RooRealVar s(""s"",""s"",1,1,10);; RooRealVar m(""m"",""m"",0,-10,10);; RooGaussian g(""gauss"",""gauss(x,m,s)"",x,m,s);; RooPlot *f=x.frame();; for (Int_t j=0; j<300; ++j){; x.setVal(gRandom->Gaus(0,1));; d.add(x);; }; for (Int_t i=0; i<10; i++) {; cout << ""\n------------------------------\nStart iteration "" << i << endl;. cout << ""Before fitting"" << endl;; RooTrace::printObjectCounts();. g.fitTo(d,RooFit::PrintLevel(-1));//,RooFit::SumW2Error(true),RooFit::BatchMode(true));; cout << ""After fitting"" << endl;; RooTrace::printObjectCounts();; }; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Have tried root 6.08/ 6.23 on CentOS 7. Built the root distros . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6975:1440,test,test,1440,https://root.cern,https://github.com/root-project/root/issues/6975,1,['test'],['test']
Testability,sec; Start 467: tutorial-dataframe-df022_useKahan; 488/1231 Test #463: tutorial-dataframe-df018_customActions .............................. Passed 3.66 sec; Start 468: tutorial-dataframe-df023_aggregate; 489/1231 Test #466: tutorial-dataframe-df021_createTGraph ............................... Passed 2.94 sec; Start 469: tutorial-dataframe-df024_Display; 490/1231 Test #467: tutorial-dataframe-df022_useKahan ................................... Passed 3.26 sec; Start 470: tutorial-dataframe-df025_RNode; 491/1231 Test #465: tutorial-dataframe-df020_helpers .................................... Passed 3.82 sec; Start 471: tutorial-dataframe-df031_Stats; 492/1231 Test #468: tutorial-dataframe-df023_aggregate .................................. Passed 2.25 sec; 498/1231 Test #470: tutorial-dataframe-df025_RNode ...................................... Passed 2.80 sec; 502/1231 Test #464: tutorial-dataframe-df019_Cache ...................................... Passed 7.71 sec; 506/1231 Test #471: tutorial-dataframe-df031_Stats ...................................... Passed 3.82 sec; 507/1231 Test #469: tutorial-dataframe-df024_Display .................................... Passed 4.58 sec; Start 1071: tutorial-dataframe-df000_simple-py; Start 1072: tutorial-dataframe-df001_introduction-py; Start 1073: tutorial-dataframe-df002_dataModel-py; Start 1074: tutorial-dataframe-df003_profiles-py; 1072/1231 Test #1071: tutorial-dataframe-df000_simple-py .................................. Passed 2.85 sec; Start 1075: tutorial-dataframe-df004_cutFlowReport-py; 1073/1231 Test #1074: tutorial-dataframe-df003_profiles-py ................................ Passed 5.32 sec; Start 1076: tutorial-dataframe-df006_ranges-py; 1074/1231 Test #1072: tutorial-dataframe-df001_introduction-py ............................ Passed 7.77 sec; Start 1077: tutorial-dataframe-df007_snapshot-py; 1075/1231 Test #1075: tutorial-dataframe-df004_cutFlowReport-py ........................... Passed 5.88 sec; Start 1078: tuto,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:10471,Test,Test,10471,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"see https://root-forum.cern.ch/t/reverse-logarithmic-axis/52829. Reproducer:. ```; void HV_comp_red(){; Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};; Double_t errors_voltage[28] = {0., 0., 0., 0., 0., 0. , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.};; Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};; Double_t std0[28] = {105.8, 104.9, 104.1, 105.8, 104.9, 105.6, 105.3, 104.9, 105.3, 103.8, 104.0, 102.3, 102.9, 103.4, 102.5, 102.6, 102.1, 103.6, 100.3, 101.1, 101.1, 101.5, 101.8, 100.7, 101.1, 101.4, 100.0, 294.7};; Double_t mean1[28] = {0, 6.1, 9.6, 10.1, 0.3, 11.3, 12.9, 10.1, 14.5, 9.3, 7.0, 12.3, 12.6, 8.2, 11.8, 12.1, 21.8, 22.3, 20.5, 26.2, 24.1, 23.3, 23.2, 23.0, 23.1, 20.4, 24.4, -56.0};; Double_t std1[28] = {89.1, 89.7, 89.6, 89.4, 90.3, 91.6, 90.1, 90.3, 89.1, 90.3, 90.5, 90.1, 91.0, 91.5, 91.3, 91.1, 91.0, 90.8, 90.9, 90.5, 91.0, 91.7, 91.5, 91.4, 91.9, 93.2, 91.4, 452.8};. auto graph0 = new TGraphErrors(28, biasVoltage, mean0, errors_voltage, std0);; auto graph1 = new TGraphErrors(28, biasVoltage, mean1, errors_voltage, std1);. graph0->SetFillColor(1);; graph0->SetMarkerColor(1);; graph0->SetMarkerStyle(20);; graph0->SetFillStyle(3004);; graph1->SetFillColor(2);; graph1->SetMarkerColor(2);; graph1->SetMarkerStyle(20);; graph1->SetFillStyle(3005);. auto mg = new TMultiGraph();; mg->SetTitle(""Mean value ;Bias Voltage [V];Threshold [e]"");; mg->Add(graph0);; mg->Add(graph1);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);; canvas->SetLogx();; mg->Draw(""a3 p rx""); //option ""Rx""; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11938:41,log,logarithmic-axis,41,https://root.cern,https://github.com/root-project/root/issues/11938,1,['log'],['logarithmic-axis']
Testability,"see https://sft.its.cern.ch/jira/browse/ROOT-10300. If sub-class of TObject uses `=default` specifier for default constructor, all members (including from TObject) are initialized. By this special logic for TObject::kIsOnHeap bit is corrupted. The only solution for now - avoid such `= default` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4320:197,log,logic,197,https://root.cern,https://github.com/root-project/root/pull/4320,1,['log'],['logic']
Testability,"sefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Spack. ### Operating system. Linux, debian. ### Addition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16189:1295,Test,TestBit,1295,https://root.cern,https://github.com/root-project/root/issues/16189,1,['Test'],['TestBit']
Testability,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:1840,Test,Test,1840,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:6148,Test,Test,6148,https://root.cern,https://github.com/root-project/root/pull/5054,2,"['Test', 'test']","['Test', 'test']"
Testability,"sertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:1172,test,test,1172,https://root.cern,https://github.com/root-project/root/issues/14186,1,['test'],['test']
Testability,"setSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		}; 	],; 	""friends"": {; 		""friendAlias1"": {; 			""trees"": [""subTree0""],; 			""files"": [""specTestFile6*.root"", ""specTestFile6.root""]; 		},; 		""friendAlias2"": {; 			""trees"": [""subTree1"", ""subTree2""],; 			""files"": [""specTestFile7.root"", ""specTestFile8.root""]; 		}; 	},; 	""range"": [5, 10]; }; ```; TODO:; - [ ] Polish and push test suite. Open discussion items:; - [ ] Which implicit type conversitions are allowed?; - [ ] (How) can we pass chains locally in MT runs?; - [ ] Renaming classes/methods/functions?; - [ ] Which components of the Json file are mandatory and which not?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526:2337,test,test,2337,https://root.cern,https://github.com/root-project/root/pull/11526,1,['test'],['test']
Testability,"since the warning is not needed in case the graphics system, cocoa or x11, is OFF. # This Pull request:. ## Changes or fixes:. A spourious warning when libafterimage is OFF without X11/Cocoa being ON. ## Checklist:. - [V] tested changes locally. This PR fixes #15027",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15042:222,test,tested,222,https://root.cern,https://github.com/root-project/root/pull/15042,1,['test'],['tested']
Testability,"skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13080",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13083:99,test,tested,99,https://root.cern,https://github.com/root-project/root/pull/13083,1,['test'],['tested']
Testability,"slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3317; #6 0x00002af4f3e830c9 in TStreamerInfo::Compile (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfoActions.cxx:3191; #7 0x00002af4f3e6c1ae in TStreamerInfo::BuildOld (this=0x2af506a31000) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:2547; #8 0x00002af4f45f22ad in TClass::GetStreamerInfo (this=0x2af536bcd800, version=6) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/core/meta/src/TClass.cxx:4619; #9 0x00002af4f3e6fd3e in TStreamerInfo::ForceWriteInfo (this=0x2af531d13300, file=0x2af4fb7ede00, force=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/io/io/src/TStreamerInfo.cxx:3156; #10 0x00002af4f35f6aa1 in TTreeCloner::CopyStreamerInfos (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:465; #11 0x00002af4f35f5ad0 in TTreeCloner::Exec (this=0x7ffc12abb970) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc820/lcg/root/6.22.03-1718c3698c5b60720e5f35ab8ee4efc5/root-6.22.03/tree/tree/src/TTreeCloner.cxx:202; #12 0x00002af551da8999 in edm::RootOutputTree::fastCloneTTree(TTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_11_2_ROOT622_X_2020-11-02-2300/lib/slc7_amd64_gcc820/libIOPoolOutput.so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:3166,test,tests,3166,https://root.cern,https://github.com/root-project/root/issues/6767,2,['test'],"['testBuildDir', 'tests']"
Testability,"so bug.; ``` c++; root [2] unsigned int c; (unsigned int) 0; root [3] d=c; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression. root [4] unsigned char e=5; (unsigned char) '0x05'; root [5] f=e; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression; ```. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; splash screen; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; ROOT 6.22/02 on CentOS7 x86_64, at CVMFS; ```; /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.02/x86_64-centos7-gcc48-opt; ```; and ; ROOT 6.20/06 on CentOS7/gcc x86_64, installed by system admin in my server; ROOT 6.22/02 on windows/MSVC x86_64, binary download. ##### did not tested on current HEAD. strangely, older version, like ROOT5.34/09 or ROOT 5.34/36 on linuxx8664gcc, has no such problem. ```c++; ROOT 5.34/36 (v5-34-36@v5-34-36, Apr 05 2016, 10:25:45 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010; root [0] unsigned long a=5; root [1] b=a; Warning: Automatic variable b is allocated (tmpfile):1:; (unsigned long)5; ```; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812:2400,test,tested,2400,https://root.cern,https://github.com/root-project/root/issues/6812,1,['test'],['tested']
Testability,splitcoll-arrayview needs a dictionary to run. This creates a depedency; between dictionary generation and test target to fix a build-system race; condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5695:107,test,test,107,https://root.cern,https://github.com/root-project/root/pull/5695,1,['test'],['test']
Testability,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5715:113,test,test,113,https://root.cern,https://github.com/root-project/root/pull/5715,1,['test'],['test']
Testability,"src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; //c->cd(1);//works; c->cd();//fails; TText* t= new TText(0.5,0.5,""some text"");; t->Draw();; delete t;; delete c;; delete C;; return 0;; }. ```; Compile. ```; g++ pad4.cxx $(root-config --glibs --cflags --libs) -o pad4 -g; ```. run. ```; ./pad4; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7/EPEL. ## Additional context; Possible fix:; Change ; ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; return gPad;; }; ..... ```; to. ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:1966,test,test,1966,https://root.cern,https://github.com/root-project/root/issues/6447,1,['test'],['test']
Testability,"src/graf2d/gpad/src/TCreatePrimitives.cxx:134; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:343:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'padsav' initialized to a null pointer value in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:276; 2: Loop condition is false. Execution continues on line 290 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:284; 3: Control jumps to 'case kButton1Up:' at line 327 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:290; 4: Assuming 'xup' is > 'xlow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 5: Left side of '||' is false in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 6: Assuming 'yup' is > 'ylow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 7: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 8: Calling 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 9: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 12: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 14: Returning from 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 15: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 16: Assuming 'canvas' is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 17: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 18: Called C++ object pointer is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:343; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx:156:7: warning: Maybe you meant to call TButton::ExecuteEvent() instead [c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:52404,Test,TestBit,52404,https://root.cern,https://github.com/root-project/root/issues/7432,1,['Test'],['TestBit']
Testability,ssage logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2523,log,logger,2523,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"ssages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show our users debug messages, too. Right now, we cannot, because DEBUG messages can only be enabled at compile-time, not at run-time. The DEBUG messages are also problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). For wrappers like iminuit, it is important to redirect the log to its own streams that can be readout and displayed in Python, for example in a Jupyter notebook session (std::cerr and std::cout always go to the terminal and are invisible in a Jupyter notebook).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:4260,log,log,4260,https://root.cern,https://github.com/root-project/root/issues/6421,1,['log'],['log']
Testability,"ssingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -e 'gROOT->SetMacroPath(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -q -l -b /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+; -- BEGIN TEST OUTPUT --. Processing /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+...; Checking FromHumanReadableSize; Checking ToHumanReadableSize; Checking 1024 vs 1.024KiB an 1KB; Checking 2097152 vs 2.09715MiB an 2MB; Checking 4294967296 vs 4.29497GiB an 4GB; Checking 8796093022208 vs 8.79609TiB an 8TB; Checking 18014398509481984 vs 18.0144EiB an 16EB; Checking 16 vs 16B and 16B; Checking 24576 vs 24.576KiB and 24KB; Checking 3.77487e+07 vs 37.7487MiB and 36MB; Checking 5.79821e+10 vs 57.9821GiB and 54GB; Checking 8.90604e+13 vs 89.0604TiB and 81TB; Checking 1.36797e+17 vs 136.797EiB and 121.5EB; Checking 2.1012e+20 vs 210.12ZiB and 182.25ZB; Checking 3.22744e+23 vs 322.744YiB and 273.375YB; (int) 0. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx.so; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ub",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:1763,assert,assertHumanReadable,1763,https://root.cern,https://github.com/root-project/root/pull/4257,1,['assert'],['assertHumanReadable']
Testability,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15792:1561,test,tests,1561,https://root.cern,https://github.com/root-project/root/issues/15792,3,['test'],['tests']
Testability,"st #69: pyunittests-pyroot-roofit-roodataset-numpy ..........................***Failed 2.72 sec; test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for ... ; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; -----------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1266,Test,TestRooDataSetNumpy,1266,https://root.cern,https://github.com/root-project/root/issues/12162,1,['Test'],['TestRooDataSetNumpy']
Testability,"st&, edm::serviceregistry::ServiceLegacy) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:7332,test,test,7332,https://root.cern,https://github.com/root-project/root/issues/8008,1,['test'],['test']
Testability,"st-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2244,test,tests,2244,https://root.cern,https://github.com/root-project/root/issues/9436,1,['test'],['tests']
Testability,"stCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:11596,assert,assertion,11596,https://root.cern,https://github.com/root-project/root/issues/8578,1,['assert'],['assertion']
Testability,"stance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7362:1918,Assert,Assertion,1918,https://root.cern,https://github.com/root-project/root/issues/7362,1,['Assert'],['Assertion']
Testability,"std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so; gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1; ```. ### What is the expected behaviour?. Not to crash. ### How to reproduce?. ```; $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh; $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine; $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src; $ cmsenv; $ scram b -j8 SimDataFormats/CaloHit; ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT?. from source. ### Which operating system are you using?. Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:8930,test,tests,8930,https://root.cern,https://github.com/root-project/root/issues/12957,1,['test'],['tests']
Testability,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:7935,Test,Test,7935,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,"strings. properly, for example treating cases such as 'branch0' and 'branch01'.; The code of the helper FindUsedColumnNames has been simplified.; A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3353:148,test,test,148,https://root.cern,https://github.com/root-project/root/pull/3353,1,['test'],['test']
Testability,t #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec; Start 455: tutorial-dataframe-df008_createDataSetFromScratch; 476/1231 Test #452: tutorial-dataframe-df005_fillAnyObject .............................. Passed 6.60 sec; Start 456: tutorial-dataframe-df009_FromScratchVSTTree; 477/1231 Test #453: tutorial-dataframe-df006_ranges ..................................... Passed 7.33 sec; Start 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:7023,Test,Test,7023,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"t /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:10514,test,tests,10514,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"t /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5596:1873,Test,TestBody,1873,https://root.cern,https://github.com/root-project/root/pull/5596,3,['Test'],['TestBody']
Testability,t 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455: tutorial-dataframe-df008_createDataSetFromScratch ................... Passed 3.90 sec; Start 458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings; 479/1231 Test #394: gtest-tree-dataframe-test-dataframe-concurrency ..................... Passed 44.21 sec; Start 459: tutorial-dataframe-df014_CSVDataSource; 480/1231 Test #456: tutorial-dataframe-df009_FromScratchVSTTree ......................... Passed 4.16 sec; Start 460: tutorial-dataframe-df015_LazyDataSource; 481/1231 Test #454: tutorial-dataframe-df007_snapshot ................................... Passed 9.31 sec; Start 461: tutorial-dataframe-df016_vecOps; 482/1231 Test #457: tutorial-dataframe-df010_trivialDataSource .......................... Passed 3.32 sec; Start 462: tutorial-dataframe-df017_vecOpsHEP; 483/1231 Test #458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ................. Passed 5.07 sec; Start 463: tutorial-dataframe-df018_customActions; 484/1231 Test #461: tutorial-dataframe-df016_vecOps ..................................... Passed 3.80 sec; Start 464: tutorial-dataframe-df019_Cache; 485/1231 Test #462: tutorial-dataframe-df017_vecOpsHEP .................................. Passed 4.31 sec; Start 465: tutorial-dataframe-df020_helpers; 486/1231 Test #459: tutorial-dataframe-df014_CSVDataSource .............................. Passed 6.87 sec; Start 466: tutorial-dataframe-df021_createTGraph; 487/1231 Test #460: tutorial-dataframe-df015_LazyDataSource ............................. Passed 6.11 sec; Start 467: tutorial-dataframe-df022_useKahan; 488/1231 Test #463: tutorial-dataframe-df018_customActions .............................. Passed 3.66 sec; Start 468: tutorial-dataframe-df023_aggregate; 489/1231 Test #466: tutorial-dataframe-df021_createTGraph ............................... Passed 2.94 sec; Start 469: tutorial-dataframe-df024_Display; 490/1231 Test #467: tutorial-dataframe-df022_useKahan .........................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:8932,Test,Test,8932,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"t at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:10083,Test,TestEBO,10083,https://root.cern,https://github.com/root-project/root/issues/12428,1,['Test'],['TestEBO']
Testability,"t build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2550,stub,stubs,2550,https://root.cern,https://github.com/root-project/root/issues/13450,1,['stub'],['stubs']
Testability,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10927:1750,test,tested,1750,https://root.cern,https://github.com/root-project/root/pull/10927,2,['test'],"['tested', 'tests']"
Testability,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1487,test,test,1487,https://root.cern,https://github.com/root-project/root/issues/16577,2,['test'],['test']
Testability,"t yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ```; 3. `cat /etc/*release`; ```sh; DISTRIB_ID=""Arch""; DISTRIB_RELEASE=""rolling""; DISTRIB_DESCRIPTION=""Arch Linux""; NAME=""Arch Linux""; PRETTY_NAME=""Arch Linux""; ID=arch; BUILD_ID=rolling; ANSI_COLOR=""38;2;23;147;209""; HOME_URL=""https://archlinux.org/""; DOCUMENTATION_URL=""https://wiki.archlinux.org/""; SUPPORT_URL=""https://bbs.archlinux.org/""; BUG_REPORT_URL=""https://bugs.archlinux.org/""; LOGO=archlinux-logo; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:32215,LOG,LOGO,32215,https://root.cern,https://github.com/root-project/root/issues/10528,2,"['LOG', 'log']","['LOGO', 'logo']"
Testability,"t(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3161,Assert,AssertionError,3161,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Assert', 'test']","['AssertionError', 'tests']"
Testability,"t-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2481,test,test,2481,https://root.cern,https://github.com/root-project/root/issues/10203,2,['test'],"['test', 'tests']"
Testability,t-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:1784,test,test-dataframe-report,1784,https://root.cern,https://github.com/root-project/root/pull/10300,3,"['Test', 'test']","['Test', 'test-dataframe-regression', 'test-dataframe-report']"
Testability,"t-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2775,test,testing,2775,https://root.cern,https://github.com/root-project/root/issues/9436,5,['test'],"['test', 'testing', 'tests']"
Testability,"t-numpy ..........................***Failed 2.72 sec; test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for ... ; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1314,test,test,1314,https://root.cern,https://github.com/root-project/root/issues/12162,1,['test'],['test']
Testability,t-py ........................... Passed 5.88 sec; Start 1078: tutorial-dataframe-df008_createDataSetFromScratch-py; 1076/1231 Test #1073: tutorial-dataframe-df002_dataModel-py ............................... Passed 8.55 sec; Start 1079: tutorial-dataframe-df010_trivialDataSource-py; 1077/1231 Test #1079: tutorial-dataframe-df010_trivialDataSource-py ....................... Passed 3.14 sec; Start 1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py; 1078/1231 Test #1078: tutorial-dataframe-df008_createDataSetFromScratch-py ................ Passed 3.91 sec; Start 1081: tutorial-dataframe-df014_CSVDataSource-py; 1079/1231 Test #1076: tutorial-dataframe-df006_ranges-py .................................. Passed 7.30 sec; Start 1082: tutorial-dataframe-df016_vecOps-py; Start 1083: tutorial-dataframe-df017_vecOpsHEP-py; 1081/1231 Test #1077: tutorial-dataframe-df007_snapshot-py ................................ Passed 9.12 sec; Start 1084: tutorial-dataframe-df019_Cache-py; 1082/1231 Test #1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py .............. Passed 5.30 sec; Start 1085: tutorial-dataframe-df021_createTGraph-py; 1083/1231 Test #1082: tutorial-dataframe-df016_vecOps-py .................................. Passed 4.06 sec; Start 1086: tutorial-dataframe-df024_Display-py; 1084/1231 Test #1083: tutorial-dataframe-df017_vecOpsHEP-py ............................... Passed 3.68 sec; Start 1087: tutorial-dataframe-df026_AsNumpyArrays-py; 1085/1231 Test #1081: tutorial-dataframe-df014_CSVDataSource-py ........................... Passed 7.49 sec; Start 1090: tutorial-dataframe-df031_Stats-py; 1087/1231 Test #1085: tutorial-dataframe-df021_createTGraph-py ............................ Passed 3.08 sec; Start 1091: tutorial-dataframe-df032_MakeNumpyDataFrame-py; 1088/1231 Test #1086: tutorial-dataframe-df024_Display-py ................................. Passed 4.99 sec; 1089/1231 Test #1084: tutorial-dataframe-df019_Cache-py ................................... P,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:12417,Test,Test,12417,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"t-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1695,Test,TestDepsAreCond,1695,https://root.cern,https://github.com/root-project/root/issues/12430,1,['Test'],['TestDepsAreCond']
Testability,"t/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour?. _No response_. ### How to reproduce?. From lxplus9.cern.ch:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp""; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed.; ```. The workaround can be demonstrated with:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #define WORKAROUND; root [1] #include ""custom_meta_enum_test.hpp""; root [2] ; ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Whic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:2755,Assert,Assertion,2755,https://root.cern,https://github.com/root-project/root/issues/13019,1,['Assert'],['Assertion']
Testability,"t/pull/12973; 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:1809,test,test,1809,https://root.cern,https://github.com/root-project/root/pull/12971,1,['test'],['test']
Testability,"t/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:15174,Test,TestBit,15174,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Test'],['TestBit']
Testability,"t/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:2073,TEST,TEST,2073,https://root.cern,https://github.com/root-project/root/issues/6597,1,['TEST'],['TEST']
Testability,"t::operator delete(void*) /home/jhahnfel/ROOT/src/core/base/src/TObject.cxx:1001:7; 418: #3 0x7f1c66f99411 in TTree::~TTree() /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:921:1; 418: #4 0x7f1c6202bb62 in TCollection::GarbageCollect(TObject*) /home/jhahnfel/ROOT/src/core/cont/src/TCollection.cxx:736:4; 418: #5 0x7f1c620480aa in TList::Delete(char const*) /home/jhahnfel/ROOT/src/core/cont/src/TList.cxx:537:13; 418: #6 0x7f1c6203423b in THashList::Delete(char const*) /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:215:14; 418: #7 0x7f1c6312616e in TDirectoryFile::Close(char const*) /home/jhahnfel/ROOT/src/io/io/src/TDirectoryFile.cxx:572:27; 418: #8 0x7f1c6317a52b in TFile::Close(char const*) /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:942:20; 418: #9 0x7f1c631788ad in TFile::~TFile() /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:527:4; 418: #10 0x7f1c63179ae8 in TFile::~TFile() /home/jhahnfel/ROOT/src/io/io/src/TFile.cxx:526:1; 418: #11 0x53554a in BulkApiMultipleTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiMultiple.cxx:305:4. [...]. 418: previously allocated by thread T0 here:; 418: #0 0x530e28 in operator new(unsigned long) (/home/jhahnfel/ROOT/build-clang-asan-debug/tree/tree/test/testBulkApiMultiple+0x530e28); 418: #1 0x7f1c61f3a2d4 in TStorage::ObjectAlloc(unsigned long) /home/jhahnfel/ROOT/src/core/base/src/TStorage.cxx:330:19; 418: #2 0x559734 in TObject::operator new(unsigned long) /home/jhahnfel/ROOT/src/core/base/inc/TObject.h:167:46; 418: #3 0x7f1c66d6373e in ROOT::new_TTree(void*) /home/jhahnfel/ROOT/build-clang-asan-debug/tree/tree/G__Tree.cxx:4183:36; 418: #4 0x7f1c6214d5f9 in TClass::NewObject(TClass::ENewType, bool) const /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4956:14; 418: #5 0x7f1c6214d23a in TClass::New(TClass::ENewType, bool) const /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4933:15; 418: #6 0x7f1c6322497b in TKey::ReadObjectAny(TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TKey.cxx:1077:21; 418",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10012:2228,Test,TestBody,2228,https://root.cern,https://github.com/root-project/root/issues/10012,2,"['Test', 'test']","['TestBody', 'test']"
Testability,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:2669,Test,TestClass,2669,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Test'],['TestClass']
Testability,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:13996,test,tests,13996,https://root.cern,https://github.com/root-project/root/issues/12771,4,['test'],"['testBuildDir', 'tests']"
Testability,"tRepSym> write 		................ OK; SMatrix<double,5,5,MatRepSym> read 		................ OK; SMatrix<double,5,5,MatRepSym> after read		................ OK; SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK; SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK; SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK; ******************************************************************************; 	Test of a Composite Object (containing Vector's and Matrices); ******************************************************************************; Test Using CINT library; TrackD creation 		................ OK; TrackD addition 		................ OK; TrackD write 		................ OK; TrackD read 		................ OK; TrackD after read 		................ OK; TrackD32 creation 		................ OK; TrackD32 addition 		................ OK; TrackD32 write 		................ OK; TrackD32 read 		................ OK; TrackD32 after read 		................ OK; TrackD32 Double32 test 		................ OK; TrackErrD creation 		................ OK; TrackErrD addition 		................ OK; TrackErrD write 		................ OK; TrackErrD read 		................ OK; TrackErrD after read 		................ OK; TrackErrD32 creation 		................ OK; TrackErrD32 addition 		................ OK; TrackErrD32 write 		................ OK; TrackErrD32 read 		................ OK; TrackErrD32 after read 		................ OK; TrackErrD32 Double32 test 		................ OK; VecTrack<TrackD> creation 		................ OK; VecTrack<TrackD> addition 		................ OK; VecTrack<TrackD> write 		................ OK; VecTrack<TrackD> read 		................ OK; VecTrack<TrackD> after read 		................ OK; VecTrack<TrackErrD> creation 		................ OK; VecTrack<TrackErrD> addition 		................ OK; VecTrack<TrackErrD> write 		................ OK; VecTrack<TrackErrD> read 		................ OK; VecTrack<TrackErrD> after read 		................ OK; *",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:10086,test,test,10086,https://root.cern,https://github.com/root-project/root/pull/401,1,['test'],['test']
Testability,"t_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:1905,Test,Test,1905,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"t_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):; Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'; ```; The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas?. ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:2816,log,log,2816,https://root.cern,https://github.com/root-project/root/issues/14520,1,['log'],['log']
Testability,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:2478,test,tests,2478,https://root.cern,https://github.com/root-project/root/issues/10732,4,['test'],"['testBuildDir', 'tests']"
Testability,"taSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:18537,Test,Test,18537,https://root.cern,https://github.com/root-project/root/issues/12372,2,"['Test', 'test']","['Test', 'test-testActionHelpers']"
Testability,taframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataframe-test-dataframe-resptr; 406/1231 Test #383: gtest-tree-dataframe-test-dataframe-resptr .......................... Passed 0.61 sec; Start 384: gtest-tree-dataframe-test-dataframe-take; 407/1231 Test #382: gtest-tree-dataframe-test-dataframe-leaves .......................... Passed 2.14 sec; Start 385: gtest-tree-dataframe-test-dataframe-entrylist; 408/1231 Test #385: gtest-tree-dataframe-test-dataframe-entrylist ....................... Passed 0.90 sec; Start 386: gtest-tree-dataframe-test-dataframe-merge-results; 409/1231 Test #386: gtest-tree-dataframe-test-dataframe-merge-results ................... Passed 0.54 sec; Start 387: gtest-tree-dataframe-test-dataframe-samplecallback; 410/1231 Test #384: gtest-tree-dataframe-test-dataframe-take ............................ Passed 2.19 sec; Start 388: gtest-tree-dataframe-test-dataframe-vary; 411/1231 Test #387: gtest-tree-dataframe-test-dataframe-samplecallback .................. Passed 1.09 sec; Start 389: gtest-tree-dataframe-test-datasource-more; 412/1231 Test #3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:3490,test,test-dataframe-resptr,3490,https://root.cern,https://github.com/root-project/root/pull/10300,3,"['Test', 'test']","['Test', 'test-dataframe-resptr']"
Testability,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:25176,test,testing,25176,https://root.cern,https://github.com/root-project/root/issues/12372,7,"['Test', 'test']","['Test', 'testing']"
Testability,"tall git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git. # build with gcc; mkdir build_gcc && cd build_gcc && cmake ../root && make -j8. ## Google bench; cd; # Check out the library.; git clone https://github.com/google/benchmark.git; # Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.; git clone https://github.com/google/googletest.git benchmark/googletest. # Go to the library root directory; cd benchmark ; mkdir build_gcc; cd build_gcc ; cmake -DCMAKE_BUILD_TYPE=Release ../root && make -j8. # XGBoost; cd; git clone --recursive https://github.com/dmlc/xgboost; cd xgboost; mkdir build_gcc; cd build_gcc; cmake -DCMAKE_BUILD_TYPE=Release ../. # Setup aliases; echo ""alias bdt='cd ~/root/tmva/tmva/src/BDT'"" >> ~/.bashrc; source .bashrc. # Add the folders missing from github (add them directly in github?) ; cd; bdt ; git checkout backend/FastInference; mkdir build. # For ROOT; echo 'export ROOTSYS=""~/root/""' >> ~/.bashrc; echo 'export ROOTBUILD=""~/build_gcc/""' >> ~/.bashrc; echo 'source $ROOTBUILD/bin/thisroot.sh' >> ~/.bashrc. echo 'export XGBOOST_ROOT=""~/xgboost""' >> ~/.bashrc. echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/xgboost/lib/' >> ~/.bashrc. source .bashrc;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:3374,benchmark,benchmark,3374,https://root.cern,https://github.com/root-project/root/pull/4351,1,['benchmark'],['benchmark']
Testability,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:6114,test,test,6114,https://root.cern,https://github.com/root-project/root/issues/8899,11,"['Test', 'test']","['Test', 'test', 'testing']"
Testability,"tc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:12677,assert,assert,12677,https://root.cern,https://github.com/root-project/root/issues/7518,1,['assert'],['assert']
Testability,"tches](https://github.com/root-project/root/compare/v6-26-00-patches), but it does not compile after commit 80c1ab6b6dab02c46d8cc66262686fd718b57ece. Here the stacktrace:; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:184:16: error: 'std::string TDirectoryLevelIter::GetContent(const string&)' marked 'override', but does not override; 184 | std::string GetContent(const std::string &kind) override; | ^~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx: In member function 'std::string TDirectoryLevelIter::GetContent(const string&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:11: error: 'GetContentKind' was not declared in this scope; did you mean 'GetContent'?; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~~~~~~; | GetContent; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:35: error: 'kFileName' was not declared in this scope; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:187:17: error: 'fFileName' was not declared in this scope; 187 | return fFileName;; | ^~~~~~~~~; ```; It successfully build up to commit https://github.com/root-project/root/commit/58c6a86fbe840a0f7fdd95d710755e925300120f. We are targeting `el8`, `amd64` and `gcc11`. Could you please have a look?. Thanks,; Andrea. FYI, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:1277,test,tests,1277,https://root.cern,https://github.com/root-project/root/issues/12110,4,['test'],"['testBuildDir', 'tests']"
Testability,"td'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:3494,stub,stubs-,3494,https://root.cern,https://github.com/root-project/root/issues/14062,1,['stub'],['stubs-']
Testability,"teOptions` and are added to a TFile, use the TFile's compression. Before: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses default compression level 404 (lz4); std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```. After:; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses TFile's compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 101""));; ```. Specify we want compression level 404: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; RNTupleWriteOptions opt;; opt.SetCompression(404);; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file, opt);; ntuple->Fill();; }. // ntuple uses explicitly set compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7749:1336,test,testing,1336,https://root.cern,https://github.com/root-project/root/pull/7749,2,['test'],['testing']
Testability,"ted by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it however so I would create a separate issue if I find the time to test and confirm it later. ### Reproducer. Files in archive: examine_mcbm_beam_2019_03.geo.root, check_overlaps.C, root_overlaps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:2760,test,tested,2760,https://root.cern,https://github.com/root-project/root/issues/14675,1,['test'],['tested']
Testability,"ted to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape.; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:1732,test,test,1732,https://root.cern,https://github.com/root-project/root/issues/7249,1,['test'],['test']
Testability,"ted=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5596:1459,Test,TestBody,1459,https://root.cern,https://github.com/root-project/root/pull/5596,1,['Test'],['TestBody']
Testability,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5093:211,test,tests,211,https://root.cern,https://github.com/root-project/root/pull/5093,2,['test'],"['test', 'tests']"
Testability,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable. (cherry picked from commit 3f5f850918fc23212d162cbbe2de578bbf3dee95)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5113:211,test,tests,211,https://root.cern,https://github.com/root-project/root/pull/5113,2,['test'],"['test', 'tests']"
Testability,"tensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:2121,test,test,2121,https://root.cern,https://github.com/root-project/root/issues/12429,1,['test'],['test']
Testability,"ter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15725,test,test,15725,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,"ter branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPackage; , fetchFromGitHub; , fetchpatch; , makeWrapper; , cmake; , coreutils; , git; , davix; , ftgl; , gl2ps; , glew; , gnugrep; , gnused; , gsl; , lapack; , libX11; , libXpm; , libXft; , libXext; , libGLU; , libGL; , libxcrypt; , libxml2; , llvm_13; , lsof; , lz4; , xz; , man; , openblas; , openssl; , pcre; , nlohmann_json; , pkg-config; , procps; , python; , which; , xxHash; , zlib; , zstd; , libAfterImage; , giflib; , libjpeg; , libtiff; , libpng; , patchRcPathCsh; , patchRcPathFish; , patchRcPathPosix; , tbb; , Cocoa; , CoreSymbolication; , OpenGL; , noSplash ? false; }:. stdenv.mkDerivation rec {; pname = ""root"";; version = ""6.27.00"";. src = fetchFromGitHub {; owner = ""root-project"";; repo = ""root"";; rev = ""0fafc31efb5a94472af2a6b35ded27796",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:3600,test,test-root-,3600,https://root.cern,https://github.com/root-project/root/issues/11920,1,['test'],['test-root-']
Testability,"teractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; err",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1386,Test,Test,1386,https://root.cern,https://github.com/root-project/root/issues/10203,1,['Test'],['Test']
Testability,test PR for runtime_modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1011:0,test,test,0,https://root.cern,https://github.com/root-project/root/pull/1011,1,['test'],['test']
Testability,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:2081,test,testRooFuncWrapper,2081,https://root.cern,https://github.com/root-project/root/pull/12708,2,['test'],['testRooFuncWrapper']
Testability,test just tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16664:0,test,test,0,https://root.cern,https://github.com/root-project/root/pull/16664,1,['test'],['test']
Testability,test-periodic: build with same C++ compiler as ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3389:0,test,test-periodic,0,https://root.cern,https://github.com/root-project/root/pull/3389,1,['test'],['test-periodic']
Testability,"test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while running CTest; ```; With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:; ```; 99% tests passed, 17 tests failed out of 1232; Label Time Summary:; longtest = 540.69 sec*proc (27 tests); multithreaded = 678.83 sec*proc (2 tests); python_runtime_deps = 60.39 sec*proc (11 tests); tutorial = 3802.05 sec*proc (786 tests); Total Test time (real) = 2732.59 sec; The following tests FAILED:; 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed); 	 57 - pyunittests-pyroot-pyz-rtensor (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while runn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:2845,test,tests,2845,https://root.cern,https://github.com/root-project/root/issues/10409,2,"['Test', 'test']","['Test', 'tests']"
Testability,"test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. - Build root with gcc 14 on Fedora 40 on aarch64, ppc64le or s390x; - Run the test. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Fedora Linux 40. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:1729,test,testSparse,1729,https://root.cern,https://github.com/root-project/root/issues/14446,11,"['TEST', 'test']","['TEST', 'test', 'testSparse', 'tests']"
Testability,test-tree-dataframe-test-datasource-lazy; 415/1231 Test #392: gtest-tree-dataframe-test-datasource-lazy ........................... Passed 0.28 sec; Start 393: gtest-tree-dataframe-test-datasource-csv; 416/1231 Test #388: gtest-tree-dataframe-test-dataframe-vary ............................ Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutoria,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:5839,Test,Test,5839,https://root.cern,https://github.com/root-project/root/pull/10300,2,"['Test', 'test']","['Test', 'test-datasource-trivial']"
Testability,"test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a']",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:1788,test,test,1788,https://root.cern,https://github.com/root-project/root/pull/5960,1,['test'],['test']
Testability,testing github ... this commit should already be in the repository,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16569:0,test,testing,0,https://root.cern,https://github.com/root-project/root/pull/16569,1,['test'],['testing']
Testability,testing new PR procedure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/529:0,test,testing,0,https://root.cern,https://github.com/root-project/root/pull/529,1,['test'],['testing']
Testability,thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8636:190,test,tested,190,https://root.cern,https://github.com/root-project/root/pull/8636,1,['test'],['tested']
Testability,"that rows with out-of-range values are skipped, both for ... ; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; FAILED (failures=1); ~~~. ### Expected behavior. No failure. This test did not fail with numpy 1.23. ### To Reproduce. 1. The failing test is part of the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1459,Test,Test,1459,https://root.cern,https://github.com/root-project/root/issues/12162,1,['Test'],['Test']
Testability,"the assertion seems bogus - the param value is not the coordinate in the paramHistFunc, so just get rid of that assert",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12725:4,assert,assertion,4,https://root.cern,https://github.com/root-project/root/pull/12725,2,['assert'],"['assert', 'assertion']"
Testability,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15898:146,test,tested,146,https://root.cern,https://github.com/root-project/root/pull/15898,1,['test'],['tested']
Testability,"the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:1282,test,test-listarray,1282,https://root.cern,https://github.com/root-project/root/issues/11602,1,['test'],['test-listarray']
Testability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:2482,assert,assert,2482,https://root.cern,https://github.com/root-project/root/pull/5219,1,['assert'],['assert']
Testability,"the implementation of histo models has been simplified avoiding code duplication.; The creation of the shared_pointer containing the histogram has been moved to; the model classes, in order to simplify the TDFInterface.; Test coverage has been significantly increased.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1770:221,Test,Test,221,https://root.cern,https://github.com/root-project/root/pull/1770,1,['Test'],['Test']
Testability,"the integral used for averaging, and a subsequently higher average than can be expected based on the interpolated values of the curve at the interval boundaries. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooCurve::average(Double_t xFirst, Double_t xLast)` returing the average value of the curve in the requested interval. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Example code where this behaviour occurs:; [ExampleMacro.zip](https://github.com/root-project/root/files/8025465/ExampleMacro.zip); ```c++; #include <iostream>; #include <RooAbsReal.h>; #include <RooRealVar.h>; #include <RooPlot.h>; #include <RooCmdArg.h>; #include <RooGenericPdf.h>. void ExampleMacro(); {; RooRealVar x(""x"",""x"",0,50);; RooGenericPdf func(""func"",""Test Function"",""x"",x);. RooPlot* xframe = x.frame();. func.plotOn(xframe, RooFit::Name(""funcCurve""));. RooCurve* funcCurve = xframe->getCurve(""funcCurve"");; Double_t xFirst, xLast;; std::cout << ""\ni, f(i), f(i+0.1), avg[i,i+0.1]\n"" << std::endl;. for (Double_t i = 10; i < 11; i += 0.1); {; Double_t avg = funcCurve->average(i,i+0.1);; xFirst = funcCurve->interpolate(i, 1e-10);; xLast = funcCurve->interpolate(i+0.1, 1e-10);; std::cout << i << "", "" << xFirst << "", "" << xLast << "", "" << avg << std::endl;; }; }; ```; Run with `root -l ExampleMacro.C`. Output, marking the higher than expected averages with `<--`:; ```; root [0] ; Processing ExampleMacro.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:1460,Test,Test,1460,https://root.cern,https://github.com/root-project/root/issues/9838,1,['Test'],['Test']
Testability,"the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:1192,test,tested,1192,https://root.cern,https://github.com/root-project/root/issues/6370,1,['test'],['tested']
Testability,"the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1471,test,test,1471,https://root.cern,https://github.com/root-project/root/pull/15272,1,['test'],['test']
Testability,"this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :); For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3789:245,test,testing,245,https://root.cern,https://github.com/root-project/root/pull/3789,1,['test'],['testing']
Testability,this causes issues with C++20 module composability and the need for textual is unclear. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11869:153,test,tested,153,https://root.cern,https://github.com/root-project/root/pull/11869,1,['test'],['tested']
Testability,this fixes the TThread tests. # This Pull request:. ## Changes or fixes:; #13068. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13068,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13069:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/13069,2,['test'],"['tested', 'tests']"
Testability,"this is a repeat of https://root-forum.cern.ch/t/std-bitset-streamer-endianness-issue/41529. ---. hi there,. I was adding support for reading/writing `std::bitset<N>` to [groot](https://go-hep.org/x/hep/groot) when I noticed the following behaviour:. ```; $> cat ./Event.h; #ifndef MYEVT_H; #define MYEVT_H 1. #include <bitset>. struct Event {; 	std::bitset<16> Bs;; };. #endif // MYEVT_H. $> cat ./run.C; #include ""Event.h"". void run() {; 	gSystem->Load(""./libEvent.so"");. 	auto f = TFile::Open(""std-bitset.root"", ""RECREATE"");; 	auto t = new TTree(""tree"", ""tree"");. 	int bufsize = 32000;; 	int splitlvl = 99;. 	Event e;; 	e.Bs = std::bitset<16>(""0001010111101010"");. 	t->Branch(""evt"", &e, bufsize, splitlvl);. 	t->Fill();; 	f->Write();; 	f->Close();. 	exit(0);; }. $> root -b -q ./run.C; ```. reading back the file with `groot`, I see the following bit patterns:. ```; $> root-dump testdata/std-bitset.root ; >>> file[testdata/std-bitset.root]; key[000]: tree;1 ""tree"" (TTree); [000][evt]: {[0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0]}; ```. _ie:_ it seems endianness of the bitset isn't handled when writing the bitset (and it's whatever it happens to be on the writing machine).; (I was expecting: `[0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0]` as the on-disk bytes). or are `bitset<N>` values always little-endian encoded?. I was also a bit surprised to see a `std::bitset<N>` to take (N+4)bytes on disk (instead of ""just"" N**bits** +4bytes, or, even, just N**bits**). is there an underlying reason I am missing here? (it's also quite possible I am completely mistaken, of course). thx,; -s; ___; _Please read [tips for efficient and successful posting](https://root-forum.cern.ch/t/tips-for-efficient-and-successful-posting/28292) and [posting code](https://root-forum.cern.ch/t/posting-code-read-this-first/28293)_. ROOT Version: 6.22/02; Built for linuxx8664gcc on Aug 17 2020, 12:46:52; From tags/v6-22-02@v6-22-02; ___",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6412:883,test,testdata,883,https://root.cern,https://github.com/root-project/root/issues/6412,2,['test'],['testdata']
Testability,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8021:1948,Test,TestBody,1948,https://root.cern,https://github.com/root-project/root/issues/8021,2,"['Test', 'test']","['TestBody', 'tests']"
Testability,"ti-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:7035,test,tests,7035,https://root.cern,https://github.com/root-project/root/issues/6939,2,['test'],"['test', 'tests']"
Testability,"time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:4974,test,tests,4974,https://root.cern,https://github.com/root-project/root/issues/9424,2,['test'],"['testBuildDir', 'tests']"
Testability,"timized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash; PATH_FOR_REPRODUCING=/scratch2/root-debug2; mkdir -p ""$PATH_FOR_REPRODUCING""; docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash; ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash; curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh; bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge; source $PWD/mambaforge/bin/activate; mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge; exit; ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash; source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1""; echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp; # These always work; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++; # This crashes under centos:7 but not centos:8; EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:29891,test,test,29891,https://root.cern,https://github.com/root-project/root/issues/9595,5,['test'],['test']
Testability,"tion that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2417,test,test,2417,https://root.cern,https://github.com/root-project/root/pull/8596,1,['test'],['test']
Testability,"tion=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:5431,test,test-products,5431,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:2024,Test,TestProdPdf,2024,https://root.cern,https://github.com/root-project/root/issues/12430,20,"['TEST', 'Test', 'test']","['TEST', 'TestGetPartIntList', 'TestProdPdf', 'test', 'tests']"
Testability,"tlib/; > http://matplotlib.org/xkcd/examples/showcase/xkcd.html; > https://linuxtoosx.blogspot.com/2013/07/create-xkcd-style-graphs-with-gnuplot.html. Basically, matplotlib, a python plotting library has such option.; Of course, plotting such histogram may not be used inside papers but could be used in some presentations. ### Describe alternatives you've considered; For the algorithm used to distord lines, I found these functions that I use in this small macro (they come from http://rfonseca.github.io/xkcd-gnuplot/). ```; #include <TRandom.h>; #include <TF1.h>; #include <TMath.h>;  ; using namespace std;;  ; TRandom *r = nullptr;;  ; double jiggle(double *x, double *par) {; return x[0]*(1.+(2.*r->Uniform()-0.5)*0.015); //Relative +-1.5% (as a fraction of the y value); };  ; double jigglea(double *x, double *par) {; double range = 20.; //Range for the absolute jiggle; return x[0]+range*(2.*(r->Uniform()-0.5)*0.005); //Absolute (as a fraction of the range); };  ; double jiggledCos(double *x, double *par) {; return 5.*TMath::Cos(jiggle(x,par));; };  ; void test() {; r = new TRandom(1234);; TF1 *f = new TF1(""f"",jigglea,-10.,10.);; f->Draw();; TF1 *fcos = new TF1(""fcos"",jiggledCos,-10.,10.);; fcos->SetLineColor(kBlue);; fcos->Draw(""same"");; }; ```. For the font it appears the ""Humor sans"" font does the job (https://github.com/shreyankg/xkcd-desktop/blob/master/Humor-Sans.ttf). This is available under a free licence. ### Additional context; As [stated](https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=84789&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-84789) by @couet, ROOT7 uses the D3 library. This [Github repo](https://github.com/imkevinxu/xkcdgraphs) offers javascript code that uses this library to plot XKCD graph. It is probably a good starting point. Finally, @Axel-Naumann told that it will not be implemented by ROOT team so I opened this ticket to keep track of this request so that it can be implemented by someone else.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6682:1507,test,test,1507,https://root.cern,https://github.com/root-project/root/issues/6682,1,['test'],['test']
Testability,"to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not mer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2222,test,test,2222,https://root.cern,https://github.com/root-project/root/pull/8596,2,['test'],"['test', 'testRooGradMinimizer']"
Testability,"to avoid excessive memory usage, which can lead to issues on machines with a low memory per core. - [v] tested changes locally; - [v] updated the docs (if necessary). Fixes #16252",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16262:104,test,tested,104,https://root.cern,https://github.com/root-project/root/pull/16262,1,['test'],['tested']
Testability,to fix warnings due to an unused variable in non-debug builds. # This Pull request:. ## Changes or fixes:; compilation warnings of TMVA. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13831:158,test,tested,158,https://root.cern,https://github.com/root-project/root/pull/13831,1,['test'],['tested']
Testability,"tor()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 22: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 23: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: 'shouldHaveInfoLoc' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 39: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 40: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 41: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 42: Value assigned to 'dm' in /opt/root_src/io/io/src/TStreamerInfo.cxx:2065; 43: Assuming 'dm' is null in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:110019,Test,TestBit,110019,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Test'],['TestBit']
Testability,"tor()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 22: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 23: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 39: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 40: Calling 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 41: Assuming field 'fClassPtr' is null in /opt/root_src/core/meta/inc/TClassRef.h:74; 42: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClassRef.h:74; 43: Returning point",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:104919,Test,TestBit,104919,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Test'],['TestBit']
Testability,"tor; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:2131,test,test,2131,https://root.cern,https://github.com/root-project/root/pull/12681,4,['test'],['test']
Testability,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:23757,test,tests,23757,https://root.cern,https://github.com/root-project/root/issues/12426,7,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,"torial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:2202,test,test-TestRModelParserKeras,2202,https://root.cern,https://github.com/root-project/root/issues/16553,1,['test'],['test-TestRModelParserKeras']
Testability,"tps://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2321,test,tests,2321,https://root.cern,https://github.com/root-project/root/issues/7936,1,['test'],['tests']
Testability,"tps://github.com/root-project/root/pull/13269 (to support LLVM 16, cf. https://github.com/vgvassilev/clad/pull/589); * [x] https://github.com/root-project/root/pull/13238; * [x] https://github.com/root-project/root/pull/13310; * [x] https://github.com/root-project/roottest/pull/989; * [x] https://github.com/root-project/root/pull/13335; * [x] https://github.com/root-project/roottest/pull/994; * [x] https://github.com/root-project/root/pull/13366; * [x] https://github.com/root-project/root/pull/13448; * [x] https://github.com/root-project/root/pull/13477; * [x] https://github.com/root-project/root/pull/13482; * [x] https://github.com/root-project/root/pull/13782 and / or https://github.com/root-project/root/pull/13785; * [x] https://github.com/root-project/root/pull/13565 (or at least the last commit to remove `isInstantiatedInPCH`); * [x] https://github.com/root-project/root/pull/14110. Things to check:; * [x] Builds on all platforms; * [x] Passes all ROOT tests on all platforms; * [x] Passes Cling test suite (at least on Linux); * [x] Check increase in resource consumption:; * [x] Build directory in `Release` configuration; * [x] Install directory in `Release` configuration; * [x] Size of module files in particular; * [x] Memory requirement; * [x] CPU requirement (time to run all tests). #### Comparison of resource consumption on AlmaLinux 8, GCC 8.5.0, `CMAKE_BUILD_TYPE=Release`. | | `master` | `llvm16` |; | --- | --- | --- |; | `build` (slightly older version) | 1706284 KB = 1.7 GB | 1766156 KB = 1.7 GB |; | `build` (with `testing` + `roottest`, before `ctest`) | 2286436 KB = 2.2 GB | 2366928 KB = 2.3 GB |; | `install` | 704236 KB = 688 MB | 701032 KB = 685 MB |; | `lib/*.pcm` | 312624 KB = 306 MB | 309560 = 303 MB |; | Memory for `./bin/root.exe -q` | 204020 kbytes | 214672 kbytes |; | Memory for `./bin/root.exe -q -e ""std::vector<int> v""` | 235580 kybtes | 251304 kbytes |; | CPU (first `ctest -j12`) | 1284s | 1293s |; | CPU (second `ctest -j12`) | 914s | 911s |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:1165,test,tests,1165,https://root.cern,https://github.com/root-project/root/pull/13273,4,['test'],"['test', 'testing', 'tests']"
Testability,"treamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11425,test,test,11425,https://root.cern,https://github.com/root-project/root/issues/12372,1,['test'],['test']
Testability,tree: Allow parallel run of tests datasetspec (.cxx and .py),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16648:28,test,tests,28,https://root.cern,https://github.com/root-project/root/pull/16648,1,['test'],['tests']
Testability,"ts.root""); ...: df.Describe(); ...: ; Installed ROOT event loop hook.; ---------------------------------------------------------------------------; runtime_error Traceback (most recent call last); Cell In[1], line 3; 1 import ROOT; 2 df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); ----> 3 df.Describe(). runtime_error: ROOT::RDF::RDFDescription ROOT::RDF::RInterfaceBase::Describe() =>; runtime_error: TTree leaf TrackerHitPlanes.covMatrix[6] has both a leaf count and a static length. This is not supported.; ```. ### Generation of the input file. To generate the input file [edm4hep_events.root.gz](https://github.com/root-project/root/files/14365763/edm4hep_events.root.gz) (38K), use the follwing steps. 1. Load the Key4hep environment:; ```console; source /cvmfs/sw.hsf.org/key4hep/setup.sh; ```; 2. Create a plain EDM4hep file, using the unit tests in EDM4hep.; ```console; git clone -b v00-10-05 https://github.com/key4hep/edm4hep /tmp/edm4hep; cmake -B/tmp/edm4hep/build -S/tmp/edm4hep; make -C/tmp/edm4hep/build; ctest --test-dir /tmp/edm4hep/build; ```; 4. The EDM4hep file will be in `/tmp/edm4hep/build/test/edm4hep_events.root`. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 18 2024, 03:09:46 |; | From heads/master@tags/v6-30-02 |; | With g++ (Ubuntu 13.2.0-4ubuntu3) 13.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Various: Key4hep via /cvmfs/sw.hsf.org/, spack. ### Operating system. Linux Ubuntu 22.04. ### Additional context. In a couple of places [1] [2] the breadcrumbs lead to the JIRA tickets https://its.cern.ch/jira/browse/ROOT-9509, however that is for multidimensional arrays. [1]: https://root-forum.cern.ch/t/removing-entire-columns-from-rd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14790:2548,test,test-dir,2548,https://root.cern,https://github.com/root-project/root/issues/14790,1,['test'],['test-dir']
Testability,"tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dicto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:2364,assert,assertion,2364,https://root.cern,https://github.com/root-project/root/issues/13694,1,['assert'],['assertion']
Testability,"ttest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3075,test,test,3075,https://root.cern,https://github.com/root-project/root/issues/7936,1,['test'],['test']
Testability,"tuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5537,Test,Test,5537,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Test'],['Test']
Testability,tutorial-dataframe-df017_vecOpsHEP-py; 1081/1231 Test #1077: tutorial-dataframe-df007_snapshot-py ................................ Passed 9.12 sec; Start 1084: tutorial-dataframe-df019_Cache-py; 1082/1231 Test #1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py .............. Passed 5.30 sec; Start 1085: tutorial-dataframe-df021_createTGraph-py; 1083/1231 Test #1082: tutorial-dataframe-df016_vecOps-py .................................. Passed 4.06 sec; Start 1086: tutorial-dataframe-df024_Display-py; 1084/1231 Test #1083: tutorial-dataframe-df017_vecOpsHEP-py ............................... Passed 3.68 sec; Start 1087: tutorial-dataframe-df026_AsNumpyArrays-py; 1085/1231 Test #1081: tutorial-dataframe-df014_CSVDataSource-py ........................... Passed 7.49 sec; Start 1090: tutorial-dataframe-df031_Stats-py; 1087/1231 Test #1085: tutorial-dataframe-df021_createTGraph-py ............................ Passed 3.08 sec; Start 1091: tutorial-dataframe-df032_MakeNumpyDataFrame-py; 1088/1231 Test #1086: tutorial-dataframe-df024_Display-py ................................. Passed 4.99 sec; 1089/1231 Test #1084: tutorial-dataframe-df019_Cache-py ................................... Passed 6.22 sec; 1090/1231 Test #1090: tutorial-dataframe-df031_Stats-py ................................... Passed 3.39 sec; 1095/1231 Test #1087: tutorial-dataframe-df026_AsNumpyArrays-py ........................... Passed 6.89 sec; 1103/1231 Test #1091: tutorial-dataframe-df032_MakeNumpyDataFrame-py ...................... Passed 6.12 sec. Start 635: tutorial-graphs-timeSeriesFromCSV; Start 636: tutorial-graphs-timeSeriesFromCSV_TDF; 655/1231 Test #635: tutorial-graphs-timeSeriesFromCSV ................................... Passed 0.37 sec; 674/1231 Test #636: tutorial-graphs-timeSeriesFromCSV_TDF ............................... Passed 2.75 sec; Start 1093: tutorial-graphs-timeSeriesFromCSV-py; 1092/1231 Test #1093: tutorial-graphs-timeSeriesFromCSV-py ................................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:13227,Test,Test,13227,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2812,test,test,2812,https://root.cern,https://github.com/root-project/root/issues/16242,1,['test'],['test']
Testability,"tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1760,test,tests,1760,https://root.cern,https://github.com/root-project/root/issues/16553,1,['test'],['tests']
Testability,"txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [ ] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [ ] listLibs pass ROOT_CMD as variable; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059; - [x] Check compress https://github.com/root-project/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966:1525,test,tested,1525,https://root.cern,https://github.com/root-project/root/pull/9966,1,['test'],['tested']
Testability,"typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:1404,test,tested,1404,https://root.cern,https://github.com/root-project/root/issues/13895,1,['test'],['tested']
Testability,"u find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:1294,test,test,1294,https://root.cern,https://github.com/root-project/root/issues/12787,1,['test'],['test']
Testability,"uct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:1657,test,testIntegralDesync,1657,https://root.cern,https://github.com/root-project/root/issues/11578,1,['test'],['testIntegralDesync']
Testability,"ue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probably now deprecated. In particular, `RooTimer` and `RooJSONListFile`, but also strewn around the code there are still some `chrono` includes or other timing remnants. This work was done over the past 5 years at the initiative of Wouter Verkerke @wverkerke under a Netherlands eScience Center grant, with direct code contributions from @vincecr0ft and @ipelupessy on the RooFit side and @roelaaij on ZeroMQ, lots of support from @cburgard, Lydia Brenner and @jiskattema, invaluable design input from @hageboeck and @lmoneta in the final stage of mov",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:6366,benchmark,benchmarking,6366,https://root.cern,https://github.com/root-project/root/pull/8294,2,['benchmark'],"['benchmarking', 'benchmarks']"
Testability,"ue in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 31: Left side of '||' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 32: Execution continues on line 929 in /opt/root_src/io/io/src/TStreamerInfo.cxx:925; 33: 'info' is not equal to null in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 34: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 35: 'info' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 36: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 37: Field 'fClassVersion' is not equal to 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 38: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 39: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 40: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 42: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 43: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 44: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 45: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 46: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 47: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 48: Assuming field 'fOnFileClassVersion' is not equal to 1 in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 49: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 50: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 51: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 52: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 53: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 54: Taking true branch in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:99026,Test,TestBit,99026,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Test'],['TestBit']
Testability,"ue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes; - [x] `RooFitHS3`: Write release notes; - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace; - [x] `Lagrangian morphing`: write about it in the release notes; - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs; - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits; - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478; - [x] https://github.com/root-project/root/pull/9504; - [x] https://github.com/root-project/root/pull/9458; - [x] https://github.com/root-project/root/pull/9553; - [x] https://github.com/root-project/root/pull/9447; - [x] https://github.com/root-project/root/pull/9552; - [x] https://github.com/root-project/root/pull/8784; - [x] https://github.com/root-project/root/pull/9177; - [x] https://github.com/root-project/root/pull/8595; - [x] https://github.com/root-project/root/pull/9444; - [x] https://github.com/root-project/root/pull/9456; - [x] https://github.com/root-project/root/pull/9640; - [x] https://github.com/root-project/root/pull/9482; - [x] https://github.com/root-project/root/pull/9690; - [x] https://github.com/root-project/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9508:1025,test,test,1025,https://root.cern,https://github.com/root-project/root/issues/9508,1,['test'],['test']
Testability,"ue_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView at 0x7f2c6f18e490>. In [5]: ROOT.gROOT.GetVersion(); Out[5]: '6.24/06'; ```. Note that I don't need to use the object in python as such, I just need to pass it to a C++ function that happens to expect a `std::vector<const char*>`, so I do not care about pythonizations. ### Setup. Tested on ROOT 6.24/06 (LCG101), 6.26/00 (LCG102rc1), master (LCGdev3): the pythonization issue does not appear in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11581:2489,test,test,2489,https://root.cern,https://github.com/root-project/root/issues/11581,4,"['Test', 'test']","['Tested', 'test']"
Testability,"ues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:866,Test,Testing,866,https://root.cern,https://github.com/root-project/root/issues/16552,4,"['Test', 'test']","['Test', 'Testing', 'test', 'testPyKerasClassification']"
Testability,"uested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF; ```; the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON; ```; but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via; ```; cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON; ```; and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:; ```; root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo',",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055:1039,test,tests,1039,https://root.cern,https://github.com/root-project/root/issues/14055,1,['test'],['tests']
Testability,"uild/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; ```. It turns out that the failure is implicitly caused by an updated version of GCC (from 11.3 to 11.4). ### Reproducer. Here is a redacted log a sessions exposing the problem:; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-dbg/setup.sh; > root; root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; >; ```. The optimized build, of course, works; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-opt/setup.sh; > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxarm64 on Feb 03 2024, 21:41:03 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; >; ```. It woks also if I use an old container with gcc 11.3:; ```; ssh lxplus-arm.cern.ch; > /cvmfs/lhcb.cern.ch/lib/var/lib/LbEnv/3067/stable/linux-aarch64/bin/apptainer shell -e -B /c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789:1238,Assert,Assertion,1238,https://root.cern,https://github.com/root-project/root/issues/14789,1,['Assert'],['Assertion']
Testability,"ull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration 'size_t strlcat(char*, const char*, size_t)'; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; ~~~. ### Reproducer. Compile root on a system using the latest dev version of glibc, e.g. Fedora Rawhide. ### ROOT version. 6.28.04. ### Installation method. RPM package build (uses mock, i.e. a clean change root environment). ### Operating system. Fedora Rawhide (f39). ### Additional context. See the failures in Fedora's continuous integration test build at:; https://koschei.fedoraproject.org/package/root?collection=f39",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:2452,mock,mock,2452,https://root.cern,https://github.com/root-project/root/issues/13156,2,"['mock', 'test']","['mock', 'test']"
Testability,"um https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/extern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:6565,test,tests,6565,https://root.cern,https://github.com/root-project/root/issues/12957,2,['test'],"['testBuildDir', 'tests']"
Testability,"unc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332; #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename; entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers; entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths; entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode; entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode; entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc; entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558; #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88; #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:23352,test,test,23352,https://root.cern,https://github.com/root-project/root/issues/9595,1,['test'],['test']
Testability,"unct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: master, commit 6018b5fd45; 2. Operating system: SLC7; 3. How you obtained ROOT: built from source. ### Additional context; Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11188:3313,test,test,3313,https://root.cern,https://github.com/root-project/root/issues/11188,2,['test'],"['test', 'testRooFitFunction']"
Testability,"unittests-pyroot-numbadeclare`; * `gtest-tree-dataframe-test-dataframe-friends`; * `gtest-tree-dataframe-test-dataframe-cache`; * `gtest-tree-dataframe-test-dataframe-simple`; * `gtest-tree-dataframe-test-dataframe-snapshot`; * `gtest-tree-dataframe-test-datasource-more`; * `gtest-tree-dataframe-test-datasource-trivial`; * `gtest-tree-dataframe-test-dataframe-concurrency` (`RJittedDefine`); * `pyunittests-dataframe-misc` (`RJittedDefine`); * `pyunittests-dataframe-histograms` (`RJittedDefine`); * `pyunittests-dataframe-cache`; * `pyunittests-dataframe-merge-results`; * `tutorial-dataframe-df019_Cache`; * `tutorial-tmva-tmva003_RReader`; * `tutorial-dataframe-df000_simple-py` (`RJittedDefine`); * `tutorial-dataframe-df002_dataModel-py` (`RJittedDefine`); * `tutorial-dataframe-df003_profiles-py`; * `tutorial-dataframe-df007_snapshot-py` (`RJittedDefine`); * `tutorial-dataframe-df010_trivialDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df014_CSVDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df016_vecOps-py` (`RJittedDefine`); * `tutorial-dataframe-df017_vecOpsHEP-py` (`RJittedDefine`); * `tutorial-dataframe-df019_Cache-py`; * `tutorial-dataframe-df021_createTGraph-py` (`RJittedDefine`); * `tutorial-dataframe-df024_Display-py`; * `tutorial-dataframe-df031_Stats-py` (`RJittedDefine`); * `tutorial-dataframe-df103_NanoAODHiggsAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df105_WBosonAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df106_HiggsToFourLeptons-py` (`RJittedDefine`); * `tutorial-dataframe-df107_SingleTopAnalysis-py` (`RJittedDefine`); * `tutorial-pyroot-pyroot004_NumbaDeclare-py` (`RJittedDefine`); * `tutorial-rcanvas-df105-py` (`RJittedDefine`); ; According to the stack traces, `~RDefineBase` / `~RJittedDefine` calls `RLoopManager::Deregister` on an already freed `RLoopManager`. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007:2027,test,tests,2027,https://root.cern,https://github.com/root-project/root/issues/10007,2,['test'],['tests']
Testability,unittests-pyroot-pyz-rdataframe-asnumpy; Start 55: pyunittests-pyroot-pyz-rdataframe-makenumpy; 134/1231 Test #55: pyunittests-pyroot-pyz-rdataframe-makenumpy ......................... Passed 10.99 sec; 151/1231 Test #54: pyunittests-pyroot-pyz-rdataframe-asnumpy ........................... Passed 23.56 sec; Start 363: gtest-tree-dataframe-test-dataframe-friends; Start 364: gtest-tree-dataframe-test-dataframe-colnames; Start 365: gtest-tree-dataframe-test-dataframe-cache; 388/1231 Test #364: gtest-tree-dataframe-test-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-tes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:1237,test,test-dataframe-interface,1237,https://root.cern,https://github.com/root-project/root/pull/10300,4,"['Test', 'test']","['Test', 'test-dataframe-interface', 'test-dataframe-nodes']"
Testability,"use a more scalable implementation for RooChebychev which allows use of; Chebychev polynomial of arbitrarily high orders; also the extra effort; for every new order used is constant, so the effort (CPU) for evaluating; a RooChebychev grows linearly with the highest order Chebychev order; used, and comes in at only a couple of FLOPS per order (getting the; value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,; otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775:591,test,test,591,https://root.cern,https://github.com/root-project/root/pull/3775,1,['test'],['test']
Testability,"user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. [averbyts@lxplus701 test]$ . ```; ## Expected behavior; No FPE. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TPad.h>; #include <TH1D.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:2313,test,test,2313,https://root.cern,https://github.com/root-project/root/issues/6428,1,['test'],['test']
Testability,utorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec; Start 455: tutorial-dataframe-df008_createDataSetFromScratch; 476/1231 Test #452: tutorial-dataframe-df005_fillAnyObject .............................. Passed 6.60 sec; Start 456: tutorial-dataframe-df009_FromScratchVSTTree; 477/1231 Test #453: tutorial-dataframe-df006_ranges ..................................... Passed 7.33 sec; Start 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455: tutorial-dataframe-df008_createDataSetFromScratch ................... Passed 3.90 sec; Start 458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings; 479/1231 Test #394: gtest-tree-dataframe-test-dataframe-concurrency ..................... Passed 44.21 sec; Start 459: tutorial-dataframe-df014_CSVDataSource; 480/1231 Test #456: tutorial-dataframe-df009_FromScratchVSTTree ......................... Passed 4.16 sec; Start 460: tutorial-dataframe-df015_LazyDataSource; 481/1231 Test #454: tutorial-dataframe-df007_snapshot ................................... Passed 9.31 sec; Start 461: tutorial-dataframe-df016_vecOps; 482/1231 Test #457: tutorial-dataframe-df010_trivialDataSource .......................... Passed 3.32 sec; Start 462: tutorial-dataframe-df017_vecOpsHEP; 483/1231 Test #458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ................. Passed 5.07 sec; Start 463: tutorial-dataframe-df018_customActions; 484/1231 Test #461: tutorial-dataframe-df016_vecOps ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:7980,Test,Test,7980,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,v6-14-00-patches: Fix typo in test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2486:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/2486,1,['test'],['test']
Testability,v6.20 Spurrious change to enable testing jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5646:33,test,testing,33,https://root.cern,https://github.com/root-project/root/pull/5646,1,['test'],['testing']
Testability,v626 core: Disable test for already deleted object.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11405:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/11405,1,['test'],['test']
Testability,va/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2447,log,logger,2447,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,"va\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:1994,test,test,1994,https://root.cern,https://github.com/root-project/root/issues/9487,1,['test'],['test']
Testability,"value ref and finally stores the `DatasetInfo` object as a shallow-reference in the internal `TList` data member `fDataSetInfoCollection`. This data member is not owning, thus at destruction time it will not take care of deleting its items. . https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataSetManager.cxx#L105-L113. At the same time, the `DataSetInfo` object was created with `new` but never deleted. This logic is faulty and is related to the following report by valgrind:. ```; ==290973== Conditional jump or move depends on uninitialised value(s); ==290973== at 0x2C720F3A: TMVA::DataLoader::AddTree(TTree*, TString const&, double, TCut const&, TMVA::Types::ETreeType) (DataLoader.cxx:360); ==290973== by 0x2C72113C: TMVA::DataLoader::AddSignalTree(TTree*, double, TMVA::Types::ETreeType) (DataLoader.cxx:373); ==290973== by 0x4F9573B: ???; ==290973== by 0x4F9107E: ???; ==290973== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:1537,test,testing,1537,https://root.cern,https://github.com/root-project/root/issues/14433,1,['test'],['testing']
Testability,"vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2065,test,test,2065,https://root.cern,https://github.com/root-project/root/pull/11153,1,['test'],['test']
Testability,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 50: 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:813;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:23747,assert,assert,23747,https://root.cern,https://github.com/root-project/root/issues/7531,2,['assert'],['assert']
Testability,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Callin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:18643,assert,assert,18643,https://root.cern,https://github.com/root-project/root/issues/7531,2,['assert'],['assert']
Testability,"verse of 'PQescapeBytea': 'PQescapeBytea' doubles quotes, but 'PQunescapeBytea' doesn't change quotes (doesn't remove added quotes).; So double quotes should be reduced to single ones after the conversion. Otherwise, a bytea field stored in the database has two quotes instead of original single ones.; 2. The solution works for PostgreSQL 8 (except 1. cases), because it escapes special characters with two backslashes, but since PostgreSQL 9.3 the special characters are escaped with one backslash. It means that PQunescapeBytea returns the special characters to original symbols refused by database encoding (UTF8 by default).; e.g. for CREATE TABLE test ( d bytea NOT NULL );; ```; TSQLStatement* stmt = my_db->Statement(""insert into test(d) values ($1)"");; int d = 8332;; stmt->NextIteration();; stmt->SetBinary(0, &d, sizeof(int));; stmt->Process();; ...; stmt = my_db->Statement(""select d from test"");; stmt->Process();; stmt->StoreResult();; while (stmt->NextResultRow()) {; void* mem = 0; Long_t size_mem = 0;; stmt->GetBinary(0, mem, size_mem);; int* val = new int;; memcpy(val, mem, size_mem);; cout<<""Binary size: ""<<size_mem<<"". Int value: ""<<*val<<endl;; }; ```; PostgreSQL 8 works well:. > 8c2000 // before PQescapeBytea; > \\\\214 \\\\000\\\\000 // before PQunescapeBytea; > 5c323134205c3030305c303030 // after PQunescapeBytea; > Binary size: 4. Int value: 8332 // original value. but PostgreSQL 12 refuses to write data:. > 8c2000 // before PQescapeBytea; > \214 \000\000 // before PQunescapeBytea; > 8c2000 // after PQunescapeBytea; > Error in <TPgSQLStatement::Process>: Code: 7 Msg: ERROR: invalid byte sequence for encoding ""UTF8"": 0x8c. I see 3 possible solutions:; 1. Check PostgreSQL version, and if it is higher or equal than 9.3, then exclude; `unsigned char* binary_ptr = PQunescapeBytea((const unsigned char*)escape_ptr, &mxsz);`; Without unescaping bytea data are saved well.; 2. Check PostgreSQL version, and if it is higher or equal than 9.3, then add second backslash, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127:1681,test,test,1681,https://root.cern,https://github.com/root-project/root/issues/7127,1,['test'],['test']
Testability,"ves you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1512,test,test,1512,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,"w_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:3980,test,tests,3980,https://root.cern,https://github.com/root-project/root/issues/12957,4,['test'],"['testBuildDir', 'tests']"
Testability,"we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:8,test,testing,8,https://root.cern,https://github.com/root-project/root/issues/10732,1,['test'],['testing']
Testability,"we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installati",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:1539,test,test,1539,https://root.cern,https://github.com/root-project/root/issues/14186,1,['test'],['test']
Testability,webgui: fix assert condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1248:12,assert,assert,12,https://root.cern,https://github.com/root-project/root/pull/1248,1,['assert'],['assert']
Testability,"weight(""weight"", ""weight"", 0.5, 0.0, 1.0);; auto dataW = std::make_unique<RooDataSet>(""dataW"", ""dataW"", RooArgSet{x, weight}, ""weight"");; for (std::size_t i = 0; i < data->numEntries(); ++i) {; dataW->add(*data->get(i), 0.5); // try weights that are different from unity; }; std::swap(dataW, data); // try to replace the original dataset with weighted dataset; }. std::unique_ptr<RooDataHist> hist{data->binnedClone()};. data->Print();; hist->Print();. // Create template PDF based on data; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, *hist};; RooAddPdf extHistPdf(""extHistPdf"", ""extHistPdf"", histPdf, nEvents);. auto& pdf = extHistPdf;. auto const bm = ""off""; // it should also work work BatchMode(""cpu""). double nllVal01 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Extended(false))}->getVal();; double nllVal02 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Extended(true)) }->getVal();; double nllVal03 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Extended(false))}->getVal();; double nllVal04 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Extended(true)) }->getVal();. double nllVal1 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Offset(""bin""), Extended(false))}->getVal();; double nllVal2 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Offset(""bin""), Extended(true)) }->getVal();; double nllVal3 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Offset(""bin""), Extended(false))}->getVal();; double nllVal4 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Offset(""bin""), Extended(true)) }->getVal();. // The final unit test should also include the SumW2 option in the test matrix. // For all configurations, the bin offset should have the effect of bringing; // the NLL close to zero:; std::cout << ""Unbinned fit : "" << nllVal01 << "" "" << nllVal1 << std::endl;; std::cout << ""Unbinned ext. fit : "" << nllVal02 << "" "" << nllVal2 << std::endl;; std::cout << ""Binned fit : "" << nllVal03 << "" "" << nllVal3 << std::endl;; std::cout << ""Binned ext. fit : "" << nllVal04 << "" "" << nllVal4 << std::endl;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11965:2419,test,test,2419,https://root.cern,https://github.com/root-project/root/issues/11965,2,['test'],['test']
Testability,"welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that ROOT 6.26.10+python3.9 does not have this issue, so maybe some change in the python binding fixed this. Unfortunately I don't ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1254,Test,Tested,1254,https://root.cern,https://github.com/root-project/root/issues/12182,1,['Test'],['Tested']
Testability,when booking Histo1D and Graph.; Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3363:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/3363,1,['test'],['test']
Testability,which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13649:186,test,tested,186,https://root.cern,https://github.com/root-project/root/pull/13649,1,['test'],['tested']
Testability,"will make another PR to integrate properly into the root system.; ## Getting started; Required additional librairies; - ROOT; - for running tests you need Google Tests; - for running benchs, you need Google Benchs and XGBoost. ### Run tests ; Update the makefile in the tests folder, then execute `make clean && make && ./testAll.exe`; At the end of this text is a setup file for a new installation of ubuntu 18.04. ### Code structure; Here below we show the structure of the repository with the files of interest.; .; ├── bench.py; ├── bench.sh; ├── build/; ├── data/; ├── experiments/; │ ├── arrayBdtPreds.cxx; │ ├── data/; │ ├── generate_data.py; │ ├── makefile; │ ├── readme.md; │ ├── run_all.sh; │ └── setup.h; ├── figures/; ├── generated_files/; ├── include/; │ ├── BranchedTree.hxx; │ ├── BranchlessTree.hxx; │ ├── CodeGeneratorsJIT.hxx; │ ├── ForestHelpers.hxx; │ ├── json.hpp; │ ├── RForestInference.hxx; │ └── TreeHelpers.hxx; ├── makefile_bench.make; ├── README.md; ├── run.sh; ├── src/; │ └── benchmark.cxx; ├── tests/; │ ├── build/; │ ├── data/; │ │ ├── events.csv; │ │ ├── model.json; │ │ ├── model.rabbit; │ │ ├── multiclass_events.csv; │ │ ├── multiclass_model.json; │ │ ├── multiclass_model.rabbit; │ │ ├── multiclass_python_groundtruths.csv; │ │ ├── multiclass_python_predictions.csv; │ │ ├── multiclass_python_scores.csv; │ │ ├── python_predictions.csv; │ │ ├── regression_events.csv; │ │ ├── regression_model.json; │ │ ├── regression_model.rabbit; │ │ ├── regression_python_groundtruths.csv; │ │ ├── regression_python_predictions.csv; │ │ ├── regression_python_scores.csv; │ ├── forestBDTest.hxx; │ ├── helpersBDTest.hxx; │ ├── makefile; │ ├── readme.md; │ ├── RegressionBDTest.hxx; │ ├── run_all.sh; │ ├── testAll.cxx; ├── train_classifiers_examples.py; └── utils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everything in the home folder. Please modify for your needs.; ```bash; #!/bin/bash; cd; # can be ran with yes | bash this_file.sh # to say ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:1137,benchmark,benchmark,1137,https://root.cern,https://github.com/root-project/root/pull/4351,1,['benchmark'],['benchmark']
Testability,"wing code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_lzma=ON -Dbuiltin_veccore=ON \; -DXROOTD_ROOT_DIR=~/software/xrootd/4.12.2/x86_64-ubuntu2004-gcc9-opt \; -DTBB_ROOT_DIR=~/software/oneTBB/2020.2/x86_64-ubuntu2004-gcc9-opt \; -DCMAKE_INSTALL_PREFIX=~/software/root/6.20.08/x86_64-ubuntu2004-gcc9-opt ../root-6.20.08/; ninja; ```. ## Setup. As mentioned earlier, I used ROOT 6.20/08 for this particular test. But the behaviour has been like this since forever. I performed the build on Ubuntu 20.04 with GCC 9, but that should make little difference to the overall behaviour. ## Additional context. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:3301,test,test,3301,https://root.cern,https://github.com/root-project/root/issues/6432,1,['test'],['test']
Testability,"wiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:4661,test,test,4661,https://root.cern,https://github.com/root-project/root/pull/13295,1,['test'],['test']
Testability,"with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2411,test,test,2411,https://root.cern,https://github.com/root-project/root/pull/14039,1,['test'],['test']
Testability,"with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] StandardFeldmanCousinsDemo.C; - [ ] StandardFrequentistDiscovery.C; - [ ] StandardHistFactoryPlotsWithCategories.C; - [ ] StandardHypoTestDemo.C; - [ ] StandardHypoTestInvDemo.C; - [x] StandardProfileInspectorDemo.C; - [x] StandardProfileLikelihoodDemo.C; - [ ] StandardTestStatDistributionDemo.C; - [x] TestNonCentral.C; - [x] TwoSidedFrequentistUpperLimitWithBands.C; - [x] Zbi_Zgamma.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758:2410,Test,TestNonCentral,2410,https://root.cern,https://github.com/root-project/root/issues/8758,1,['Test'],['TestNonCentral']
Testability,"x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:4213,test,test-products,4213,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,"x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:8382,test,testing,8382,https://root.cern,https://github.com/root-project/root/issues/12428,2,"['Test', 'test']","['TestInfo', 'testing']"
Testability,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130:1562,stub,stubs-,1562,https://root.cern,https://github.com/root-project/root/issues/11130,7,"['assert', 'log', 'stub']","['assert', 'log', 'stubs', 'stubs-']"
Testability,"xabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; ```; and these:; ```; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3 (found suitable version ""3.11.6"", minimum required is ""3.0"") found components: Interpreter ; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/13:/usr/include/x86_64-linux-gnu/c++/13:/usr/include/c++/13/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-13'; -- Performing Test CXX_HAS_fno_rtti; ```. The last lines of this cmake were:; ```cmake; -- ROOT Configuration . System Linux-6.5.0-15-generic; Processor 2 core Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz (x86_64); Build type Release; Install path /home/<user>/root_install; Compiler GNU 13.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:3292,Test,Test,3292,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Test'],['Test']
Testability,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7187:1384,log,logfile,1384,https://root.cern,https://github.com/root-project/root/issues/7187,6,['log'],"['log', 'logfile']"
Testability,"xec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104; #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395; #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615; #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395; #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:1955,test,tests,1955,https://root.cern,https://github.com/root-project/root/issues/12957,2,['test'],"['testBuildDir', 'tests']"
Testability,"xec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto act",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:6085,test,test-jupyroot,6085,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,"xpected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:1104,test,test,1104,https://root.cern,https://github.com/root-project/root/issues/12427,1,['test'],['test']
Testability,"xperimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOpt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3803,test,tests,3803,https://root.cern,https://github.com/root-project/root/issues/12427,1,['test'],['tests']
Testability,"xternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code causing the core dump; ```; if (rename(localPath, targetPath) != 0){; std::cout << ""File could not be renamed. Copying instead."" << std::endl;; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; remove(localPath.Data());; }; ```; Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```; > root -b -q; ------------------------------------------------------------------; | Welcome to ROOT 6.28/08 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096:1542,test,test,1542,https://root.cern,https://github.com/root-project/root/issues/14096,1,['test'],['test']
Testability,"xx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:3092,test,tests,3092,https://root.cern,https://github.com/root-project/root/issues/12771,2,['test'],"['testBuildDir', 'tests']"
Testability,"xx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 47: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 48: Array access (via field 'fUIDs') results in a null pointer dereference in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Assigned val",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:15456,Test,TestBit,15456,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Test'],['TestBit']
Testability,"y providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2969,log,logic,2969,https://root.cern,https://github.com/root-project/root/pull/14039,1,['log'],['logic']
Testability,y; 1073/1231 Test #1074: tutorial-dataframe-df003_profiles-py ................................ Passed 5.32 sec; Start 1076: tutorial-dataframe-df006_ranges-py; 1074/1231 Test #1072: tutorial-dataframe-df001_introduction-py ............................ Passed 7.77 sec; Start 1077: tutorial-dataframe-df007_snapshot-py; 1075/1231 Test #1075: tutorial-dataframe-df004_cutFlowReport-py ........................... Passed 5.88 sec; Start 1078: tutorial-dataframe-df008_createDataSetFromScratch-py; 1076/1231 Test #1073: tutorial-dataframe-df002_dataModel-py ............................... Passed 8.55 sec; Start 1079: tutorial-dataframe-df010_trivialDataSource-py; 1077/1231 Test #1079: tutorial-dataframe-df010_trivialDataSource-py ....................... Passed 3.14 sec; Start 1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py; 1078/1231 Test #1078: tutorial-dataframe-df008_createDataSetFromScratch-py ................ Passed 3.91 sec; Start 1081: tutorial-dataframe-df014_CSVDataSource-py; 1079/1231 Test #1076: tutorial-dataframe-df006_ranges-py .................................. Passed 7.30 sec; Start 1082: tutorial-dataframe-df016_vecOps-py; Start 1083: tutorial-dataframe-df017_vecOpsHEP-py; 1081/1231 Test #1077: tutorial-dataframe-df007_snapshot-py ................................ Passed 9.12 sec; Start 1084: tutorial-dataframe-df019_Cache-py; 1082/1231 Test #1080: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py .............. Passed 5.30 sec; Start 1085: tutorial-dataframe-df021_createTGraph-py; 1083/1231 Test #1082: tutorial-dataframe-df016_vecOps-py .................................. Passed 4.06 sec; Start 1086: tutorial-dataframe-df024_Display-py; 1084/1231 Test #1083: tutorial-dataframe-df017_vecOpsHEP-py ............................... Passed 3.68 sec; Start 1087: tutorial-dataframe-df026_AsNumpyArrays-py; 1085/1231 Test #1081: tutorial-dataframe-df014_CSVDataSource-py ........................... Passed 7.49 sec; Start 1090: tutorial-dataframe-df031_Sta,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:12053,Test,Test,12053,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,"yload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:2712,assert,assert,2712,https://root.cern,https://github.com/root-project/root/issues/14302,1,['assert'],['assert']
Testability,you can now select how MAKEEXE is building the test executable in cas…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5204:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/5204,1,['test'],['test']
Testability,yroot-pyz-stl-vector (Failed); 	 57 - pyunittests-pyroot-pyz-rtensor (Failed); 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed); 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed); 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed); 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed); 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed); 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed); 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed); 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed); 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed); 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed); 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed); 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed); 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed); 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed); 	252 - gtest-roofit-roostats-test-testSPlot (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while running CTest; `,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:1436,test,test-testRooGradMinimizerFcn,1436,https://root.cern,https://github.com/root-project/root/issues/10409,1,['test'],['test-testRooGradMinimizerFcn']
Testability,"y{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1403,test,test,1403,https://root.cern,https://github.com/root-project/root/issues/8268,1,['test'],['test']
Testability,"zation/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12522,Test,Test,12522,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Test'],['Test']
Testability,"~~TBD: Pretty-printing feature for RVec~~; Pretty printing feature for PyROOT!. **ROOT.VecOps.RVec:**; ```python; >>> v = ROOT.ROOT.VecOps.RVec('float')(3); >>> for i in range(3): v[i] = i; >>> print(v); { 0, 1, 2 }; ```. **std.vector:**; ```python; >>> v = ROOT.std.vector('float')(5); >>> for i in range(len(v)): v[i] = i; >>> print(v); { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }; ```. **std.map:**; ```python; >>> m = ROOT.std.map(""string"", ""int"")(); >>> m[""foo""] = 42; >>> m[""bar""] = -1; >>> print(m); { ""bar"" => -1, ""foo"" => 42 }; ```. **ROOT.RDataFrame:**; ```python; >>> f = ROOT.TFile(""test.root"", ""RECREATE""); >>> tree = ROOT.TTree(""foo"", ""bar""); >>> [do sth with the tree ...]; >>> df = ROOT.RDataFrame(""foo"", ""test.root""); >>> print(df); A data frame built on top of the foo dataset.; ```. **Recursive pretty-printing:**; ```python; >>> v = ROOT.std.vector(""vector<float>"")(2); >>> v[0].push_back(1); >>> v[0].push_back(2); >>> v[1].push_back(-3); >>> v[1].push_back(-4); >>> print(v); { { 1.00000f, 2.00000f }, { -3.00000f, -4.00000f } }; ```. **Uncommon types in STL containers:**; ```python; >>> v = ROOT.std.vector(""TObject"")(2); >>> v[0] = ROOT.TObject(); >>> v[1] = ROOT.TObject(); >>> print(v); { @0x3fbb980, @0x3fbb990 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097:604,test,test,604,https://root.cern,https://github.com/root-project/root/pull/2097,2,['test'],['test']
Testability,"~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9529:2,Test,Test,2,https://root.cern,https://github.com/root-project/root/pull/9529,2,"['Test', 'test']","['Test', 'testing']"
Testability,"~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]; Module ROOTGpadv7 not found.; Module ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:3437,test,test,3437,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,"… IncrementalExecutor. This patch contains two functionality:; 1. Autoloading of dynamic symbols for system headers; There is three kind of symbols in shared object file, which is 1; normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols.; Linker doesn't care about 3, but should take care (of course) 1 and; 2. For system headers, often symbols are defined in .dynsym section; which means they are 2 dynamic symbols. This patch adds support of; autoloading those symbols. We fallback to resolving dynamic symbols; from system headers only if we couldn't resolve from normal symbol; table, as the initialization of header search is expensive (iterating; through all system headers); 2. Register callback from IncrementalExecutor; Previously, LazyFunctionCreatorAutoload was getting callback only; from DynamicLibraryManager::loadLibrary. This was enough for fixing; tests, but is insufficient to handle ""symbol <something> unresolved; while linking function"" errors as those errors are emitted from; IncrementalExecutor. Adding a callback from IncrementalExecutor; enables us to unresolved symbols. It fixes these kind of errors:; `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3017:878,test,tests,878,https://root.cern,https://github.com/root-project/root/pull/3017,1,['test'],['tests']
Testability,"… Windows. This was breaking the Windows build with the following error:; ```; [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]; ```; On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6591:355,test,test,355,https://root.cern,https://github.com/root-project/root/pull/6591,1,['test'],['test']
Testability,"… at the first failure. It works like expected: example of broken test that should be repeated 10 times, it stopped after 1 attempt and rerun second time with coredump https://gist.github.com/oshadura/32ffe755e4f8602a9e6a136992202f50. The feature was requested here: https://github.com/root-project/root/pull/6354",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6354:66,test,test,66,https://root.cern,https://github.com/root-project/root/pull/6354,1,['test'],['test']
Testability,… on histograms. In Debug and RelWithDebInfo builds (when assertions are active) the following; code caused an assertion to fire:. root [0] TEfficiency* eff = new TEfficiency;; root [1] eff->SetUseWeightedEvents();; Info in <TROOT::TEfficiency::SetUseWeightedEvents>: Histograms are filled with weights; root.exe: ../hist/hist/src/TEfficiency.cxx:3593: void TEfficiency::SetUseWeightedEvents(bool): Assertion `fTotalHistogram->GetSumw2N() > 0 && fPassedHistogram->GetSumw2N() > 0' failed. This fixes ROOT-9058.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1183:58,assert,assertions,58,https://root.cern,https://github.com/root-project/root/pull/1183,3,"['Assert', 'assert']","['Assertion', 'assertion', 'assertions']"
Testability,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11005:371,test,tested,371,https://root.cern,https://github.com/root-project/root/pull/11005,1,['test'],['tested']
Testability,"…alizing. When we deserialize a function with noexcept(constant_expression) qualifier the; constant_expression itself might trigger deserialization. Triggering nested; deserializations is not supported in clang. Currently we just removed the assert but this shows problems when we go to; higher version of stl's (such as the one in ubuntu19) which more heavily; rely on constexpr. We segfault in cases where we do equivalent of:; ```; cling::Interpreter *interp = ((TCling*)gCling)->GetInterpreterImpl();; auto& lh = interp->getLookupHelper();; auto diag = cling::LookupHelper::WithDiagnostics;; auto S = lh.findScope(""ROOT::Internal::RDF"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<float>"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<std::vector<float>>"", diag);; ```. This patch delays the unsafe computation of type of the deserialized function; and thus the evaluation of the exception qualifier. This should fix the failing; pyunittests-pyroot-rdataframe-asnumpy nightly on ubuntu 19. The red pill is applying llvm-mirror/clang@5d50602a8de220e1f0bbdd136e9a7be21a1b63c0. This will happen after releasing v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4656:242,assert,assert,242,https://root.cern,https://github.com/root-project/root/pull/4656,1,['assert'],['assert']
Testability,…antities() (#11115). cherry-picked from cd992545ae. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11141:118,test,tested,118,https://root.cern,https://github.com/root-project/root/pull/11141,1,['test'],['tested']
Testability,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15558:133,test,tested,133,https://root.cern,https://github.com/root-project/root/pull/15558,1,['test'],['tested']
Testability,"…ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3160:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/3160,6,['test'],"['test', 'testDetails']"
Testability,…est-time-in-case-annotation. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12663:95,test,tested,95,https://root.cern,https://github.com/root-project/root/pull/12663,1,['test'],['tested']
Testability,…failing tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1657:9,test,tests,9,https://root.cern,https://github.com/root-project/root/pull/1657,1,['test'],['tests']
Testability,"…h when ROOT uses G4 units. # This Pull request:; The PR fixes the computation of the radiation length and nuclear interaction length; which are computed wrongly when ROOT uses in G4 units. ## Changes or fixes:; All in TGeoMaterial.cpp; The fix is based on an initial pull request from Ivana:; https://github.com/root-project/root/pull/9401 ; which did miss the necessary changes for mixtures. Output from constructing Iron from:; ```; 99.5 % Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; 0.5 % Element: C Z=6 N=12.000000 A=12.010700 [g/mole]; ```; - ROOT units:; ```; $> root.exe material_test.C\(\""ROOT\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=0.0271712 index=0; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	1.75666 [cm] ; 		 Interaction Length: 	16.9589 [cm] ; ```; - Geant4 units:; ```; $> root.exe material_test.C\(\""G4\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=0.271712 index=3; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	17.5666 [mm] ; 		 Interaction Length: 	169.589 [mm] ; ```; PDG (https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/iron_Fe.html):; ```; Specific gravity 	 7.874 	g cm-3; Nuclear interaction length 	132.1 	g cm-2 	16.77 	cm; Radiation length 	 13.84 	g cm-2 	1.757 	cm; ```. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060:1333,test,tested,1333,https://root.cern,https://github.com/root-project/root/pull/11060,1,['test'],['tested']
Testability,…ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13685:72,test,tested,72,https://root.cern,https://github.com/root-project/root/pull/13685,1,['test'],['tested']
Testability,"…ied. We cannot merge both codepaths because root.exe should always run with modules; if -Druntime_cxxmodules is specified, however, rootcling enables modules only; if -cxxmodule flag is passed. This patch fixes asserts when ROOT is built in -Druntime_cxxmodules=On but; no -cxxmodule flag is specified (in tree/test for instance).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3622:212,assert,asserts,212,https://root.cern,https://github.com/root-project/root/pull/3622,2,"['assert', 'test']","['asserts', 'test']"
Testability,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5523:233,test,testing,233,https://root.cern,https://github.com/root-project/root/pull/5523,1,['test'],['testing']
Testability,"…nation. Adds support for:; ```python; >>> import cppyy; >>> s1 = cppyy.gbl.std.string(""test""); >>> s2 = ""test""; >>> s1+s2; ```. From:; https://bitbucket.org/wlav/cppyy-backend/commits/ea594f920a9db9f535b6ecfcbd0403210b19aaee; https://bitbucket.org/wlav/cppyy-backend/commits/f16f69c6a515c5d1036e6e950043e1faa5582be0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7072:88,test,test,88,https://root.cern,https://github.com/root-project/root/pull/7072,2,['test'],['test']
Testability,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:1051,log,log,1051,https://root.cern,https://github.com/root-project/root/pull/5001,2,['log'],['log']
Testability,"…overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3734:120,test,tests,120,https://root.cern,https://github.com/root-project/root/pull/3734,1,['test'],['tests']
Testability,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16113:323,test,tested,323,https://root.cern,https://github.com/root-project/root/pull/16113,1,['test'],['tested']
Testability,"…plicitMT on. Move the creation of `TThreadExecutor pool` before the call of `Internal::MakeClusters()`, to make sure it is properly initialized when calling `ROOT::Internal::TPoolManager::GetPoolSize()` (via `ROOT::GetImplicitMTPoolSize()`); This fix a crash with the `gtest-tree-treeplayer-test-treeprocessormt` test on Windows, due to a division by zero at line 224 in `TTreeProcessorMT`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953:292,test,test-treeprocessormt,292,https://root.cern,https://github.com/root-project/root/pull/4953,2,['test'],"['test', 'test-treeprocessormt']"
Testability,"…ply suppress:"". See #11937; for why `-flat_namespace` is bad. This reverts commit a05d4be. (cherry picked from commit 0e03b6a)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12100:192,test,tested,192,https://root.cern,https://github.com/root-project/root/pull/12100,1,['test'],['tested']
Testability,"…sed errors in the incremental tests, update tutorials to Keras 2.x API",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1629:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/1629,1,['test'],['tests']
Testability,…t::GetTypeName. This doesn't impose a potential allocation (or the use of std::string) on the caller unnecessarily. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16695:138,test,tested,138,https://root.cern,https://github.com/root-project/root/pull/16695,1,['test'],['tested']
Testability,"…te record for instantiating its definition. We model the 'inline'ness as being instantiated with the static data member in; order to track whether the declaration has become a definition yet. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@317147 91177308-0d34-0410-b5e6-96231b3b80d8. This patch fixes a problem in cxxmodules and c++17 of the kind:; ```; 1/2 Test #263: tutorial-dataframe-df004_cutFlowReport ......***Failed Error regular expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/str",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:368,Test,Test,368,https://root.cern,https://github.com/root-project/root/pull/4437,1,['Test'],['Test']
Testability,"…to push. ## Changes or fixes:; Adding a call to vector.reserve() to RField.cxx in (almost) all cases where we know the exact number of elements pushed. Saves a bunch of reallocation especially when the number of pushed elements is not strictly bounded (e.g. number of columns, number of subfields). ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15475:322,test,tested,322,https://root.cern,https://github.com/root-project/root/pull/15475,1,['test'],['tested']
Testability,…ve use. This might fix intermittent failure in roottest_root_multicore_tp_process_imt; https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11911/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/; shows crash in:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1339:152,test,testReport,152,https://root.cern,https://github.com/root-project/root/pull/1339,2,['test'],['testReport']
Testability,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11103:344,test,tested,344,https://root.cern,https://github.com/root-project/root/pull/11103,1,['test'],['tested']
Testability,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11080,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11104:344,test,tested,344,https://root.cern,https://github.com/root-project/root/pull/11104,1,['test'],['tested']
Usability," * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1134,simpl,simplest-,1134,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability, 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:6509,simpl,simple,6509,https://root.cern,https://github.com/root-project/root/pull/10300,1,['simpl'],['simple']
Usability," AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In TColor::GetColorTransparent() (see https://root.cern.ch/doc/master/classTColor.html#ae666674d7087b2b709abebde22667c50); a new color is defined each time a transparent color (with alpha channel) is requested. In graphics applications with many transparent objects this leads quickly to exhausting the available index space of colors. At some point the int returned turns negative and the colors displayed are not what they should be. . There does not seem to be a way to reset the entire color space in use by ROOT to simply start over. This would not fix the underlying problem but would at least provide a workaround. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected behavior is that transparent colors are re-used like any other color and no new color index is needed when requesting an already used transparent color again. ; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; type ; TColor::GetColorTransparent(1,0.1); repeatedly on the commandline in ROOT. Each time the function is called a higher integer is returned even though the same transparent color is wanted. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: 6.24/06; OS: linux (opensuse TW); How obtained: self compiled. ### Additional context; <!--; Add any other context about the probl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10299:1111,clear,clear,1111,https://root.cern,https://github.com/root-project/root/issues/10299,1,['clear'],['clear']
Usability," No FPE/crash. ### To Reproduce; simplex.cxx . ```cpp; #include ""Minuit2/FunctionMinimum.h""; #include ""Minuit2/MnUserParameterState.h""; #include ""Minuit2/MnPrint.h""; #include ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1251,simpl,simplex,1251,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability," `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or children). They are meant to be used for building new `RNTuples` through `RNTupleDescriptorBuilder` or during a merge operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:1771,simpl,simplified,1771,https://root.cern,https://github.com/root-project/root/pull/5934,1,['simpl'],['simplified']
Usability," a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context about the problem here.; -->. At least [one user](https://root-forum.cern.ch/t/break-segmentation-violation-for-a-compiled-program/42022/12) could have used a better error message :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:1447,clear,clear,1447,https://root.cern,https://github.com/root-project/root/issues/6743,1,['clear'],['clear']
Usability," add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*da",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:1259,clear,clear,1259,https://root.cern,https://github.com/root-project/root/issues/11578,1,['clear'],['clear']
Usability," addition to disabling the banner, there should be some additional action to preserve the copyright and attribution to Wouter and David in a more useful manner, as well as update it to reflect the huge amount of work that has happened since 2013 (here I would suggest a [`CITATION.cff` file](https://citation-file-format.github.io/). I also think ROOT should get one too, but that's another Issue.). As Wouter doesn't appear to have a GitHub account (**edit**: I'm wrong, he's @wverkerke), I'll tag @egpbos as a public member of the RooFit development team (apologies if I should have tagged someone else) as well as @dkirkby to see if they have any particular thoughts on the matter. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. To trigger the RooFit banner simply run any piece of code that uses any part of RooFit. Example:. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. For the examples I've shown above are using ROOT `v6.24/06` built from source. ```console; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Feb 18 2022, 00:26:00; From tags/v6-24-06@v6-24-06; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. * [ROOT Forum: How to switch off RooFit banner?](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4); * [ROOT Forum: RooFit Banner - can we switch it off somehow?](https://root-forum.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:4260,simpl,simply,4260,https://root.cern,https://github.com/root-project/root/issues/9954,1,['simpl'],['simply']
Usability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3741,undo,undo,3741,https://root.cern,https://github.com/root-project/root/issues/10191,2,['undo'],['undo']
Usability," be added to the Users' Guide.; For example bases in the scenario:. ```cpp; class Position { /* point in 3D space */; public:; Position(float x, float y, float z);; // get Cartesian coordinates; float x();; float y();; float z();; // get spherical coordinates; float r();; float phi();; float theta();; // get pseudorapidity; float eta();; };. class Hit : public Position { /* localized detector signal */; public:; Hit(float energy, float x, float y, float z);; // get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. private:; std::vector< Hit > m_hits;. };; ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:1115,Simpl,Simplest,1115,https://root.cern,https://github.com/root-project/root/issues/14540,1,['Simpl'],['Simplest']
Usability," behavior; All options are documented, and outdated ones are removed. - [x] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb; - [x] .![shell]; - [x] .qqqqq; - [x] "" "" << metaString << ""R [user@]host[:dir] [-l user] [-d dbg] [script]\t- Launch process in a remote host\n""; - [x] "" "" << metaString << ""demo\t- Launch GUI demo\n""; - [x] "" "" << metaString << ""credits\t- Show credits\n""; - [x] "" "" << metaString << ""license\t- Show license\n""; - [x] CTRL+D also works as a way to exit; - [x] CTRL+C can interrupt; - [x] CTRL+Z pauses job; - [x] CTRL+L clear screen; - [x] CTRL+Del Ctrl Left Ctrl Right Ctrol Backspace https://github.com/root-project/root/pull/10091; - [x] CTRL+S for forward search https://github.com/root-project/root/issues/10137; - [x] .exit; - [x] .quit; - [x] .typedef; - [x] .include; - [x] Specify also a new command, e.g. .flags, to show ; - [x] .undo / .U to unload the last n input lines doesn't seem to work; - [x] .O1 to set the optimization level is implemented even if .help says it's not; - [x] Translate 0x1F code etc to key name; - [x] Clarify what .files and .fileEx and .stats mean. ### To Reproduce; `.?`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/web/pull/764; https://github.com/root-project/root/pull/10055",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:1360,undo,undo,1360,https://root.cern,https://github.com/root-project/root/issues/10065,1,['undo'],['undo']
Usability," every computer; program, no matter how complicated, executes a sequence of elementary; arithmetic operations (addition, subtraction, multiplication, division, etc.); and elementary functions (exp, log, sin, cos, etc.). By applying the chain; rule repeatedly to these operations, derivatives of arbitrary order can; be computed automatically, accurately to working precision, and using at; most a small constant factor more arithmetic operations than the original; program. AD is an alternative technique to symbolic and numerical differentiation.; These classical methods run into problems: symbolic differentiation leads; to inefficient code (unless done carefully) and faces the difficulty of; converting a computer program into a single expression, while numerical; differentiation can introduce round-off errors in the discretization; process and cancellation. Both classical methods have problems with; calculating higher derivatives, where the complexity and errors increase.; Finally, both classical methods are slow at computing the partial; derivatives of a function with respect to many inputs, as is needed for; gradient-based optimization algorithms. Automatic differentiation solves; all of these problems, at the expense of introducing more software; dependencies. This patch allows ROOT to interoperate with clad. Namely, users can ask; the interpreter to produce a derivative or a gradient to a known function. An illustrative example code for first order derivative:. root [0] #include ""Math/CladDerivator.h""; root [1] double my_pow2(double x) { return x*x; }; root [2] auto derivative_meta_obj = clad::differentiate(my_pow2, /*wrt 1-st argument*/0);; root [3] derivative_meta_obj.dump();; The code is: double my_pow2_darg0(double x) {; return (1. * x + x * 1.);; }; root [5] derivative_meta_obj.execute(1) // no iterations, at the cost of function call.; (double) 2.0000000. Learn more about clad at https://github.com/vgvassilev/clad. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378:2330,Learn,Learn,2330,https://root.cern,https://github.com/root-project/root/pull/2378,1,['Learn'],['Learn']
Usability," existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.04; 2. Operating system: CentOS7; 3. How you obtained ROOT: ```setupATLAS; lsetup ""root 6.26.04-x86_64-centos7-gcc11-opt""```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963:1214,clear,clear,1214,https://root.cern,https://github.com/root-project/root/issues/10963,2,['clear'],['clear']
Usability," faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:1148,clear,clear,1148,https://root.cern,https://github.com/root-project/root/issues/8474,1,['clear'],['clear']
Usability," for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. ; In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off).; The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; void test_roosimcrash() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);; catThr.addThreshold(1./3, ""v0"", 0);; catThr.addThreshold(2./3, ""v1"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10473:999,clear,clear,999,https://root.cern,https://github.com/root-project/root/issues/10473,1,['clear'],['clear']
Usability," meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:1080,simpl,simple,1080,https://root.cern,https://github.com/root-project/root/pull/11731,1,['simpl'],['simple']
Usability," might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; To avoid it the Simplex builder should not be called for the case when there are no free parameters but instead, ModularFunctionMinimizer::Minimize() should call FCn just once and return ""current state"". And yes, just preempting a question about a fit with zero free parameters. Yes, it is very useful. ; Imagine a set of different models fitted to the data using the same codebase. Some models have 2 free parameters, others 3, but some have 0. And for the last category because if this bug one cannot use simplex from ROOT. (I use migrad).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:3035,Simpl,SimplexBuilder,3035,https://root.cern,https://github.com/root-project/root/issues/6775,3,"['Simpl', 'simpl']","['Simplex', 'SimplexBuilder', 'simplex']"
Usability," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1816,guid,guide,1816,https://root.cern,https://github.com/root-project/root/pull/5151,1,['guid'],['guide']
Usability," non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784:1523,clear,clear,1523,https://root.cern,https://github.com/root-project/root/issues/10784,1,['clear'],['clear']
Usability," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:3521,simpl,simple,3521,https://root.cern,https://github.com/root-project/root/issues/14225,1,['simpl'],['simple']
Usability," of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, Prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:1406,clear,clear,1406,https://root.cern,https://github.com/root-project/root/issues/11421,1,['clear'],['clear']
Usability," oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272:1915,simpl,simple,1915,https://root.cern,https://github.com/root-project/root/issues/11272,1,['simpl'],['simple']
Usability," public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerB",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:1640,clear,clear,1640,https://root.cern,https://github.com/root-project/root/pull/4389,2,['clear'],['clear']
Usability," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1539,intuit,intuition,1539,https://root.cern,https://github.com/root-project/root/issues/12190,1,['intuit'],['intuition']
Usability," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2542,clear,clear,2542,https://root.cern,https://github.com/root-project/root/pull/5502,2,['clear'],"['clear', 'clearing']"
Usability," to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On linux, the center of view moves on the surface of ""R"" just below the mouse, and you can freely rotate about this; On mac, the center moves elsewhere than below the mouse position, showing that the device coordinates are wrongly mapped onto the scene coordinates. ; <img width=""848"" alt=""center_pick_mac"" src=""https://user-images.githubusercontent.com/18400453/213129268-db36b3b4-7ffb-4f65-9d9d-6051296cabf4.png"">. for ray-tracing testing:; root[0] gGeoManager->GetVolume(""R"")->Raytrace();; Linux:; ![r_ray_linux](https://user-images.githubusercontent.com/18400453/213126543-d15c9edb-fb94-460b-855b-9e66256060ad.png); MacBook Air (M1, 2020); <img width=""478"" alt=""r_ray_mac"" src=""https://user-images.githubusercontent.com/18400453/213126640-8c7e6a84-0178-4102-8c93-ec6ed938cbd2.png"">. ### Setup; <!--; 1. ROOT version; 2. Operati",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:1827,Guid,Guides,1827,https://root.cern,https://github.com/root-project/root/issues/12035,1,['Guid'],['Guides']
Usability,""".help"" command, modified to open the online reference guide (generat…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4203:55,guid,guide,55,https://root.cern,https://github.com/root-project/root/pull/4203,2,['guid'],['guide']
Usability,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1891,simpl,simple,1891,https://root.cern,https://github.com/root-project/root/issues/7844,1,['simpl'],['simple']
Usability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:958,learn,learnable,958,https://root.cern,https://github.com/root-project/root/pull/2117,2,['learn'],['learnable']
Usability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:282,Simpl,Simplify,282,https://root.cern,https://github.com/root-project/root/pull/15674,3,"['Simpl', 'clear', 'simpl']","['Simplify', 'clearer', 'simplify']"
Usability,"# Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following reproducer crashes with the stacktrace below (with a debug build of ROOT -- just a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:28,clear,clear,28,https://root.cern,https://github.com/root-project/root/issues/6743,1,['clear'],['clear']
Usability,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9105:358,simpl,simplified,358,https://root.cern,https://github.com/root-project/root/pull/9105,1,['simpl'],['simplified']
Usability,"# This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes.; Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12485:168,Learn,Learning,168,https://root.cern,https://github.com/root-project/root/pull/12485,1,['Learn'],['Learning']
Usability,"# This Pull request:. ## Changes or fixes:. Calling `AsNumpy` on a dataframe (python api) now read `RVec` entries and `std::vector` as `numpy.ndarray` of the corresponding type. The implementation should be practically free besides some type checking. It's not inmediate where to draw the line between what to convert into a `numpy.ndarray`. An `RVec` is clear but I also chose to convert `std::vector`, but not things such as `std::array`. Maybe `std::vector` shouldn't be converted. I haven't updated all the tests related to the conversion of `std::vector` so they are currently failing (I would like to have official confirmation). We could also return a 2D (or N-D) regular array in the case the data is regular. This can be checked also without much overhead and the transformation into a regular array can be done via `numpy.stack`. From the offline discussions we decided that we would leave this final optional step to the user. There are some consequences of these changes: for instance when dealing with string data, if we have a vector of strings of different length, it won't be converted into a numpy array. We could optionaly check for this and return a numpy array of objects. (there is a deprecation warning when you try to make an array from jagged data). In the case where all strings are the same length, the output of `np.asarray` is to convert them into multidimensional arrays of chars, which may not agree with what the user is expecting. Perhaps we could handle the `std::string` case separately but in this case what other cases should we handle separately?. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/7685",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14717:355,clear,clear,355,https://root.cern,https://github.com/root-project/root/pull/14717,1,['clear'],['clear']
Usability,# This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions?. I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14304,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15100:307,feedback,feedback,307,https://root.cern,https://github.com/root-project/root/pull/15100,1,['feedback'],['feedback']
Usability,# This Pull request:. ## Changes or fixes:. I authored PR https://github.com/root-project/root/pull/14690 which updated some .clang-format options which were not compliant with the (atleast) latest schema. Some of these options appear not to work with older version of `clang-format` so I simplify them in this PR. the behaviour should remain the same. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14741:289,simpl,simplify,289,https://root.cern,https://github.com/root-project/root/pull/14741,1,['simpl'],['simplify']
Usability,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16208:595,simpl,simply,595,https://root.cern,https://github.com/root-project/root/pull/16208,1,['simpl'],['simply']
Usability,# This Pull request:. ## Changes or fixes:; - Simplifies the importing of Pandas data frames to RDataFrame. ; - Added tutorial `df035_RDFFromPandas.py` to demonstrate this functionality. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; none,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14844:46,Simpl,Simplifies,46,https://root.cern,https://github.com/root-project/root/pull/14844,1,['Simpl'],['Simplifies']
Usability,"# This Pull request:. ## Changes or fixes:; Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). <!--This PR fixes # -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286:264,simpl,simple,264,https://root.cern,https://github.com/root-project/root/pull/9286,1,['simpl'],['simple']
Usability,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16205:300,simpl,simply,300,https://root.cern,https://github.com/root-project/root/pull/16205,1,['simpl'],['simply']
Usability,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15097:296,guid,guide,296,https://root.cern,https://github.com/root-project/root/pull/15097,2,"['feedback', 'guid']","['feedback', 'guide']"
Usability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:731,simpl,simple,731,https://root.cern,https://github.com/root-project/root/pull/15499,1,['simpl'],['simple']
Usability,"# This Pull request:. ## Changes or fixes:; Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9525:79,guid,guide,79,https://root.cern,https://github.com/root-project/root/pull/9525,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"# This Pull request:. ## Changes or fixes:; Makes PROOF optional and enabled by default with some simple CMake changes. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; There is no issue (yet) to be fixed, this is a PR opened for discussion. It is important to underline that effectively, this PR changes nothing: PROOF is still always built by default and the opt-out option is given not to build it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571:98,simpl,simple,98,https://root.cern,https://github.com/root-project/root/pull/13571,1,['simpl'],['simple']
Usability,"# This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);; * Label nodes now use html, allowing for more custom fonts;; * Colors of different element types were changed to be easier to; distinguish;; * Empty RLoopManager is more clearly indicated;; * Actions which has run are more clearly indicated;; * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9556",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9722:277,clear,clearly,277,https://root.cern,https://github.com/root-project/root/pull/9722,2,['clear'],['clearly']
Usability,# This Pull request:. - Simplifies the `\legacy` interface. It has now only one parameter.; - The text has been rephrased.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9108:24,Simpl,Simplifies,24,https://root.cern,https://github.com/root-project/root/pull/9108,1,['Simpl'],['Simplifies']
Usability,# This Pull request:. - Translated rf_408_RDataFrameToRooFit.C; - Changed signature of constructor to take RooAbsArg by reference.; - Changed ROOT.RooArgList in args to accept a simple Python list. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8705:178,simpl,simple,178,https://root.cern,https://github.com/root-project/root/pull/8705,1,['simpl'],['simple']
Usability,"# This Pull request:. Adds optimized `BulkRead` implementations for RVec of simple types and cardinality fields. Along the way, fixes an issue with RNTuple's handling of adopted RVecs. @eguiraud @vepadulano If RDF relies on the elements of a bulk of RVec<PoD> being all consecutively in memory, we also need to implement `BulkRead` for `RArrayAsRVecField` (#13040). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382:76,simpl,simple,76,https://root.cern,https://github.com/root-project/root/pull/13382,1,['simpl'],['simple']
Usability,# This Pull request:. Allows running named macro from shared library as it was the case with CINT and was documented in users guide.; See https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14772. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813:126,guid,guide,126,https://root.cern,https://github.com/root-project/root/pull/14813,1,['guid'],['guide']
Usability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:630,learn,learn,630,https://root.cern,https://github.com/root-project/root/pull/14178,1,['learn'],['learn']
Usability,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232:209,simpl,simply,209,https://root.cern,https://github.com/root-project/root/pull/15232,3,"['Simpl', 'simpl']","['Simple', 'simple', 'simply']"
Usability,"# This Pull request:. In preparation of multi-cluster prefetching, this PR fixes a few issues with the current I/O scheduling, namely:. - It fixes reading of offset columns where currently it can happen that we are by accident jumping back one cluster. This is due to the fact that in order to get the size of a collection in entry $n$, we have to read elements $n$ and $n-1$ of the offset column. Except when we are at the start of the new cluster, where we can simply read the first offset element in the cluster. - A problem in page coalescing of the file backend. The file backend should ensure that while coalescing page requests to a single read requests, we are not reading more than $x$ percent of the actual required payload. This mechanism was potentially breaking if the gaps between pages were all the same size. That's now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9096:463,simpl,simply,463,https://root.cern,https://github.com/root-project/root/pull/9096,1,['simpl'],['simply']
Usability,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:545,simpl,simplifies,545,https://root.cern,https://github.com/root-project/root/pull/11716,2,['simpl'],['simplifies']
Usability,# This Pull request:. Removes the usage of `llvm::makeArrayRef` in cling and use deduction guides (https://reviews.llvm.org/D140896) instead. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14219,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14221:91,guid,guides,91,https://root.cern,https://github.com/root-project/root/pull/14221,1,['guid'],['guides']
Usability,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844:22,Simpl,Simplified,22,https://root.cern,https://github.com/root-project/root/pull/11844,2,['Simpl'],['Simplified']
Usability,"# This Pull request:. Some lists weren't being cleared when workspace is deleted, leaking lots of memory. (really only the embedded data list from all the RooHistFuncs). Would be nice if this change be added to 6.24 and ideally 6.22 too?. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8844:47,clear,cleared,47,https://root.cern,https://github.com/root-project/root/pull/8844,1,['clear'],['cleared']
Usability,# This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13743:35,simpl,simple,35,https://root.cern,https://github.com/root-project/root/pull/13743,1,['simpl'],['simple']
Usability,"# This Pull request:. While looking at the documentation for split branches, I noticed a direct contradiction in the user guide:. > As of ROOT 4.01/00, only `std::vector` of objects can be split.; > Support for splitting the other type of STL containers will be; > introduced in the near future. vs. > All STL containers are supported. ## Changes or fixes:. As now all STL containers are supported, I remove the bullet discussion the ROOT 4.01/00 state. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551:122,guid,guide,122,https://root.cern,https://github.com/root-project/root/pull/12551,1,['guid'],['guide']
Usability,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9095:344,simpl,simplified,344,https://root.cern,https://github.com/root-project/root/pull/9095,1,['simpl'],['simplified']
Usability,"# This Pull request:; In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13989:214,simpl,simply,214,https://root.cern,https://github.com/root-project/root/pull/13989,1,['simpl'],['simply']
Usability,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10720:424,simpl,simplified,424,https://root.cern,https://github.com/root-project/root/pull/10720,1,['simpl'],['simplified']
Usability,"# This Pull request:; Normally the user needs to use the TBBConfig.cmake that comes with the TBB installation. This is achieved by simply setting the `CMAKE_PREFIX_PATH` the the installation of TBB. In case it is not used, the `FindTBB.cmake` shipped with ROOT is used. In this case a fix has been made to set properly the TBB_VERSION. . ## Changes or fixes:; Issue #8260. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14670:131,simpl,simply,131,https://root.cern,https://github.com/root-project/root/pull/14670,1,['simpl'],['simply']
Usability,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675:145,progress bar,progress bar,145,https://root.cern,https://github.com/root-project/root/pull/8675,1,['progress bar'],['progress bar']
Usability,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13803:279,simpl,simple,279,https://root.cern,https://github.com/root-project/root/pull/13803,2,['simpl'],['simple']
Usability,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8822:214,Guid,Guide,214,https://root.cern,https://github.com/root-project/root/pull/8822,1,['Guid'],['Guide']
Usability,"# This Pull request:; This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739:70,feedback,feedback,70,https://root.cern,https://github.com/root-project/root/pull/13739,1,['feedback'],['feedback']
Usability,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16657:128,simpl,simple,128,https://root.cern,https://github.com/root-project/root/pull/16657,1,['simpl'],['simple']
Usability,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16192:183,simpl,simply,183,https://root.cern,https://github.com/root-project/root/pull/16192,1,['simpl'],['simply']
Usability,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390:334,simpl,simple,334,https://root.cern,https://github.com/root-project/root/pull/16390,1,['simpl'],['simple']
Usability,# This Pull request:; fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15981:64,Simpl,SimplexSeedGenerator,64,https://root.cern,https://github.com/root-project/root/pull/15981,1,['Simpl'],['SimplexSeedGenerator']
Usability,"## Bug description; <!--; A clear and concise description of what you expected to happen.; -->. When running over TTrees, RDF event loops that exhaust all entry ranges specified via `df.Range(..)` quit the event loop early as a performance optimization. RDataSource-based event loops do not, and instead run until the end of the dataset in all cases (performing no processing after Ranges have been exhausted). This yields correct results but wastes CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6455:28,clear,clear,28,https://root.cern,https://github.com/root-project/root/issues/6455,1,['clear'],['clear']
Usability,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11264:227,clear,clear,227,https://root.cern,https://github.com/root-project/root/pull/11264,1,['clear'],['clear']
Usability,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11518:481,simpl,simply,481,https://root.cern,https://github.com/root-project/root/pull/11518,1,['simpl'],['simply']
Usability,"## Describe the bug. I just ran into an issue while trying to use the ATLAS analysis software on the latest version of macOS, with the latest version of Xcode. While trying to load the dictionary of a class whose header includes `<boost/shared_ptr.hpp>`, my test application dies. To simplify things a bit, I put a simple reproducer under: https://github.com/krasznaa/root-boost-dictionary-error With which I see the following:. ```; [bash][eowyn-1]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:284,simpl,simplify,284,https://root.cern,https://github.com/root-project/root/issues/6454,2,['simpl'],"['simple', 'simplify']"
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6397:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6397,4,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);` followed by `ROOT::GetThreadPoolSize()` or `TThreadExecutor::GetPoolSize()` results in the incorrect number of threads reported (hardware concurrency rather than what was set via `tbb::global_control`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `ROOT::GetThreadPoolSize` should report the real TBB thread pool size or the real number of threads that ROOT will use. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This code prints 8 two times on my 8-core workstation, but CPU usage is actually 300%, i.e. TBB's thread pool has size 3 but we ROOT reports 8. ```cpp; #include <ROOT/TThreadExecutor.hxx>; #include <tbb/global_control.h>; #include <tbb/task_scheduler_init.h>; #include <iostream>; #include <TROOT.h>. int main() {; tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);; ROOT::EnableImplicitMT();; std::cout << ROOT::GetThreadPoolSize() << std::endl;; ROOT::TThreadExecutor pool;; std::cout << pool.GetPoolSize() << std::endl;; auto busyLoop = [](int x) { int i = 0; for (; i < 1000000000+x; ++i); return i; };; pool.Foreach(busyLoop, {1,2,3,4,5,6,7,8});; return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6363:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6363,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. In the following reproducer, `t.Scan()` prints values for column `out_x.out_x` but the output is truncated to `out_x.out`, which can be quite confusing for larger trees with nested branches:. ```; root [0] TTree t;; root [1] int x = 42;; root [2] t.Branch(""out_x"", &x); (TBranch *) 0x5559ed5dc4f0; root [3] t.Fill(); (int) 4; root [4] t.Scan(); ************************; * Row * out_x.out *; ************************; * 0 * 42 *; ************************; (long long) 1; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The leaf name in the header of the table should either be just `""out_x""` or be the complete `""out_x.out_x""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6473:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6473,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Jitted Min calls break with RVec columns, although they work fine with scalars and if the RVec type is passed explicitly as a template parameter. Max is not affected. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <ROOT/RDataFrame.hxx> ; #include <ROOT/RVec.hxx> ; ; int main() { ; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return ROOT::RVec<float>{1,2,3}; }); ; df.Max<ROOT::RVec<float>>(""x"").GetValue(); ; df.Min<ROOT::RVec<float>>(""x"").GetValue(); ; df.Max(""x"").GetValue(); ; df.Min(""x"").GetValue(); // this one breaks at runtime ; return 0; ; } ; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.22.02. ## Additional context; <!--; Add any other context about the problem here.; -->. First reported [on the forum](https://root-forum.cern.ch/t/rdataframe-min-function-does-not-compile/41573).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6435:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6435,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. RDF::Display does not search non-top-level TTree branches for regex matches, so `Display(""a.b"")` throw a ""column not found"" exception. The problem is at https://github.com/root-project/root/blob/8c8cefe83a147bf8a88b694426840175615d5065/tree/dataframe/src/RDFInterfaceUtils.cxx#L383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6371:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6371,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reported [on the forum](https://root-forum.cern.ch/t/crash-when-creating-rdataframe-graph/42343/3), with a reproducer. [test3.C](https://root-forum.cern.ch/uploads/short-url/7ZVxQ0j0rgaCf65KgARmFplQGlz.C) + [testtree2.root](https://root-forum.cern.ch/uploads/short-url/bXK8KdWy4gp0xW8iT7zEIXAXJ3V.root) should produce . ![image](https://user-images.githubusercontent.com/10999034/99836526-88665b00-2b66-11eb-8859-7e1b7364487e.png). but instead produce. ![image](https://user-images.githubusercontent.com/10999034/99836547-9025ff80-2b66-11eb-84b5-938b2d212152.png). when the following line is uncommented:. ```; //latestDF = std::make_unique<RNode>(latestDF->Define(""r42"",[](){return 42;}));; ```. Furthermore, `Define`s are displayed out of order, in general, by `SaveGraph`. ### Additional context; <!--; Add any other context about the problem here.; -->. The problem is due to broken logic in the `GetGraph` function of `RAction` and `RFilter`: it loops over a `std::map` of Defines to figure out which have been added between that node and the previous node in the graph, but the loop over the `std::map` is out of order -- this causes both issues, the first because the out of order defines cause misattribution of parent nodes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6853:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6853,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context; Stacktrace; ```; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50; #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79; #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181; #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341; #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306; #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362; #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998; #7 0x00007ffff75db056 in TFile::~TFile (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6527:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6527,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The virtual C++ methods overriden in some python class is ignored in the subsequent subclass. . Simple examples is given in [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15); In short:; - C++ class A, ; - python class B, that inherits from A and override virtual method from A ; - python class C, that inherits from B and override (the same) virual method form A (and B); - python class D, that inherits from B and has empty body . And f one call the method from A, B, C , D ; - for A one gets original C++ behaviour (OK); - for B one gets the overriden behaviour (OK); - for C one gets overriden behaviour defined in C (OK); - for D one gets the original C++ behaviour ( that is not OK) . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It is expected that D picks up the overriden method from class B, as naturally expected for the inheritance pattern . ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Simple gist is [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15). ## Setup. 1. ROOT version 623/01; 2. Operating system CentOS7, lxplus x86, 64-centos7-gcc9-opt. 3. How you obtained ROOT: `dev3/latest` nightly LCG slot,. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6470:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6470,4,"['Simpl', 'clear']","['Simple', 'clear']"
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. With [ROOT-10692](https://sft.its.cern.ch/jira/browse/ROOT-10692) fixed, ROOT now, by default, uses the default C++ standard of the compiler rather than always using C++11. However, due to how our cmake logic is structured, root7 is still turned off by default, even if the default C++ standard used by the compiler was detected to be C++14 or higher. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. With a compiler that defaults to `-std=C++14` or above, a vanilla `cmake path/to/root` should have root7 turned on. ## Additional context; <!--; Add any other context about the problem here.; -->. I think the root cause is that, at the following lines in our main `CMakeLists.txt`, we _first_ include `RootBuildOptions` (which sets root7 to OFF by default because it doesn't detect a high-enough C++ standard) and _then_ we include `CheckCompiler`, which sets our default `CMAKE_CXX_STANDARD` to the compiler default. https://github.com/root-project/root/blob/33458dc53621cf3e685a302a4bf899108aed0d0c/CMakeLists.txt#L128-L134. Moving `include(CheckCompiler)` above `include(RootBuildOptions)` fixes this issue but breaks Windows, because some cmake variable that `CheckCompiler` needs in the case of windows were defined earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6406,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `hadd --help` prints the following:. ```; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge Trees; -O Re-optimize basket size when merging TTree; -v Explicitly set the verbosity level: 0 request no output, 99 is the default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations(use 0 to disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental feature for output trees; -f Gives the ability to specify the compression level of the target file(by default 4) ; -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); -ff The compression level use is the one specified in the first input; -f0 Do not compress the target file; -f6 Use compression level 6. (See TFile::SetCompressionSettings for the support range of value.); TARGET Target file; SOURCES Source files; ```. The options `-fk`, `-ff` and `-f0` are listed in the short usage overview as `[-fk FK] [-ff FF] [-f0 F0] `, but they do not accept a parameter. The docs mention that `-f` controls the compression _level_ of the target file (e.g. 4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6438:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6438,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/relea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6370,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The following code works fine with 6.20.04, but segfaults with 6.22.02. ```cpp; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""TFile.h""; #include ""TTree.h"". int main(int argc, char* argv[]) {; TTree* tree = new TTree(""tree"", ""tree"");; double var = 1;; tree->Branch(""var"", &var, ""var/D"");; tree->Fill();. RooRealVar* roovar = new RooRealVar(""var"", ""var"", 0, 10);; TFile* output_file = new TFile(""test.root"", ""RECREATE"", ""output_file"");. output_file->Print();; RooDataSet* data_set = new RooDataSet(""data_set"", ""data_set"", tree, RooArgSet(*roovar));; output_file->Print();. return 0;; }; ```. The segfault happens on the last `output_file->Print();` line - it seems the creation of the `RooDataSet` somehow destroys the object pointed to by `output_file`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the code to run without segfaulting. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Save the quoted code to `mwe_tfile.cc`; 2. Build with `g++ mwe_tfile.cc -o mwe_tfile $(root-config --cflags --glibs) -lRooFitCore`; 3. Run `./mwe_tfile`. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Ubuntu 18.04; Binary ROOT installs; Works with 6.20.04; Doesn't work with 6.22.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6408:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6408,2,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The problem is visible in the [conda nightly builds](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/), e.g. [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/136/testReport/junit/projectroot.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). JupyROOT tests are red because a new json field `""execution""` is added to the `.ipynb` file. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; It should be enough to install the [ROOT conda nightlies](https://root.cern/install/nightlies/#conda-package), build roottest against them and run one of the JupyROOT tests via ctest. ## Additional context; <!--; Add any other context about the problem here.; -->. I _think_ the reason this problem cropped up is that the version of nbconvert installed by conda (conda-forge channel) was recently bumped from 5.6.1 to 6.0.2. nbformat documents that new `""execution""` field in notebooks as of [8 months ago](https://github.com/jupyter/nbformat/commit/1b6cbffd2ae527354d8b90e17740f823291a8dca). The `nbdiff.py` steering script already filters some lines from the notebooks before diff'ing them, but the introduction of a new json field also changes the surrounding lines, e.g. a closed brace becomes a comma, an extra closing brace is added, and the current filtering mechanism is not able to deal with this, so I am not sure what the best way to proceed would be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6356:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6356,1,['clear'],['clear']
Usability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):; ```; vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq ; Fill: Switching to new file: tbuffermerger_sequential_1.root; Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6; #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6; #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f4fcd15a82a in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/6523,1,['clear'],['clear']
Usability,"## Describe the bug; As discussed in the [ROOT forum](https://root-forum.cern.ch/t/root-memstat-doesnt-work/41455):; WIthout the memstat feature, `root.exe` still offers the `-memstat` option but produced failures like; ```; input_line_11:2:6: error: unknown type name 'TMemStat'; new TMemStat("""",100000,5000000);; ```. ## Expected behavior; If memstat is not part of the build, the memstat option should not be offered or there should be a clearer error message. ## To Reproduce; Steps to reproduce the behavior:; 1. Compile with `cmake -Dmemstat=off`; 2. Run `root -l`. ## Setup; 1. Master; 2. Arch Linux; 3. Built from sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6410:441,clear,clearer,441,https://root.cern,https://github.com/root-project/root/issues/6410,1,['clear'],['clearer']
Usability,"## Describe the bug; Crash.; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; 6248	 tmpGuideLinePad->Delete();; (gdb) bt; #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior; No crash. ## To Reproduce; No working standalone reproducer so far. ## Setup; master ROOT with gcc4.8.5 on CentOS7. ## Additional context; The relevant code is . ```; static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad; if (tmpGuideLinePad) {; if (object == tmpGuideLinePad) { // in case of funny button click combination.; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; return;; }; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; }. ```; Obviously the code if completely ok for a single thread application.; However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6510:916,Guid,Guidelines,916,https://root.cern,https://github.com/root-project/root/issues/6510,1,['Guid'],['Guidelines']
Usability,"## Describe the bug; I store a custom event class in a TTree. Some of the members of the class are arrays (c-style). Accessing the array members works for the first time the GetEntry() is called, but subsequent accesses result in segmentation faults. I am using the ""old"" way of reading the tree (with SetBranchAddress). . One possible workaround might be to use std::array instead of c-style arrays, although I have not fully tested if this works. . ## Expected behavior; Array members of objects in TTrees are accessible via PyROOT as was the case before 6.22. . ## To Reproduce. I attached a MWE (really a minimal failing example), including a script to build/generate a tree/run the offending python scripts (faiing.sh): [mwe.tar.gz](https://github.com/root-project/root/files/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:839,simpl,simple,839,https://root.cern,https://github.com/root-project/root/issues/6468,1,['simpl'],['simple']
Usability,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15309:1505,learn,learning,1505,https://root.cern,https://github.com/root-project/root/issues/15309,1,['learn'],['learning']
Usability,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8684:163,Learn,Learning,163,https://root.cern,https://github.com/root-project/root/pull/8684,1,['Learn'],['Learning']
Usability,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430:176,Learn,Learning,176,https://root.cern,https://github.com/root-project/root/pull/8430,1,['Learn'],['Learning']
Usability,"## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});; ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); ; auto tmain = fmain.Get<TTree>(""main""); ; TFile ffriend(""friend.root"");; auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;; TTreeReader r(tmain); ; while (r.Next()); ++counter;; std::cout << ""should be 10: "" << counter << std::endl;. return 0;; } ; ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp; tmain->Draw(""x""); // fills the histogram with 10 entries; ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus; ```. ## Additional context; <!--; Add any other context about the problem here.; -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6518:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6518,1,['clear'],['clear']
Usability,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:994,Guid,Guide,994,https://root.cern,https://github.com/root-project/root/issues/7308,1,['Guid'],['Guide']
Usability,"## Is your feature request related to a problem? Please describe.; You could call it a ""problem"", yes. What we want basically is to drop out an RooDataSet directly from RDataFrame. There's two ways to do it:; #### Easy way:; - Create a loopable collection of events that drops out of RDF. Could be a std::vector, a snapshot, etc; - One by one, fill those events into RooDataSet à la https://root.cern/doc/master/rf402__datahandling_8C.html; ```c++; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; ```. This is going to be slow, and not so elegant. #### Requires more development, but better:; - RooDataSet should accept collections when you construct it; - Since data is stored in a `std::vector` internally, it could even `std::swap` with an external vector!; - RDataFrame should directly spit out such a collection or it should be easy to connect the two.; - It is clear that MT runs are not trivial, but maybe not a priority.; - @eguiraud what is the easiest to spit out from RDF, which is loopable, maybe even adopt the memory?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7223:1119,clear,clear,1119,https://root.cern,https://github.com/root-project/root/issues/7223,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:705,guid,guidelines,705,https://root.cern,https://github.com/root-project/root/issues/13042,2,['guid'],['guidelines']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215:473,clear,clear,473,https://root.cern,https://github.com/root-project/root/issues/14215,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOption",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:404,simpl,simple,404,https://root.cern,https://github.com/root-project/root/issues/16601,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:322,learn,learn,322,https://root.cern,https://github.com/root-project/root/issues/15212,3,['learn'],['learn']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon?; - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work?. Thank you very much for your time!. ### Reproducer. ```py; import cppyy. cppyy.cppdef('''; // some ""expression"" out of which a std::function can be constructed; template <typename Fn> struct expression {; using function_type = decltype(std::function(std::declval<Fn>()));; };. // some ""equation"" specialized to handle such expressions; template <typename T> class equation;; template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function; template <typename Fn> struct deduce_equation;; template <typename Ret, typename... Args>; struct deduce_equation<std::function<Ret(Args...)>> {; using type = equ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062:349,simpl,simply,349,https://root.cern,https://github.com/root-project/root/issues/15062,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15919:338,simpl,simply,338,https://root.cern,https://github.com/root-project/root/issues/15919,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:689,clear,clear,689,https://root.cern,https://github.com/root-project/root/issues/14571,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker.; Unfortunately this is not the case.; The marker 4 (""kCircle"") behaves properly, though.; A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp; {; const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32; TGraphErrors *g1 = new TGraphErrors(1);; g1->SetMarkerStyle(4); // error bars clearly visible; g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);; TGraphErrors *g2 = new TGraphErrors(1);; g2->SetMarkerStyle(m); // marker covers error bars; g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);; TGraphErrors *g3 = new TGraphErrors(1);; g3->SetMarkerStyle(4); // error bars clearly visible; g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);; TGraphErrors *g4 = new TGraphErrors(1);; g4->SetMarkerStyle(m); // marker covers error bars; g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);; TMultiGraph *mg = new TMultiGraph();; mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);; mg->GetXaxis()->SetLimits(0., 1.);; mg->SetMinimum(0.); mg->SetMaximum(1.);; mg->Draw(""AP"");; }; ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14549:243,clear,clearly,243,https://root.cern,https://github.com/root-project/root/issues/14549,4,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TH2Poly.h>; #include <TCanvas.h>; #include <string>. int main(); {; ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""); .Define(""b2"", ""(double) rdfentry_ * rdfentry_""); .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};; c.cd();. filled->Draw(""colz"");. c.Draw();; c.SaveAs(""rdf_fill_th2poly.png"");; }; ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’; 298 | fObjects[i] = new HIST(*fObjects[0]);; | ^~~~~~~~~~~~~~~~~~~~~~; In file included from rdf_fill_th2poly.cpp:2:; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:; 66 | class TH2Poly : public TH2 {; ```. Is it possible to add it ?. Cheers,; Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14548:144,simpl,simple,144,https://root.cern,https://github.com/root-project/root/issues/14548,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello, . I am creating this issue because I found a bug in the `TFileMerger` class in case there is a single input file provided and the user is requesting producing an output with only some objects from that input file. . Tagging @pcanal on that issue. . A simple standalone bug reproducer is provided below. ; In the script `numTest` can be set to `0` or `1` . The case `numTest=0` allows illustrating the bug: ; The input file `myFileWithHists.root` is created with 4 histograms: `hist1`, `hist2`, `hist3` and `hist4`. ; The `TFileMerger` object should create a file `myExclusiveFile.root` and is required to only copy `hist1`, `hist2`. ; But instead the full file is copied and `myExclusiveFile.root` contains all histograms. ; ```; selectiveHadd Source file 1: myFileWithHists.root; [TFile::Cp] Total 0.00 MB	|====================| 100.00 % [6.7 MB/s]. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x562d3abbe360; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; KEY: TH1F	hist3;1	hist3; KEY: TH1F	hist4;1	hist4; root [2] ; ```. The case `numTest=1` is a way to avoid this bug. ; One can create a dummy empty file and add it as input file of the `TFileMerger` so that there is 2 input files the one of interest + the dummy empty one . ; In that case as requested only `hist1` and `hist2` are found in the `myExclusiveFile.root` file.; ```; selectiveHadd Source file 1: myFileWithHists.root; Creating a dummy empty file to avoid a bug in TFileMerger class: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Source file 2: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Target path: myExclusiveFile.root:/. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:333,simpl,simple,333,https://root.cern,https://github.com/root-project/root/issues/13359,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello, . I am creating this issue because there is a bug when setting an entry list that has already been used to a `TTree`.; The entry number returned by `tree->GetEntryNumber(index)` are messed up until that function is called 2 times in a row for the same index. You can find a standalone simple reproducer of the bug below. . In that code by setting `numTest` to `0`, `1` or `2` you will obtain the different print below. ; With that example by calling `tree->GetEntryNumber(index)` it should return the value `index` ; e.g. `tree->GetEntryNumber(2)` should return `2`. However until the `GetEntryNumber()` function has not been called 2 times for the same index then the returned entry number is NOT the expected one. . Here it is simple to solve the issue i.e. not call `entryList->GetEntry(15);` before setting the entry list to the tree ; but I find this behaviour really error prone as one would need to be sure the entry list has never been used basically. . On the other hand using the copy constructor allows not having this issue because I think the `fLastIndexQueried` is reset to `-1` ; ```; tree->SetEntryList( new TEntryList(*entryList) );; ``` . Tagging @pcanal and @Axel-Naumann . For `numTest=0`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; ```; For `numTest=1`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(1)=1; tree->GetEntryNumber(1)=1; ```; For `numTest=2`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(2)=18; tree->GetEntryNumber(2)=2; tree->GetEntryNumber(2)=2; ```. ### Reproducer. ```C++; #include ""TFile.h""; #include ""TTree.h""; #include ""TError.h""; #include ""TEntryList.h"". #include<string>; #include<vector>; #include<iostream>. // function defined after main ; void createTree(const std::string &outputFile);. int main(){; ; // number of the test ; /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13338:367,simpl,simple,367,https://root.cern,https://github.com/root-project/root/issues/13338,2,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731:589,clear,clearer,589,https://root.cern,https://github.com/root-project/root/issues/13731,2,['clear'],"['clearer', 'clearly']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161:175,simpl,simple,175,https://root.cern,https://github.com/root-project/root/issues/15161,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:623,simpl,simply,623,https://root.cern,https://github.com/root-project/root/issues/15079,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15442:238,simpl,simply,238,https://root.cern,https://github.com/root-project/root/issues/15442,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:132,simpl,simple,132,https://root.cern,https://github.com/root-project/root/issues/13749,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15686:336,simpl,simple,336,https://root.cern,https://github.com/root-project/root/issues/15686,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087:478,guid,guide,478,https://root.cern,https://github.com/root-project/root/issues/16087,3,['guid'],['guide']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16064:688,simpl,simple,688,https://root.cern,https://github.com/root-project/root/issues/16064,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14277:1224,simpl,simple,1224,https://root.cern,https://github.com/root-project/root/issues/14277,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line; https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231; is wrong and leads to a runaway loop until it reaches the limit.; The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm.; The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ?. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13110:386,simpl,simply,386,https://root.cern,https://github.com/root-project/root/issues/13110,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:1176,simpl,simply,1176,https://root.cern,https://github.com/root-project/root/issues/15318,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964:572,simpl,simple,572,https://root.cern,https://github.com/root-project/root/issues/15964,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour?. `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce?. n/a. ### ROOT version. master. ### How did you install ROOT?. custom build. ### Which operating system are you using?. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12960:238,simpl,simplifying,238,https://root.cern,https://github.com/root-project/root/issues/12960,1,['simpl'],['simplifying']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as; `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour?. If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce?. Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT?. custom build. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13017:151,progress bar,progress bar,151,https://root.cern,https://github.com/root-project/root/issues/13017,2,['progress bar'],['progress bar']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:; ```; Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour?. Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce?. Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash; root@2cd219ab253b:~/data# root --version; ROOT Version: 6.28/04; Built for linuxx8664gcc on May 24 2023, 17:37:00; From tags/v6-28-04@v6-28-04; root@2cd219ab253b:~/data# root -l workspace_example.root; root [0]; Attaching file workspace_example.root as _file0...; (TFile *) 0x402fde6770; root [1] minimal_example->PrintXML(); Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. ### ROOT version. 6.28/04. ### How did you install ROOT?. custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using?. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967:709,clear,clear,709,https://root.cern,https://github.com/root-project/root/issues/12967,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```; root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root [0] Electrons_All->Draw(""pt__NOSYS""); ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```; wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root -l test_ntuples_200123.root ; ```. takes 0.6s. ### What is the expected behaviour?. _No response_. ### How to reproduce?. See original report. ### ROOT version. 6.26.10. ### How did you install ROOT?. Does not matter. ### Which operating system are you using?. Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018:233,simpl,simply,233,https://root.cern,https://github.com/root-project/root/issues/13018,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). ; This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot.; Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour?. The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce?. On macOS using Instruments one can do:; ; ```bash; xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root; open root.trace; ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT?. ALICE build environment. ### Which operating system are you using?. macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000:93,simpl,simple,93,https://root.cern,https://github.com/root-project/root/issues/13000,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Describe the bug; A range object that return different types for `begin()` and `end()`(A.K.A. not a [common-range](https://en.cppreference.com/w/cpp/ranges/common_range)) fails to check if the types is printable. ### Expected behavior; `printValue_impl<CollectionType>` must not have hard error whether `CollectionType` is printable or not. ### Reproducer. I'm using C++14 library that provide [`vccc::views::iota`](https://github.com/visualcamp/vccc/blob/6080acb71122f984293c38f17412ceb085f43b02/include/vccc/__ranges/views/iota_view.hpp#L434-L445) that models [`std::views::iota`](https://en.cppreference.com/w/cpp/ranges/iota_view).; The standard defines that It returns different type for sentinel if it models unbounded `iota_view`. Anyway, detailed description is not really necessary because the fix is really simple and intuitive. #### Input line; ```c++; vccc::views::iota(10) | vccc::views::take(4); ```; #### Output; ```c++; In file included from input_line_11:1:; In file included from /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:16:; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:224:7: error: 'auto' deduced as 'counted_iterator<I>' (aka 'counted_iterator<vccc::ranges::iota_view<int, vccc::unreachable_sentinel_t>::iterator>') in declaration of 'iter' and deduced as 'sentinel<true>' in declaration of 'iterEnd'; auto iter = obj->begin(), iterEnd = obj->end();; ^ ~~~~~~~~~~~~ ~~~~~~~~~~; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:241:39: note: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; return collectionPrinterInternal::printValue_impl(obj);; ^; /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:49:39: note: in instantiation of function template specialization 'cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14966:896,simpl,simple,896,https://root.cern,https://github.com/root-project/root/issues/14966,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Class `TProcessEventTimer` is async timer and used inside `TTreePlayer::Process()` method to enable events processing during `TTree::Draw()`. Main problem - all data handling in the `THttpServer` performed inside `THttpTimer` handler - including `TTree::Draw()` invoked from `RBrowser`. So to say one cannot initiate async timer inside sync timer handler. There is simple solution. In `TUnixSystem::DispatchTimers(Bool_t mode)` one should change line 2947:; https://github.com/root-project/root/blob/master/core/unix/src/TUnixSystem.cxx#L2947; ```; fInsideNotify = !mode; ; ```. Means handling of ""normal"" sync timers is not dangerous and do not block functionality to reset async timer inside ; `TUnixSystem::ResetTimer` which implemented as:. ```; void TUnixSystem::ResetTimer(TTimer *ti); {; if (!fInsideNotify && ti && ti->IsAsync()); UnixSetitimer(NextTimeOut(kFALSE));; }; ```. Another solution - let process `THttpServer` events differently - not in the `THttpTimer` handler. ; But this means extension of `TSystem::DispatchOneEvent` method. Like adding generic event handlers called every time `gSystem->ProcessEvents()` is called. . ### Reproducer. Not provided. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13224:440,simpl,simple,440,https://root.cern,https://github.com/root-project/root/issues/13224,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Dear experts,; since ROOT 6.30 I have encountered an issue when calling simple functions inside a `TTree::Scan`. For example, if I consider a function whose prototype is ; `int func(int a)`; and call it in a `TTree::Scan`; `t->Scan(""func(myBranch)"")`. it will always be called with 0 as argument. This happens also when passing a constant argument (`t->Scan(""func(2)"")`). This issue doesn't appear in root 6.28. Cheers,; Marino. ### Reproducer. To reproduce the bug just call the `test()` function in the following piece of code; ```; root[] .L filename.C; root[] test(); ```. If this macro is run with root 6.28, the `cout` in `testfunc` will correctly print the values of the branches and `testfunc` column in the Scan will show the correct output of the formula `a+b*c`. When run with ROOT 6.30, the `cout` will print `0 0 0` and the `testfunc` column will always be 0. ```; #include <iostream>; #include <string>; #include <TFile.h>; #include <TTree.h>. using namespace std;. float testfunc(int a, int b, float c); {; cout << a << "" "" << b << "" "" << c << endl;; return a + b * c;; }. void createTree(const string &filename); {; cout << ""Creating tree in file "" << filename << endl;; TFile *f = TFile::Open(filename.c_str(), ""RECREATE"");; TTree *t = new TTree(""t"", ""t"");; int a;; int b;; float c;; t->Branch(""a"", &a, ""a/I"");; t->Branch(""b"", &b, ""b/I"");; t->Branch(""c"", &c, ""c/F"");; for (int i = 0; i < 10; ++i); {; a = i;; b = i + 1;; c = i + 2;; t->Fill();; }; t->Write();; f->Close();; cout << ""Tree created"" << endl;; }. void runExampleScan(const string &filename); {; cout << ""Running example scan"" << endl;; TFile *f = TFile::Open(filename.c_str());; TTree *t = (TTree *)f->Get(""t"");; t->Scan(""a:b:c:testfunc(a,b,c)"", """", ""colsize=20"");; delete t;; delete f;; }. void runExampleDraw(const string &filename); {; gROOT->SetBatch();; TCanvas *c = new TCanvas(""c"", ""c"", 800, 600);; cout << ""Running example draw"" << endl;;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14405:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/issues/14405,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a ROOT file structured with top-level directories A and B, it seems that if B contains a subdirectory also named A the objects in that subdirectory may fail being properly merged when using **_hadd_**; instead the outcome is a simple copy of the object in the first source file... The getDirectory() helper in TFilerMerger::MergeOne() indeed apparently favours a lookup based on the directory name and not the full path, which may not always pick the intended directory:; https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/io/io/src/TFileMerger.cxx#L548. ### Reproducer. Save self-contained script below to mwe.cxx and execute with **_root -l -b -q mwe.cxx++_**; ```; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TH1D.h""; #include <iostream>. void createSrcFile(const char* name); {; TFile f(name, ""RECREATE"");; f.mkdir(""A"", """");; f.mkdir(""B/A"", """");; f.mkdir(""C/D/A"", """");; f.cd(""A"");; TH1D h1(""H1"", ""H1"", 1, 0., 1.);; h1.SetBinContent(1, 1);; h1.Write();; f.cd(""B/A"");; TH1D h2(""H2"", ""H2"", 1, 0., 1.);; h2.SetBinContent(1, 10);; h2.Write();; f.cd(""C/D/A"");; TH1D h3(""H3"", ""H3"", 1, 0., 1.);; h3.SetBinContent(1, 100);; h3.Write();; f.Close();; }. void check(const char* filename, const char* deco); {; TFile f(filename, ""READ"");; std::cout << deco; 	 << f.Get<TH1D>(""A/H1"")->GetBinContent(1); 	 << "" ""; << f.Get<TH1D>(""B/A/H2"")->GetBinContent(1); 	 << "" ""; 	 << f.Get<TH1D>(""C/D/A/H3"")->GetBinContent(1); 	 << std::endl;; f.Close();; }. void mwe(); {; createSrcFile(""src1.root"");; createSrcFile(""src2.root"");; TFileMerger mg;; mg.AddFile(""src1.root"", kFALSE);; mg.AddFile(""src2.root"", kFALSE);; mg.OutputFile(""dest.root"", kTRUE);; mg.Merge();; check(""src1.root"", "" "");; check(""src2.root"", ""+ "");; std::cout << ""------------\n"";; check(""dest.root"", ""= "");; }; ```. ### ROOT version. 6.32.02. ### Installation method. lxplus native. ### Operating system. RHEL 9.4. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16190:306,simpl,simple,306,https://root.cern,https://github.com/root-project/root/issues/16190,1,['simpl'],['simple']
Usability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly.; The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13719:113,clear,clearly,113,https://root.cern,https://github.com/root-project/root/issues/13719,1,['clear'],['clearly']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13910:194,clear,clear,194,https://root.cern,https://github.com/root-project/root/issues/13910,1,['clear'],['clear']
Usability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. If load canvas with ratio plot from the file and then simply close it - ROOT crashes. ### Reproducer. root -l -b https://jsroot.gsi.de/files/ratioplot.root -e 'ratioplot1->Draw(); ratioplot1->Close();' . ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855:129,simpl,simply,129,https://root.cern,https://github.com/root-project/root/issues/14855,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the first stack histogram has negative bin content - it will not be shown automatically.; The only chance to see negative bins is to set min/max values for THStack. . `df106` macro draws such a stack and one bin is hidden from the drawing. ### Reproducer. Here is a simple reproducer macro:; [hstack.C.txt](https://github.com/user-attachments/files/15551454/hstack.C.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux, Mac ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15740:344,simpl,simple,344,https://root.cern,https://github.com/root-project/root/issues/15740,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:152,simpl,simple,152,https://root.cern,https://github.com/root-project/root/issues/15474,2,"['responsiv', 'simpl']","['responsive', 'simple']"
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. OpenGL isn't working at least for the following versions of macosx and command line tools when compiled from source.; The issue was also seen for some older macosx versions and for me it is not clear if this is problem of the macosx or XCode version and with which version it was introduced. The problem is seen with ROOT 6.30.08 as well as the latests 6.32.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523:269,clear,clear,269,https://root.cern,https://github.com/root-project/root/issues/16523,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here.; There is templated C++ class A; and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:; - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085:127,simpl,simple,127,https://root.cern,https://github.com/root-project/root/issues/15085,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380:551,simpl,simply,551,https://root.cern,https://github.com/root-project/root/issues/16380,1,['simpl'],['simply']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Simple latex `g^{*}` with symbol font is not correctly stored in the PDF file.; ```; auto l = new TLatex(0.5, 0.5, ""g^{*}"");; l->SetTextFont(122);; l->SetTextAlign(22);; l->SetTextSize(0.2);; ```. ### Reproducer. [latex1.cxx.txt](https://github.com/user-attachments/files/17132728/latex1.cxx.txt). ![c1](https://github.com/user-attachments/assets/79403060-5242-41ea-81b5-545df114afa8). [c1.pdf](https://github.com/user-attachments/files/17132733/c1.pdf). ### ROOT version. Master branch. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16527:75,Simpl,Simple,75,https://root.cern,https://github.com/root-project/root/issues/16527,1,['Simpl'],['Simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples).; Typically for this task I make a loop over RooPlot components and ""sum"" them manually.; To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects.; I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion ; from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/; The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15052:676,simpl,simple,676,https://root.cern,https://github.com/root-project/root/issues/15052,2,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The event weight obtained from `TGenPhaseSpace::Generate()` that is used to get a flat distribution is not normalized to 1. The number rather seems to correspond to the square of the portion of the phase space occupied by the kinematically allowed final states, e.g., for three massless particles, the shape is a triangle that occupies 1/2 of the m_{12}^2 and m_{23}; ^2 ranges, and the normalization is indeed 1/4 (instead of 1). Maybe this is a feature and not a bug, but it should be documented in the `TGenPhaseSpace::Generate()` method. It would also be useful to have a method that returns the correct event weight. At the moment, in order to get a correctly normalized weight, one can run a Monte Carlo to obtain an overall normalization of the distribution for chosen masses and then apply this normalization as a correction on individual weights of generated events. ### Reproducer. A simplest example can be the tutorial macro: [PhaseSpace.C](https://root.cern.ch/doc/master/PhaseSpace_8C.html). ### ROOT version. Present in v6.30 but the behavior was the same in v5 and possibly before. ### Installation method. built from source. ### Operating system. Probably all systems (tested on Linux Centos 7, Centos 8, Rocky 9, macOS Sonoma 14). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14765:969,simpl,simplest,969,https://root.cern,https://github.com/root-project/root/issues/14765,1,['simpl'],['simplest']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:519,simpl,simple,519,https://root.cern,https://github.com/root-project/root/issues/14171,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16178:414,simpl,simple,414,https://root.cern,https://github.com/root-project/root/issues/16178,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:156,Simpl,SimpleCollectionProxy,156,https://root.cern,https://github.com/root-project/root/issues/13568,1,['Simpl'],['SimpleCollectionProxy']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp; root [0] g=TF1(""gaus""); Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477.; ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13965:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/issues/13965,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15323:121,progress bar,progress bar,121,https://root.cern,https://github.com/root-project/root/issues/15323,3,['progress bar'],['progress bar']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13927:338,Simpl,Simple,338,https://root.cern,https://github.com/root-project/root/issues/13927,1,['Simpl'],['Simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13675:699,simpl,simple,699,https://root.cern,https://github.com/root-project/root/issues/13675,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When having fields with mixed STL types sometimes you run into issues when trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534:832,clear,clear,832,https://root.cern,https://github.com/root-project/root/issues/15534,1,['clear'],['clear']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16119:727,simpl,simple,727,https://root.cern,https://github.com/root-project/root/issues/16119,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13689:82,simpl,simple,82,https://root.cern,https://github.com/root-project/root/issues/13689,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. ATLAS is seeing a number of unit test failures in the dev4LCG/el9 nightlies; (which use root-6.28.00-patches); that are linked to trying to operate on Eigen objects from pyroot.; I've managed to reduce this to a simple, standalone example, which reveals; that the issue has to do with a template overload for operator(). The reproducer is in the attached archive. The included setup script; should be appropriate for lxplus9.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it crashes with a segmentation violation. From gdb, the stack trace is:. ```; #0 0x00007ffff7558f13 in std::construct_at<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__location=0x5f3a3a676e697274); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_construct.h:97; #1 0x00007ffff75588c3 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (; __p=0x5f3a3a676e697274, __a=...); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/alloc_traits.h:539; #2 std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff75ba167, __x=@0x7fffffff7c40: 0x73abec0); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_vector.h:1281; #3 0x00007ffff75624a9 in CPyCppyy::CPPOverload::AdoptMethod (; this=0x7ffff75fe9a0 <CPyCppyy::TemplateProxy_Type>, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:946; #4 0x00007ffff759fb6a in CPyCppyy::TemplateProxy::AdoptMethod (; this=0x7fffd65c01f0, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #5 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410:293,simpl,simple,293,https://root.cern,https://github.com/root-project/root/issues/13410,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14156:596,simpl,simple,596,https://root.cern,https://github.com/root-project/root/issues/14156,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15370:616,clear,clearExportKeys,616,https://root.cern,https://github.com/root-project/root/issues/15370,1,['clear'],['clearExportKeys']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:; [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```; ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309); ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02); ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16121:170,simpl,simple,170,https://root.cern,https://github.com/root-project/root/issues/16121,1,['simpl'],['simple']
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13709:187,simpl,simplicity,187,https://root.cern,https://github.com/root-project/root/issues/13709,2,"['clear', 'simpl']","['clear', 'simplicity']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. It is not clear what `root macro_C.so` does. It should be documented in these places:; - [x] https://github.com/root-project/web/blob/main/manual/root_macros_and_shared_libraries/index.md; - [x] https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] https://github.com/root-project/root/blob/master/interpreter/cling/lib/MetaProcessor/MetaSema.cpp; - [x] core/base/src/root-argparse.py; - [x] TApplication.cxx if there is a custom change wrt cling. It's not clear if the call should also auto-run the macro or not like .x; Maybe it's an old remnant of CINT. Or maybe it should run it and right now there is a bug and it does not. The only documented place seems to be: page 27 [of this document](https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf) and it's not working on master. ### Reproducer. https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://root-forum.cern.ch/t/cannot-run-shared-object-in-batch-mode/58213",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14772:85,clear,clear,85,https://root.cern,https://github.com/root-project/root/issues/14772,4,"['clear', 'guid']","['clear', 'guide', 'guides']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15156:278,clear,clear,278,https://root.cern,https://github.com/root-project/root/issues/15156,2,['clear'],"['clear', 'clearly']"
Usability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The RNTuple file backend should store streamer info records for the types stored in the ntuple in the hosting ROOT file. This will fix `TFile::MakeProject` wrt. RNTuple. ~~A field visitor is probably the right approach to collect the types for which a streamer info needs to be added.~~; ~~The streamer info records need to be generated from the RNTupleDescriptor (the on-disk information).~~; The streamer info can simply be taken from `TClass` at the time of writing.; At a later point, we can consider if we want to generate streamer info from the RNTuple schema. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14871:491,simpl,simply,491,https://root.cern,https://github.com/root-project/root/issues/14871,1,['simpl'],['simply']
Usability,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447:407,clear,clear,407,https://root.cern,https://github.com/root-project/root/issues/11447,1,['clear'],['clear']
Usability,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:252,simpl,simple,252,https://root.cern,https://github.com/root-project/root/issues/8745,1,['simpl'],['simple']
Usability,"### Describe the bug. ROOT libraries compiled with clang and high optimization level emit floating point exceptions in the simplest codes. ### Expected behavior; No FPEs. ### To Reproduce; Compile the code below using clang; ```; clang++ -D_FORTIFY_SOURCE=2 -O4 -pipe -g -Wall -D_REENTRANT -D_GLIBCXX_ASSERTIONS -std=c++1y -o color5.exe color5.cxx; ```; and run ; ```; ./color5.exe; ```; Output of the reproducer. ```; msum 0.300000 0.100000; Floating point exception (core dumped); ```. The same compilation with ``-O1`` produces a working executable. Please note that this code is a reproducer obtained from the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:123,simpl,simplest,123,https://root.cern,https://github.com/root-project/root/issues/6677,1,['simpl'],['simplest']
Usability,"### Describe the bug. The following tests fail:; ```; 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed); 1052 - tutorial-v7-concurrentfill.cxx (Failed); 1054 - tutorial-v7-histops.cxx (Failed); 1055 - tutorial-v7-perf.cxx (Failed); 1056 - tutorial-v7-perfcomp.cxx (Failed); 1057 - tutorial-v7-simple.cxx (Failed); 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed); 1063 - tutorial-rcanvas-rh1.cxx (Failed); 1064 - tutorial-rcanvas-rh1_large.cxx (Failed); 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed); 1066 - tutorial-rcanvas-rh2.cxx (Failed); 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed); 1068 - tutorial-rcanvas-rh2_large.cxx (Failed); 1069 - tutorial-rcanvas-rh3.cxx (Failed); 1070 - tutorial-rcanvas-rh3_large.cxx (Failed); 1071 - tutorial-rcanvas-rlegend.cxx (Failed); 1082 - tutorial-rcanvas-subpads.cxx (Failed); 1577 - roottest-root-core-execStatusBitsCheck (Failed); ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce?. Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058:297,simpl,simple,297,https://root.cern,https://github.com/root-project/root/issues/13058,1,['simpl'],['simple']
Usability,"### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`; we get the following errors:. ```; $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/; 0.0331268310547; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Executing notebook with kernel: python2; [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook; output, resources = self.exporter.from_filename(notebook_filename, resources=resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename; return self.from_file(f, resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file; return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node; nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:50,guid,guide,50,https://root.cern,https://github.com/root-project/root/issues/10430,1,['guid'],['guide']
Usability,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:858,simpl,simple,858,https://root.cern,https://github.com/root-project/root/issues/8073,1,['simpl'],['simple']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/7893,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11390:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/11390,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `clear` followed by `push_back(x)` on a `RVec` that is adopting memory results in the wrong value being ""pushed back"": . ```; ~ root -l (cern-root) ; root [0] ROOT::RVec<int> v{1,2,3}; (ROOT::RVec<int> &) { 1, 2, 3 }; root [1] ROOT::RVec<int> v2(v.data(), v.size()); (ROOT::RVec<int> &) { 1, 2, 3 }; root [2] v2[0] = 0; (int) 0; root [3] v; (ROOT::RVec<int> &) { 0, 2, 3 }; root [4] v2.clear(); root [5] v; (ROOT::RVec<int> &) { 0, 2, 3 }; root [6] v2.push_back(42); root [7] v2; (ROOT::RVec<int> &) { 0 } // should be 42!!; root [8] v; (ROOT::RVec<int> &) { 0, 2, 3 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6796:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6796,3,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Due to the logic in `TTree::GetCacheAutoSize`, if `fAutoFlush == 0` then the size of the `TTreeCache` is set to 0 which in turn disables it. However there are separate mechanisms to disable the `TTreeCache` if desired (e.g. `TTree::SetCacheSize`) and even if `fAutoFlush == 0`, when reading over the network, we can benefit greatly from `TTreeCache`'s pre-fetching. ### Additional context; <!--; Add any other context about the problem here.; -->. - discussion and debugging: https://mattermost.web.cern.ch/root/pl/uzub3wwt3bdxxcdu4jmxxyrmby; - summary: https://mattermost.web.cern.ch/root/pl/xmtuq55j3pnc7cp7f8zyhf5ujw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8713:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8713,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805).; `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`.; When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp; #include <ROOT/TBufferMerger.hxx>; #include <ROOT/RVec.hxx>; #include <TTree.h>; #include <TFile.h>; #include <iostream>. int main(); {; // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; TFile f(""standardwrite.root"", ""recreate"");; TTree t(""t"", ""t"", 99, &f);; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f.Write();; }. std::cout << ""***** standard write ******"" << std::endl;; auto f2 = TFile::Open(""standardwrite.root"");; for (auto e : *f2->GetStreamerInfoList()) {; std::cout << e->GetName() << std::endl;; }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");; auto f = bm.GetFile();; TTree t(""t"", ""t"", 99, f.get());; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f->Write();; }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;; auto f = TFile::Open(""bufferm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6611:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6611,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported on the forum [here](https://root-forum.cern.ch/t/rdataframe-and-friend-and-python/41923).; TTrees written to file preserve knowledge of their friends, and if they are also present in the file reading one TTree recovers the full friendship chain. When constructing an RDF object as `RDataFrame(treename, filename)`, friends are not automatically made available as they are if the TTree is read from file manually and then passed to RDF's ctor. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; root [0] TFile f(""f.root"", ""recreate""); T(TFile &) Name: f.root Title: ; root [1] TTree t1(""t1"", ""t1""); (TTree &) Name: t1 Title: t1; root [2] TTree t2(""t2"", ""t2""); (TTree &) Name: t2 Title: t2; root [3] int x = 42; (int) 42; root [4] t2.Branch(""x"", &x); (TBranch *) 0x5575916824d0; root [5] t2.Fill(); (int) 4; root [6] t1.AddFriend(&t2); (TFriendElement *) 0x557591f09790; root [7] t1.Write(); (int) 231; root [8] t2.Write(); (int) 343; root [9] f.Close(); root [10] ROOT::RDataFrame(""t1"", ""f.root"").Max<int>(""t2.x"").GetValue(); Error in <TRint::HandleTermInput()>: std::runtime_error caught: Unknown column: t2.x; ```. Note that extracting the TTree from file manually and then constructing RDF from the tree works:. ```cpp; auto t1 = file.Get<TTree>(""t1"");; ROOT::RDataFrame(*t1).Max<int>(""t2.x"").GetValue() // prints 42; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6741:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6741,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Here's a self-contained reproducer:. ```python; import ROOT. ROOT.RDataFrame(10).Define(""x"", ""int(rdfentry_)"").Snapshot(""t"", ""f.root""). f = ROOT.TFile(""f.root""); t = f.Get(""t""); reader = ROOT.TTreeReader(t); age = ROOT.TTreeReaderValue['int'](reader, ""x""); staff_list = []; for entry in reader:; print(age.Get()[0]); ```. This prints. ```; 1; 2; 3; 4; 5; 6; 7; 8; 9; 9; ```. instead of . ```; 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Either Python iteration should be disabled (in favor of `while reader.Next()`, which works as expected) or it should produce the same results as the `while reader.Next()` loop. ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/ttreereader-vs-rdataframe-vs-branches-to-read-ttree/44785",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8183:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8183,2,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/7971,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Our centos7 nightly builds fail with the following errors:. ```; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:34:0:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/inc/XrdProofConn.h:140:4: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType LowWrite(XPClientRequest *, const void *, int);; 01:46:28 ^; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:47:0:; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘entity’ [-Wunused-parameter]; 01:46:28 virtual bool PostProcess(XrdSecEntity &entity,; 01:46:28 ^; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘einfo’ [-Wunused-parameter]; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6779,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```; cd /test_job/roottest_build/cling/array; /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C; -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]; #define NDEBUG; ^; <command line>:1:9: note: previous definition is here; #define NDEBUG 1; ^; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6575:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6575,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8750:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8750,3,"['clear', 'simpl']","['clear', 'simple']"
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following is a self-contained reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main(); {; ROOT::RDataFrame(1000).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});. ROOT::EnableImplicitMT();; auto df_bkg = ROOT::RDataFrame(""t"", ""f.root"");; ROOT::RDF::RSnapshotOptions opts;; opts.fAutoFlush = 10;; df_bkg.Snapshot<int>(""somedir/DecayTree"", ""bkg.root"", {""x""}, opts);; }; ```. The cause of the crash is a use-after-delete or a double-delete, caused by the following lines in `TFileMerger::MergeOne` which wrongly setup the subdirectory (owned by the parent file, owned by RDF) for deletion. Deletion of the subdirectory in turn causes the deletion of the output TTree that RDF is still using:. ```cpp; 556 TList dirtodelete;; 557 auto getDirectory = [&dirtodelete](TDirectory *parent, const char *name, const TString &pathname); 558 {; 559 TDirectory *result = dynamic_cast<TDirectory*>(parent->GetList()->FindObject(name));; 560 if (!result); 561 result = parent->GetDirectory(pathname);; 562 else; 563 dirtodelete.Add(result);; 564; 565 return result;; 566 };; ```. The bug affects any application using TFileMerger this way, of course, not just RDataFrame::Snapshot, but that's the most prominent case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8226:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8226,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```; ~ hadd f2.root f.root; hadd Target file: f2.root; hadd compression setting for all output: 1; hadd Source file 1: f.root; hadd Target path: f2.root:/; ~ file f2.root; f2.root: ROOT file Version 62301 (Compression: 1); ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0...; (TFile *) 0x55a618b47f40; (int) 1; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>; #include <TTree.h>; int main() {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; f.Close();; return 0;; }; ```; `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6616:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/6616,2,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The warnings look like this:. ```; CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):; Policy CMP0116 is not set: Ninja generators transform DEPFILEs from; add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy; details. Use the cmake_policy command to set the policy and suppress this; warning.; Call Stack (most recent call first):; interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen); This warning is for project developers. Use -Wno-dev to suppress it.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8060:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/8060,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++; if (ntotCurrentBuf > 4 * fBufferSizeMin) ; // Humm something wrong happened.; Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, ""; ""current=%lld) than usual ... with %d %.3f%% of the branches we already have ""; ""%d bytes (instead of %d)"",; fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,; fBufferSizeMin);; ```; so one will get weird warnings like:; ```shell; Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824); ```; even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9292:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/9292,1,['clear'],['clear']
Usability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When averaging a RooCurve generated with standard precision over intervals smaller than the distance between two subsequent points, the procedure for moving the `xFirstPt` and `xLastPt` back inside the interval `[xFirst,xLast]`, can move `xFirstPt` and `xLastPt` outside of the requested interval. This leads to an increased value of the integral used for averaging, and a subsequently higher average than can be expected based on the interpolated values of the curve at the interval boundaries. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooCurve::average(Double_t xFirst, Double_t xLast)` returing the average value of the curve in the requested interval. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Example code where this behaviour occurs:; [ExampleMacro.zip](https://github.com/root-project/root/files/8025465/ExampleMacro.zip); ```c++; #include <iostream>; #include <RooAbsReal.h>; #include <RooRealVar.h>; #include <RooPlot.h>; #include <RooCmdArg.h>; #include <RooGenericPdf.h>. void ExampleMacro(); {; RooRealVar x(""x"",""x"",0,50);; RooGenericPdf func(""func"",""Test Function"",""x"",x);. RooPlot* xframe = x.frame();. func.plotOn(xframe, RooFit::Name(""funcCurve""));. RooCurve* funcCurve = xframe->getCurve(""funcCurve"");; Double_t xFirst, xLast;; std::cout << ""\ni, f(i), f(i+0.1), avg[i,i+0.1]\n"" << std::endl;. for (Double_t i = 10; i < 11; i += 0.1); {; Double_t avg = funcCurve->average(i,i+0.1);; xFirst = funcCurve->interpolate(i, 1e-10);; xLast = funcCurve->interpolate(i+0.1, 1e-10);; std::cout << i << "", "" << xFirst << "", "" << xLast << "", "" << avg << std::endl;; }; }; ```; Run with `root -l Exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:30,clear,clear,30,https://root.cern,https://github.com/root-project/root/issues/9838,2,['clear'],['clear']
Usability,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195:69,guid,guides,69,https://root.cern,https://github.com/root-project/root/issues/7195,2,['guid'],"['guide', 'guides']"
Usability,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12779:77,simpl,simple,77,https://root.cern,https://github.com/root-project/root/issues/12779,1,['simpl'],['simple']
Usability,"### Describe the bug; FPE when calling Simplex with no free parameters. ### Expected behavior; No FPE/crash. ### To Reproduce; simplex.cxx . ```cpp; #include ""Minuit2/FunctionMinimum.h""; #include ""Minuit2/MnUserParameterState.h""; #include ""Minuit2/MnPrint.h""; #include ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:39,Simpl,Simplex,39,https://root.cern,https://github.com/root-project/root/issues/6775,2,"['Simpl', 'simpl']","['Simplex', 'simplex']"
Usability,"### Describe the bug; I am experiencing strange behaviour with `RooAddPdf::fixCoefRange`. When I call `createIntegral` on a `RooAddPdf`, then call `fixCoefRange`, then call `createIntegral` again, the same value is returned (whilst the change of definition of the coefficients should change the integral). It seems to me the cache does not get cleared when calling `fixCoefRange`, as the behaviour is correct when calling `fixCoefRange` before any integral computation. ### To Reproduce; ```cpp; RooWorkspace w1;; w1.factory(""x[3., 0., 10.]"");; w1.var(""x"")->setRange(""range_int"", 0., 4.);; w1.factory(""AddPdf::sum(Gaussian(x, mean1[1.], sigma1[2.]), Gaussian(x, mean2[5.], sigma2[10.]), coef[0.3])"");; RooWorkspace w2(w1);. //Call createIntegral on workspace w1 only; cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;. w1.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w1.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. w2.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w2.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; cout << w2.pdf(""sum"")->createIntegral(RooArgSet(*w2.var(""x"")),RooFit::NormSet(RooArgSet(*w2.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; ```. This prints :; ```; 0.548209 //Before calling RooAddPdf::fixCoefRange; 0.548209 //After calling RooAddPdf::fixCoefRange but with a previous call to createIntegral; 0.463998 //After calling RooAddPdf::fixCoefRange without any previous call; ```; whilst I would expect : ; ```; 0.548209; 0.463998; 0.463998; ```. ### Setup; ROOT 6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10988:344,clear,cleared,344,https://root.cern,https://github.com/root-project/root/issues/10988,1,['clear'],['cleared']
Usability,"### Describe the bug; I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior; No crash. ### To Reproduce; ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_13:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [6] x; input_line_15:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_24:2:3: error: use of undeclared identifier 'x'; (x); ^; terminate called after throwing an instance of 'cling::CompilationException'; what(): Error evaluating expression (x); ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178:71,undo,undo,71,https://root.cern,https://github.com/root-project/root/issues/10178,6,['undo'],['undo']
Usability,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8989:146,progress bar,progress bars,146,https://root.cern,https://github.com/root-project/root/issues/8989,2,['progress bar'],['progress bars']
Usability,"### Describe the bug; In this page: https://github.com/root-project/web/blob/main/manual/cling/index.md there is an example about using the '?' before every line. See also https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#the-root-prompt. ```; root [] {; root [] ? TLine l;; root [] ? for (int i = 0; i < 5; i++) {; root [] ? l.SetX1(i);; root [] ? l.SetY1(i+1);; root [] ? l.Print();; root [] ? }; root [] ? }; ```. However, if I try it, I get errors, not the help it's supposed to output:; ```; ROOT_prompt_1:1:1: error: expected expression; ? TLine l;; ^; ROOT_prompt_1:1:3: error: 'TLine' does not refer to a value; ? TLine l;; ^; /opt/root_bld/include/TPaveText.h:19:7: note: declared here; class TLine;; ^; ROOT_prompt_1:1:9: error: expected ':'; ? TLine l;; ^; : ; ROOT_prompt_1:1:1: note: to match this '?'; ? TLine l;; ^; ROOT_prompt_1:1:9: error: use of undeclared identifier 'l'; ? TLine l;; ^; ROOT_prompt_2:1:1: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected ':'; ? for (int i = 0; i < 5; i++) {; ^; : ; ROOT_prompt_2:1:1: note: to match this '?'; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; ROOT_prompt_0:1:1: note: to match this '{'; {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; input_line_9:1:42: note: to match this '{'; void __cling_Un1Qu31(void* vpClingValue) {; ^; ```. vs. ```; TLine X1=0.000000 Y1=1.000000 X2=0.000000 Y2=0.000000; TLine X1=1.000000 Y1=2.000000 X2=0.000000 Y2=0.000000; TLine X1=2.000000 Y1=3.000000 X2=0.000000 Y2=0.000000; TLine X1=3.000000 Y1=4.000000 X2=0.000000 Y2=0.000000; TLine X1=4.000000 Y1=5.000000 X2=0.000000 Y2=0.000000; ```. ### Expected behavior; Either remove this example from the documentation, or fix the issue. If t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10056:206,guid,guides,206,https://root.cern,https://github.com/root-project/root/issues/10056,2,['guid'],"['guide', 'guides']"
Usability,"### Describe the bug; It looks like the warning reported at https://sft.its.cern.ch/jira/browse/ROOT-10816 is still not solved with gcc 11 and the current builtin_tbb. . ```bash; $: cmake -GNinja -Dminimal=ON -Dimt=ON -Dbuiltin_tbb=ON $ROOT_HOME; [...]; $: cmake --build . -- -j32; [...]; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```. ### Setup; Fedora 34; ROOT master@39de75e; gcc 11.2. ### Additional context; This should be indeed fixed by the current builtin_tbb (2019 U9) for gcc 10 as reported at https://github.com/oneapi-src/oneTBB/issues/134; But on the TBB repo there are other similar issues that still didn't work with gcc 10.2 and tbb 2020 https://github.com/oneapi-src/oneTBB/issues/307",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9020:619,clear,clearing,619,https://root.cern,https://github.com/root-project/root/issues/9020,1,['clear'],['clearing']
Usability,"### Describe the bug; It's not possible to catch exceptions in the interactive `root` prompt on Apple Silicon, nor does `TRint` take care of uncaught exceptions. ### Expected behavior; The user should be able to catch exceptions, or at least the fallback handler should prevent process termination. ### To Reproduce; The most simple examples are; ```; root [0] try { throw 1; } catch (...) { }; libc++abi.dylib: terminating with uncaught exception of type int; ```; and; ```; root [0] throw 1;; libc++abi.dylib: terminating with uncaught exception of type int; ```; (which should be handled in `TRint::HandleTermInput()`). ### Setup; ROOT 6.25/01 on `macphsft25`. ### Additional context; Plenty:; * #7100 fixed catching exceptions from constructors on macOS (and has tests, including unwinding through multiple JIT recursions).; * [ROOT-10703](https://sft.its.cern.ch/jira/browse/ROOT-10703) and [ROOT-10962](https://sft.its.cern.ch/jira/browse/ROOT-10962) for the original reports. #### Edit:; Same in 6.22/07, tested on `macphsft24`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541:326,simpl,simple,326,https://root.cern,https://github.com/root-project/root/issues/7541,1,['simpl'],['simple']
Usability,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:40,Guid,Guide,40,https://root.cern,https://github.com/root-project/root/issues/7279,5,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"### Describe the bug; The `ROOT_GENERATE_DICTIONARY` function from cmake creates dictionary `G_xxx_cc.cxx` and compieles it with different flags than rest of the target sources.; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The `ROOT_GENERATE_DICTIONAR` body copies various properties of the target into new target for dictionary, and should also copy the compile features properties.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. Create target with some non-standard feature, e.g. c++17 (requires root compiled against c++17, then `std::string_view` breaks compatibility with pre c++17 build); ```; target_compile_features(${ARG_TARGET} PRIVATE cxx_std_17); ```; 2. Generate dictionary; ```; ROOT_GENERATE_DICTIONARY(G__${ARG_TARGET}_cc; ${ARG_HEADERS}; MODULE ${ARG_TARGET}; LINKDEF Linkdef.h; ); ```; 3. Compile such dictionary, the dict will not compile against c++17 and various errors related to `std::string_view` will appear. ### Setup; 1. ROOT 6.22.02; 2. Operating system - GNU/Linux; 3. Compiled from source. ### Solution; In line 667 of `RootMacros.cmake` add following lines:. ```; target_compile_features(${dictionary} PRIVATE; $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_FEATURES>); ```. See also https://root-forum.cern.ch/t/rootmacros-cmake-should-also-support-target-features-for-dictionary/42159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6777:187,clear,clear,187,https://root.cern,https://github.com/root-project/root/issues/6777,2,['clear'],['clear']
Usability,"### Describe the bug; The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior; Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce; ```; root -l; root [0] int x; (int) 0; root [1] float y; (float) 0.00000f; // Start then pressing repeatedly CTRL+_; ```; --> Neither `x` nor `y` are shown when undoing. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10182:26,undo,undo,26,https://root.cern,https://github.com/root-project/root/issues/10182,3,['undo'],"['undo', 'undoing']"
Usability,### Describe the bug; `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7304:82,guid,guide,82,https://root.cern,https://github.com/root-project/root/issues/7304,1,['guid'],['guide']
Usability,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:573,clear,clear,573,https://root.cern,https://github.com/root-project/root/issues/7970,1,['clear'],['clear']
Usability,"### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python; import cppyy. cppyy.cppdef("""""". template<class T>; struct Foo {; Foo(T v) : val{v} {}; T val;; };. template <class T>; Foo<T> operator+(Foo<T> const &a, Foo<T> const &b); {; return Foo<T>{a.val + b.val};; }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4); b = klass(7). a + b; ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:; https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer; * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15378:746,simpl,simplified,746,https://root.cern,https://github.com/root-project/root/issues/15378,1,['simpl'],['simplified']
Usability,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:31,clear,clear,31,https://root.cern,https://github.com/root-project/root/issues/9115,2,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:; * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies; * TObject::kOverwrite can be used to avoid writing multiple namecycles; * retrieving an object from TFile by name automatically retrieves the highest namecycle; * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584:394,guid,guide,394,https://root.cern,https://github.com/root-project/root/issues/14584,2,['guid'],['guide']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ?. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551:120,guid,guide,120,https://root.cern,https://github.com/root-project/root/issues/14551,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14556:350,simpl,simple,350,https://root.cern,https://github.com/root-project/root/issues/14556,2,"['simpl', 'undo']","['simple', 'undocumented']"
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide.; For example bases in the scenario:. ```cpp; class Position { /* point in 3D space */; public:; Position(float x, float y, float z);; // get Cartesian coordinates; float x();; float y();; float z();; // get spherical coordinates; float r();; float phi();; float theta();; // get pseudorapidity; float eta();; };. class Hit : public Position { /* localized detector signal */; public:; Hit(float energy, float x, float y, float z);; // get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:173,Guid,Guide,173,https://root.cern,https://github.com/root-project/root/issues/14540,2,"['Guid', 'Simpl']","['Guide', 'Simplest']"
Usability,### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14550:248,simpl,simplified,248,https://root.cern,https://github.com/root-project/root/issues/14550,1,['simpl'],['simplified']
Usability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:; > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14566:231,clear,clear,231,https://root.cern,https://github.com/root-project/root/issues/14566,2,"['Guid', 'clear']","['Guide', 'clear']"
Usability,"### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment.; - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958:241,clear,clear,241,https://root.cern,https://github.com/root-project/root/issues/13958,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. I am missing a couple of methods inside `THnD` class that I use frequently when working with the usual `TH1D`, `TH2D`, ... classes. I am missing something like: `std::vector <Double_t> GetBinCenter(std::vector<Int_t> idx)` that simply returns the center of the bin using the ranges and number of bins. Simple implementation such as for each component doing:. ```; xMin + (xMax-xMin)*((double)bin-0.5)/Nbins;; ```. where `xMin`, `xMax`, `Nbins` are known for each dimensions inside `THnD` and `bin` is the corresponding bin where we want to know its coordinate. Perhaps there is another way to achieve this (please let me know), but it would be interesting that there would be coherence between `TH` and `THn` methods. Also a method to get the integral would be interesting. See this post:. https://root-forum.cern.ch/t/method-to-calculate-integral-in-a-thnd/57276. Thanks for considering!. ### ROOT version. ROOT 6.26/02. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14173:285,simpl,simply,285,https://root.cern,https://github.com/root-project/root/issues/14173,2,"['Simpl', 'simpl']","['Simple', 'simply']"
Usability,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:111,Guid,Guided,111,https://root.cern,https://github.com/root-project/root/issues/15778,1,['Guid'],['Guided']
Usability,"### Explain what you would like to see improved and how. I found myself trying to use a glob in `TChain::Add` with a remote path. I discovered that in XRootD, this is supported:; ```; TChain c{""Events""};; c.Add(""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run*"");; c.GetListOfFiles()->GetEntries(); (int) 4; ```; Whereas with https (through davix) this is not supported; ```; TChain c{""Events""};; c.Add(""https://root.cern/files/HiggsTauTauReduced/*.root"");; Error in <TDavixSystem::DavixOpendir>: failed to opendir the directory: HTTP 405 : Method Not Allowed, Permission refused (17); ```. First off, we should understand more clearly with the different libraries if this use case is 1. knowingly supported (xrootd), knowingly unsupported (davix) 2. a valid use case or seen as a corner case. Base on that, we should decide whether to actually support it in ROOT, which would mean support it with all the different remote protocols, or remove support with xrootd and decide to always throw an exception in case remote globbing is attempted. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:649,clear,clearly,649,https://root.cern,https://github.com/root-project/root/issues/13258,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved and how. I have a simple snippet which produces a plot (in PDF or SVG) where the text items in the legend are clickable hyperlinks:; ```python; from matplotlib import pyplot as plt; plt.rcParams['svg.fonttype'] = 'none'; fig = plt.figure(); plt.scatter([1], [2], label=""CERN""); plt.scatter([1], [2.25], label=""ROOT""); leg = plt.legend(); for ta in leg.texts:; t = ta.get_text(); if t == ""CERN"":; url = 'https://home.cern'; ta.set_url(url); elif t == ""ROOT"":; url = 'https://root.cern'; ta.set_url(url). fig.savefig('scatter.svg'); fig.savefig('scatter.pdf'); ```. Can be run with `python repro.py` and saves both SVG and PDF files with the clickable links in the legend. It would be nice to have the same feature also for TLegend. I have taken a look at [TLink](https://root.cern.ch/doc/master/classTLink.html) but despite what the docs hint at, that cannot be used to show hyperlinks, rather only links between different graphical components of the same canvas/browser. . ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16512:66,simpl,simple,66,https://root.cern,https://github.com/root-project/root/issues/16512,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time.; The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this.; Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers.; At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on.; To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15070:531,simpl,simple,531,https://root.cern,https://github.com/root-project/root/issues/15070,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13861:337,simpl,simplifications,337,https://root.cern,https://github.com/root-project/root/issues/13861,1,['simpl'],['simplifications']
Usability,"### Explain what you would like to see improved and how. See https://bugs.gentoo.org/show_bug.cgi?id=926439 in the Gentoo tracker.; I extracted the important part from the build log from the bug above. Here it is:; ```; >>> Completed installing sci-physics/root-6.30.04 into /var/tmp/portage/sci-physics/root-6.30.04/image. * Final size of build directory: 8271248 KiB (7.8 GiB); * Final size of installed tree: 1643460 KiB (1.5 GiB). * Verifying compiled files for python3.11; * ; * QA Notice: The following unexpected files/directories were found; * top-level in the site-packages directory:; * ; * /usr/lib/python3.11/site-packages/libJupyROOT3_11.so.6.30.04; * /usr/lib/python3.11/site-packages/libROOTPythonizations3_11.so.6.30.04; * ; * This is most likely a bug in the build system. More information; * can be found in the Python Guide:; * https://projects.gentoo.org/python/guide/qawarn.html#stray-top-level-files-in-site-packages; ```. Ideally, ROOT would install `libROOTPythonizations3_11.so.6.30.04` inside the `ROOT/` subdirectory of PyROOT, and `libJupyROOT3_11.so.6.30.04` inside `JupyROOT`, with the appropriate adjustments so that RPATHs, etc, are correct. ### ROOT version. 6.30.04. ### Installation method. emerge. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14917:837,Guid,Guide,837,https://root.cern,https://github.com/root-project/root/issues/14917,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15405:536,simpl,simply,536,https://root.cern,https://github.com/root-project/root/issues/15405,2,['simpl'],['simply']
Usability,"### Explain what you would like to see improved and how. The [example](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#progressbar) given by the RDataFrame documentation on the use of the progress bar does not run because the wrong function is used. ```; import ROOT; rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); ROOT.RDF.Experimental.AddProgressBar(rdf_1); ```. This gives the error; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); /tmp/ipykernel_531/2773921370.py in <module>; 1 import ROOT; 2 rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); ----> 3 rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); 4 ROOT.RDF.Experimental.AddProgressBar(rdf_1). TypeError: Template method resolution failed:; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; none of the 3 overloaded methods succeeded. Full details:; RI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:198,progress bar,progress bar,198,https://root.cern,https://github.com/root-project/root/issues/15040,1,['progress bar'],['progress bar']
Usability,"### Explain what you would like to see improved and how. The boolean template in `RNTupleView<T, bool>` steers whether or not the view is owned by the user. It would be more clear to use two different classes. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16321:174,clear,clear,174,https://root.cern,https://github.com/root-project/root/issues/16321,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved and how. The release notes of 6.30, see e.g. https://github.com/root-project/root/commit/d9c7887f7423a4c93dbb50759b840b5b803baec3 are diverging for master vs 6.30 patches. Some new changes have been implemented only in v630patches, others are only added to master. As a result, it has become a bit messy, and changes that should appear on the ROOT website release notes are not appearing because they should have been backported to 6.30. On the other hand, an easy backport is not doable because new changes were done directly on 6.30patches without doing them on master, so we would need to use 'Meld' to fuse them by hand to restore a bit the order. Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'?. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439:722,guid,guidelines,722,https://root.cern,https://github.com/root-project/root/issues/14439,1,['guid'],['guidelines']
Usability,"### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15252:654,guid,guide,654,https://root.cern,https://github.com/root-project/root/issues/15252,2,['guid'],['guide']
Usability,"### Explain what you would like to see improved and how. This forum post https://root-forum.cern.ch/t/too-many-operators-for-the-ttree-project-conditions/58009/5 triggered a discussion that probably `RResultPtr` could better behave with respect to ownership of its pointee. For example, this function; ```cpp; TH1D *DrawStuff(const char *columnname) {; auto file = TFile::Open(""tutorials/hsimple.root"", ""READ"");; auto ntuple = file->Get<TTree>(""ntuple"");; ROOT::RDataFrame df(*ntuple);; auto ht = df.Histo1D(*h, columname);; return ht.GetPtr();; }; ```. Will return a dangling pointer since the `RResultPtr` going out of scope will destroy the pointee. The forum user presents a pattern such as. ```cpp; THStack* histStack = new THStack(""histStack"", ""Bs_MCORR"");; for(int i=0; i<sampNumb; i++) {; TFile* file = new TFile(rootList[i]);; TTree* tree = (TTree*)file->Get(""DecayTree"");; ROOT::RDataFrame df(*tree);; auto ht = df.Filter(conds[i].Data()).Histo1D(h, ""Bs_MCORR"");; histStack->Add(ht.GetPtr(), , ""HIST && E1 && EX0"");; }; histStack->Draw();; ```. Which also doesn't work with the current API. Admittedly, this example would not work in general since `THStack` does not take ownership of the passed histograms and assumes they will be kept alive by ROOT global objects. In general, for this kind of use case we could convey the message to users they can store the histograms in a vector of shared pointers which is the clearest and most standard data structure to represent the situation correctly. So we need:. * `std::shared_ptr<T> RResultPtr<T>::GetSharedPtr()`; * More documentation on the RDataFrame user guide about these use cases; * A tutorial starting from the forum post reproducer once we have the API. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14766:1426,clear,clearest,1426,https://root.cern,https://github.com/root-project/root/issues/14766,2,"['clear', 'guid']","['clearest', 'guide']"
Usability,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13800:306,simpl,simply,306,https://root.cern,https://github.com/root-project/root/issues/13800,1,['simpl'],['simply']
Usability,"### Explain what you would like to see improved and how. While browsing the docs I cannot find any mention of C++ 20 support (just old forum posts lamenting the lack of support), while it is indeed clearly supported in recent versions of ROOT (albeit with some hiccups). . Is there any plan to document ROOT with C++ 20 usage? ; It would be nice to add a custom label for C++ 20 issues as well, so bugs like https://github.com/root-project/root/issues/14230 are more visible to whomever wants to use ROOT with the latest standard. . Thank you for the great work 🙂. ### ROOT version. Not relevant. ### Installation method. Not relevant. ### Operating system. Not relevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14308:198,clear,clearly,198,https://root.cern,https://github.com/root-project/root/issues/14308,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved. A set of usability improvements to `RLogger` coming out of a discussion of #6875 with @pcanal . ### Optional: share how it could be improved. - [ ] add a function (to `RLogManager`?) to emit just a string to the log (e.g. by creating an otherwise empty `RLogEntry` and having `Emit` not write out anything like function, file, etc.);; - [ ] add a ""show timestamp"" option flag to `RLogManager`, on by default. (And try to add ""nanoseconds since call to `ROOT()`"")",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6931:58,usab,usability,58,https://root.cern,https://github.com/root-project/root/issues/6931,1,['usab'],['usability']
Usability,"### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters.; In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {; p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8507:776,simpl,simple,776,https://root.cern,https://github.com/root-project/root/issues/8507,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently we have a small paragraph titled ""Reading and manipulating collections"", but given users' feedback, we can do better in advertising and explaining how to deal with collections in RDF. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. We should expand that paragraph and move it out of ""More features"" into its own section. Examples should show how to perform object selection with RVecs, and link to tutorials and other resources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7086:211,feedback,feedback,211,https://root.cern,https://github.com/root-project/root/issues/7086,1,['feedback'],['feedback']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. From Andrea Rizzi: currently `df.Display()` only shows the first and last elements of collection columns. It would be more helpful/intuitive if all elements were listed, at least up to a reasonable collection length. Example of the current output:. ```; y | x | w | z | ; 100 | 1 | 1.8000000 | { 1.1000000, 2.1000000 } | ; | ... | | ... | ; | 4 | | { 3.1000000, 4.1000000 } | ; 10000 | 5 | 3.2400000 | { 4.5100000, 5.5100000 } | ; | ... | | ... | ; | 8 | | { 6.5100000, 7.5100000 } | ; 1000000 | 9 | 5.8320000 | { 8.2610000, 9.2610000 } | ; | ... | | ... | ; | 12 | | { 10.261000, 11.261000 } | ; 100000000 | 13 | 10.497600 | { 12.387100, 13.387100 } | ; | ... | | ... | ; | 16 | | { 14.387100, 15.387100 } | ; 10000000000 | 17 | 18.895680 | { 16.925810, 17.925810 } | ; | ... | | ... | ; | 20 | | { 18.925810, 19.925810 } | ; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python; $ python $(root-config --tutdir)/dataframe/df024_Display.py; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6981:242,intuit,intuitive,242,https://root.cern,https://github.com/root-project/root/issues/6981,1,['intuit'],['intuitive']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of build as a reserved, preferred name for build; directories.; Other precedents are entries such as `cmake-build` and `.build` in; ROOT's `.gitignore`, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8031:542,guid,guidelines,542,https://root.cern,https://github.com/root-project/root/issues/8031,1,['guid'],['guidelines']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent ; `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]"");; TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7805:228,intuit,intuitive,228,https://root.cern,https://github.com/root-project/root/issues/7805,1,['intuit'],['intuitive']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I'm currently working on getting ROOT into the official Debian repositories for easy installation. However, a major hassle is the name of the shared libraries: these include very generic names like for example `libCore.so`, `libGui.so`, etc.; The conflict here is that Debian usually splits shared libraries in separate packages with their library name. However a package with e.g. the name `libcore` is just not explicit enough. A better and much more precise name would be `libROOTCore.so`. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; I see two possible ways to achieve this: one would be to simply add a prefix to all libraries globally, the other would be to rename the libraries in CMake itself.; The latter one is probably a time-consuming task, and also needs to handle cases like e.g. `libHist`, since both `libHist` and `libROOTHist` exist.; The prior one could be easily added with a CMake option, or just done automatically when building with `gnuinstall=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10985:791,simpl,simply,791,https://root.cern,https://github.com/root-project/root/issues/10985,1,['simpl'],['simply']
Usability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; When there are many columns in a `ROOT::RDataFrame`, `df.Display(many_columns)->Print()` is truncated and doesn't include all the columns requested. I can understand this truncating without any parameter, but when I pass the columns explicitly, no truncating should occur. The Pandas approach to truncation is better and should be adopted as well - it shows first and last columns with `...` in the middle, clearly indicating the truncation. ### Setup; 1. ROOT version: 6.22.06; 2. Operating system: Ubuntu 18.04; 3. How you obtained ROOT: `binary download`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7205:518,clear,clearly,518,https://root.cern,https://github.com/root-project/root/issues/7205,1,['clear'],['clearly']
Usability,"### Explain what you would like to see improved; Currently, cling uses `cling::utils::getWrapPoint()` to cut the input line in two parts: one that will become part of an internal wrapper function (i.e., `__cling_Un1Qu3xxx`) and the other that will not.; This mechanism is overly simplistic and cannot correctly handle some cases, e.g. users would expect that the excerpts below are equivalent, however,; ```c++; root [0] namespace foo { int i; }; root [1] using namespace foo; std::cout << ""hello\n"";; hello; root [2] i; (int) 0; ```; translates into do not wrap `using namespace foo;` and wrap `std::cout << ""hello\n"";`, while; ```c++; root [0] namespace foo { int i; }; root [1] std::cout << ""hello\n""; using namespace foo;; hello; root [2] i; input_line_11:2:3: error: use of undeclared identifier 'i'; (i); ^; ```; will wrap all the input. Therefore, the `using` directive is not parsed at the TU level. Also, this function adds missing `;` for some cases, but the current support is somewhat limited (see related issue #8064). ### Optional: share how it could be improved; Cling should cut the input line in several independent fragments that will be either wrapped or directly parsed by clang. Additionally, these fragments shall incorporate some marks, such as ""needs wrapper"" or ""needs terminating semicolon"". The proposed solution might also add the terminating `;` where required, if requested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9171:279,simpl,simplistic,279,https://root.cern,https://github.com/root-project/root/issues/9171,1,['simpl'],['simplistic']
Usability,"### Explain what you would like to see improved; Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re; there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved; - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag.; - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes.; - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`; - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce; See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10395:435,learn,learn,435,https://root.cern,https://github.com/root-project/root/issues/10395,1,['learn'],['learn']
Usability,"### Explain what you would like to see improved; I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files.; https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing.; A function doing; `TH1::SaveAs("".txt"")`; would be more user-friendly. ### Optional: share how it could be improved; Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |; | From tags/v6-24-06@v6-24-06 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3; https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13; https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text; https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2; https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10474:451,user-friendly,user-friendly,451,https://root.cern,https://github.com/root-project/root/issues/10474,1,['user-friendly'],['user-friendly']
Usability,"### Explain what you would like to see improved; I've been working (with couet and others) on reducing errors in the Doxygen documentation of the code, from 10k+ to a manageable level of under 1k (and going down). However, currently, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:456,guid,guide,456,https://root.cern,https://github.com/root-project/root/issues/9953,1,['guid'],['guide']
Usability,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:658,usab,usable,658,https://root.cern,https://github.com/root-project/root/issues/12635,1,['usab'],['usable']
Usability,"### Explain what you would like to see improved; It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...); would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` ; Moreover `--` token for end of global arguments would be useful in the following way:; * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last); * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`); and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447:177,usab,usable,177,https://root.cern,https://github.com/root-project/root/issues/8447,1,['usab'],['usable']
Usability,"### Explain what you would like to see improved; Related to this comment https://github.com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:241,guid,guide,241,https://root.cern,https://github.com/root-project/root/issues/8999,1,['guid'],['guide']
Usability,"### Explain what you would like to see improved; TGSpeedo class is quite helpful, but it lacks the ability of auto-calculating the mean value (a mean mark is there, but is up to the user to put a senseful value there on each update). ### Optional: share how it could be improved; I would propose to let the user define a circular buffer size, so that the TGSpeedo class autocalculates the mean value of the last N entries. The default value would be N=0 to keep old behaviour and save memory, but the user could call for example SetMeanBufferSize(10) to do an average of the last 10 entries. Could be implemented for example using https://root.cern/doc/master/circular_8C.html; or just with this simple header class: https://github.com/jnk0le/Ring-Buffer/blob/master/ringbuffer.hpp. And then the average just as `std::sum(begin(...), end(...), 0)/N`. ### To Reproduce; 1. EnableMeanMark in TGSpeedo; 2. The Mean value is not calculated automatically. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7164:696,simpl,simple,696,https://root.cern,https://github.com/root-project/root/issues/7164,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722:69,Guid,Guide,69,https://root.cern,https://github.com/root-project/root/issues/10722,4,"['Guid', 'clear', 'guid']","['Guide', 'clear', 'guide']"
Usability,"### Explain what you would like to see improved; The TColor palettes are nicely described here: https://root.cern.ch/doc/master/classTColor.html; However, it is not clear which of these palettes are prone to artefacts, which are not CVD friendly, etc. Only the Rainbow one is mentioned and linked to https://root.cern.ch/rainbow-color-map. ### Optional: share how it could be improved; - I think it would be helpful if they would be split into two separate sections, namely those that are CVD-friendly and those that are not. This would help the users in quickly knowing which to avoid.; - Maybe adding this link in the docu would be interesting: https://www.nature.com/articles/s41467-020-19160-7; - I would also suggest to implement the 'batlow' palette described in the link above into the predefined palettes. And potentially others described in Box2 of that article.; - These graphs here are also quite informative https://matplotlib.org/stable/tutorials/colors/colormaps.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098:165,clear,clear,165,https://root.cern,https://github.com/root-project/root/issues/8098,1,['clear'],['clear']
Usability,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:275,user-friendly,user-friendly,275,https://root.cern,https://github.com/root-project/root/issues/7180,1,['user-friendly'],['user-friendly']
Usability,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216:251,guid,guide,251,https://root.cern,https://github.com/root-project/root/issues/7216,3,['guid'],"['guide', 'guides']"
Usability,"### Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:282,learn,learn,282,https://root.cern,https://github.com/root-project/root/issues/7308,1,['learn'],['learn']
Usability,"### Explain what you would like to see improved; When I browse math documentation, I read MathMore documentation at https://root.cern/doc/master/group__MathMore.html . When I browse menu in the left column, there are four submenus. ; The submenu `Numerical Algorithms` has on its page https://root.cern/doc/master/group__NumAlgo.html (see that the link is common for both MathCore and MathMore):; Math » MathCore | Math » MathMore; Same for `Statistical functions`. When I press `Special functions` on the left menu, the left menu changes to MathCore!; https://root.cern/doc/master/group__SpecFunc.html; Same for `QuasiRandom number generators and distributions`. This is very confusing. . ### Optional: share how it could be improved; I think that MathMore subsections should be deleted (or merged with MathCore, which is larger). ; There can remain the main page describing what MathMore is, but all subsections common with MathCore should belong only there (or to a common ROOT::Math section). This is very confusing for new users, because I didn't notice that the link is the same, and had to browse both sections in MathCore and MathMore trying to find the difference. ### Additional context; I think this is not related to the site, but to documentation generation. Even if it's not simple to be implemented technically, this is still a feature request (or even a bug report), because for users this is not convenient.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440:1289,simpl,simple,1289,https://root.cern,https://github.com/root-project/root/issues/7440,1,['simpl'],['simple']
Usability,"### Explain what you would like to see improved; When running:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / bin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:852,progress bar,progress bar,852,https://root.cern,https://github.com/root-project/root/issues/9489,1,['progress bar'],['progress bar']
Usability,"### Explain what you would like to see improved; You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved; - `void` should be supported.; - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile; //return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7872:324,simpl,simple,324,https://root.cern,https://github.com/root-project/root/issues/7872,1,['simpl'],['simple']
Usability,"### Feature description. As requested by the user on the forum (https://root-forum.cern.ch/t/rdataframe-feature-request-per-sample-histo-graph-fill-and-filter/), a FilterPerSample feature would improve and simplify physics analysis when a single RDataFrame with multiple samples is used. . There is an additional suggestion from the user concerning ""an option to expose the RSampleInfo object as a default RDataFrame column (in the same way as rdfentry_ and rdfslot_), maybe “rdfsample_” "". . ### Alternatives considered. The current workaround is by using a DefinePerSample in an additional column, where weights are set to 0 for all but the sample of interest. . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13422:206,simpl,simplify,206,https://root.cern,https://github.com/root-project/root/issues/13422,1,['simpl'],['simplify']
Usability,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16229:142,simpl,simply,142,https://root.cern,https://github.com/root-project/root/issues/16229,1,['simpl'],['simply']
Usability,"### Feature description. How hard would it be to implement a class (somehow) deriving from histogram classes, but showing in the TBrowser UI some sort of a complex histogram ?. Current state: I have histograms storing Re and Im parts of a complex signal for instance.; This goes currently in TBrowser as:; ```; my.root; -> TH1D* : histogram[Re]; -> TH1D* : histogram[Im]; -> TH1D* : histogram[Ph]; -> TH1D* : histogram[Mag]; ```. I would like to display something like:; ```; my.root; TComplexH1D* ; |; --> Re (TH1D); --> Im (TH1D); --> Ph (TH1D); --> Mag (TH1D); ```. This wouldn't simply be a class with 4 histograms inside, I don't want to spread histograms everywhere in my rootfiles, but represent this object as a single key and still be able to open it and look inside.. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13352:583,simpl,simply,583,https://root.cern,https://github.com/root-project/root/issues/13352,1,['simpl'],['simply']
Usability,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13924:124,usab,usability,124,https://root.cern,https://github.com/root-project/root/issues/13924,1,['usab'],['usability']
Usability,### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16646:54,user-friendly,user-friendly,54,https://root.cern,https://github.com/root-project/root/issues/16646,1,['user-friendly'],['user-friendly']
Usability,"### Is your feature request related to a problem? Please describe. It would be great to have a progress bar for RDF, one that does not need to open all files before giving an estimate on the remaining processing time. ### Describe the solution you'd like. Similar to https://github.com/root-project/root/pull/8675 but with the approach sketched in https://github.com/root-project/root/pull/8675#discussion_r670348181",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8685:95,progress bar,progress bar,95,https://root.cern,https://github.com/root-project/root/issues/8685,1,['progress bar'],['progress bar']
Usability,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:555,usab,usable,555,https://root.cern,https://github.com/root-project/root/issues/7361,1,['usab'],['usable']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7116:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/7116,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8735:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8735,5,"['clear', 'simpl']","['clear', 'simple']"
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Of course one can just solve it numerically by finding a root. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:; https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490; and; https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd; which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8471:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8471,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. In previous versions of the ROOT documentation, it was clearly mentioned that e.g. `TH1::GetRMS` for historical reasons does not in fact calculate RMS but the standard deviation. Now this section is just empty:; https://root.cern.ch/doc/master/classTH1.html#a8fdcbb1ef23f99d5b28c1f10e947c957. ### Describe the solution you'd like. Re-introduce this documentation. ### Describe alternatives you've considered. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11456:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/11456,2,['clear'],"['clear', 'clearly']"
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/11875,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8340,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; If it's okay, i'd like to try and make this. I think it would be a cool addition.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc.; ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->; I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png); Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8422:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8422,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });; auto dfzx = df.Alias(""z"", ""x"");; auto dfzy = df.Alias(""z"", ""y"");; auto max42 = dfzx.Max<int>(""z"");; auto max0 = dfzy.Max<int>(""z"");; std::cout << ""should be 42: "" << *max42 << '\n';; std::cout << ""should be 0: "" << *max0 << '\n';. return 0;; }; ```. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7381:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/7381,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [idk] when I want to [brb]; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; Hype; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8775:76,clear,clear,76,https://root.cern,https://github.com/root-project/root/issues/8775,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; As discussed in https://sft.its.cern.ch/jira/browse/SPI-2149 ATLAS would like to have a ROOT patch release 6.24/06a with the fix/patch for https://github.com/root-project/root/pull/10369. . If this is not feasible can ROOT 6.24/08 be releases soon ? But due to the imminent data taking start we'd like avoid potential interferences due to other patches that might come with 6.24/08. <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Release 6.24/06a. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Release 6.24/08. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. See https://sft.its.cern.ch/jira/browse/SPI-2149 for more details and the discussion with the CERN SFT SPI team experts. Cheers, Johannes (for ATLAS)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515:459,clear,clear,459,https://root.cern,https://github.com/root-project/root/issues/10515,2,['clear'],['clear']
Usability,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421:232,Guid,Guide,232,https://root.cern,https://github.com/root-project/root/issues/7421,2,['Guid'],['Guide']
Usability,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:132,simpl,simple,132,https://root.cern,https://github.com/root-project/root/issues/7880,1,['simpl'],['simple']
Usability,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517:205,simpl,simple-variable-in-root-files,205,https://root.cern,https://github.com/root-project/root/issues/8517,1,['simpl'],['simple-variable-in-root-files']
Usability,"### Is your feature request related to a problem? Please describe.; If I want to read data from a webDav/http endpoint using an oidc token, I'd need to be able to pass the token somehow in ROOT to the Davix client wrapper. Possibly through env variable and rootrc. ### Describe the solution you'd like; Make the Davix client wrapper able to take the token from env variable and rootrc. ### Additional context; Preparatory for future WLCG (and not only) authN/Z model.; I was thinking to something like this as a required change, but, of course, I'd need more feedback: https://github.com/root-project/root/compare/master...dciangot:davix_bearer_token?expand=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:559,feedback,feedback,559,https://root.cern,https://github.com/root-project/root/issues/6802,1,['feedback'],['feedback']
Usability,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11653:1410,simpl,simple,1410,https://root.cern,https://github.com/root-project/root/issues/11653,1,['simpl'],['simple']
Usability,"### Is your feature request related to a problem? Please describe.; When I have too much stuff in my Linux command line, I press CTRL+L and it clears everything. When I have too much stuff in my ROOT prompt, I type `.!clear` and it clears everything. ### Describe the solution you'd like; It would be nice if ROOT could capture CTRL+L and do that `.!clear` behind the scenes. If this option is added, it would be nice that it is documented somewhere in the ROOT prompt commands https://github.com/root-project/root/pull/10055. Plan B would be to allow the user to define custom 'shortcuts' in a .root_shortcuts file, where one could specify that CTRL+L bind to .!clear or whatever you want. But I guess it would be better that this comes by default for everyone as it is quite generic. ### Describe alternatives you've considered; Pressing or holding 'ENTER' many times. ### Additional context; https://root-forum.cern.ch/t/keyboard-shortcut-hot-keys-in-root-aliases/14093",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10057:143,clear,clears,143,https://root.cern,https://github.com/root-project/root/issues/10057,5,['clear'],"['clear', 'clears']"
Usability,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8427:370,clear,clear,370,https://root.cern,https://github.com/root-project/root/pull/8427,1,['clear'],['clear']
Usability,"### This Pull request:; ; Hi @guitargeek, this PR is just to refactor the simple class in; RooLagrangianMorphFunc::Config as a struct to keep it's usage apparent.; Let me know what you think !; ; #### Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9180:74,simpl,simple,74,https://root.cern,https://github.com/root-project/root/pull/9180,1,['simpl'],['simple']
Usability,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:685,guid,guide,685,https://root.cern,https://github.com/root-project/root/pull/15972,2,"['Simpl', 'guid']","['Simply', 'guide']"
Usability,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1665,Clear,Clear,1665,https://root.cern,https://github.com/root-project/root/issues/11330,1,['Clear'],['Clear']
Usability,"#8569 set the ClassDef version to 1, while it was zero before. Zero was a special value meaning ""no I/O needed"" (see https://root.cern.ch/root/html534/guides/users-guide/AddingaClass.html#motivation). This PR/commit resets it to zero. Fixes #8652.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8653:151,guid,guides,151,https://root.cern,https://github.com/root-project/root/pull/8653,2,['guid'],"['guide', 'guides']"
Usability,"(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }; ```; ## Setup. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:3416,clear,clear,3416,https://root.cern,https://github.com/root-project/root/issues/6449,2,['clear'],['clear']
Usability,"); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538:1107,clear,clear,1107,https://root.cern,https://github.com/root-project/root/issues/10538,1,['clear'],['clear']
Usability,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14130:234,guid,guide,234,https://root.cern,https://github.com/root-project/root/pull/14130,1,['guid'],['guide']
Usability,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16579:521,simpl,simplify,521,https://root.cern,https://github.com/root-project/root/pull/16579,1,['simpl'],['simplify']
Usability,* Remove man pages for non-existing binaries; They might have existed in the past: g2rootold genmap proofserva roota. * Install generated man pages in the correct subdirectory (man/man1). * Use the correct library name in the plugin definitions. * Remove obsolete plugin definition; libPeac was removed in version 5.34.01. * Simplify rule; No need to exclude files that no longer exists. * TWebVirtualX was removed - remove plugin definition using it; See commit a07af0afbe2e26237bf8ca059abc34255378a070. * Don't download input file if it already exists; This allows running the tests with pre-fetched file in environments without network - like e.g. the Fedora package build server. * Python 3 compatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4026:325,Simpl,Simplify,325,https://root.cern,https://github.com/root-project/root/pull/4026,1,['Simpl'],['Simplify']
Usability,"* Revert changes to `emitLLVMUsed`: clearing the vectors `LLVMUsed` and `LLVMCompilerUsed` does not seem; needed because `CodeGenerator::StartModule` will swap the entire `CodeGenModule`.; * Revert changes to `SourceManager::isBeforeInTranslationUnit`: if assertions are enabled `llvm_unreachable` has the same effects as `assert(0)`. As we don't see this assertion in recent times, this change is probably not relevant anymore.; * Revert change in `SourceLocation::isBeforeInTranslationUnitThan`: I believe that all locations have a `SourceManager` nowadays, even from the command line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181:36,clear,clearing,36,https://root.cern,https://github.com/root-project/root/pull/13181,1,['clear'],['clearing']
Usability,"* Since the `RooAbsMinimizeFcn` implementations don't need to be copied; anymore, we can use `std::unique_ptr` instead of `shared_ptr` for; clear ownership and less overhead. * Name variables to be consistent with RooFit style. * Streamline `public` and `private` scopes. * Avoid code duplication with new private member function that applies a; specific call to both the regular likelihood and the likelihood in the; gradient. * Additional commit fixes memory leaks of toy datasets in `TestStatistics` tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12361:140,clear,clear,140,https://root.cern,https://github.com/root-project/root/pull/12361,1,['clear'],['clear']
Usability,* TBranch::GetEntriesSerialized: actually reuse baskets inside of simply leaking them; This applies fixes that were introduce to GetBulkEntries in 61c9927 and 60ad148; * Prevent leak of ready-to-reuse basket. This fixes https://github.com/root-project/root/issues/11853,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11862:66,simpl,simply,66,https://root.cern,https://github.com/root-project/root/pull/11862,1,['simpl'],['simply']
Usability,"* The `RooStatsUtils::MakeCleanWorkspace` function was implemented by ATLAS framework developers, who remain its only users until now. * They requested changing the function in #7823 and there is no clear reason to deny this request. Closes #7823.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16339:199,clear,clear,199,https://root.cern,https://github.com/root-project/root/pull/16339,1,['clear'],['clear']
Usability,"* added a paragraph on ""creating a TDataFrame"", including a TDF from scratch; * added examples and short explanations for string expressions for `Define` and `Filter`; * added a minimal example of creation of a TDF from scratch, including snapshotting to a new data-set; * switched ""branch"" with ""column"" where we are not specifically talking of a TTree. I am also waiting for feedback from @hshe824 who is kindly taking a look at it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/764:377,feedback,feedback,377,https://root.cern,https://github.com/root-project/root/pull/764,1,['feedback'],['feedback']
Usability,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8001:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/8001,1,['simpl'],['simple']
Usability,* speed up `RooProdPdf::getConstraints()`; * don't waste time trying to undo changes to computation graph in BatchMode; * some typo and documentation fixes. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12051:72,undo,undo,72,https://root.cern,https://github.com/root-project/root/pull/12051,1,['undo'],['undo']
Usability,* use default members initializers; * use `override` specifier to clearly identify re-implemented methods; * use `nullptr` instead of 0 for all pointer values; * provide `= delete` specifier for non-implemented copy constructor and assign operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4305:66,clear,clearly,66,https://root.cern,https://github.com/root-project/root/pull/4305,1,['clear'],['clearly']
Usability,"**Need**:. The need for a new evaluation metric for testing the convergence of the optimizer is essential. The already existing metric was maximumRelativeError() between two matrices which takes the maximum of all the relative errors between its individual elements. But the relative error between these elements depends on the element values. i.e. Relative error between a and b = abs(a-b)/(abs(a)+abs(b)). Let use consider 2 cases,. case a) If two values are a = 0.0001 , b = 0.0002, relative error = 0.3333; case b) If two values are a = 10.0001 b = 10.0002 relative error = 4.99992e-6 . Since the unit tests for optimizer is written in a way so that a sample 3 layer DNN will learn this function Y = K * X. So, If X = I ( Identity matrix ), then Y = K * I = K. This should be equivalent to the output of the trained DNN when I is feed as Input. Let Y' be the output of the trained DNN. So I need to compare the matrices K and Y' for approximate equality with a certain threshold. So If I use maximumRelativeError for comparing the approximate equality for two matrices, then even though the difference is small for two cases, the relative error is significantly different. So there is a need for a new evaluation metric.; ; **Goal**:. The goal of this PR is to implement new evaluation metric meanAbsoluteError() between two matrices which takes the mean of all the absolute errors of individual elements. Absolute error between a and b = abs(a-b). So both the cases described above will have the same absolute error. So I propose this would be a good choice of metric for comparing two matrices for approximate equality as needed for testing optimizers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2376:680,learn,learn,680,https://root.cern,https://github.com/root-project/root/pull/2376,1,['learn'],['learn']
Usability,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16554:597,simpl,simplifications,597,https://root.cern,https://github.com/root-project/root/pull/16554,1,['simpl'],['simplifications']
Usability,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16285:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/16285,1,['clear'],['clear']
Usability,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12610:1498,simpl,simple,1498,https://root.cern,https://github.com/root-project/root/issues/12610,1,['simpl'],['simple']
Usability,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:8007,clear,clear,8007,https://root.cern,https://github.com/root-project/root/issues/15079,1,['clear'],['clear']
Usability,", I wanted to provide an option to match multiple classes without specifying their names one by one. This can be useful, for instance, for templated classes, since we might want to apply the same pythonizor to any instantiation of the templated class no matter with what type it was instantiated (note that pythonizors are not applied to templates but to classes). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:2326,simpl,simple,2326,https://root.cern,https://github.com/root-project/root/pull/9128,1,['simpl'],['simple']
Usability,- Add PyMVA introduction and Keras documentation to TMVA Users Guide.; - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391:63,Guid,Guide,63,https://root.cern,https://github.com/root-project/root/pull/391,1,['Guid'],['Guide']
Usability,"- Change implementation of next event. Simplify updates. Update summary tree on scene changes. - Optimize streaming. - Detect web-socket close and warn user (red rectangle in topbar). - Standalone THREE renderer:; - ortho camera, compositing, camera reset, key and mouse handling (own copy of OrbitController needed); - picking, highlight and tooltips; - selection and multiple selection. - Don't execute user input from main toolbar while scene changes are processing. - Add virtual function LocalModelChanges to controll model changes in the proxy builder. - Major cleanup of several JS classes. - New class REveEllipsod (error ellipse). - Support changing of outline colors for selection/highlight. - Review / improve REveData classes, esp. for selection and projections. - REveSelection, allow a list of selection upward propagation modes, not just a single one. - Validate expressions for table views, also, check TROOT::ProcessLine staus. - Cleanup some TEve-stlye change propagation / update functions. - Merge REveElement GetMaster() and ForwardSelection() through fSelectionMaster member. - Use REveAuntAsList in REveDataItem to communicate selection between proxy builders and REveDataItem. - Improve selection handling for compounds and multi-Objec3D representations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:39,Simpl,Simplify,39,https://root.cern,https://github.com/root-project/root/pull/4617,1,['Simpl'],['Simplify']
Usability,"- Fix ROOT-9561.; TTree::Draw segfaults when passing ""A*"" as drawing option; The following macro reproduces the problem:. ```; {; TTree tree(""tree"", ""tree"");; int a, b;; tree.Branch(""a"", &a);; tree.Branch(""b"", &b);; a = 1;; b = 2;; tree.Fill();; tree.Draw(""a:b"", """", ""* A"");; }; ```. - The paragraph ""Retrieving the result of Draw"" in the TTree::Draw reference guide has been improved and updated.; - Some typos have been fixed in TTree.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5629:361,guid,guide,361,https://root.cern,https://github.com/root-project/root/pull/5629,1,['guid'],['guide']
Usability,- GetBranchNames is now a public method of RLoopManager; - fBranchNames is now RLoopManager::fValidBranchNames; - the first call to GetBranchNames evaluates the list of; valid branch names (expensive operation) and stores it; in fValidBranchNames. Subsequent calls simply return; the cached value; - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3025:265,simpl,simply,265,https://root.cern,https://github.com/root-project/root/pull/3025,2,['simpl'],"['simplified', 'simply']"
Usability,- Make sure the comments on data members are visible in the reference guide. - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7847:70,guid,guide,70,https://root.cern,https://github.com/root-project/root/pull/7847,1,['guid'],['guide']
Usability,"- Move some RenderCore specific classes and all shaders into RenderCore source tree. - Implement all existing Three.js functionality with RenderCore. - In RenderCore, further improve on existing functionality:; - Textured points - arbitrary size and shape.; - Mesh lines - arbitrary thickness.; - Object and sub-object picking through color buffer with fragment depth detection.; - Camera handling like in TEve, with ability to pick rotation center. - The development branch has been squashed to hide redundant changes. Full history is available in PR osschar/root#41. ## C++ / Server Changes. - REveManager: Make RenderCore the default rendering engine. - Stream interpreter errors and show them in client log. - Add flag fIsRCore to REveManager. - Make REvePointSet secondary-selectable. - Add parameter for projection depth in REveDataCollection. ## JS / Client Changes. - Remove error MessageBox popup during client updates. - EveManager.js: Check change bits in ImportSceneBinary when scene changes are streamed. - EveScene.js: Optimize visibility changes. - EveScene.js: pass eve_element instead of object3d in cases where it simplifies the code. - EveScene.js, GlViewer classes: Cleamup highlite/selection management so it can be abstracted for RCore. - Separate viewer-side selection processing for Three / RCore. ## Tutorials / Demos Changes. - event_demo.C: secondary select points, jet title include pT. - Tune marker sizes, colors, visual parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:1132,simpl,simplifies,1132,https://root.cern,https://github.com/root-project/root/pull/11936,1,['simpl'],['simplifies']
Usability,- Proper Doxygen formatting. A lot of documentation was not visible on the reference guide because of wrong doxygen formatting. Some comment appeared on the wrong date members.; - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7665:85,guid,guide,85,https://root.cern,https://github.com/root-project/root/pull/7665,1,['guid'],['guide']
Usability,- Remove old Windows specific limitations (leftover from ROOT 5); - Global namespace in front of ROOT::Fit to prevent compiler complaining about ROOT::Fit::ROOT::Fit::ExecutionPolicy; (maybe we should simply remove ROOT::Fit),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1742:201,simpl,simply,201,https://root.cern,https://github.com/root-project/root/pull/1742,1,['simpl'],['simply']
Usability,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7706:83,guid,guide,83,https://root.cern,https://github.com/root-project/root/pull/7706,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:993,simpl,simple,993,https://root.cern,https://github.com/root-project/root/pull/5441,1,['simpl'],['simple']
Usability,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8806:227,simpl,simple,227,https://root.cern,https://github.com/root-project/root/issues/8806,1,['simpl'],['simple']
Usability,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12786:234,clear,clear,234,https://root.cern,https://github.com/root-project/root/issues/12786,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26/02; 2. Operating system Mac Big Sur apple m1; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->binary download. ### Additional context; <!--; create a microstrip simulation with:; <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10472:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10472,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10533:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10533,16,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6645,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. For ROOT 6.27 (LCG dev23 nightly slot) I see a wrong overload resolution for pair of functions that takes argumentof type `double` and `std::complex<double>`. The complex veruison of function is invoked, whle `double` version is ignored:. see [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I would expect the proper overleoad resolution: the `double` function is inviked for `double` argument ; and `std::complex<double>` version is invoked for the `complex` argument. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see the gist [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT Version 6.27 ; 2. LCG dev3 nightly cvmfs slot, `x86_64-centos7-gcc12-opt` platform . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11924:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11924,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8902,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7626:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7626,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12540:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12540,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10572,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12326,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ```; geonwoo@geonwoo-VirtualBox:~$ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd7d1a1bc2a in __GI___wait4 (pid=4287, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd7d1a1bbeb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0) at waitpid.c:38; #2 0x00007fd7d198b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd7d203d1ce in TUnixSystem::StackTrace() () from /home/geonwoo/root/lib/libCore.so.6.22; #4 0x00007fd7d203a055 in TUnixSystem::DispatchSignals(ESignals) () from /home/geonwoo/root/lib/libCore.so.6.22; #5 <signal handler called>; #6 0x00007fd7d0566be6 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous namespace)::RedirectingFileSystem*, (anonymous namespace)::Entry*, (anonymous namespace)::Entry*) () from /home/geonwoo/root/lib/libCling.so; #7 0x00007fd7d0566d05 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous names",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6859,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; When running the same script twice in a row in the same root session, I get a segmentation fault. Same commands inline work fine. If changing TF1 to TH1, it works fine.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; void Test(); {; TF1 *crap = new TF1(""crap"",""pol0"",0.,1.);; crap->Print();. TFile *out = new TFile(""./test.root"",""recreate""); ; ; crap->Write();; ; out->Close();; delete out;; ; return;; }. .x Test.C; -->. ### Setup; <!--; 1. 6.22/03 ; 2. CentOS Linux 8; 3. Own build; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10489:595,clear,clear,595,https://root.cern,https://github.com/root-project/root/issues/10489,1,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior; Just fix it? Make it work? Or something like these... ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:; ```python; factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',; H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.24.06; 2. Operating system: Ubuntu20.04; 3. Obtain way: binary download. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9624:436,Learn,LearningRateSchedule,436,https://root.cern,https://github.com/root-project/root/issues/9624,6,['Learn'],['LearningRateSchedule']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:527,clear,clear,527,https://root.cern,https://github.com/root-project/root/issues/8152,2,['clear'],['clear']
Usability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11061:609,clear,clear,609,https://root.cern,https://github.com/root-project/root/issues/11061,2,['clear'],['clear']
Usability,"- [ ] Implement batch eval for Chi2 test stat; - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:288,clear,clear,288,https://root.cern,https://github.com/root-project/root/issues/6557,1,['clear'],['clear']
Usability,"- [ x ] Checked for duplicates. ### Describe the bug; After I write out (part of) a geometry with; ```; writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");; ```; the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says; ```; <world ref=""HcalBarrel""/>.; ```; The result is that ROOT itself cannot read the file:; ```; Info in <TGeoManager::Import>: Reading geometry from file: [...]; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. ### Expected behavior; The function should return usable gdml. I tested that if I change by hand to ; ```; <world ref=""HcalBarrel0x0x55d87ec06500""/>; ```; the file is woorking and valid. ### To Reproduce; ```; root -l $ROOTSYS/tutorials/geom/rootgeom.C; TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);; TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);; TGDMLWrite *writer = new TGDMLWrite;; writer->SetG4Compatibility(true);; writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");; .q; root -l; gGeoManager->Import(""test.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: test.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. A side bug, I cannot reproduce this with the Export option, and that; is because it doesn't recognize the f flag:; ```; root [1] gGeoManager->Export(""test.gdml"",""vgf""); Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code; Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set; ```. ### Setup; 1. 6.24.06; 2. singularity container running debian (on top of Scientific Linux 7); 3. Container maintainer installed it. ### Additional context; I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310:645,usab,usable,645,https://root.cern,https://github.com/root-project/root/issues/9310,2,"['Simpl', 'usab']","['Simple', 'usable']"
Usability,"- [ x ] Checked for duplicates. ### Describe the bug; When fitting a histogram using the ""WW"" option for TH1::Fit(), i.e.; ```; hist->Fit(func,""WW"");; ```; The fit ignores bins with zero counts, i.e. the same as the ""W"" option. ### Expected behavior; Fit should proceed with all bins with a weight of 1, even those with no counts. ### To Reproduce; ``` TH1D *hist = new TH1D(""hist"", ""hist"", 100, 0, 100);; TF1 *func = new TF1(""func"", ""[0]"", 0, 100);; func->SetParameter(0, 1);; ; hist->FillRandom(""func"", 10); //add sparse counts. hist->Draw(""hist"");. hist->Fit(func, ""WWR"");; func->Draw(""hist same"");; ; std::cout << func->GetParameter(0) << std::endl; ; ```. ### Setup; 1. ROOT version 6.27/01; 2. MacOS 12.5.1; 3. ROOT compiled from source. ### Additional context; This is pretty clear from the ROOT::Fit::FitOptionsMake function [here](https://root.cern.ch/doc/master/HFitImpl_8cxx_source.html#l00684), where on line 728 the WW option is set (correctly), and then on line 780 the W option is checked for, and overwrites the WW option flag. A trivial check that the WW option is not present at line 780, or that ```fitOption.W1 != 2``` fixes the issue, i.e. change line 780 to; ```; if (!opt.Contains(""WW"") && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```; or ; ```; if (fitOption.W1 !=2 && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11304:783,clear,clear,783,https://root.cern,https://github.com/root-project/root/issues/11304,1,['clear'],['clear']
Usability,"- [ x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9309:393,clear,clear,393,https://root.cern,https://github.com/root-project/root/issues/9309,2,['clear'],['clear']
Usability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. [Line 98 of root/tree/dataframe/src/RRootDS.cxx](https://github.com/root-project/root/blob/master/tree/dataframe/src/RRootDS.cxx#L98) looks like it might be left over from a previous incarnation. . I'm interested in finding out if this is a bug because I'm trying to subclass RDataSource, and my subclass isn't working, so perhaps I'm not properly understanding how this one worked...; <!--; A clear and concise description of what the wrong behavior is.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11971:778,clear,clear,778,https://root.cern,https://github.com/root-project/root/issues/11971,1,['clear'],['clear']
Usability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; in root interpreter, we may:; ``` c++; root [0] unsigned long a=5;; ```; and then; ```c++; root [1] b=a;; ```; and it returns a number; ```; (unsigned long) 140055251333128; ```; which is totally unexpected.; <!--. -->. ### Expected behavior; we expect to yield:; ```; (unsigned long)5; ```. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; code generally described above. ; you just need to: ; start root interpretor; ```bash; $root; ```; and run the lines in it; ```c++; root [0] unsigned long a=5;; (unsigned long) 5; root [1] b=a;; ```; note other unsigned integer types also bug.; ``` c++; root [2] unsigned int c; (unsigned int) 0; root [3] d=c; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression. root [4] unsigned char e=5; (unsigned char) '0x05'; root [5] f=e; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression; ```. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; splash screen; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812:684,clear,clear,684,https://root.cern,https://github.com/root-project/root/issues/6812,1,['clear'],['clear']
Usability,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840:619,usab,usable,619,https://root.cern,https://github.com/root-project/root/issues/12840,1,['usab'],['usable']
Usability,"- [V ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12452:392,clear,clear,392,https://root.cern,https://github.com/root-project/root/issues/12452,2,['clear'],['clear']
Usability,"- [V] Checked for duplicates. ### Describe the bug; RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise; - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce; I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000:790,simpl,simply,790,https://root.cern,https://github.com/root-project/root/issues/8000,2,['simpl'],['simply']
Usability,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7713:415,clear,clear,415,https://root.cern,https://github.com/root-project/root/issues/7713,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 ; 0.01 1 0.01 ; 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 ; -0.1825 1.179 0.02375 ; 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed.; I tried this on several platforms, with identical results.; I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);; m(0,0) = m(1,1) = m(2,2) = 1;; m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;; m(0,2) = m(2,0) = 0.01;; cout << ""Initial matrix : "" << endl;; m.Print();. cout << ""Determinant : "" << endl;; cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);; TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;; eigenVal.Print();; ; TMatrixD eigenVec = mtm.GetEigenVectors();; TMatrixD eigenVecT = mtm.GetEigenVectors();; eigenVecT.T();; cout << ""EigenVectors (Q): "" << endl;; eigenVec.Print();; ; TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;; cout << ""Q*D*QT : "" << endl;; mCheck.Print();. ### Setup. Root 6.22, EL7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7850:90,simpl,simple,90,https://root.cern,https://github.com/root-project/root/issues/7850,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates. ### Describe the bug; After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior; The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window); > c:\root_v6.24.06\bin\thisroot.bat; > python; >>> import ROOT; >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup; ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23); Windows 11 Pro; Python 3.8.10 (32-bit) ; VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context; ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9645:311,responsiv,responsive,311,https://root.cern,https://github.com/root-project/root/issues/9645,1,['responsiv'],['responsive']
Usability,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099:814,simpl,simple,814,https://root.cern,https://github.com/root-project/root/issues/11099,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates. ### Describe the bug; When ROOT is configured with `-Druntime_cxxmodules:BOOL=OFF`, then deprecation warnings (from `[[deprecated]]`) are not shown in the Cling interpreter. ### Expected behavior; * Either warnings should be shown in `-Druntime_cxxmodules:BOOL=OFF` configurations; * Or the behaviour should be documented in a clear and concise way. ### To Reproduce. With `-Druntime_cxxmodules:BOOL=OFF`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root -q -l foo.C. Processing foo.C...; $; ```. With `-Druntime_cxxmodules:BOOL=ON`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root.exe -q -l foo.C. Processing foo.C...; input_line_9:2:2: warning: 'foo' is deprecated [-Wdeprecated-declarations]; foo() /* '.x' tries to invoke a function with the same name as the macro */; ^; /tmp/foo.C:1:3: note: 'foo' has been explicitly marked deprecated here; [[deprecated]] void foo() { }; ^; ```. ### Setup. 1. ROOT version: 6.22.08 and 6.24.06; 2. Linux (Debian-10 for me, other OS for others); 3. Built from source using private spack rules, built straight from source. ### Additional context; See discussion on the ""Cling"" Channel in Mattermost. cc: @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9815:357,clear,clear,357,https://root.cern,https://github.com/root-project/root/issues/9815,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When plotting to SVG file the way; ```c++; hist->Draw();; gPad->Print(""hist.svg"");; ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Prepare the reproduction code; `Reproduce.C`; ```c++; #include<TCanvas.h>; #include<TPad.h>; #include<TFile.h>; #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {; TCanvas::MakeDefCanvas();; TFile *tfIn = TFile::Open(pathFileIn);; TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));; hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");; hpxLongTitle->Draw();; gPad->Print(""hpxLongTitle.svg"");; tfIn->Close();; }. int main(int argc, char* argv[]) {; if ( argc > 1 ) {; Reproduce(argv[1]);; } else {; Reproduce();; }; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9514:705,clear,clear,705,https://root.cern,https://github.com/root-project/root/issues/9514,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A reproducer:. ```python; import ROOT; print(ROOT.gSystem.GetIncludePath()); ROOT.vector('int')(); print(ROOT.gSystem.GetIncludePath()); ```. prints . ```; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7"" -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""; ```. Note that the second line contains ` -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""`, which wasn't there before a `ROOT.vector` was instantiated. That's problematic because the user might not have permissions to access the build directory (while it can access the install directory) leading to cling errors. This is with ROOT master@028fcca0fa , compiling ROOT with `cmake -DCMAKE_BUILD_TYPE=Debug -Dccache=ON -Ddev=ON -Droofit=OFF -Dtmva=OFF -Dtesting=ON -Droottest=ON ../root`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7108,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. As far as I understand, this should work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7708:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7708,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7366,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7377,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Compiling ROOT with Python 3.9 produces a large number of deprecation warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8128:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8128,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The exit status of `root --help` is 1, not 0. The [exit status](https://en.wikipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11977,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7547:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7547,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7311,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The symptom is the following:. ```; /usr/bin/mkdir -p /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage; installing libAfterImage headers using command -; ""-m 644 <header> /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage"" :; afterimage.h afterbase.h ascmap.h asfont.h asim_afterbase.h asimage.h asimagexml.h asstorage.h asvisual.h blender.h bmp.h char2uni.h draw.h export.h imencdec.h import.h pixmap.h scanline.h transform.h ungif.h xcf.h ximage.h xpm.h xwrap.h. /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7786:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7786,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8850,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Weird/wrong results printed when converting different entities to `bool`:. 1.; ```; root [0] int foo = 42; (int) 42; root [1] (bool)foo; (bool) true; root [2] bool(foo); (bool) false; ```. 2.; ```; root [0] const char *foo = ""asda""; (const char *) ""asda""; root [1] !foo; (bool) false; root [2] bool(foo); (bool) false; root [3] bool(foo[0]); (bool ([0]) @0x55c4ba66f180; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8304,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7345,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `GetLeaf(branchname, leafname)` seems to ignore the `branchname` argument if friend trees are present -- or in any case, it returns a non-null pointer even for a bogus `branchname` argument, but only if friend trees are present. Note that depending on the situation this might result in wrong data being read. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `GetLeaf(branchname, leafname)` should return the same pointer whether a friend tree is present or not. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints 0 as expected. TFile f2(""f.root"");; auto *t2 = f2.Get<TTree>(""t"");; t->AddFriend(t2);; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints the address of leaf `x`, unexpected. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I am using master@a7cceb7478e . ### Additional context; <!--; Add any other context about",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6964:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6964,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; C++ class members can be initialized in PyROOT through a constructor but it seems not working through object properties. See details and reproducer in [the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should be possible to initialize class members through object properties. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum post]([the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7501:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7501,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10240,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Everytime I call fitTo there seems to be various roofit objects that are created and are not cleaned after every iteration. I cannot get RooTrace::dump() to output anything but I am able to use RooTrace::printObjectCounts() to output the object counts. It seems fitTo creates a bunch of RooAbsCollection objects that are not cleaned which starts to consume all the memory. I can see the resident memory usage go up when looking at the top command. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Well, ideally, I hope that I would be able to call fitTo all the times I would like. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; I will include it here since it is really short program. ```; void test(){. RooTrace::active(kTRUE);; RooTrace::mark();; RooRealVar x(""x"",""x"",-10,10);; RooDataSet d(""d"",""d"",RooArgSet(x));; RooRealVar s(""s"",""s"",1,1,10);; RooRealVar m(""m"",""m"",0,-10,10);; RooGaussian g(""gauss"",""gauss(x,m,s)"",x,m,s);; RooPlot *f=x.frame();; for (Int_t j=0; j<300; ++j){; x.setVal(gRandom->Gaus(0,1));; d.add(x);; }; for (Int_t i=0; i<10; i++) {; cout << ""\n------------------------------\nStart iteration "" << i << endl;. cout << ""Before fitting"" << endl;; RooTrace::printObjectCounts();. g.fitTo(d,RooFit::PrintLevel(-1));//,RooFit::SumW2Error(tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6975:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6975,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7460:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7460,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7213,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When building with native LLVM (with CMake flag `-Dbuiltin_llvm=OFF`) with Nix and Nixpkgs, the builder tries to place `lib/cmake/cling/ClingConfig.cmake.tmp` under the read-only `/path/to/native/llvm/lib/`, and gets System Error. Not sure if this issue is reproducible on other platforms. Partial command line output:; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11920,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When calling the `TH1::GetCumulative()` method, it should generate a cumulative histogram and with its error (`fSumw2`) set, and should not change the original histogram. However, it turns out that it doesn't set the error for the new histogram, but (incorrectly) modify the bin error of the original histogram into the value that should have been assigned to the generated histogram. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The `TH1::GetCumulative()` method generates the corresponding cumulative histogram with `fSumw2` set (when the original histogram has its `fSumw2` set) while keeping the original histogram intact. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; In the ROOT interactive prompt,; ```; root [0] TH1 *h1 = new TH1D(""h1"", ""h1"", 8, 0., 8.);; root [1] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [2] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [3] h1->GetBinError(1); (double) 0.70710678; root [4] h1->GetBinError(2); (double) 0.70710678; root [5] sqrt(2) / 2; (double) 0.70710678; root [6] TH1 *h1Cumu = h1->GetCumulative(false);; root [7] h1Cumu->GetBinError(1); (double) 0.0000000; root [8] h1Cumu->GetBinError(2); (double) 0.0000000; root [9] h1->GetBinError(1); (double) 2.0000000; root [10] h1->GetBinErro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11947:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11947,2,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9087,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:925,clear,clear,925,https://root.cern,https://github.com/root-project/root/issues/8435,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; If attempting to create multiple snapshots simultaneously of some RDF's children nodes, ROOT crashes. This follows up on a discussion in the thread here:; https://root-forum.cern.ch/t/snapshot-shuffles-data-invisibly-with-implicitmt/43473/8?u=nmangane. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500:667,clear,clear,667,https://root.cern,https://github.com/root-project/root/issues/7500,1,['clear'],['clear']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:944,simpl,simplest-,944,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; `Redefine()` is a new method added on the master branch to allow re-definition to an existing column. However, segmentation violation occurs when trying to redefine a defined column. ### Expected behavior; Defined columns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:938,simpl,simple,938,https://root.cern,https://github.com/root-project/root/issues/8857,1,['simpl'],['simple']
Usability,"- [X] Checked for duplicates; None found. ### Describe the bug; Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in; ```; clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int); ```; See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) .; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; A successful build ;-) .; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; LCG nightlies (lcgcmake). Did not try yet in standalone.; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT master; 2. Operating system: centos7, centos8; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context; None for the moment",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594:475,clear,clear,475,https://root.cern,https://github.com/root-project/root/issues/9594,2,['clear'],['clear']
Usability,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8141:676,simpl,simply,676,https://root.cern,https://github.com/root-project/root/issues/8141,1,['simpl'],['simply']
Usability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:816,guid,guide,816,https://root.cern,https://github.com/root-project/root/issues/12787,1,['guid'],['guide']
Usability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `sudo root --notebook --log-level 10 --allow-root` works; `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds.; There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:; `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`; and noticed that the kernel freezes on line 57:; `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version: 6.22/02; 2. arch linux; 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608:392,clear,clear,392,https://root.cern,https://github.com/root-project/root/issues/6608,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:177,undo,undocumented,177,https://root.cern,https://github.com/root-project/root/issues/8633,1,['undo'],['undocumented']
Usability,"- [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process.; While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce; E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`; 2. Operating system: CentOS7; 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10586:449,user-friendly,user-friendly,449,https://root.cern,https://github.com/root-project/root/issues/10586,1,['user-friendly'],['user-friendly']
Usability,"- [x] Checked for duplicates. ### Describe the bug. Supplying invalid values (np.nan) to TGraph does not warn me of invalid data, and the TGraph collapses into a single line. The same thing happens for TGraphErrors as well. For a user such as myself, it takes time to figure out what is going on. I've had many problems with ROOT not drawing something, so it took quite a lot of debugging to figure out the problem was the data this time. It would improve user experience and save time for end users. ### Expected behavior. Warning or exception should be raised. Optionally, an empty graph can be drawn. . ### To Reproduce; Reproducible code with a bug (with np.nan values):; ```; import ROOT; canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values, ; np.arange(num_values, dtype='float'), ; np.full(num_values, fill_value=np.nan)); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```; ![image](https://user-images.githubusercontent.com/22337362/218409911-59aa5edb-e2d2-4410-b3e9-0159b3750721.png). Reproducible code **without** a bug (with valid y-axis values):; ```; import ROOT; canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values, ; np.arange(num_values, dtype='float'), ; np.arange(num_values, dtype='float')); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```; ![image](https://user-images.githubusercontent.com/22337362/218409848-d88d2b5d-c4f6-4e0c-b02d-cb4a74bc49f0.png). <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Using ROOT inside SWAN. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296:456,user experience,user experience,456,https://root.cern,https://github.com/root-project/root/issues/12296,1,['user experience'],['user experience']
Usability,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:347,clear,clearly,347,https://root.cern,https://github.com/root-project/root/issues/11797,1,['clear'],['clearly']
Usability,"- [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:; ```cpp; // sink is destroyed before model; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());; sink.Create(*model.get());; // uncomment to run successfully; // model = nullptr; ; } ; ```; ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```; The following sequence is seemingly to blame (worked out with @jblomer):; 1. The model owns fields; 2. On `sink.Create()`, these fields get their columns connected to the page sink ; 3. The columns get their pages allocated from the page sink; 4. On destruction, the columns ask the page sink to help the free the pages; 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: ; https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; ROOT master. ### Additional context; This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8581:1176,clear,clear,1176,https://root.cern,https://github.com/root-project/root/issues/8581,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough; ```python; ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""); ```. Then the following snippet; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TEntryList.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505:60,clear,clear,60,https://root.cern,https://github.com/root-project/root/issues/8505,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior; ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):; ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781:212,simpl,simple,212,https://root.cern,https://github.com/root-project/root/issues/11781,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior; There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:; ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce; ```console; auto* geo = TGeoManager::Import(""overlap_issue.gdml""); geo->CheckOverlaps(); geo->PrintOverlaps(); auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); TGeoChecker ch(geo); overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); overlap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:178,simpl,simple,178,https://root.cern,https://github.com/root-project/root/issues/11784,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7627:611,guid,guide,611,https://root.cern,https://github.com/root-project/root/issues/7627,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"- [x] Checked for duplicates. ### Describe the bug; In the ROOT prompt, `.?` prints a slightly outdated help message. Both the Cling-specific part (MetaSema) and the ROOT-specific special commands (TApplication) need revision. ### Expected behavior; All options are documented, and outdated ones are removed. - [x] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb; - [x] .![shell]; - [x] .qqqqq; - [x] "" "" << metaString << ""R [user@]host[:dir] [-l user] [-d dbg] [script]\t- Launch process in a remote host\n""; - [x] "" "" << metaString << ""demo\t- Launch GUI demo\n""; - [x] "" "" << metaString << ""credits\t- Show credits\n""; - [x] "" "" << metaString << ""license\t- Show license\n""; - [x] CTRL+D also works as a way to exit; - [x] CTRL+C can interrupt; - [x] CTRL+Z pauses job; - [x] CTRL+L clear screen; - [x] CTRL+Del Ctrl Left Ctrl Right Ctrol Backspace https://github.com/root-project/root/pull/10091; - [x] CTRL+S for forward search https://github.com/root-project/root/issues/10137; - [x] .exit; - [x] .quit; - [x] .typedef; - [x] .include; - [x] Specify also a new command, e.g. .flags, to show ; - [x] .undo / .U to unload the last n input lines doesn't seem to work; - [x] .O1 to set the optimization level is implemented even if .help says it's not; - [x] Translate 0x1F code etc to key name; - [x] Clarify what .files and .fileEx and .stats mean. ### To Reproduce; `.?`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:1015,pause,pauses,1015,https://root.cern,https://github.com/root-project/root/issues/10065,2,"['clear', 'pause']","['clear', 'pauses']"
Usability,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387:640,simpl,simple,640,https://root.cern,https://github.com/root-project/root/issues/8387,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates. ### Describe the bug; When root fails to load the dictionary payload it used to give a clear message that a header file couldn't be included.; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:117,clear,clear,117,https://root.cern,https://github.com/root-project/root/issues/6791,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11519:830,learn,learn,830,https://root.cern,https://github.com/root-project/root/issues/11519,1,['learn'],['learn']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:531,clear,clear,531,https://root.cern,https://github.com/root-project/root/issues/7881,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:799,simpl,simple,799,https://root.cern,https://github.com/root-project/root/issues/9744,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7558:1101,simpl,simple,1101,https://root.cern,https://github.com/root-project/root/issues/7558,1,['simpl'],['simple']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12755,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A seemingly valid usage of TTreeReader with friends causes a segfault because of the dereference of a null `directorTree`:. ```c++; #8 0x00007f58ac8f3cac in GetFriendBranchName (directorTree=0x0, branch=0x561d8a909570, fullBranchName=0x561d8a909589 ""x"") at ../../../root_dbg/tree/treeplayer/src/TBranchProxy.cxx:116; #9 0x00007f58ac8f3fe8 in ROOT::Detail::TBranchProxy::TBranchProxy (this=0x561d8a901cf0, boss=0x561d88ead730, branchname=0x561d8a909589 ""x"", branch=0x561d8a909570, membername=0x7ffdab5e1a89 """") at ../../../root_dbg/tree/treeplayer/src/TBranchProxy.cxx:133; #10 0x00007f58ac999032 in ROOT::Internal::TNamedBranchProxy::TNamedBranchProxy (this=0x561d8a901cf0, boss=0x561d88ead730, branch=0x561d8a909570, fullname=0x7ffdab5e1ae0 ""t2.x"", proxyname=0x561d8a909589 ""x"", membername=0x7ffdab5e1a89 """") at ../../../root_dbg/tree/treeplayer/inc/TTreeReaderUtils.h:52; #11 0x00007f58ac997941 in ROOT::Internal::TTreeReaderValueBase::CreateProxy (this=0x7ffdab5e1da0) at ../../../root_dbg/tree/treeplayer/src/TTreeReaderValue.cxx:644; #12 0x00007f58ac988287 in TTreeReader::SetProxies (this=0x7ffdab5e2070) at ../../../root_dbg/tree/treeplayer/src/TTreeReader.cxx:356; #13 0x00007f58ac98901b in TTreeReader::SetEntryBase (this=0x7ffdab5e2070, entry=0, local=false) at ../../../root_dbg/tree/treeplayer/src/TTreeReader.cxx:609; #14 0x0000561d87cc8858 in TTreeReader::SetEntry (this=0x7ffdab5e2070, entry=0) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:191; #15 0x0000561d87cc8829 in TTreeReader::Next (this=0x7ffdab5e2070) at /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6993,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8578,2,"['clear', 'learn']","['clear', 'learn']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12151,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building git master with #12154 on top results in the following build error:. ```; FAILED: core/G__Core.cxx lib/Core.pcm /home/stephan/Projects/ROOT/builddir/core/G__Core.cxx /home/stephan/Projects/ROOT/builddir/lib/Core.pcm ; cd /home/stephan/Projects/ROOT/builddir/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/stephan/Projects/ROOT/builddir/lib: /home/stephan/Projects/ROOT/builddir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/stephan/Projects/ROOT/builddir/lib/libCore.so -excludePath /home/stephan/Projects/ROOT -excludePath /home/stephan/Projects/ROOT/builddir/ginclude -excludePath /home/stephan/Projects/ROOT/builddir/externals -excludePath /home/stephan/Projects/ROOT/builddir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/x86_64-linux-gnu/c++/12 -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -I/home/stephan/Projects/ROOT/builddir/include -I/usr/include -I/home/stephan/Projects/ROOT/builddir/ginclude -I/home/stephan/Projects/ROOT/core/base/inc -I/home/stephan/Projects/ROOT/core/base/v7/inc -I/home/stephan/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12156,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building master (+ fix for #12151) with `builtin_llvm=OFF` results in this build error:. ```; [5940/8663] /usr/lib/ccache/c++ -I""/<<PKGBUILDDIR>>/core/dictgen/res"" -I""/<<PKGBUILDDIR>>/core/dictgen/src"" -I""/<<PKGBUILDDIR>>/core/foundation/res"" -I""/<<PKGBUILDDIR>>/core/clingutils/res"" -I""/<<PKGBUILDDIR>>/core/base/inc"" -I""/<<PKGBUILDDIR>>/core/clib/inc"" -I""/<<PKGBUILDDIR>>/core/meta/inc"" -I""/<<PKGBUILDDIR>>/core/foundation/inc"" -I""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/ginclude"" -I""/<<PKGBUILDDIR>>/interpreter/cling/include"" -isystem ""/<<PKGBUILDDIR>>/interpreter/llvm/src/tools/clang/include"" -isystem ""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/interpreter/llvm/src/tools/clang/include"" -isystem /usr/lib/llvm-13/include -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12152,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7788,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported [here](https://root-forum.cern.ch/t/tchain-parallel-reading-more-than-1-branch/42348/13).; For this TTree (the file is linked from the forum post):. ```; root [12] DmpMCEvtNtup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6881,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. This is still the case if an external constraint is used:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9490,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10503,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooReal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11017:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11017,2,"['clear', 'simpl']","['clear', 'simplified']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. In ROOT 6.29 (dev3 LCG nightly slot on cvmfs) RooMomentMorphND cause segmentation fault. . (there is no fault e.g. for ROOT 6.26/04 ( LCG_102 LCG slot on cvmfs); ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. No segmentation faults... . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. My oversimplified script in https://gist.github.com/VanyaBelyaev/2373dae80b24b74d75026420efde8043 . Usage on cvmsf, LCG dev3 nightly slot (ROOT 6.29/01) : . ( source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . one gets segfaultt . while for LCG_102 slot on cevmfs (ROOT 6.26/04) everything is OK :. ( source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. - ROOT 6.29/01; - lxplus @ CERN; - LCG dev3 nightly slot ; ; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12155:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12155,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12653,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7669,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9583,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7662:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7662,3,"['clear', 'simpl']","['clear', 'simply']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7067,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7982,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I created a 5D binning from some data. The `FindBin` function returns seemingly non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10784,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. ; In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off).; The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; void test_roosimcrash() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);; catThr.addThreshold(1./3, ""v0"", 0);; catThr.addThreshold(2./3, ""v1"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10473:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10473,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11578,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10538,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If I call `TH1::GetXaxis()->SetRange`, the Yaxis range automatically adjusts to zoom in on the selected bins. For `THStack::GetXaxis()->SetRange`, however, this is not the case–the Yaxis retains the same range it had before. Originally reported in the [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `THStack::GetXaxis()->SetRange` should result in a re-zoom of the Yaxis so that the bins in-range are visible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins).; ```python; import ROOT as r; h1 = r.TH1F(""h1"", ""h1"", 100, 0, 100); for i in range(int(1e6)):; h1.Fill(r.gRandom.Gaus(20, 5)); c = r.TCanvas(); h1.Draw() # full range shown; h1.GetXaxis().SetRange(1, 6); c.Update() # Yaxis zooms in to show content in bins 1 to 6; h2 = r.TH1F(""h2"", ""h2"", 100, 0, 100); for i in range(10):; h2.Fill(r.gRandom.Gaus(9, 5)); hs = r.THStack(); hs.Add(h1); hs.Add(h2); hs.Draw() # note Yaxis range; hs.GetXaxis().SetRange(1, 6); c.Update() # Yaxis range has not changed, making it difficult to see the bins; ```. ### Setup; <!--; 1. ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6991:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6991,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11496:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11496,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8641:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/8641,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In TColor::GetColorTransparent() (see https://root.cern.ch/doc/master/classTColor.html#ae666674d7087b2b709abebde22667c50); a new color is defined each time a transparent color (with alpha channel) is requested. In graphics applications with many transparent objects this leads quickly to exhausting the available index space of colors. At some point the int returned turns negative and the colors displayed are not what they should be. . There does not seem to be a way to reset the entire color space in use by ROOT to simply start over. This would not fix the underlying problem but would at least provide a workaround. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected behavior is that transparent colors are re-used like any other color and no new color index is needed when requesting an already used transparent color again. ; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; type ; TColor::GetColorTransparent(1,0.1); repeatedly on the commandline in ROOT. Each time the function is called a higher integer is returned even though the same transparent color is wanted. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: 6.24/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10299:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10299,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In a `RooAddPdf`, the coefficients are tied to the normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12645,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In the current master, the interpolation that is implemented for code2 and for code3 are exactly the same. Code2: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00426; Code3: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00440. According to the comment for code3 this interpolation should implement ""a parabolic version of log-normal"" but a parabolic with linear extrapolation is implemented again (as for code2). Another small improvement/clarification (only related to a comment) could be made in this line: https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l00729. It states that a linear extrapolation is used for code4 but looking at the actual code an exponential extrapolation is implemented: https://root.cern/doc/master/FlexibleInterpVar_8cxx_source.html#l00455. The described issues also seem to be present in v6.18, v6.20 and v6.22 (I didn't check older releases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7103:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7103,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:; ```; for (int j = 0; j < 20000; j++) {; hzmodel.Sample(&flux_real[0]);; if(j<10); std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;; ```; output. ```; 1 5.73992 4.99711 4.88; 2 5.73992 4.99711 5.26624; 3 5.72944 4.99459 5.25179; 4 5.34123 4.99459 5.25179; 5 5.34123 4.96792 5.25179; 6 5.34123 4.96792 5.2696; 7 5.26477 4.99232 5.52042; 8 5.59451 4.99232 5.52042; 9 5.59451 5.04631 5.52042; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; By calling `SampleMulti`, all components should be randomized. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; tested on ; ubuntu 20.04 + ROOT v6.26.00 (wget); ubuntu 20.04 + ROOT v6.24.06 (wget); MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10222,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12652:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12652,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; Python 3.9.6 (default, Sep 6 2021, 15:36:22) ; [GCC 11.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> gROOT = ROOT.gROOT; >>> gROOT.ProcessLine('enum Enum { a,b,c }'); 0; >>> ROOT.Enum; <class 'ROOT._facade.Enum'>; >>> ROOT.Enum.a; 0; >>> ROOT.Enum.b; 1; >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'); 0; >>> ROOT.Track.Type.a; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: type object 'int' has no attribute 'a'; >>> ROOT.Enum.a; 0; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9246:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9246,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT Vc/vector.h and std::chrono both use at least four same names in their namespaces, i.e. floor, ceil, round, and abs. std:: and std::chrono:: are the different name spaces of course, but trying to instantiate an std::chrono::time_point doesn't compile if a compilation unit include's Vc/vector.h header as well (or any that includes it, such as Math/Minimizer.h etc). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should compile. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Here is an example:. ```; #include ""Vc/vector.h""; #include <chrono>. void foo() {; std::chrono::time_point<std::chrono::system_clock,; std::chrono::nanoseconds> tp;; std::chrono::floor<std::chrono::seconds>(tp);; }; ```; Trying to build; ```; $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; In file included from a.cpp:1:; In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:; /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T.""; static_assert(std::is_arithmetic<T>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11934:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11934,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11332,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10777,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Running `ROOT::GetImplicitMTPoolSize()` gives the error message; `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`.; Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Start an interactive session of ROOT.; Run `ROOT::GetImplicitMTPoolSize()`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs).; No error in version 6.20/07. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10413,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12520:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12520,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L55",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7861,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The GL geometry viewer allows ""picking"" the center of view for a drawn geometry. This is not working correctly on Mac.; In a different context: TGeo ray-tracing relies on pixel-to-model coordinates conversion to create rays in the model coordinate system for each viewport pixel and then intersect the model. The ray-traced image on mac shows ""gaps"" (see below) compared to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12035,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/9468,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11602,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The output file of TFileMerger is never deleted, thus all the merging can happen correctly.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6640,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11245:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11245,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10984,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When creating a RooDataSet from a PDF using RooAbsPdf::generate() and afterwards plotting it in a specific region using RooDataSet::reduce() the internal weights of the reduced RooDataSet are broken, i.e. they are all set to 1. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The weights of the reduced RooDataSet should not change to 1 when calling RooDataSet::reduce(). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run included macro with ```root broken_weights.C```. ```C; #include ""RooStats/HistFactory/Measurement.h""; #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h""; #include ""TFile.h""; #include ""TROOT.h""; ; using namespace RooStats;; using namespace HistFactory;. void create_test_ws(){; // taken from https://root.cern.ch/doc/v608/histfactory_2example_8C_source.html; std::string InputFile = ""example.root"";; // Create the measurement; Measurement meas(""meas"", ""meas"");. meas.SetOutputFilePrefix( ""./results/example_UsingC"" );; meas.SetPOI( ""SigXsecOverSM"" );; meas.AddConstantParam(""alpha_syst1"");; meas.AddConstantParam(""Lumi"");. meas.SetLumi( 1.0 );; meas.SetLumiRelErr( 0.10 );; meas.SetExportOnly( true );; meas.SetBinHigh( 2 );. // Create a channel. Channel chan( ""channel1"" );; chan.SetData( ""data"", InputFile );; chan.SetSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6951:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/6951,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10991,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When importing data from a TTree, I specify a set of `RooRealVar`s that tell RooFit which branches I want to pull data from. It is my understanding that if a value is less than the bounds of a particular `RooRealVar`, it is excluded. This is not in fact the case. One issue stems from [this method](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L93) or [this line in the code](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11954,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7987,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When passing a argument to a formula based RooFit function (e.g. `RooFormulaVar` or `RooGenericPdf`), RooFit will search for all occurrences of the object name in the formula and replace them with an ordinal parameter (needed for the underling `TFormula`). However, when the argument is a `RooConst` the name is just a string containing the value and this can break if there are numeric literals inside the formula.; For example; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```; becomes inside the `TFormula`; ```; x[0].7*x[0]; ```; because the name 2 of the `RooConst` matched the 2 of the numeric literal. This of course breaks during formula compilation. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The variables do not replace numeric literals no matter the name. Possibly `RooConst`s should be matched only by index?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; HEAD of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->; `RooFormulaVar f(""f"", ""2.7*@0"", RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11992,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11482,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/11421,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `GetValue` of an RDF complex type column gives the following error:; ```bash; Column type: _Complex double; <cppyy.gbl.ROOT.RDF.RResultPtr<vector<_Complex double> > object at 0x7fc929ee8430>; Error pythonizing class std::vector<_Complex double>:; Traceback (most recent call last):; File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/10522,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12579:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12579,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooKeysPdf` do not have an internal generation method, and relies on numerical generation (e.g. `RooAcceptReject`).; However, if the call to generate contains `ProtoData`, the distribution of the generated data is not correct. ; I tried the same with other numerically generated pdf, specifically `RooGenericPdf`, but only `RooKeysPdf` seems to be affected.; This may be caused by a bad interaction between `RooKeysPdf` and `RooAcceptReject`, since adding a prototype switches the generator from `RooFoamGenerator` to `RooAcceptReject`.; I verified that forcing `RooFoamGenerator` (which I can only do by recompiling ROOT, as far as I know) solves the issue. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Generation works correctly regardless of prototype data. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); pdf_x = ROOT.RooGenericPdf('pdf_x', 'x', [x]). # correct, of course; dt_base = pdf_x.generate({x}, NumEvents = 10000). pdf_keys = ROOT.RooKeysPdf('pdf_keys', '', x, dt_base, ROOT.RooKeysPdf.MirrorBoth). # also correct; dt_keys = pdf_keys.generate({x}, NumEvents = 10000). y = ROOT.RooRealVar('y', '', 0, 1); proto = ROOT.RooDataSet('proto_y', '', {y}); proto.add(ROOT.RooArgSet(y)). # still",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12286,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12646,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooSimultaneous` has a feature where if the internal pdfs are themselves `RooSimulteneous`, the pdf is flattened in a single level `RooSimulteneous` with a `RooSuperCategory` as index.; When generating such a pdf from prototype data, the prototype needs to contain all the subcategories of the super-category, and it does so by checking the super-category servers. ; However, recently `RooSuperCategory` was changed to contain a `RooMultiCategory` internally, and the only reported direct server is the internal multi-category. This leads to a wrong generation (the prototype data is ignored, the gen context refers to the current labels). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Proto data works even with nested RooSimultaneous. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); for i in range(100):; proto.add({c1, c2}). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12020,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; Al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/7249,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:739,clear,clear,739,https://root.cern,https://github.com/root-project/root/issues/7393,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8284:542,clear,clear,542,https://root.cern,https://github.com/root-project/root/issues/8284,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; With the recent version of ROOT (v6.26/08), I found out that when plotting the pull distribution after a fit with pullHist, the wrong distribution is shown with respect to the one produced with ROOT v6.26/06, for example. ### Expected behavior; When the fit converges, a gaussian-like pull distribution is expected, while with ROOT v6.26/08 the histogram bars are unreasonably high. ### To Reproduce; You can find the needed code and data to reproduce the bug at the following link:; https://cernbox.cern.ch/s/hnMmXVjUtbwlZJN; Simply run `bug_reproducer.py` with ROOT v6.26/06 and v6.26/08 and see the difference in the plot produced. ### Setup; Tested with ROOT setup from `lb-conda`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11738:910,Simpl,Simply,910,https://root.cern,https://github.com/root-project/root/issues/11738,1,['Simpl'],['Simply']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. This issue was addressed here: https://github.com/root-project/root/pull/3914, but it is present in ROOT 6.14/09. ### Describe the bug. The hadd ""-v 0"" option to set the verbosity level to 0 does not work in ROOT 6.14/09. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Here is an example of running hadd on two files to create an output file.; ```; hadd target.root file_1.root file_2.root. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_1.root; hadd Source file 2: file_2.root; hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:614,clear,clear,614,https://root.cern,https://github.com/root-project/root/issues/11372,1,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7790:550,clear,clear,550,https://root.cern,https://github.com/root-project/root/issues/7790,2,['clear'],['clear']
Usability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:396,clear,clear,396,https://root.cern,https://github.com/root-project/root/issues/10528,1,['clear'],['clear']
Usability,"- [y] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:391,clear,clear,391,https://root.cern,https://github.com/root-project/root/issues/12182,1,['clear'],['clear']
Usability,"- [yes] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When I run the TMVARegression (root tutorial/tmva/TMVARegreession.C), I found the results by using FDA_GA and FDA_MT are different, but they use same function to do regression. The fit parameters from FDA_MT are always equal to zero. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I have found the following ways to avoid this problem: ; In class TMVA::MinuitFitter, change the code at line 103 as shown bellow, and then reinstall root. Then the results from FDA_MT, FDA_SA and even FDA_GAMT are same.`. void TMVA::MinuitFitter::Init(); {; .......... ; //fMinWrap = new MinuitWrapper( fFitterTarget, 2*GetNpars() );; fMinWrap = new MinuitWrapper( fFitterTarget, GetNpars() );; ..........; }; `. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; root tutorial/tmva/TMVARegreession.C. In TMVARegression.C, I use the FDA method as bellow: ` . if (Use[""FDA_MC""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_MC"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=MC:SampleSize=100000:Sigma=0.1"" );; ; if (Use[""FDA_GA""]) // can also use Simulated Annealing (SA) algorithm (see Cuts_SA options) .. the formula of this example is good for parabolas; factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_GA"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6773:393,clear,clear,393,https://root.cern,https://github.com/root-project/root/issues/6773,2,['clear'],['clear']
Usability,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3). This merge request is result of profiling work in the AliRoot framework where simple accesses to the mentioned objects are considerable (on the 2% level).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:370,simpl,simple,370,https://root.cern,https://github.com/root-project/root/pull/165,1,['simpl'],['simple']
Usability,"- removed nested template struct SimpleAction; - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook; - BuildAndBook now only takes one template parameter instead of three; - the default type of histogram weights is now `void` (which signals that we are; not filling a weighted histogram); - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which; in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used; to decide whether to perform runtime type guessing or not. Multiple overloads of; `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:33,Simpl,SimpleAction,33,https://root.cern,https://github.com/root-project/root/pull/348,2,['Simpl'],['SimpleAction']
Usability,"- try harder to find branches and leaves users requested when; trying to figure out their type; - when building the list of valid column names, use the output of; TBranch::GetFullName instead of the names (joined by dots) of; the branches we traversed so far. With multiple nested; TBranchElements, the traversal might be `a.b.c` while the name; returned by TBranch::GetFullName (which is what TTree::GetBranch; recognizes) might be simply `a.c` (see e.g. ROOT-9975). These changes fix ROOT-9975, although in some corner cases they might; change which column names RDataFrame considers valid (any ""reasonable""; user application that was working should keep working -- no tutorial,; test or integration benchmark we have was broken by these changes). A test is at https://github.com/root-project/roottest/pull/632 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6988:433,simpl,simply,433,https://root.cern,https://github.com/root-project/root/pull/6988,1,['simpl'],['simply']
Usability,"-1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; printf(""msum %f %f\n"",msum,mdiff);; light = 0.5 * msum;; if (maxval != minval) {; rnorm = (maxval - r)/mdiff;; gnorm = (maxval - g)/mdiff;; bnorm = (maxval - b)/mdiff;; } else {; satur = hue = 0;; return;; }. if (light < 0.5); satur = mdiff/msum;; else; satur = mdiff/(2.0 - msum);. if (r == maxval); {; printf(""hue 1\n"");; hue = 60.0 * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:2272,clear,clear,2272,https://root.cern,https://github.com/root-project/root/issues/6677,1,['clear'],['clear']
Usability,...; Error in <TList::Clear>: A list is accessing an object (0x558b19a500b0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b74080) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b76bf0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80a80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80df0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81320) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b817c0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81b90) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82030) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82260) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bacc50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6580) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6f70) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb73d0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bbad50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5b80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5eb0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc8710) already deleted (list name = TList); (TFile *) 0x558b199f9480; ```. ##,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793:948,Clear,Clear,948,https://root.cern,https://github.com/root-project/root/issues/14793,18,['Clear'],['Clear']
Usability,...and simplify function signatures accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5558:7,simpl,simplify,7,https://root.cern,https://github.com/root-project/root/pull/5558,1,['simpl'],['simplify']
Usability,...in the hope to get a clearer picture about the test failures; when jitting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1937:24,clear,clearer,24,https://root.cern,https://github.com/root-project/root/pull/1937,1,['clear'],['clearer']
Usability,...to make it clear that we only use these functions in this same source file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5273:14,clear,clear,14,https://root.cern,https://github.com/root-project/root/pull/5273,1,['clear'],['clear']
Usability,"...ue in pyspark. From:. http://www.sealiesoftware.com/blog/archive/2017/6/5/Objective-C_and_fork_in_macOS_1013.html. > The rules for using Objective-C between fork() and exec() have changed; in macOS 10.13. Incorrect code that happened to work most of the time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:725,simpl,simple,725,https://root.cern,https://github.com/root-project/root/pull/9811,1,['simpl'],['simple']
Usability,"..Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:1756,simpl,simple,1756,https://root.cern,https://github.com/root-project/root/pull/8700,1,['simpl'],['simple']
Usability,".its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Using a `std::pair` for a custom class inside another custom class seems to somehow break the dictionary load mechanism. In the [attached reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz), `OtherClass` contains a `std::pair<int, MyClass>`; for both custom classes a dictionary is created. Manually loading the dictionary in the Root shell seems to lead to an incomplete type state for `MyClass`, such that some assertions fail. The failure disappear if the same assertion is tested before on a class from the same dictionary and not encompassed in the `std::pair`. It thus seems that the presence of the `std::pair` somehow interferes with loading the dictionary for the contained class. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:1134,clear,clear,1134,https://root.cern,https://github.com/root-project/root/issues/10512,1,['clear'],['clear']
Usability,"/ previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Should also work with mac (not tested). ## Additional context. Hopefully this will be the last one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:4100,clear,clear,4100,https://root.cern,https://github.com/root-project/root/issues/6428,1,['clear'],['clear']
Usability,"/O annotation can be moved from the comments to using `C++ attributes` (in particular because support for the comment is implemented internally through the same mechanics). To quote the referred pull request:. The way dictionary information are propagated from the `C++` code or `XML` dictionaries to reflex and cling is rather roundabout:. - a; - `<field name=""data_"" comment=""!""/>` tags `XML` dictionaries are parsed by `genreflex` and injected into the `LLVM AST` of the corresponding `C++` code as comments `//!`;; - `C++` comments like `//!` or `//[size_]` are converted by `genreflex/rootcling` into `LLVM AST` annotations; cling parses the `LLVM` annotations and uses them to generate the desired behavior in the dictionaries. This approach does not work well with macro-generated data members:. - macros cannot generate comments, so `//!` or `//[size_]` cannot be used directly;; - macros cannot easily be used to generate the `class_def.xml` file, requiring manual intervention for their implementation and maintenance. However, it turns out that dictionaries can bypass the comments and use LLVM annotations directly within the C++ code. So; ```; private:; int size_;; float* data_; //[size_]; float* transient_; //!; ```; can be also expressed as; ```; private:; int size_;; float* data_ [[clang::annotate(""[size_]"")]];; float* transient_ [[clang::annotate(""!"")]];; ```; and annotations can be generated by macros. In order to avoid spurious warnings when compiling the header, we should offer a (set of) macro(s), eg:. - `ROOT_IO_TRANSIENT` can be used to annotate transient data members, like `//!; - `ROO_IO_SIZE(SIZE)` can be used to annotate dynamic arrays, like `//[SIZE]`; or. - `ROOT_IO_ANNOTATE` that can be used with `ROOT_IO_ANNOATE(""!"")` and `ROOT_IO_ANNOTATE(""[size]"")`. The advantage of the earlier case would be to (possibly) allow simplification of the internal parsing, by using:; ```; float* data_ [[rootio::size(""size_"")]];; float* transient_ [[rootio::transient]];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12012:1919,simpl,simplification,1919,https://root.cern,https://github.com/root-project/root/issues/12012,1,['simpl'],['simplification']
Usability,"/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TApplication* theApp = new TApplication(""App"", &argc, argv);; auto *G= new TGMainFrame(gClient->GetRoot(), 768, 1024);; theApp->Run();; return 0;; }. ```; compiled with ; ```; c++ $(root-config --cflags --glibs) -g -O1 frame.cxx -o frame.exe; ```; and executed as ; ```; ./frame.exe; ```; ### Setup; ROOT master MacOSX 10.15; and ROOT night build ; root_v6.22.99.macosx64-10.15-clang120 MacOSX 10.15. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:3766,clear,clear,3766,https://root.cern,https://github.com/root-project/root/issues/6758,2,['clear'],['clear']
Usability,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:2591,learn,learn-github-actions,2591,https://root.cern,https://github.com/root-project/root/pull/11808,1,['learn'],['learn-github-actions']
Usability,"/sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooSimultaneous` has a feature where if the internal pdfs are themselves `RooSimulteneous`, the pdf is flattened in a single level `RooSimulteneous` with a `RooSuperCategory` as index.; When generating such a pdf from prototype data, the prototype needs to contain all the subcategories of the super-category, and it does so by checking the super-category servers. ; However, recently `RooSuperCategory` was changed to contain a `RooMultiCategory` internally, and the only reported direct server is the internal multi-category. This leads to a wrong generation (the prototype data is ignored, the gen context refers to the current labels). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Proto data works even with nested RooSimultaneous. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); for i in range(100):; proto.add({c1, c2}). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO). # correct; context = s1.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020:1130,clear,clear,1130,https://root.cern,https://github.com/root-project/root/issues/12020,1,['clear'],['clear']
Usability,"07f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2790,simpl,simplifyFunctionCFGImpl,2790,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyFunctionCFGImpl']"
Usability,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16663:160,learn,learn,160,https://root.cern,https://github.com/root-project/root/pull/16663,1,['learn'],['learn']
Usability,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15931:220,clear,clear,220,https://root.cern,https://github.com/root-project/root/pull/15931,1,['clear'],['clear']
Usability,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10843:565,simpl,simple,565,https://root.cern,https://github.com/root-project/root/pull/10843,1,['simpl'],['simple']
Usability,"1. Fix leak with using TGraph2DPainter; 2. Fix leak with ""cont list"" draw option; 3. Use `std::unique_ptr` for all objects created and managed by hist painter, ensure proper deletion; 4. Use `std::vector` instead of plain C arrays, avoid any potential memory leak; 5. Replace plain `Form()` by `TString::Format()`; 6. Simplify some `TIter` loops; 7. Use more `nullptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10823:318,Simpl,Simplify,318,https://root.cern,https://github.com/root-project/root/pull/10823,1,['Simpl'],['Simplify']
Usability,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:763,simpl,simplifies,763,https://root.cern,https://github.com/root-project/root/pull/2603,2,"['clear', 'simpl']","['clearly', 'simplifies']"
Usability,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:100,clear,cleared,100,https://root.cern,https://github.com/root-project/root/pull/12463,3,"['Clear', 'clear']","['Clear', 'ClearOnClose', 'cleared']"
Usability,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:164,clear,clear,164,https://root.cern,https://github.com/root-project/root/pull/12716,1,['clear'],['clear']
Usability,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6275:295,Simpl,Simplify,295,https://root.cern,https://github.com/root-project/root/pull/6275,1,['Simpl'],['Simplify']
Usability,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4943:299,clear,cleared,299,https://root.cern,https://github.com/root-project/root/pull/4943,1,['clear'],['cleared']
Usability,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484:820,usab,usable,820,https://root.cern,https://github.com/root-project/root/pull/12484,1,['usab'],['usable']
Usability,"1. Provide in RWebWindow methods to correctly work with connections, provided by master; 2. Introduce public `RWebWindow::GetConnections()` method, simplify reply logic; 3. Handle reply to multiple clients from geometry hierarchy widget - change top or change search should be handled",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12933:148,simpl,simplify,148,https://root.cern,https://github.com/root-project/root/pull/12933,1,['simpl'],['simplify']
Usability,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8109:351,simpl,simplify,351,https://root.cern,https://github.com/root-project/root/pull/8109,1,['simpl'],['simplify']
Usability,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14002:207,simpl,simplify,207,https://root.cern,https://github.com/root-project/root/pull/14002,2,"['Simpl', 'simpl']","['Simplify', 'simplify']"
Usability,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8274:57,simpl,simplifies,57,https://root.cern,https://github.com/root-project/root/pull/8274,1,['simpl'],['simplifies']
Usability,1. Use hex string for RGB like 01FFC5; 2. Use also hex for color alpha like FF; 3. Make easier to compose result color; 4. Support plain SVG names - need to provide predefined list; 5. Reintroduce methods for HLS; 6. Provide different Setter/Getter/Clear methods; 7. Move RColor testing to correspondent library; 8. Update JSROOT code - for RColor but also recent fixes in v6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4456:249,Clear,Clear,249,https://root.cern,https://github.com/root-project/root/pull/4456,1,['Clear'],['Clear']
Usability,"1. With the CEF instead of http/https local scheme handler is used. Means, THttpServer used without opening real HTTP port. ; 2. Use provided CEF messaging for direct communication between ROOT application and JS code. This channel if bidirectional and replaces websocket, used with normal browser. Longpoll remains as fallback solution.; 3. Enable batch mode with the CEF. When root started with ""root -b"" flag, rendering performed in memory - no any window is created. Not really clear which graphical libraries required - seems to be Xorg is still need to be linked. ; 4. First draft for Canvas::SaveAs() method for image creation. Both SVG and PNG are supported, several others (BMP/JPEG) can be provided. Worked in the same way for batch and gui mode. ; 5. draw_v6.cxx macro from tutorial works both in gui and batch mode and show usage of new Canvas::SaveAs() method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/797:482,clear,clear,482,https://root.cern,https://github.com/root-project/root/pull/797,1,['clear'],['clear']
Usability,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11705:126,Clear,Clear,126,https://root.cern,https://github.com/root-project/root/pull/11705,2,['Clear'],['Clear']
Usability,"1.Special handling of `RFrame` - when drawable required such object, it autoamitically created and inserted in list of primitives before such drawable . 2. Introduce `RPaletteDrawable`. It contains own instance of `RPalette`. `RHistDrawable` use such palette when it appears in list of priitives. `RHistDrawable` also controls drawing of `RPalette`. `RPalette` can be invisible. Position of `RPaletteDrawable` defined relatively to `RFrame` . 3. Provide drawing of `RPalette` in JSROOT. Fully redesign code how palette used in JSROOT - now it is much simpler compare to v6. 4. Provide `draw_rh2_colz.cxx` example which demonstrates palette drawing. One can see produced output on the image.; ![Canvas](https://user-images.githubusercontent.com/4936580/76108743-6d08ef00-5fdb-11ea-89de-299f2d64f1dc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5098:551,simpl,simpler,551,https://root.cern,https://github.com/root-project/root/pull/5098,1,['simpl'],['simpler']
Usability,"14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; c,; d; };. enum class ETwo; {; a = 2,; b,; c,; d; };. enum class EThree; {; a = 3,; b,; c,; d; };. struct Holder; {; EOne one;; ETwo two;; EThree three;. void SetTwo(int value); {; two = (ETwo)value;; }; };. std::string to_string(EOne value); {; fprintf(stderr, ""Calling to_string for enum EOne with %d\n"", (int)value);; std::string name(""One: "");; name += '0'+(int)value;; return name;; }. std::string to_string(ETwo value); {; fprintf(stderr, ""Calling to_string for enum ETwo with %d\n"", (int)value);; std::string name(""Two: "");; name += '0'+(int)value;; return name;; }. std::string to_string(EThree value); {; fprintf(stderr, ""Calling to_string for enum EThree with %d\n"", (int)value);; std::string name(""Three: "");; name += '0'+(int)value;; return name;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:1908,simpl,simple,1908,https://root.cern,https://github.com/root-project/root/issues/7077,1,['simpl'],['simple']
Usability,"19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767; #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555; #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115; #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76; #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532; #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663; #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195; #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:7106,Clear,ClearDiagClient,7106,https://root.cern,https://github.com/root-project/root/pull/2776,2,['Clear'],['ClearDiagClient']
Usability,"268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it howev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:2113,simpl,simple,2113,https://root.cern,https://github.com/root-project/root/issues/14675,1,['simpl'],['simple']
Usability,3/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:2472,simpl,simple,2472,https://root.cern,https://github.com/root-project/root/pull/10300,1,['simpl'],['simple']
Usability,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1895,simpl,simple,1895,https://root.cern,https://github.com/root-project/root/pull/891,1,['simpl'],['simple']
Usability,":InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerBase::Update; to call TStreamerBase::InitStreamer if and only if there was a change in the base; class pointer, and to call TClass::GetClass only if there is a chance of finding; a new TClass ….",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:2316,clear,cleared,2316,https://root.cern,https://github.com/root-project/root/pull/4389,2,['clear'],['cleared']
Usability,":char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; (gdb) bt; #0 0x00007fffee8b09a4 in llvm::detail::UniqueFunctionBase<llvm::Expected<unsigned long>>::CallbacksHolder<llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; #1 0x00007fffe3871543 in std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) () from /usr/lib/root/6.24/lib/libCling.so; #2 0x00007fffe38610dd in cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const () from /usr/lib/root/6.24/lib/libCling.so; #3 0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:1662,Simpl,SimpleCompiler,1662,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Simpl'],['SimpleCompiler']
Usability,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8323:2592,clear,clear,2592,https://root.cern,https://github.com/root-project/root/issues/8323,1,['clear'],['clear']
Usability,"<!--; A clear and concise description of what the wrong behavior is.; -->. Hi ROOTers!. I've recently encountered some issues with using TMVA in JupyROOT ([here is an example notebook](https://nbviewer.jupyter.org/github/iml-wg/tmvatutorials/blob/master/TMVAinJupyter_FullTutorial.ipynb), I haven't found much documentation besides this). I'm basically able to follow the structure of this example, but I run into issues when calling `TMVA.DataLoader.AddSignalTree()`. Since I'm working with a Jupyter notebook, I'll provide a plaintext version of the code below, followed by the error, but I'm also including links to the relevant files for running this -- the input file, the notebook file, and Yaml and plaintext files detailing the `conda` setup used to create the environment. I can set up a Notebook Viewer if that would be helpful, though I think that requires hosting the notebook somewhere like in a GitHub repo. **Files:**; [Input file](https://drive.google.com/file/d/1j-oDBQo4RlSvzS4Ved7oRWTpetGBzgF1/view?usp=sharing); [Notebook file](https://drive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:8,clear,clear,8,https://root.cern,https://github.com/root-project/root/issues/6657,1,['clear'],['clear']
Usability,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29; #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386; #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65; #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174; #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126; #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256; ===========================================================. Root > ; ```; ### Expected behavior; Do not crash if there is nothing to undo. ### To Reproduce; Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10180:6566,undo,undo,6566,https://root.cern,https://github.com/root-project/root/issues/10180,2,['undo'],['undo']
Usability,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:15206,simpl,simpler,15206,https://root.cern,https://github.com/root-project/root/issues/11515,1,['simpl'],['simpler']
Usability,"=""1"">NP_norm</ConstraintTerm>; ```. Constraint terms can be removed from `OverallSys` modifiers, but the same method does not seem to work for `HistoSys` modifiers (and the setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the works",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1281,simpl,simple,1281,https://root.cern,https://github.com/root-project/root/issues/9070,1,['simpl'],['simple']
Usability,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:1169,clear,clear,1169,https://root.cern,https://github.com/root-project/root/issues/8435,1,['clear'],['clear']
Usability,">; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:1094,simpl,simple,1094,https://root.cern,https://github.com/root-project/root/issues/6370,1,['simpl'],['simple']
Usability,"@bbockelm @pcanal This patch copies the code of signal handling in CMSSW. It avoids async-unsafe functions in signal handler functions. . For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97:302,simpl,simple,302,https://root.cern,https://github.com/root-project/root/pull/97,1,['simpl'],['simple']
Usability,"@oshadura @Axel-Naumann ; Dear Mentors,; Here's my pull request for the issue https://github.com/root-project/root/issues/6635.; Can you please review this. Please excuse any instances where the timeout parameter has been added unnecessarily as it wasn't clear to me how to test this. Since the desired interval for `TIMEOUT` hadn't been mentioned, I have added it as 600 s.; I'll fix any incorrect changes as soon as review comments and suggestions are added. I will squash the commits after the review. Thanks in advance !",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7136:255,clear,clear,255,https://root.cern,https://github.com/root-project/root/pull/7136,1,['clear'],['clear']
Usability,"@pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib); /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner); /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/319:387,simpl,simply,387,https://root.cern,https://github.com/root-project/root/pull/319,1,['simpl'],['simply']
Usability,A RooAddPdf needs to have always a normalization set defined when evaluating. ; If this set is not defined it evaluates the component pdf without a normalization. This can cause an ambiguous definition of the coefficients and therefore a different shape of the pdf given the same coefficient values. ; See problem reported in ROOT-10814. This PR just add a warning message to warn users to not evaluate the pdf without having provided first a normalization set. . This simple code shows the problem: ; https://cernbox.cern.ch/index.php/s/iosEw6qHq51SLbi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7129:469,simpl,simple,469,https://root.cern,https://github.com/root-project/root/pull/7129,1,['simpl'],['simple']
Usability,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301; #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539; #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395; #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516; #7 <signal handler called>; #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268; #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217; #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142; #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112; ===========================================================; ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14569:2874,simpl,simpleStudy,2874,https://root.cern,https://github.com/root-project/root/issues/14569,1,['simpl'],['simpleStudy']
Usability,"AMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to https://sft.its.cern.ch/jira/browse/ROOT-7984 and it is (at least part of) the cause of https://sft.its.cern.ch/jira/browse/ROOT-9558 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:2177,clear,clear,2177,https://root.cern,https://github.com/root-project/root/issues/6881,1,['clear'],['clear']
Usability,Add 3 new tutorials for TMVA deep learning:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:34,learn,learning,34,https://root.cern,https://github.com/root-project/root/pull/5441,2,['learn'],['learning']
Usability,Add Deep Learning GPU for TMVA Regression tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8573:9,Learn,Learning,9,https://root.cern,https://github.com/root-project/root/pull/8573,1,['Learn'],['Learning']
Usability,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309:172,clear,clear,172,https://root.cern,https://github.com/root-project/root/pull/16309,1,['clear'],['clear']
Usability,Add a simple contributing file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839:6,simpl,simple,6,https://root.cern,https://github.com/root-project/root/pull/839,2,['simpl'],['simple']
Usability,Add a very simple circular buffer allowing to automatically compute and display the mean of last N values when enabling the mean mark with `EnableMeanMark()`. The size of the buffer can be changed with `SetBufferSize()`. Thanks to @ferdymercury for the suggestion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/pull/7170,1,['simpl'],['simple']
Usability,"Add an (almost) `root-config` equivalent script for Windows, but unfortunately not usable to compile code in a terminal, since command substitution doesn't work in the Windows command prompt...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:83,usab,usable,83,https://root.cern,https://github.com/root-project/root/pull/6733,1,['usab'],['usable']
Usability,Add clearer wrt ownership interface to produce TInterpreterValue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2795:4,clear,clearer,4,https://root.cern,https://github.com/root-project/root/pull/2795,2,['clear'],['clearer']
Usability,"Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:; * set special ""jupyter"" kind of web display; * detect if RCanvas compiled; * like with TCanvas, extract list of RCanvas after each cell; * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server.; But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8638:48,Clear,ClearShown,48,https://root.cern,https://github.com/root-project/root/pull/8638,1,['Clear'],['ClearShown']
Usability,"Add tree inference backend using jitted evaluation of the forest. Preliminary benchmarks look promising and show a clear improvement due to the jitting (100 trees, depth 3, 100k events):. ```; XGB: 2.30692 microsec/event; BranchlessForest: 0.962279 microsec/event; BranchlessJittedForest: 0.67292 microsec/event; ```. WIP: Still needs some error-handling and doxygen markup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4476:115,clear,clear,115,https://root.cern,https://github.com/root-project/root/pull/4476,1,['clear'],['clear']
Usability,"Add yet another fence in TClass::GetClass to avoid lookups and memory consumption. This PR aims to fix #9029. Give the sophisticated implementation of TClass::GetClass, perhaps it would be good to collect some feedback, especially by @pcanal . # This Pull request:; This PR avoids lookups and parsing in some cases.; One of the principles of the TClass::GetClass method implementation is to avoid as much as possible. . ## Changes or fixes:; This commit adds yet another fence in TClass::GetClass, checking if the name in input is the name of a known fundamental type or typedef to it.; In order to avoid code duplication, a routine previously available within the implementation of TClassEdit has been made available with a public API. ## Checklist:. - [v ] tested changes locally; - [v ] updated the docs (if necessary). This PR fixes #9029",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341:210,feedback,feedback,210,https://root.cern,https://github.com/root-project/root/pull/13341,1,['feedback'],['feedback']
Usability,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:143,simpl,simple,143,https://root.cern,https://github.com/root-project/root/pull/11773,2,['simpl'],['simple']
Usability,"Added some simple fixes to `ROOT::TFile`, to make it build with Xcode/Clang 9.0 on macOS High Sierra in C++14 mode. This is to fix the build problem described in https://sft.its.cern.ch/jira/browse/ROOT-9072. (I just thought that I might as well propose a fix, since I fixed it for my local installation anyway.). I imagine that cherry-picking the fix into the master branch would not be up to me anymore... (Should've read the contribution guidelines... 😛)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1220:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/pull/1220,2,"['guid', 'simpl']","['guidelines', 'simple']"
Usability,Adding a very simple example (as we were showing in the student course) to showcase the difference between running the event loop vs running it multiple times. . This PR fixes #13440.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16532:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/16532,1,['simpl'],['simple']
Usability,Address request on forum:. https://root-forum.cern.ch/t/draw-option-for-mollweide-projection/55574. Also simplify a bit code in projection handling in hist painter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13206:105,simpl,simplify,105,https://root.cern,https://github.com/root-project/root/pull/13206,1,['simpl'],['simplify']
Usability,Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5984:22,feedback,feedback,22,https://root.cern,https://github.com/root-project/root/pull/5984,1,['feedback'],['feedback']
Usability,"Adds a new constructor to the RNTuple RDF data source that takes an ntuple name and a list of files. The data source then treats these files as a chain. Slightly simplifies the prototype construction in the RNTuple data source: instead of constructing full column reader prototypes, only the corresponding field prototypes are constructed. Multi-threaded work scheduling is as follows:. - As long as there are more files than slots: every slots get a file; - For the tail: slots get distributed over the remaining files and align on cluster boundaries. Some optimizations for follow-up PRs:. - Load the next ranges in the background. In particular that would open the next batch of files in the backgound; - Clone page sources without reopening the file; - The next set of ranges currently gives up to number of slots ranges. However, it would make more sense to use resource constraints such as available memory or number of open file descriptors as a limit and let slots work on more ranges at a time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13329:162,simpl,simplifies,162,https://root.cern,https://github.com/root-project/root/pull/13329,1,['simpl'],['simplifies']
Usability,Adds a simple comparison technique for multiclass classifiers.; 1-vs-rest will do a binary comparison between given class; considered signal and all others collectively considered; background. 1-vs-1 will do pair-wise binary comparisons. Output is in TMVA::Factory::EvaluateAllMethods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/597:7,simpl,simple,7,https://root.cern,https://github.com/root-project/root/pull/597,1,['simpl'],['simple']
Usability,Adds infrastructure to instrument code parts with counters and timers -- either thread-safe atomics or simple integers. Adds a few key counters to the raw page source.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4300:103,simpl,simple,103,https://root.cern,https://github.com/root-project/root/pull/4300,1,['simpl'],['simple']
Usability,"After #10005 is merged, a couple of tests will fail due to a `heap-use-after-free`:; * `pyunittests-pyroot-pyz-rdataframe-makenumpy`; * `pyunittests-pyroot-numbadeclare`; * `gtest-tree-dataframe-test-dataframe-friends`; * `gtest-tree-dataframe-test-dataframe-cache`; * `gtest-tree-dataframe-test-dataframe-simple`; * `gtest-tree-dataframe-test-dataframe-snapshot`; * `gtest-tree-dataframe-test-datasource-more`; * `gtest-tree-dataframe-test-datasource-trivial`; * `gtest-tree-dataframe-test-dataframe-concurrency` (`RJittedDefine`); * `pyunittests-dataframe-misc` (`RJittedDefine`); * `pyunittests-dataframe-histograms` (`RJittedDefine`); * `pyunittests-dataframe-cache`; * `pyunittests-dataframe-merge-results`; * `tutorial-dataframe-df019_Cache`; * `tutorial-tmva-tmva003_RReader`; * `tutorial-dataframe-df000_simple-py` (`RJittedDefine`); * `tutorial-dataframe-df002_dataModel-py` (`RJittedDefine`); * `tutorial-dataframe-df003_profiles-py`; * `tutorial-dataframe-df007_snapshot-py` (`RJittedDefine`); * `tutorial-dataframe-df010_trivialDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df014_CSVDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df016_vecOps-py` (`RJittedDefine`); * `tutorial-dataframe-df017_vecOpsHEP-py` (`RJittedDefine`); * `tutorial-dataframe-df019_Cache-py`; * `tutorial-dataframe-df021_createTGraph-py` (`RJittedDefine`); * `tutorial-dataframe-df024_Display-py`; * `tutorial-dataframe-df031_Stats-py` (`RJittedDefine`); * `tutorial-dataframe-df103_NanoAODHiggsAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df105_WBosonAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df106_HiggsToFourLeptons-py` (`RJittedDefine`); * `tutorial-dataframe-df107_SingleTopAnalysis-py` (`RJittedDefine`); * `tutorial-pyroot-pyroot004_NumbaDeclare-py` (`RJittedDefine`); * `tutorial-rcanvas-df105-py` (`RJittedDefine`); ; According to the stack traces, `~RDefineBase` / `~RJittedDefine` calls `RLoopManager::Deregister` on an already freed `RLoopManager`. Note: There may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007:306,simpl,simple,306,https://root.cern,https://github.com/root-project/root/issues/10007,1,['simpl'],['simple']
Usability,After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9674:125,clear,clearly,125,https://root.cern,https://github.com/root-project/root/pull/9674,1,['clear'],['clearly']
Usability,"After being notified that beginners were unable to label the axes of a; histogram, I revised the TH1 documentation a bit, such that the words; ""axis labels"" can now be found on the doxygen page.; Some lvl4 headers were converted in lvl2, so there is a bit more; structure, and a simple table of contents was added. Unfortunately,; doxygen doesn't support an automatic table of contents in class; documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6355:279,simpl,simple,279,https://root.cern,https://github.com/root-project/root/pull/6355,1,['simpl'],['simple']
Usability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:62,simpl,simplified,62,https://root.cern,https://github.com/root-project/root/pull/15401,1,['simpl'],['simplified']
Usability,"After messing up my git repository, I closed pull request 796 and re-created this one with the same changes. This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; By setting TTree::SetClusterPrefetch(), an entire clusters will be loaded into memory, rather than single baskets.; By setting the MaxVirtualSize of the tree to a negative value, previous clusters will be retained - the absolute value of MaxVirtualSize indicates how many additional clusters will be kept in memory. If TTree CacheDoClusterPrefetch is set to true, GetEntry() will load the entire cluster into memory, not just the first basket. For this, GetBasket() is modified to call a new function GetFreshCluster(). This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, GetFreshCluster() reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here). To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry.; Without the change enables there were 1.5 GB read in 31102 read calls.; With MaxVirtualSize set to -1 and CacheDoClusterPrefetch true, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065:976,clear,clearing,976,https://root.cern,https://github.com/root-project/root/pull/1065,2,['clear'],"['clear', 'clearing']"
Usability,"Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The GL geometry viewer allows ""picking"" the center of view for a drawn geometry. This is not working correctly on Mac.; In a different context: TGeo ray-tracing relies on pixel-to-model coordinates conversion to create rays in the model coordinate system for each viewport pixel and then intersect the model. The ray-traced image on mac shows ""gaps"" (see below) compared to the Linux version, likely due to an unaccounted screen scaling factor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the GL geometry viewer, the tab ""Guides/Camera center"" allows to ""Pick center"" with the mouse, which will change the default center of view to the 2D mouse coordinates of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On linux, the center of view moves on the surface of ""R"" just below the mouse, and you can freely rotate about this; O",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:1038,Guid,Guides,1038,https://root.cern,https://github.com/root-project/root/issues/12035,1,['Guid'],['Guides']
Usability,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15786:269,clear,clear,269,https://root.cern,https://github.com/root-project/root/pull/15786,1,['clear'],['clear']
Usability,"Allow Book to be used with RDataFrame without explicitly specifying the column types. This re-uses as much as possible the machinery which was already in place to do this for Fill, Histo1D, etc. Template overloads are also simplified for Fill, which allows the jitted version at least to be called from python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630:223,simpl,simplified,223,https://root.cern,https://github.com/root-project/root/pull/7630,1,['simpl'],['simplified']
Usability,Allow the training to be done multiple times for the BDT by setting a flag to false.; Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/286:86,Clear,Clear,86,https://root.cern,https://github.com/root-project/root/pull/286,1,['Clear'],['Clear']
Usability,"Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7341:129,simpl,simplifies,129,https://root.cern,https://github.com/root-project/root/pull/7341,1,['simpl'],['simplifies']
Usability,"Also libc++ has a noexcept __cxa_atexit, see https://root-forum.cern.ch/t/libc-issue-on-linux/52433 . Simple ask the compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12047:102,Simpl,Simple,102,https://root.cern,https://github.com/root-project/root/pull/12047,1,['Simpl'],['Simple']
Usability,"Also simplify LinkDef.h file for TGraph2DPainter.; One can use ClassDef(TGraph2DPainter,0) to avoid complication by dictionary generation.; Class is not intend to be stored in the ROOT file",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4954:5,simpl,simplify,5,https://root.cern,https://github.com/root-project/root/pull/4954,1,['simpl'],['simplify']
Usability,"An attempt to make Vary() documentation more clear and consistent (given we have 11 overloads) and up to date, as requested on the forum. . I built the website locally to check if everything looks ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14437:45,clear,clear,45,https://root.cern,https://github.com/root-project/root/pull/14437,1,['clear'],['clear']
Usability,And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2753:33,clear,clearer,33,https://root.cern,https://github.com/root-project/root/pull/2753,1,['clear'],['clearer']
Usability,And simplify the code whenever possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1884:4,simpl,simplify,4,https://root.cern,https://github.com/root-project/root/pull/1884,1,['simpl'],['simplify']
Usability,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179:1462,simpl,simplified,1462,https://root.cern,https://github.com/root-project/root/issues/7179,2,['simpl'],"['simple', 'simplified']"
Usability,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:58,clear,clear,58,https://root.cern,https://github.com/root-project/root/pull/9103,1,['clear'],['clear']
Usability,"Apply [D41416](https://reviews.llvm.org/D41416) to reduce template specialization deserializations. This patch decreases the memory footprint of root startup by approx 17%. We deserialize 2 times less record types. See details [here](https://www.diffchecker.com/L2m1FE76). We cannot land D41416 in clang's trunk because in essence it replaces a liner algorithm with a quadratic one. We see the compilation time being approx 2 times slower clearly in one of the Google modules builds with approx 1000 modules with a lot of lazy specializations. While I am working on a better version of this patch, land it in our codebase because we do not have such extreme usage scenarios (yet?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526:439,clear,clearly,439,https://root.cern,https://github.com/root-project/root/pull/1526,1,['clear'],['clearly']
Usability,"As discussed in [ROOT-10409](https://sft.its.cern.ch/jira/browse/ROOT-10409), these accessors are very dangerous and aren't backed by a clear use case right now. Therefore, @Axel-Naumann and I think it's best to just remove them for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4708:136,clear,clear,136,https://root.cern,https://github.com/root-project/root/pull/4708,1,['clear'],['clear']
Usability,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6149:150,simpl,simply,150,https://root.cern,https://github.com/root-project/root/pull/6149,1,['simpl'],['simply']
Usability,"As explained in 85c5cb4e3f, it was planned to make the RooFitDriver a public class to greatly improve the developer experience when working on the GPU backend of RooFit. Before, it was only possible to use the GPU backend in the likelihood evaluation, and with this commit it can be used from any context. This makes it possible to run the script listed in the description of PR #13389. To be more clear in what the new class does, which is purely focusing on the evaluation of computation graphs, it got renamed from RooFitDriver to `RooFit::Evaluator`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13530:398,clear,clear,398,https://root.cern,https://github.com/root-project/root/pull/13530,1,['clear'],['clear']
Usability,"As measured, there is an improvement if the expansion of `R__ASSERT()` is out of the inlined code path due to slighly more compact code.; Additionally, the `R__ASSERT(count > 0)` has been removed, given that `ClusterSize_t::ValueType` is an unsigned integral type. This was seen during the evaluation of the relative overhead of RField's post-read callbacks, which for reference I provide below. Two different tests were carried out: _(i)_ 4 fields of type `std::uint32_t`; and _(ii)_ 2 fields of type `std::uint32_t` + 2 fields of a user-defined struct, where:; - BASE refers to the current `master` with `RFieldBase::Read()` slightly changed to not support read callbacks.; - [1] refers to the current `master` + the changes in this PR; - [2] refers to the current `master` where `RFieldBase::InvokeReadCallbacks()` is also outlined by moving it to RField.cxx. All tests used a Release `-O3` build, 40M entries and 505 compression; results in $us$, averaged over 10 executions. _(i)_ 4 fields of type `std::uint32_t`:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 871502.4 |; No callbacks [1] | 867523.1 | 0.9954; No callbacks [1][2] | 878027.7 | 1.0075; 1 callback | 1068704.3 | 1.2263; 2 callbacks | 1233821.7 | 1.4157; ```; _(ii)_ 2 fields of type `std::uint32_t` + 2 user-defined structs:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 2500244.7 |; No callbacks [1] | 2688342.6 | 1.0752; No callbacks [1][2] | 2746363.6 | 1.0984; 1 callback | 2883271.0 | 1.1532; 2 callbacks | 3016407.0 | 1.2064; ```. As noted in test _(ii)_ for 'No callbacks [1]', non-simple fields have an overhead due to the additional branch. Still, the change in this PR is beneficial. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13487:1659,simpl,simple,1659,https://root.cern,https://github.com/root-project/root/pull/13487,1,['simpl'],['simple']
Usability,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776:455,simpl,simple,455,https://root.cern,https://github.com/root-project/root/pull/11776,1,['simpl'],['simple']
Usability,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:426,Clear,Clearly,426,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Clear'],['Clearly']
Usability,As per C++ core guidelines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10849:16,guid,guidelines,16,https://root.cern,https://github.com/root-project/root/pull/10849,1,['guid'],['guidelines']
Usability,"As per a conversation with @jblomer on 16/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), it would be useful to provide a way for users to set a per-field callback function to be invoked after reading a value object. As an alternative to the (yet to be supported) manual schema evolution rules, this can be used as a simple way to inspect/modify the value object after reading. ### Describe the solution you'd like; Something similar to `RFieldBase::SetReadCallback(void (*)(RFieldValue&))` might be part of the `RFieldBase` public interface in order to allow users to set such callback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11730:380,simpl,simple,380,https://root.cern,https://github.com/root-project/root/issues/11730,1,['simpl'],['simple']
Usability,"As per a conversation with @jblomer on 16/11/2022, and ROOT I/O meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:738,simpl,simple,738,https://root.cern,https://github.com/root-project/root/pull/11731,1,['simpl'],['simple']
Usability,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7420:115,Simpl,Simplify,115,https://root.cern,https://github.com/root-project/root/pull/7420,1,['Simpl'],['Simplify']
Usability,"As reported in ROOT-9463, the result of GetColumnNames is redundant. A simple reproducer:; ```; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int a;; t.Branch(""a"", &a);; a = 42;; t.Fill();; t.Write();; f.Close();; ROOT::RDataFrame df(""t"", ""f.root"");. for (auto x : df.GetColumnNames()); std::cout <<x <<std::endl;; ```. This redundancy is now not exposed to the user. **It would be nice** to have more tests on real use cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443:71,simpl,simple,71,https://root.cern,https://github.com/root-project/root/pull/2443,1,['simpl'],['simple']
Usability,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974:447,simpl,simpler,447,https://root.cern,https://github.com/root-project/root/pull/4974,1,['simpl'],['simpler']
Usability,"As said in this old forum post https://root-forum.cern.ch/t/thstack-th2-with-negative-values/16161/5, stacking a histogram with negative bin content does not make sense. This issue is not relevant https://github.com/root-project/root/issues/15740. But it is goo to make it clear in the documentation and to prevent adding such histograms in a stack. That's what this PR is doing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15766:273,clear,clear,273,https://root.cern,https://github.com/root-project/root/pull/15766,1,['clear'],['clear']
Usability,"As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11747:120,Clear,Clear,120,https://root.cern,https://github.com/root-project/root/issues/11747,2,['Clear'],['Clear']
Usability,As suggested here: https://root-forum.cern.ch/t/root-reference-guide-broken/45741,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8627:63,guid,guide-broken,63,https://root.cern,https://github.com/root-project/root/pull/8627,1,['guid'],['guide-broken']
Usability,"As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8025:38,guid,guide,38,https://root.cern,https://github.com/root-project/root/pull/8025,1,['guid'],['guide']
Usability,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"". In particular, in this commit:; - move alias management from RLoopManager to RBookedColumns; - remove alias-managing logic from RLoopManager; - refactor several functions so they only take RBookedColumns as input; rather than a list of defined names plus a map of aliases; (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,; GetValidatedColumnNames, BookFilterJit, FindUsedColumns,; ParseRDFExpression); - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function; - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that; relied on this global definition of Aliases. We expect this to be an; exceedingly rare usecase, and if such code exists it will produce a; clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9496:1263,clear,clear,1263,https://root.cern,https://github.com/root-project/root/pull/9496,1,['clear'],['clear']
Usability,"Assuming that `page_size` is a power of 2, the calculation of the base address of the page can be simplified and avoid a division. According to POSIX, either `MS_SYNC` or `MS_ASYNC` must be specified when calling `msync()`. Failure to include one of these flags will cause `msync()` to fail on some systems. When `msync()` returns -1, the pointer is only considered invalid when errno is set to `ENOMEM`. In principle, the other possible values for errno won't happen, but if they do, that should be considered an error, hence the assert condition needed an update. `EBUSY` shouldn't happen since we do not add `MS_INVALIDATE` to flags, and `EINVAL` shouldn't happen because we always pass a multiple of the page size to msync(). `EFAULT` is only used in Linux 2.4.18 and earlier instead of `ENOMEM`. See #4136 for more information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159:98,simpl,simplified,98,https://root.cern,https://github.com/root-project/root/pull/4159,1,['simpl'],['simplified']
Usability,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061:230,usab,usable,230,https://root.cern,https://github.com/root-project/root/issues/14061,1,['usab'],['usable']
Usability,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777:615,simpl,simple,615,https://root.cern,https://github.com/root-project/root/pull/13777,1,['simpl'],['simple']
Usability,"Based on some confusion in today's ROOT IO meeting, update the documentation in `TLeaf` to clear up `fLen` vs `fNdata` vs `fLeafCount`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534:91,clear,clear,91,https://root.cern,https://github.com/root-project/root/pull/1534,1,['clear'],['clear']
Usability,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:387,clear,clearly,387,https://root.cern,https://github.com/root-project/root/pull/7839,1,['clear'],['clearly']
Usability,Before llvm 13 it was not possible to parse `nlohmann/json.hpp` include. Therefore `json_fwd.hpp` was used. . But it was missing on several platforms where external `nlohmann/json.hpp` has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed `nlohmann/json.hpp`. Also should fix #14634,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14643:268,simpl,simplify,268,https://root.cern,https://github.com/root-project/root/pull/14643,1,['simpl'],['simplify']
Usability,Before llvm 13 it was not possible to parse nlohmann/json.hpp include. Therefore json_fwd.hpp was used. But it was missing on several platforms where external nlohmann/json.hpp has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed nlohmann/json.hpp. Porting of changes in 6.30 branch from #14643 to master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14663:260,simpl,simplify,260,https://root.cern,https://github.com/root-project/root/pull/14663,1,['simpl'],['simplify']
Usability,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208:427,simpl,simpler,427,https://root.cern,https://github.com/root-project/root/pull/6208,1,['simpl'],['simpler']
Usability,"Before this commit, the logic in SnapshotHelper did not take into; account the case of RVecs that are being read from an input TTree; (that was not possible until v6.26). Because of how the logic was; structured, that meant that Snapshot was trying to write out those; RVecs as C-style arrays instead, obviously badly failing at it. This patch tries to make the flow of this logic a bit more readable; and fixes the problem mentioned above by treating input branches; of RVec type the same way we already treat std::vectors. This fixes https://github.com/root-project/root/issues/10225. @pcanal the logic in this commit could be simplified if instead of ""if it's not every other case, it must be a C-style array"" I could do instead ""if it's not a C-style array, then it must be one of the other cases"". But I'm not sure how to check for ""branch is a C-style array"", see https://mattermost.web.cern.ch/root/pl/4n1qbh363tdfjc1hs3khe6y84o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10268:629,simpl,simplified,629,https://root.cern,https://github.com/root-project/root/pull/10268,1,['simpl'],['simplified']
Usability,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5354:298,simpl,simplify,298,https://root.cern,https://github.com/root-project/root/pull/5354,1,['simpl'],['simplify']
Usability,"Binary data has to be transferred as separate data packet; This makes logic complicated especially when many small raw packets should be used; Using `JSON_base64` marker in class info, one can insert raw data in ROOT JSON and ; use such binary at the place. This significantly simplifies data handling. ; Same approach can be later used for eve7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4146:277,simpl,simplifies,277,https://root.cern,https://github.com/root-project/root/pull/4146,1,['simpl'],['simplifies']
Usability,"By setting a new bit in the TTree object, `kFlushAtCluster`, one can enter the ""one basket per event cluster"" mode. This forces baskets to line up with event clusters, at the cost of extra memory use. This new mode simplifies the basket layout within the file, reducing the amount of time handling special cases for the bulk IO mode. Because the baskets *must* grow to the size of an event cluster, we do not invoke `OptimizeBaskets` when one-basket-per-cluster mode is enabled. As this mode is expected to cause increased memory usage (the memory utilized by the `TTree` is more strongly tied to the variations in event size), we combine this with a technique borrowed from a CMS patchset to more aggressively shrink basket sizes after very large objects. The new basket shrinking algorithm will trigger whenever the basket is flushed. If the actual object size in the last clusters is significantly below the buffer size, then the basket will be shrunk. Given this tradeoff, I do not currently see this being enabled by default. The ideal ratio of `(basket buffer size)/(occupied buffer size)` is controlled by a new tunable in the `TTree`, defaulting to 1.1. A lower setting reduces overall memory usage at the cost of extra allocations; a higher setting increases aggregate memory usage. In writing out a 10k event CMS file (total CPU time is 32 minutes):. - Base case (without this patch):; - 888MB RSS; - 30 reallocations (shrinking of baskets due to low occupancy).; - 0.173ms taken for reallocation.; - New shrinking algorithm (this patch with defaults):; - 866MB RSS; - 4434 reallocations; - 97.0ms; - One basket per cluster mode with new shrinking algorithm:; - 902MB RSS; - 2882 reallocations; - 93.6ms. The CPU-time cost of the reallocation is 0.005% of total runtime (considering the file has to be read also, maybe 0.01% of output time?). This patch purposely leaves in the code that measures reallocation time in order to allow others to experiment; the intent is to disable / remove th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774:215,simpl,simplifies,215,https://root.cern,https://github.com/root-project/root/pull/774,1,['simpl'],['simplifies']
Usability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:92,simpl,simplified,92,https://root.cern,https://github.com/root-project/root/pull/13619,2,['simpl'],"['simplified', 'simplifying']"
Usability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:92,simpl,simplified,92,https://root.cern,https://github.com/root-project/root/pull/13887,1,['simpl'],['simplified']
Usability,"C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:1844,clear,clear,1844,https://root.cern,https://github.com/root-project/root/issues/11920,1,['clear'],['clear']
Usability,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16171:1367,clear,clear,1367,https://root.cern,https://github.com/root-project/root/pull/16171,1,['clear'],['clear']
Usability,"Can one of the threading people cross-check that this does what it's supposed to do? I don't have a good, simple test case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/892:106,simpl,simple,106,https://root.cern,https://github.com/root-project/root/pull/892,1,['simpl'],['simple']
Usability,Capture CTRL+L in ROOT prompt to clear,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10057:33,clear,clear,33,https://root.cern,https://github.com/root-project/root/issues/10057,2,['clear'],['clear']
Usability,Change Log:; - Enable RFileDialog through REveManager; - Add checks for validity of table and filter expressions; - Clear unnecessary REveManager printouts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8333:116,Clear,Clear,116,https://root.cern,https://github.com/root-project/root/pull/8333,1,['Clear'],['Clear']
Usability,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:79,clear,cleared,79,https://root.cern,https://github.com/root-project/root/pull/10736,1,['clear'],['cleared']
Usability,Change the comments format to make them visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7238:59,guid,guide,59,https://root.cern,https://github.com/root-project/root/pull/7238,1,['guid'],['guide']
Usability,"Changing the definition of infinity in RooFit from `1e30` to `std::numeric_limits<double>::infinity()`, and making some other changes that ensure no evaluation errors are logged with this new definition. * Code-format RooNumber.h and RooNumber.cxx; * Inline infinity constant and checks in `RooNumber`; * Make `TMath::AreEqualAbs()` return `true` when comparing `inf`; * Define infinity as `std::numeric_limits<double>::infinity()`; * RooTruthModel: local `xmin` and `xmax` to make code more readable; * Avoid `sin` or `cos` of infinity in RooTruthModel integral code; * Note change of infinity definition in RooFit. More details in the commit descriptions. With the increased use of inlined code and simpler comparisons in `RooNumber`, this is also speeding up RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12016:701,simpl,simpler,701,https://root.cern,https://github.com/root-project/root/pull/12016,1,['simpl'],['simpler']
Usability,Clear data row every time add a row to principal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1475:0,Clear,Clear,0,https://root.cern,https://github.com/root-project/root/pull/1475,1,['Clear'],['Clear']
Usability,Clearer CMake output when Python2 is not found but Python3 is,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8084:0,Clear,Clearer,0,https://root.cern,https://github.com/root-project/root/issues/8084,1,['Clear'],['Clearer']
Usability,"Code from ROOT R project,; -> New features added. now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import. Best Regards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74:327,Guid,Guide,327,https://root.cern,https://github.com/root-project/root/pull/74,1,['Guid'],['Guide']
Usability,"Commit df0b689 simplified the search for the C++ include directories and; tried to use a locale independent regex. However this regex doesn't work for all locales, for example in German; the string in the output is not. ```; #include <...> search starts here:; ```. but the word order is switched and we have. ```; Suche für »#include <...>« beginnt hier:; ```. As such I propose to go back to C-locale for this query to be completely; safe against weird locale settings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5547:15,simpl,simplified,15,https://root.cern,https://github.com/root-project/root/pull/5547,1,['simpl'],['simplified']
Usability,"Complete code reformatted to use JS classes.; Makes layout more clear and compact.; Optimize io code - use more internal constants, which; very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script; Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9779:64,clear,clear,64,https://root.cern,https://github.com/root-project/root/pull/9779,1,['clear'],['clear']
Usability,Continue Jolly's work to Generate the reference guide with Makefile and Github Actions. This initial PR is:. https://github.com/root-project/root/pull/15337,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15769:48,guid,guide,48,https://root.cern,https://github.com/root-project/root/pull/15769,1,['guid'],['guide']
Usability,"Copy the code for the `--notebook` option from `rootx/src/rootx.cxx`, which is for X11 and Cocoa only (i.e. Not built on Windows). This is the simplest (and less intrusive) way of fixing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9142:143,simpl,simplest,143,https://root.cern,https://github.com/root-project/root/pull/9142,1,['simpl'],['simplest']
Usability,Crash when setting `LearningRateSchedule` for training Keras model on TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9624:20,Learn,LearningRateSchedule,20,https://root.cern,https://github.com/root-project/root/issues/9624,2,['Learn'],['LearningRateSchedule']
Usability,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170:327,simpl,simplified,327,https://root.cern,https://github.com/root-project/root/pull/6170,3,['simpl'],"['simpler', 'simplified', 'simplify']"
Usability,"Currently http/webgui/eve7 tutorials are vetoed because of many reasons; But main reason - such tutorials designed so that `THttpServer` should runs forever ; that user can test them in the web browsers. This can be changed.; All tutorials used in ROOT testing started with arguments `root -b -l -q tutorial_name.C`; In tutorials itself one could detect that using something like:; ```; bool test_mode = gApplication->Argn() > 3 &&; !strcmp(gApplication->Argv(1),""-b"") && ; !strcmp(gApplication->Argv(2),""-l"") && ; !strcmp(gApplication->Argv(3),""-q"");; ```; Especially `-q` argument is clear sign that macro should not be running forever. Alternatively, one can set special environment variable and test it inside tutorials with:; ```; bool test_mode = gSystem->Getenv(""ROOT_TESTING"") != nullptr;; ```; But this requires that ROOT_TESTING environment variable should be set before. In any case - if such `test_mode` detected, macro should behaves differently:; 1. Do not start real http server while it most probably will conflict with other tutorials running in parallel.; 2. Run macro for only limited number of loops for ~3 seconds.; 3. Check production of png images - for most of these tutorials `THttpServer` or `RCanvas` or `REve` can generate image",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651:586,clear,clear,586,https://root.cern,https://github.com/root-project/root/issues/6651,1,['clear'],['clear']
Usability,"Currently, `gSystem->GetHomeDirectory()` will prefer to use the value from `etc/passwd` on Linux systems. In the Snap packaging, this causes issues due to the sandboxing permissions and is currently worked around by using LD_PRELOAD to hijack `getpwuid()` and force it to respect $HOME. From what I see, every other instance in the ROOT repository already prefers the $HOME variable, apart from this one instance here. I wouldn't expect most users to notice this patch, but I would expect users who might have a need to change this value to assume simply changing $HOME is sufficient and expect this behaviour, which can be done without any real complexities; rather than changing /etc/passwd which is a much more involved task and relies upon legacy knowledge of Unix systems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083:548,simpl,simply,548,https://root.cern,https://github.com/root-project/root/pull/7083,1,['simpl'],['simply']
Usability,"Currently, jitted actions spawn into existence right before the event; loop (at jitting time). This makes it impossible or unnecessarily complex to:; 1) let RResultPtrs own actions; 2) let actions own their previous node; 3) detect that an action has been booked before the event loop has run. Points 1 and 2 are required by ROOT-9416.; Point 3 is required by several graph-traversing features, e.g. ROOT-9458. The solution is to align the jitted action logic with jitted filters and; defines, and use a placeholder RJittedAction object that sits into the; computation graph and forwards all relevant calls to the concrete, jitted; action which will be created at a later time. RResultPtr logic is also greatly simplified since its action pointer can now always be set at construction time and is always guaranteed to be valid (it points to the RJittedAction owned by the RLoopManager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2398:711,simpl,simplified,711,https://root.cern,https://github.com/root-project/root/pull/2398,1,['simpl'],['simplified']
Usability,"Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6539:452,usab,usable,452,https://root.cern,https://github.com/root-project/root/issues/6539,1,['usab'],['usable']
Usability,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:338,simpl,simpler,338,https://root.cern,https://github.com/root-project/root/pull/8019,1,['simpl'],['simpler']
Usability,Cxxmodules simplify lib registration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3798:11,simpl,simplify,11,https://root.cern,https://github.com/root-project/root/pull/3798,2,['simpl'],['simplify']
Usability,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8833:271,simpl,simple,271,https://root.cern,https://github.com/root-project/root/issues/8833,2,['simpl'],['simple']
Usability,"Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro); ```c++; TGeoManager::Import(""Geometry.root""); gGeoManager->GetMasterVolume()->Draw(""ogl""); ```; and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed?. My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556:1067,simpl,simple,1067,https://root.cern,https://github.com/root-project/root/issues/6556,2,['simpl'],['simple']
Usability,"DeclUnloader was trying to unload template instantiations whose point of (first) instantiation was the PCH. This caused problems with the code below. In particular, the class specialization `std::vector<int>` was instantiated in the PCH as part of `std::stack<...>`, which in turn was required by the STL <regex> header.; ```; root [0] std::vector<int> foo, bar;; root [1] std::swap(foo, bar);; root [2] .undo 1; root [3] std::swap(foo, bar);; IncrementalExecutor::executeFunction: symbol '_ZSt15__alloc_on_swapISaIiEEvRT_S2_' unresolved while linking [cling interface function]!; ```. This PR fixes the issue avoiding the unload of decls instantiated in the PCH.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4447:405,undo,undo,405,https://root.cern,https://github.com/root-project/root/pull/4447,1,['undo'],['undo']
Usability,Deep Learning Module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:5,Learn,Learning,5,https://root.cern,https://github.com/root-project/root/pull/817,1,['Learn'],['Learning']
Usability,Deep learning code from Peter; with some fixes. Best; Omar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/145:5,learn,learning,5,https://root.cern,https://github.com/root-project/root/pull/145,1,['learn'],['learning']
Usability,"Directory` set the path to its `fName` and `fTitle`.; * `TSystemDirectory::GetListOfFiles()` gets the path of the directory from its title (`fTitle`), and returns a `TList *`, each element in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1517,clear,clear,1517,https://root.cern,https://github.com/root-project/root/issues/12350,1,['clear'],['clear']
Usability,"Disclaimer: I am not sure whether this is:; * 0 bug report (intented / wontfix),; * 1 or 2 bug reports. . Depending on feedback, We can close and / or I can create dedicated bugs. . ### Observations; There are two changes in 6.26.00:; * `TRint` exits hard for unknown arguments. ; * `TRint` crashes when instantiated with `*argc = nullptr` and / or `argv = nullptr` which are the default values for `TApplication` and hence may be used by existing users of the `TRint` constructor. . ### Affected use cases; Applications may do something like:; ```cpp; TRint *app = new TRint(""app"", 0, NULL);; ...; app->Run(kTRUE);; ```; Applications may also use `TRint` during operation. One existing model some applications I use are employing is:; * Create a `TRint` shortly after startup, passing in `argc` and `argv`. ; * Allow the user to drop to a ROOT interpreter prompt. This is then done by calling `app->Run(kTRUE);`. A user can use the interpreter to inspect state of the analysis software, and exit it again to let the software continue. . The latter approach is extremely useful for example to shell out after analysis software startup, or inside an event, such that the user can interactively analyze objects right from a ROOT interpreter shell. . ### Questions; * Is the use case ""use TRint as class to drop into the interpreter"" supported? ; The changelog of 6.26.00 reads like `TRint` is meant for internal use by `root.exe` only, but there seems to be no easy alternative. ; Depending on the reply, this could be a separate bug report, or a ""wontfix"". ; * If the use case is / should be supported, It would be useful to be able to allow unsupported arguments to pass through, for use in applications which are not `root.exe`. ; * For improved backwards compatibility and safety, not crashing when being passed `*argc = nullptr` and / or `argv = nullptr` would be nice. . In case somebody else is hit by this, I am right now using this hack as workaround:; ```cpp; int dargc = 1;; char** dargv = &a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090:119,feedback,feedback,119,https://root.cern,https://github.com/root-project/root/issues/10090,1,['feedback'],['feedback']
Usability,"Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way!. ### Explain what you would like to see improved; At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved; As far as I can tell, what happens is this:. ```; THistPainter::Paint() is called; -> PaintInit() is called, this populates the Hparam structure with the old axis ranges; -> PaintFrame() is called; -> RecalculateRange() is called; -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal; -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel; -> The frame is painted with the old axis ranges; -> The histogram is drawn with old ranges; ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce; Simple macro - try zooming on the lower axis:; `; {; TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);; hist->FillRandom(""gaus"", 10000);; TF1 *func = new TF1(""func"", ""gaus"");; hist->Fit(func);; TRatioPlot *plot = new TRatioPlot(hist);; plot->Draw();; }; `. ### Setup; 1. ROOT 6.25/01; 2. macOS 11.4; 3. build from git. ### Additional context; There is a comment ; ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize""; in TRatioPlot.cxx so I assume at least one other person knows about this behavior",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263:970,simpl,simply,970,https://root.cern,https://github.com/root-project/root/issues/9263,2,"['Simpl', 'simpl']","['Simple', 'simply']"
Usability,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7178:277,clear,clear,277,https://root.cern,https://github.com/root-project/root/pull/7178,1,['clear'],['clear']
Usability,Doc for `RInterface::Take` isn't clear about `column` parameter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16487:33,clear,clear,33,https://root.cern,https://github.com/root-project/root/issues/16487,2,['clear'],['clear']
Usability,Document current coding style guidelines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2298:30,guid,guidelines,30,https://root.cern,https://github.com/root-project/root/pull/2298,2,['guid'],['guidelines']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12067:180,Simpl,Simply,180,https://root.cern,https://github.com/root-project/root/pull/12067,1,['Simpl'],['Simply']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5cf047445a952108763adc66908a17649ba). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12097:180,Simpl,Simply,180,https://root.cern,https://github.com/root-project/root/pull/12097,1,['Simpl'],['Simply']
Usability,"During ROOT's build of Core.pcm, byproduct modules are built.; rootcling was complaining about some headers not appearing in Core.pcm,; despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers; are actually in a byproduct. In the same vein, do not forcefully include; them in teh pcm, as they are already included in the byproduct which should; be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5c)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12098:182,Simpl,Simply,182,https://root.cern,https://github.com/root-project/root/pull/12098,1,['Simpl'],['Simply']
Usability,"E, &OBJ);			\; if (br == nullptr ) {					\; Error(APPNAME, ""Could not create branch \""%s\"""", NAME);	\; return 1;							\; }								\; } while(false). int main() {. // The name of the application.; static const char* APPNAME = ""arrayWrite"";. // Open the output file.; static const char* FILENAME = ""arrays.root"";; std::unique_ptr<TFile> ofile(TFile::Open(FILENAME, ""RECREATE""));; if ((!ofile) || ofile->IsZombie()) {; Error(APPNAME, ""Could not open output file \""%s\"""", FILENAME);; return 1;; }; Info(APPNAME, ""Opened output file \""%s\"""", FILENAME);. {; // Create a TTree in the output file.; auto otree = std::make_unique<TTree>(""arrays"", ""Tree with arrays"");; otree->SetDirectory(ofile.get());. // Add vectors of arrays to it.; std::array<float, 3> arr1;; MAKE_BRANCH(""arr1"", arr1);; std::vector<std::array<float, 3> > vec1;; MAKE_BRANCH(""vec1"", vec1);. // Fill a few entries into the tree.; for (Int_t i = 0; i < 10; ++i) {; vec1.clear();; arr1 = {static_cast<float>(i),; static_cast<float>(i + 1),; static_cast<float>(i + 2)};; for (Int_t j = 0; j < i; ++j) {; vec1.push_back({static_cast<float>(j),; static_cast<float>(j + 1),; static_cast<float>(j + 2)});; }; if (otree->Fill() <= 0) {; Error(APPNAME, ""Failed to record entry %i"", i);; return 1;; }; }. // Make sure that the tree is saved.; otree->AutoSave();; }; Info(APPNAME, ""Finished writing \""%s\"""", FILENAME);. // Return gracefully.; return 0;; }; ```. Building and running this example gets me:. ```; [bash][celeborn]:arrayWrite > make; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o arrayWrite.o arrayWrite.cpp; rootcint -f Dictionary.cpp LinkDef.h; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with __GLIBCXX__ '20220324'; Extraction of runtime standard library version was: '20220421'; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o Dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:4578,clear,clear,4578,https://root.cern,https://github.com/root-project/root/issues/12007,1,['clear'],['clear']
Usability,"EDIT: to merge if nightlies are green for master. This resolves ROOT-9456, ""[Jenkins][DF] Sporadic failures in test_snapshotNFiles"". The issue is due to interleaved TBB task execution in the same thread. When nested task spawning is present (i.e. when TBB tasks spawn other; TBB tasks and the thread pool contains at least three threads), the TBB; task stealing mechanism makes it possible that a thread starts executing; a new instance of the ""parent"" tasks before it finishes the execution of; the previous parent task (this happens when the thread is waiting for a; ""stolen"" child task to finish, so it steals another threads' parent; task). In the case of a multi-thread snapshot, one needs to write at least two; branches for the multi-thread branch writing to kick in and have nested; task spawning. The crash was caused by a new parent task overwriting the output TTree; of the previous parent task in a given thread. When the previous parent; task resumed execution, it ended up trying to flush out the contents of; the deleted output TTree. The solution adopted is to use thread-local stacks of output TTrees (as; opposed to single output TTrees), that tasks push and pop when they; start and finish respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2228:956,resume,resumed,956,https://root.cern,https://github.com/root-project/root/pull/2228,1,['resume'],['resumed']
Usability,"Each RDrawable can get assigned RStyle object via `weak_ptr`; At the moment when display items are created, all RStyle object are temporary locked and streamed to the client. On the client side one can use three kinds of selectors:; - by id, which can be assigned to any RDrawable ; - by class, which is again arbitrary value for each RDrawable ; - by type, which is simple text like ""box"" for RBox, ""line"" for RLine and so on; For the moment very simple CSS evaluation is supported. test and tutorials macros for RStyle are provided. Also adjust other tutorials/v7/ macros. To be done: creating RStyle from parsing text CSS files and storing RStyle as text",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4481:367,simpl,simple,367,https://root.cern,https://github.com/root-project/root/pull/4481,2,['simpl'],['simple']
Usability,Enable Viewing HTML Reference Guide offline and in IDE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9525:30,Guid,Guide,30,https://root.cern,https://github.com/root-project/root/pull/9525,1,['Guid'],['Guide']
Usability,Evaluate using Profile-Guided Optimization (PGO) for optimizing Root's performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:23,Guid,Guided,23,https://root.cern,https://github.com/root-project/root/issues/15778,1,['Guid'],['Guided']
Usability,Eve-7 Add simple window management and improve message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9515:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/9515,2,['simpl'],['simple']
Usability,Eve-7 Clear out ownership of axis in REveCaloData,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6804:6,Clear,Clear,6,https://root.cern,https://github.com/root-project/root/pull/6804,1,['Clear'],['Clear']
Usability,Eve7: simplify generation of composite shape,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3148:6,simpl,simplify,6,https://root.cern,https://github.com/root-project/root/pull/3148,2,['simpl'],['simplify']
Usability,"Even though the `RooResolutionModel` inherits from RooAbsPdf, it is; special because it has it's own overload of `getValV`. This is; problematic for the new RooFit batch mode, because it doesn't use; `getValV` but instead `RooAbsReal::evaluate()` directly. Then for pdfs; it does the normalization, and for non-pdfs it doesn't. The `RooResolutionModel::getValV` is implemented such that the; resolution model behaves like a pdf when used on it's own (i.e., it will; be normalized), but when used for an analytical convolution via; `RooAbsAnaConvPdf`, it is not normalized. In this commit, the function `RooResolutionMode::selfNormalized` is; implemented to return `true` if the resolution model is used in a; convolution. Like this, it's behavior as a pdf is consistent with the; `getValV` implementation and the batch mode had no problems using that; class anymore. One complication after this change was the integral code in; `RooAbsAnaConvPdf`. In that code, the RooResolutionModel's integral; value is retrieved by getting it's normalization integral, but now that; the resolution model is proclaiming to be self-normalized the integral; is always trivially one. This problem is solved by getting the; normalization integral directly via `getNormObj` from the normalization; integral cache manager, in which case the check for self-normalization; is not done. In fact, this has already been done before in the case of; ranged fits, so the change in this commit is actually a simplification; of the code because it removes a code branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9212:1479,simpl,simplification,1479,https://root.cern,https://github.com/root-project/root/pull/9212,1,['simpl'],['simplification']
Usability,"Events handling was not correct with log axes.; `x0,y0` values where not converted and interpreted wrong during mouse moving. Also simplify pad name handling in TPad::SavePrimitive. And apply few other clang-tidy warnings from #7432",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7535:131,simpl,simplify,131,https://root.cern,https://github.com/root-project/root/pull/7535,1,['simpl'],['simplify']
Usability,Externally visible changes:; - Supports multiclass and regression.; - Supports booking more than one method.; - Supports random splitting for kfolds; - Improvements to tutorials. Internal changes:; - Simplify much of CVSplit and friends,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1579:200,Simpl,Simplify,200,https://root.cern,https://github.com/root-project/root/pull/1579,1,['Simpl'],['Simplify']
Usability,FIx TMVA Deep Learning for builds without IMT and/or BLAS + tutorials fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519:14,Learn,Learning,14,https://root.cern,https://github.com/root-project/root/pull/5519,1,['Learn'],['Learning']
Usability,"FLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='; See also; /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```; the log file says; ```; build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode.""; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0; make[7]: *** read jobs pipe: Bad file descriptor. Stop.; make[7]: *** Waiting for unfinished jobs....; In file included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:1526,clear,clearing,1526,https://root.cern,https://github.com/root-project/root/issues/14520,1,['clear'],['clearing']
Usability,"Feature: Save training progress to root file, present it in TMVAGui. Add training history object for TMVA, here I incorporate usage to log DNN epoch performance with DNN_CPU and PyKeras. The tool is intended to be general enough that it can be used by any ML algorithm. For example, XGBoost could also record its progress per iteration with this object. A request for this functionality can be found on the root forums; https://root-forum.cern.ch/t/how-to-get-training-history-using-tmva-keras-interface/28799. My solution does not require tensorboard and records are stored within the root file. Test:; ```; . bin/thisroot.sh; cd tutorials/tmva/; make; ./TMVAClassification; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See the DNN_CPU_valError and trainingError plotted, not that data points are only added for every epoch printed in MethodDNN.cxx ; .q. cd keras; python ClassificationKeras.py; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See Keras training history for PyKeras_val_acc, PyKeras_acc, PyKeras_loss and PyKeras_val_loss; ```. Feedback welcomed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4337:1089,Feedback,Feedback,1089,https://root.cern,https://github.com/root-project/root/pull/4337,1,['Feedback'],['Feedback']
Usability,Fix GetZaxis - may fail while dimension was checked before checking histogram. Simplify code - avoid gPad testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14892:79,Simpl,Simplify,79,https://root.cern,https://github.com/root-project/root/pull/14892,1,['Simpl'],['Simplify']
Usability,Fix Multiclass classification for TMVA Deep Learning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5553:44,Learn,Learning,44,https://root.cern,https://github.com/root-project/root/pull/5553,1,['Learn'],['Learning']
Usability,Fix TTreeCache issue related to learning from ROOT-9773.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3007:32,learn,learning,32,https://root.cern,https://github.com/root-project/root/pull/3007,6,['learn'],['learning']
Usability,Fix also links to the correct Users Guide and keep when needed link to old web site using the correct link : https://tmva.sourceforge.net/old_site/. This PR fixes #7627,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14025:36,Guid,Guide,36,https://root.cern,https://github.com/root-project/root/pull/14025,1,['Guid'],['Guide']
Usability,Fix and simplify copy_headers for Travis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7434:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/7434,2,['simpl'],['simplify']
Usability,Fix compiler warnings and simplify function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1209:26,simpl,simplify,26,https://root.cern,https://github.com/root-project/root/pull/1209,2,['simpl'],['simplify']
Usability,Fix grammar and typos in Tree Chapter of User's Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:48,Guid,Guide,48,https://root.cern,https://github.com/root-project/root/issues/7284,1,['Guid'],['Guide']
Usability,Fix header->dict dependencies.; Simplify core dictionary.; Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3404:32,Simpl,Simplify,32,https://root.cern,https://github.com/root-project/root/pull/3404,3,"['Simpl', 'simpl']","['Simplify', 'simplified']"
Usability,Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11219:68,simpl,simplify,68,https://root.cern,https://github.com/root-project/root/pull/11219,2,['simpl'],['simplify']
Usability,Fix some minor compiler warnings on various platforms. Simplify the `TIOFeatures::Set` implementation as suggested by @pcanal . I do not believe any of these indicate real bugs. Just some code cleanliness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1209:55,Simpl,Simplify,55,https://root.cern,https://github.com/root-project/root/pull/1209,1,['Simpl'],['Simplify']
Usability,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5380:113,simpl,simple,113,https://root.cern,https://github.com/root-project/root/pull/5380,1,['simpl'],['simple']
Usability,"Fix this kind of warnings with gcc8:; Warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct GCValues_t'; use assignment or value-initialization instead",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2877:82,clear,clearing,82,https://root.cern,https://github.com/root-project/root/pull/2877,1,['clear'],['clearing']
Usability,Fixes #8305 . 5 places in RootMacros.cmake use regex when a simple string(FIND) suffices,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8306:60,simpl,simple,60,https://root.cern,https://github.com/root-project/root/pull/8306,1,['simpl'],['simple']
Usability,Fixing notfn a bit more clearly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432:24,clear,clearly,24,https://root.cern,https://github.com/root-project/root/pull/3432,2,['clear'],['clearly']
Usability,Fixing user guide markdown issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:12,guid,guide,12,https://root.cern,https://github.com/root-project/root/pull/7756,2,['guid'],['guide']
Usability,"Follow-up from https://github.com/root-project/root/pull/13238#issuecomment-1645247274, see also the three points raised in the linked comment. From a user perspective, a `#pragma link C++ enum` currently produces neither an error nor a warning if the `enum` is not found (this is going to change with LLVM 16). As far as I can tell, `typedef`s to unnamed `enum`s are currently not considered (this was the pattern addressed in https://github.com/root-project/root/pull/13238), it is not clear if they should.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13303:488,clear,clear,488,https://root.cern,https://github.com/root-project/root/issues/13303,1,['clear'],['clear']
Usability,"Following simple code crashes:. ```cpp; TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");; TDataMember *m = cl->GetDataMember(""fAttrBorder"");; printf(""offset = %d\n"", (int) m->GetOffsetCint());; ```. Method is crucial, while used in PyROOT. ; Error trace:; ```; #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so; #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so; #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so; #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so; #19 0x00007f261bbf330d in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8547:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/8547,1,['simpl'],['simple']
Usability,"For RVecs of simple types, do a vector read of the item's principal columns instead of reading items one by one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13590:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/pull/13590,1,['simpl'],['simple']
Usability,"For a long time, users had to increase their maximum stack size in order; to read RooFit workspaces. Otherwise, the process would simply end; without any message.; The problem is an 8kB stack buffer for the I/O of stl sets, which is; always declared but rarely used. Here, the buffer is replaced with a; heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:; ```; tot. size call count frame size; 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b; 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**; 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer; 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config; 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj; 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at; 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer; 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj; 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl; 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,; 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at; 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at; 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at; 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at; ```. and after this fix:; ```; 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272; 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112; 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64; 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48; 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128; 7280	65	112	 65 libRIO.so`TBufferFile::ReadObjectAny(this clCast at 	112; 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9470:130,simpl,simply,130,https://root.cern,https://github.com/root-project/root/pull/9470,1,['simpl'],['simply']
Usability,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6039:328,simpl,simplification,328,https://root.cern,https://github.com/root-project/root/pull/6039,1,['simpl'],['simplification']
Usability,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916:22,progress bar,progress bar,22,https://root.cern,https://github.com/root-project/root/pull/13916,1,['progress bar'],['progress bar']
Usability,For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13921:22,progress bar,progress bar,22,https://root.cern,https://github.com/root-project/root/pull/13921,1,['progress bar'],['progress bar']
Usability,"For my project (based on PyROOT) I regularly test it against decv LCG nightly builds.; For last days I see a significant degradation in the CPU performance ; e.g. for the very simple simple [script](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8); I see a huge factor, almost an order of magnitude, degradation CPU performance with respect to ROOT 6.24 or 6.26.; I've checked the exiting dev3 builds and I see tat while even the earliest (laet week Tue) build is much slower than 6.24&6.26, ; but a factor of 2 in the performance comes from the last Friday build. ; Something bad happens between Thu and Fri slots... . You can find some numbers in the comment; to [this gist](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927:176,simpl,simple,176,https://root.cern,https://github.com/root-project/root/issues/11927,2,['simpl'],['simple']
Usability,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:349,simpl,simply,349,https://root.cern,https://github.com/root-project/root/pull/16750,1,['simpl'],['simply']
Usability,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15557:4,simpl,simplicity,4,https://root.cern,https://github.com/root-project/root/pull/15557,1,['simpl'],['simplicity']
Usability,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8856:317,learn,learn,317,https://root.cern,https://github.com/root-project/root/pull/8856,1,['learn'],['learn']
Usability,"For the new RooFit BatchMode, the model pdf had to be ""compiled"" for a; fixed normalization set before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:214,clear,clear,214,https://root.cern,https://github.com/root-project/root/pull/12079,1,['clear'],['clear']
Usability,"From Isabel Goos:. I am just writing because I found a mistake on your reference guide that should be corrected.; On this page: https://root.cern.ch/doc/master/classTRolke.html#a77ed9095b5fe47050eeec195eb3b669d; we see the example ""SetPoissonBkgGaussEff(x,y,em,sde,tau)""; but later ""void 	SetPoissonBkgGaussEff (Int_t x, Int_t y, Double_t em, Double_t tau, Double_t sde)"".; So, in the example sde and tau are interchanged. ; We lost some nerves finding this out :) so, if we can avoid this for someone else, we are happy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12976:81,guid,guide,81,https://root.cern,https://github.com/root-project/root/pull/12976,1,['guid'],['guide']
Usability,"From Timur:. When TGQuartz was developed, retina macs did not exist yet and Cocoa; did not provide any API to access scaling-related information.; After they have introduced this API and released retina MacBooks, our GUI; rendering was just fine and worked out of box, our 'pixmap-based' graphics; was fixed by multiplying pixmaps' geometry (by scaling factor) and also setting; the corresponding scaling CTM on the bitmap context. It appears, all these; years we did not know how expensive this scaling transformation is.; As was noticed recently, even a relatively simple poly-line consisting; of 25K segments takes _forever_ to draw - apparently Quartz is working; hard doing hell knows what under the hood (disabling anti-aliasing does not change; anything, for example). This patch is a possible fix, the proper solution would require a serious redesign; in many places (starting from TVirtualX and TCanvas) - for now we simply cancel; the scaling transformation when rendering potentially complex geometry and scale; coordinates manually instead. A macro reproducing this problem on retina display would be:. {; int n = 5000;; double xx[n];; double yy[n];; TRandom r;; for (int i=0; i<n; i++) {; xx[i] = r.Gaus(-1,0.5);; yy[i] = r.Gaus(1,1.5);; }; TGraph *g = new TGraph(n, xx,yy);; g->Draw(""al"");; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1177:567,simpl,simple,567,https://root.cern,https://github.com/root-project/root/pull/1177,2,['simpl'],"['simple', 'simply']"
Usability,"From https://gitlab.cern.ch/will/xroofit,; commit 5a9064e020abe994f01d31a55ebc127454e0d48e. This is just to see how the CI responds to learn what yet needs to be done upstream in xRooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499:135,learn,learn,135,https://root.cern,https://github.com/root-project/root/pull/11499,1,['learn'],['learn']
Usability,"From this simple reproducer:. ```cpp; #include <TCanvas.h>; #include <TFile.h>; #include <TTree.h>. #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <string>; #include <vector>. void generateData(const char *filename, int n, double value); {; TFile f{filename, ""RECREATE"", ""file for testing""};. double var1;. TTree tree{""AnalysisTree"", ""AnalysisTree""};; tree.Branch(""column1"", &var1, ""column1/D"");. for (unsigned int i = 0; i < n; i++) {; var1 = value;; tree.Fill();; }. tree.Write();; f.Write();; f.Close();; }. int main(); {; std::vector<std::string> fileNames{""test1.root"", ""test2.root""};; std::vector<double> weights{2, 0.5};. // Create two files with trees for testing; // 10 entries of 0.5; generateData(""test1.root"", 10, 0.5);; // 10 entries of 2; generateData(""test2.root"", 10, 2);. // Create Dataframe from files; ROOT::RDataFrame df(""AnalysisTree"", fileNames);. // Define weights depending on input file; auto df2 =; df.DefinePerSample(""weightbysample"", [&fileNames, &weights](unsigned int, const ROOT::RDF::RSampleInfo &id) {; for (unsigned int i = 0; i < fileNames.size(); i++); if (id.Contains(fileNames[i])); return weights[i];; return -1.;; });. auto s0 = df2.Sum<double>(""weightbysample"");; auto d0 = df2.Display({""weightbysample""}, 20);; std::cout << ""sum of weights: "" << *s0 << ""\n"";; d0->Print();. auto s1 = df2.Sum<double>(""weightbysample"");; auto d1 = df2.Display({""weightbysample""}, 20);; std::cout << ""sum of weights: "" << *s1 << ""\n"";; d1->Print();. }; ```. The `DefinePerSample` operation defines a column of 20 entries, 10 should have value `2`, the following 10 should have value `0.5`. The first set of `Sum` and `Display` operations show the correct behaviour, then the second set of operations reports a wrong result. All the 20 entries of the column are `0.5`:. ```; sum of weights: 25; +-----+----------------+; | Row | weightbysample | ; +-----+----------------+; | 0 | 2.0000000 | ; +-----+----------------+; | 1 | 2.0000000 | ; +-----+----------------+",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12043:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/12043,1,['simpl'],['simple']
Usability,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170:184,clear,clear,184,https://root.cern,https://github.com/root-project/root/pull/5170,1,['clear'],['clear']
Usability,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13665:449,simpl,simple,449,https://root.cern,https://github.com/root-project/root/pull/13665,1,['simpl'],['simple']
Usability,"GCC 4.9 only defines '__cplusplus' to the value 201300L and not to; 201402L as expected for C++14. This makes the check for the available; C++ standards in the interpreter fail to enable C++14 (which in turn; means that ROOT cannot be compiled with GCC 4.9 if C++14 was enabled in; Cmake). Similarly, for C++17 apart from the proper value 201703L other; values seems to be floating around (e.g. 201406L as defined by the; version of LLVM included with ROOT). The requirement for '__cplusplus_'; to enable certain C++ standards in the interpreter is made less strict; and just needs to be larger than the previous final value. This basically reinstates commit; 0a62e34aa86b812651cfcf9526ba03b975adaa5c which was undone by commit; 702298d9ad83866d0be62f0422c03ac8ea6687f1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/549:711,undo,undone,711,https://root.cern,https://github.com/root-project/root/pull/549,1,['undo'],['undone']
Usability,"GetDZ returning 0).; This is not expected as it means there are other effects on the Volume aside from the translation/rotation, even when shifting something without leaving its parent volume. Something similar happens if a translation/rotation is applied to a Node which is part of a TGeoVolumeAssembly, but there it probably happens only if the changes leads to part of the assembly exceeding the original boundaries.; We (me and @fuhlig1) suspect that this may partially be recursive (affecting the parent of the aligned volume). This can be cured by forcing the recomputation of the BoundingBox of the affected Volume. ### Expected behavior; After alignment of the nodes, all volumes/nodes are offset/rotated with their other properties valid.; Or if not possible due to performance, a warning should be printout with hint of the proper way to restore/recompute these values. A temporary fix was introduced for now in FairRoot, which is to simply do the recompute for all TGeoVolumeAssembly in the geometry tree, which seems to be fast enough that we do not have to try to track affected Volumes to be more selective. ; This may however not be the case later when applied to complete geometries for experiments like CBM. ### To Reproduce; Steps to reproduce the behavior with the attached files (includes ""ROOT-only"" examples both for problem and for macro-level fix):; 1. Compile a copy of ROOT 6.22.08 (done with FairSoft apr21p2 and FairRoot v18.6.7, should work with any older versions of each and with recent versions of FairRoot, as well as with a standalone version of ROOT); 1. Download [BboxAlignPb_example_2023_02_07.zip](https://github.com/root-project/root/files/10674368/BboxAlignPb_example_2023_02_07.zip) and unzip the macro, the standard container dictionary header and the two root files in a folder; 1. Go to this folder, load your ROOT environment; 1. Run; ```; root -l -b; root [0] .L alignment_map_def.h+; root [1] .x BboxAlignBug.C(""mcbm_beam_2022_05_23_nickel.geo.root"", ""A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:1637,simpl,simply,1637,https://root.cern,https://github.com/root-project/root/issues/12242,1,['simpl'],['simply']
Usability,"HTTPS seems to be supported just fine for this domain, but there's no 301/302 redirect from HTTP, so as-is this is simply enforcing plaintext on everyone who uses CMake to build, which is... not ideal. The use of SHA256 checksums is a 👍, but doesn't nullify every benefit of using HTTPS where available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499:115,simpl,simply,115,https://root.cern,https://github.com/root-project/root/pull/1499,1,['simpl'],['simply']
Usability,"Happens when try to find and execute static class method without arguments and which returns `void`. First detected with `TPluginHandler`. This is only plugin handler which defined with 0 arguments:; ```; gPluginMgr->AddHandler(""TGeoManagerEditor"", ""*"", ""TGeoManagerEditor"", ""GeomBuilder"", ""LoadLib()"");; ```; ROOT crashes when executed this plugin.; Problem can be cooked down to the reproducer - code which is executed by plugin handler:; ```; {; TClass *cl = TClass::GetClass(""TGeoManagerEditor"");. TString fCtor = ""LoadLib()"";. TString method = fCtor(0, fCtor.Index(""(""));; TString proto = fCtor(fCtor.Index(""("")+1, fCtor.Index("")"")-fCtor.Index(""("")-1);. auto fMethod = cl->GetMethodWithPrototype(method, proto);. auto fCallEnv = new TMethodCall;; fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;; fCallEnv->Execute(ret);; }. ```; It crashed when `fCallEnv->Execute` is called. . There is simple workaround:; ```; if (proto.Length() == 0) proto = ""()"";; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:913,simpl,simple,913,https://root.cern,https://github.com/root-project/root/issues/11930,1,['simpl'],['simple']
Usability,"Hello, Everyone!. My name is Sergey and I am a GSOC student this year. The aim of my project is to implement Multi-Target Regression algorithms to TMVA and to extend the capability of existing ones to handle multiple targets. In this commit I have modified the DecisionTree, allowing it to solve regression problems for multiple targets. The idea was inspired by how it is done in Clus package. (The variance of each subset resulting from a split is simply summed up from variances for each target). I have also extended the capability of BDT method to handle multiple targets (The only boosting method available for it right now is Bagging, but I am planning to implement Multi-target gradient descent based on the paper Boosted multi-task learning (2010) by Olivier Chapelle; Pannagadatta Shivaswamy.; ·",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/681:450,simpl,simply,450,https://root.cern,https://github.com/root-project/root/pull/681,2,"['learn', 'simpl']","['learning', 'simply']"
Usability,"Hello,. *Two histograms of m_yy are filled with pseudo-data :; -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019); -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :; a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal; a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal; a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf; -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :; *In the case where we don't normalize the RooDataHist,; then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,; -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991:163,clear,clearly,163,https://root.cern,https://github.com/root-project/root/issues/7991,1,['clear'],['clearly']
Usability,"Hello,. At the moment, the `ROOT::TLorentzVector` class uses a pseudorapidity-based calculation for the commonly-used DeltaR distance between vectors. For massive objects, such as jets, the rapidity should often be used instead. I have implemented a small switch within the `TLorentzVector::DeltaR` function to allow users to make this calculation with the vector's rapidity, instead of pseudorapidity. This has a default value of `kFALSE`, which means that the current behaviour will be the default one. I have cross-checked this new functionality with the `fastjet::pseudojet::delta_R` implementation and an internal ATLAS one, which all give the same results when performing the rapidity-based calculation. Please let me know if I have violated any contribution guidelines, and I will update this PR accordingly!. 🍻 Matt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087:765,guid,guidelines,765,https://root.cern,https://github.com/root-project/root/pull/7087,1,['guid'],['guidelines']
Usability,Here it is...any kind of feedback welcome :),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/636:25,feedback,feedback,25,https://root.cern,https://github.com/root-project/root/pull/636,1,['feedback'],['feedback']
Usability,"Hi @Axel-Naumann,. This is not really a pull request but I thought it might be a good way to get feedback from you guys and maybe some help improving it. This is not meant for merging, we are fine with an out of tree patch for now, but we would of course be very happy if something like this becomes upstream eventually. This is a very ""hacky"" try to be able to create ROOT files with; deterministic checksum that is not dependent on timestamp or hostname or; anything: Create a file with the same content twice on different; machines should yield the same checksum (assuming they have the same root file format version and same class definitions ...). We cannot really modify the software using these checksums and it's not just ROOT files but also other files in there so a distinction between ""content checksum"" and ""file checksum"" would be rather tricky. That's why we went for the brutal approach. We need this mostly for small files in a well controlled environment:; The file is created in one place at one time and not incrementally over; a long time, no threads. . So we would be fine with a global flag to not store time dependent information in files but it is of course ugly. A slightly less horrific version might be to have a `TDeterministicFile` which behaves like `TFile` with the only difference that it has a zeros for dates/uuids but I don't know the classes well enough to judge if that is feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4083:97,feedback,feedback,97,https://root.cern,https://github.com/root-project/root/pull/4083,1,['feedback'],['feedback']
Usability,"Hi Axel and Lorenzo,. I take the code and I put it in one commit to let review it easy.; In resume the changes are ; -> Now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import; -> added documentation in doxygen; -> new propieties for TRDataFrame with operators. You can see the output of documentation in; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. I have the code now in http://github.com/oprojects/root. Best Regards; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/83:92,resume,resume,92,https://root.cern,https://github.com/root-project/root/pull/83,3,"['Guid', 'guid', 'resume']","['Guide', 'guide', 'resume']"
Usability,"Hi guys,; * updated PyMVA with support for scikit-learn >= 0.18; * support for python 2 and 3. Best; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/375:50,learn,learn,50,https://root.cern,https://github.com/root-project/root/pull/375,1,['learn'],['learn']
Usability,"Hi there,. Running root-based reading analysis jobs in ATLAS, we are having problems trying to understand why some jobs fail on certain sites at file open when reading remote files with xrootd. We are using ROOT version 6.18/04. (I don't think that we have problems with 6.16/00, and a few tests indicate that 6.20/06 also had this problem.) . What we see is that for a file open:. std::unique_ptr< TFile > ifile( TFile::Open( file.c_str(), ""READ"" ) );. on a grid site node, the job exits with status code 139, which I believe is SIGURG - Urgent condition on socket (4.2BSD). ; The status code from TApplication::HandleException is 128 + root enum, and 11 is kSigUrgent. ; See:; https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602; https://root.cern.ch/doc/master/TSysEvtHandler_8h_source.html#l00107. Running the same program interactively on the same file works fine. And it seems that only some sites with remote reading are failing. So we would like to ask for help in trying to track this down. Currently, there is no stack trace to help understand things, and a simple 'print' just after TFile::Open is not printed. . I tried to add:. gApplication->ExitOnException( TApplication::kDontExit );. thinking that https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602. void TApplication::HandleException might throw an exception, but this does not work. So suggestions would be welcome. Is there a way to get a stack trace or more information on what is going on in the I/O part of this file open?. I don't know how to add in watchers for people in ATLAS, or a mailing list. But I did find @krasznaa. thanks much, RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948:1085,simpl,simple,1085,https://root.cern,https://github.com/root-project/root/issues/6948,1,['simpl'],['simple']
Usability,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:597,clear,clearest,597,https://root.cern,https://github.com/root-project/root/issues/7143,1,['clear'],['clearest']
Usability,"Hi, I am one of the iminuit developers (https://github.com/iminuit/iminuit). We are glad that Minuit2 is still usable as a package separate from ROOT and thank the ROOT developers for that. It makes our life much easier. The iminuit package is build by copying the Minuit2 code in ROOT and building a Cython wrapper around it. Because we compile and use the Minuit2 code outside of the ROOT build environment, we found and fixed some bugs, which we would like to merge upstream in ROOT as well. Each of the two commits in this PR fixes one issue. The first is rather trivial, `MnPrint` is used unconditionally, even though the corresponding header `MnPrint.h` is only included if certain compiler flags are set. The second one is a change in the interface of the `MinimumBuilder` base class. We run Minuit using the `MnMigrad` class. Without this change, there is no way to change the print level in a particular instance of MnMigrad. The change does not violate the logical constness of MinimumBuilder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677:111,usab,usable,111,https://root.cern,https://github.com/root-project/root/pull/1677,1,['usab'],['usable']
Usability,"Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem.; Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas?. Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10657:289,clear,clearly,289,https://root.cern,https://github.com/root-project/root/issues/10657,1,['clear'],['clearly']
Usability,"Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:; ```; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```; A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:; ```; root[0] .L path_to_celeritas_build/libceleritas_root.so; ```; leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:; ```; std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);; ```; for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162:976,simpl,simple,976,https://root.cern,https://github.com/root-project/root/issues/10162,3,['simpl'],"['simple', 'simpler']"
Usability,"I added a very famous concept of Physics as a tutorial. My program graphs the time measured by a stationary observer relative to an observer traveling at a percentage of the speed of light. . I have explained the entire phenomena and added short comments to my code to explain it. . It is quite a simple program, but I believe it can be helpful for someone to learn how to plot functions and physical effects. . I put a lot of effort into this, so please consider it :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7015:297,simpl,simple,297,https://root.cern,https://github.com/root-project/root/pull/7015,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:167,progress bar,progress bars,167,https://root.cern,https://github.com/root-project/root/pull/1585,1,['progress bar'],['progress bars']
Usability,"I am a GSoC student working on introducing Recurrent Neural Networks in TMVA. This is the rectified commits using suggestions from #693 . It introduces basic `RNNLayer`, `RecurrentNet` with tests for forward pass. It does not require immediate merge and I'll keep adding commits to it according to feedbacks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/778:298,feedback,feedbacks,298,https://root.cern,https://github.com/root-project/root/pull/778,1,['feedback'],['feedbacks']
Usability,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11440:441,simpl,simple,441,https://root.cern,https://github.com/root-project/root/issues/11440,1,['simpl'],['simple']
Usability,"I am refactoring the old code of ROOT I/O for compression. Some part of the code are up to 30 years old and from my experience that the C style code that is used is prone to errors for developers that are not familiar with the code. Since one of the goals of ROOT is to be maintainable, I think that this can be very helpful.; Nonetheless, even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes that have been done so far are the following:. ### Removed pointers https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer. Also, the irep now is a reference rather than a pointer. However, I think that it would be better to make the function not void and instead of using irep just return a value. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be const unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060:349,simpl,simplest,349,https://root.cern,https://github.com/root-project/root/pull/4060,1,['simpl'],['simplest']
Usability,"I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7388:49,feedback,feedback,49,https://root.cern,https://github.com/root-project/root/pull/7388,1,['feedback'],['feedback']
Usability,"I am trying to refactor the old code of ROOT I/O for compression but the even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes of this PR are based on top of another PR https://github.com/root-project/root/pull/3947 for adding support for ZSTD so for our goal just focus on the following commits. ### Removed pointers and unsigned chars https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer.; Also there is a mess in the compression algorithms since consider the buffers as unsigned chars, and other as chars. The type does not matter since we are only working with bytes but we should use only one to avoid all the casting that we find across the code base. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? If it is maintained it would be nice to make it more readable and follow the same structure and naming as the rest of compression algorithm.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037:82,simpl,simplest,82,https://root.cern,https://github.com/root-project/root/pull/4037,1,['simpl'],['simplest']
Usability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/issues/8474,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:; https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity); `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`; one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:; https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD; The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9646:384,simpl,simplicity,384,https://root.cern,https://github.com/root-project/root/issues/9646,1,['simpl'],['simplicity']
Usability,"I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:; ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13149:9,learn,learn,9,https://root.cern,https://github.com/root-project/root/pull/13149,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6152:20,user-friendly,user-friendly,20,https://root.cern,https://github.com/root-project/root/pull/6152,1,['user-friendly'],['user-friendly']
Usability,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752:207,Clear,ClearMustCleanupBits,207,https://root.cern,https://github.com/root-project/root/pull/10752,1,['Clear'],['ClearMustCleanupBits']
Usability,"I would like to write (something equivalent to) the following:. ```cpp; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->AddField(std::move(field), (void*)&rvec);; auto w = RNTupleWriter::Recreate(std::move(m), ""r"", ""somefile.root"");; ```. but that `RNTupleModel::AddField` signature is missing and I could not find another way to do this correctly.; For example the following example code adds a single field to the model (""v"") but it adds _two_ corresponding RFieldValues to `model->GetDefaultEntry()`, one explicitly with `m->GetDefaultEntry()->CaptureValue()` and one implicitly with the `m->AddField(std::move(field))` call. ```cpp; // write out RVec; {; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->GetDefaultEntry()->CaptureValue(field->CaptureValue(&rvec));; m->AddField(std::move(field));. auto w = RNTupleWriter::Recreate(std::move(m), ""r"", fileGuard.GetPath());; w->Fill();; rvec.clear();; rvec.push_back(42);; w->Fill();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9069:1091,clear,clear,1091,https://root.cern,https://github.com/root-project/root/issues/9069,1,['clear'],['clear']
Usability,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5550:247,simpl,simple,247,https://root.cern,https://github.com/root-project/root/pull/5550,1,['simpl'],['simple']
Usability,"I've got my hands on a DF workflow, which produces in a pretty large DF graph around 10k histograms in a single event loop. The graph consists of roughly 130k nodes (I can tell from the jitted code) and is assembled in Python. Even though probably the actual solution would be slimming the DF graph, it poses a nice challenge for us to push jitting to its limits. See the file attached in the archive, simply jit it or compile it with `your_compiler compile.cxx $(root-config --cflags --libs)`. The file has 130k lines and around 60 mio characters (60 MB file) and is extracted from the code, which is jitted by DF. Stats I've collected so far:; - Jitting with current master (llvm9): 1.5h and >25GB maxres size; - Compiling with O0 and clang10: 1.5h and 20GB maxres size (fits the jitting); - Compiling with O0 and gcc4.8.5 and gcc10: More than 12h compile time, more than 80GB maxres size at that time (I stopped it); - Compiling with O1 and clang10: More than 10h in, I'll probably stop it soon. Here's the file:; [compile.tar.gz](https://github.com/root-project/root/files/6169676/compile.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604:402,simpl,simply,402,https://root.cern,https://github.com/root-project/root/issues/7604,1,['simpl'],['simply']
Usability,"I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5950:210,simpl,simply,210,https://root.cern,https://github.com/root-project/root/pull/5950,1,['simpl'],['simply']
Usability,"If method `TROOT::GetFunction()` called multiple times ; with non-existing function name, each call causes invocation of interpreter.; If repeated many times, it may crash ROOT. Simple reproducer:; ```; for (int n=0;n<100000;++n) gROOT->GetFunction(""any"");; ```. In current ROOT it takes ~3 GB for nothing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14969:178,Simpl,Simple,178,https://root.cern,https://github.com/root-project/root/pull/14969,1,['Simpl'],['Simple']
Usability,"If one wants to replace some servers of a RooAbsArg with; other servers, this is the the only option you have:. ```c++; bool RooAbsArg::redirectServers(const RooAbsCollection& newSetOrig,; bool mustReplaceAll, bool nameChange,; bool isRecursionStep); ```. That's not so great, because if the new servers have different names,; thes old names must be set as the `""ORIGNAME:<myname>""` attribute for; the function to know which servers should be replaced. These attributes are generally not reset, and this mutation of the; server attributes can cause trouble down the line. Notably, this causes trouble in the BatchMode when compiling the; computation graph for a given normalization set. One single new server; might replace differently-named original servers. In that case, the new; servers get *two* ""ORIGNAME:"" attributes and the the `redirectServers()`; function doesn't know what to do. Also, it's inefficient because of the string matching. For this reason, a new overload is suggested, where one can simply; specify what should replace what in a lookup map, and it doesn't matter; if the names are different:. ```c++; bool RooAbsArg::redirectServers(; std::unordered_map<RooAbsArg *, RooAbsArg *> const &replacements; ); ```. The implementation of `redirectServers()` calls; `RooAbsProxy::changePointer()`, for which such a new overload also had; to be added. Using the new `RooAbsArg::redirectServers()` overload that takes a; lookup map of server replacements, the helper class that compiles the computation graph for a given normalization set can be; improved such that it's not necessary to set the `""ORIGNAME:""`; attributes of new servers. This fixes some failures in the RooFit tutorials with BatchMode where; some servers eventually aggregated multiple `""ORIGNAME:""` attributes,; causing `redirectServers()` to error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12928:1006,simpl,simply,1006,https://root.cern,https://github.com/root-project/root/pull/12928,1,['simpl'],['simply']
Usability,"If the ZeroMQ system version is too old, we can't use the system C++; headers either (note that `find_package(ZeroMQ)` not only checks if the; library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ; version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10111:266,usab,usable,266,https://root.cern,https://github.com/root-project/root/pull/10111,1,['usab'],['usable']
Usability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:145,undo,undo,145,https://root.cern,https://github.com/root-project/root/pull/5420,2,['undo'],['undo']
Usability,"If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:1164,simpl,simply,1164,https://root.cern,https://github.com/root-project/root/issues/7987,1,['simpl'],['simply']
Usability,Implement TPad::ClearPrimitives methods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13506:16,Clear,ClearPrimitives,16,https://root.cern,https://github.com/root-project/root/pull/13506,1,['Clear'],['ClearPrimitives']
Usability,Implement json output for v7 tutorials in the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8122:56,guid,guide,56,https://root.cern,https://github.com/root-project/root/pull/8122,2,['guid'],['guide']
Usability,Implement properly the scatter plot palette attributes as requested here: https://github.com/root-project/root/issues/15922; Simplify scatter.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16140:125,Simpl,Simplify,125,https://root.cern,https://github.com/root-project/root/pull/16140,1,['Simpl'],['Simplify']
Usability,"Implement the possibility to save TGraph* as .csv, .tsv and .txt; as requested here https://github.com/root-project/root/issues/9491. Test example:. ```; {; auto c = new TCanvas(""c"",""A Simple Graph without axis"",700,500);. const Int_t n = 10;; auto gr = new TGraph(n);; gr->SetTitle(""A Simple Graph"");; gr->GetXaxis()->SetTitle(""X axis"");; gr->GetYaxis()->SetTitle(""Y axis"");. auto gre = new TGraphErrors(n);; gre->GetXaxis()->SetTitle(""X axis"");; gre->GetYaxis()->SetTitle(""Y axis"");; gre->SetTitle(""A Simple Graph with errors"");. auto gra = new TGraphAsymmErrors(n);; gra->GetXaxis()->SetTitle(""X axis"");; gra->GetYaxis()->SetTitle(""Y axis"");; gra->SetTitle(""A Simple Graph with asymmetric errors"");. auto grb = new TGraphBentErrors(n);; grb->GetXaxis()->SetTitle(""X axis"");; grb->GetYaxis()->SetTitle(""Y axis"");; grb->SetTitle(""A Simple Graph with bent errors"");. Double_t x, y, exl, exh, eyl, eyh;; for (Int_t i=0;i<n;i++) {; x = i*0.123;; y = 10*sin(x+0.2);; exl = x*0.01;; exh = x*0.1;; eyl = y*0.01;; eyh = y*0.1;; gr->SetPoint(i,x,y);; gre->SetPoint(i,x,y);; gre->SetPointError(i,exl,eyl);; gra->SetPoint(i,x,y);; gra->SetPointError(i,exl,exh, eyl, eyh);; grb->SetPoint(i,x,y);; grb->SetPointError(i,exl,exh, eyl, eyh);; }. gr->Draw(""A*L"");; gr->SaveAs(""graph.csv"", ""title"");; gr->SaveAs(""graph.tsv"", ""title"");; gr->SaveAs(""graph.txt"", ""title"");; gr->SaveAs(""graph.C"");; gre->SaveAs(""grapherror.csv"", ""title"");; gre->SaveAs(""grapherror.tsv"", ""title"");; gre->SaveAs(""grapherror.txt"", ""title"");; gra->SaveAs(""graphaerror.csv"", ""title"");; gra->SaveAs(""graphaerror.tsv"", ""title"");; gra->SaveAs(""graphaerror.txt"", ""title"");; grb->SaveAs(""graphberror.csv"", ""title"");; grb->SaveAs(""graphberror.tsv"", ""title"");; grb->SaveAs(""graphberror.txt"", ""title"");. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10365:185,Simpl,Simple,185,https://root.cern,https://github.com/root-project/root/pull/10365,5,['Simpl'],['Simple']
Usability,Implementation of Clear command in place of .!cls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958:18,Clear,Clear,18,https://root.cern,https://github.com/root-project/root/issues/13958,1,['Clear'],['Clear']
Usability,"Implemented corresponding print behavior.; Maybe revise this meta command's behavior in the case of a missing argument (print out the current value, instead of toggling between two defaults), if it turns out to be more intuitive.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/85:219,intuit,intuitive,219,https://root.cern,https://github.com/root-project/root/pull/85,1,['intuit'],['intuitive']
Usability,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162:197,simpl,simple,197,https://root.cern,https://github.com/root-project/root/pull/6162,1,['simpl'],['simple']
Usability,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5327:38,simpl,simple,38,https://root.cern,https://github.com/root-project/root/pull/5327,1,['simpl'],['simple']
Usability,Improve documentation/user experience when using globbing with remote paths,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:22,user experience,user experience,22,https://root.cern,https://github.com/root-project/root/issues/13258,2,['user experience'],['user experience']
Usability,"Improve logging:; * Add button in menu bar to show the highest severity message; * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9515:141,simpl,simple,141,https://root.cern,https://github.com/root-project/root/pull/9515,1,['simpl'],['simple']
Usability,Improve the clean up after the ref guide build in order to not pollute the sources.; As requested here: https://github.com/root-project/root/issues/8947,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9076:35,guid,guide,35,https://root.cern,https://github.com/root-project/root/pull/9076,1,['guid'],['guide']
Usability,Improve usability of root-config.bat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:8,usab,usability,8,https://root.cern,https://github.com/root-project/root/pull/7663,2,['usab'],['usability']
Usability,"In Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966), it's suggested to include the translated RooFit tutorials in a [private branch](https://github.com/clelange/root/tree/roofit_tutorial/tutorials/roofit) from Clemens Lange. Some of these translations are already upstream, but the ones that didn't work with pyROOT without further hacks were not included. With recent improvements in pyROOT and RooFit, more of the translated tutorials become usable and we can include them upstream. This commit includes all the remaining tutorials that give exactly the same plotting and fitting results as the `.C` counterparts. In the future, pyROOT has to be further developed to also make the remaining translated tutorials run:; * [rf102_dataimport.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf102_dataimport.py); * [rf109_chi2residpull.py](https://github.com/clelange/root/blob/9ab46c2ed2a362af1dcc6813707477338539786b/tutorials/roofit/rf109_chi2residpull.py); * [rf207_comptools.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf207_comptools.py); * [rf303_conditional.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf303_conditional.py); * [rf403_weightedevts.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf403_weightedevts.py); * [rf503_wspaceread.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf503_wspaceread.py); * [rf508_listsetmanip.py](https://github.com/clelange/root/blob/b0520637a4bfc88bd2eaf44fcb14075ffe2e4f74/tutorials/roofit/rf508_listsetmanip.py); * [rf602_chi2fit.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf602_chi2fit.py); * [rf802_mcstudy_addons.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf802_mcstudy_addons.py); * [rf803_mcstudy_addons2.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf803_mcstudy_addons2.py); * [rf804_mcs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8091:467,usab,usable,467,https://root.cern,https://github.com/root-project/root/pull/8091,1,['usab'],['usable']
Usability,In TClingCallFunc use new TMutex::Reset/Restore() to clear any and all locks active before entering user code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1192:53,clear,clear,53,https://root.cern,https://github.com/root-project/root/pull/1192,2,['clear'],['clear']
Usability,"In case of named arguments, the RooFormula will replace the argument; names with `x[0]` to `x[n]`. There are two things that can go wrong if; RooFormula is not implemented right. First, if there is a variable named; ""x"" it should only be substituted if the matching substring is not; followed by ""["", to not replace existing x[i]. Second, variables with; integer names like ""0"" should only be substituted if the match is not; followed by a ""]"", again to avoid replacing x[i]. This test checks that; these cases are handled correctly. The second case was so far not dealt with correctly, but with this; commit it is. A corresponding unit test was also implemented. The preprocessor commands in `RooFormula` were also reorganized; slightly, such that one can test the `TPRegexp` backend simply by; commenting out the `define ROOFORMULA_HAVE_STD_REGEX`. This pull request fixes an issue reported in the forum:; https://root-forum.cern.ch/t/a-strange-bug-in-rf708-bphysics-c/49152/2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10105:785,simpl,simply,785,https://root.cern,https://github.com/root-project/root/pull/10105,1,['simpl'],['simply']
Usability,"In db1a2ceb40 (#9352), the C++ version of the rf408 tutorial was; improved:. * simplify code; * remove race condition; * fix typos. In this commit, the same changes are also applied to the corresponding; Python tutorial. Furthermore, two problems exclusive to the Python version were fixed:. * Replace second `RooDataSetHelper` with `RooDataHistHelper`; * Fix line breaks in data printing (now the output is formatted just; like in the C++ version). Closes #9360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10893:79,simpl,simplify,79,https://root.cern,https://github.com/root-project/root/pull/10893,1,['simpl'],['simplify']
Usability,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:255,Clear,Clear,255,https://root.cern,https://github.com/root-project/root/pull/8566,2,['Clear'],['Clear']
Usability,"In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:; ```; ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451; ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422); ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06); ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06); ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06); ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted.; https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10400:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/issues/10400,1,['simpl'],['simple']
Usability,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:111,clear,clear,111,https://root.cern,https://github.com/root-project/root/issues/11854,1,['clear'],['clear']
Usability,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:1063,clear,clear,1063,https://root.cern,https://github.com/root-project/root/pull/14877,1,['clear'],['clear']
Usability,"In the `rf205` tutorial and the associated stressRooFit test, the `bkg` RooAddPdf was created using the `sig1frac`, while it is clearly the idea to use the `bkg1frac` parameter. This is fixed in this commit, also fixing the name of the `bkg1frac` parameter, which was accidentally set to `sig1frac` (probably a copy-paste error). However, to not change the output of the tutorial and the stressRooFit test, the value of `bkg1frac` was set to the same value as `sig1frac`, such that this commit only fixes the model but doesn't change the tutorial and test output.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:128,clear,clearly,128,https://root.cern,https://github.com/root-project/root/pull/11985,1,['clear'],['clearly']
Usability,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:755,guid,guide,755,https://root.cern,https://github.com/root-project/root/issues/6343,2,['guid'],['guide']
Usability,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344:138,clear,cleared,138,https://root.cern,https://github.com/root-project/root/pull/7344,2,['clear'],"['clear', 'cleared']"
Usability,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11814:1213,simpl,simpler,1213,https://root.cern,https://github.com/root-project/root/issues/11814,1,['simpl'],['simpler']
Usability,"In the special RooFit workspace functions implemented in; RooFactoryWSTool, the tool creates a given RooFit object that is then; imported in the workspace. For example, a RooAddPdf is created when you; use `SUM` in `RooWorkspace::factory()`. When these objects are; imported, they are copied, so the original object is still owned by the; RooFactoryWSTool. In some cases, the original object is not deleted,; causing a memory leak and even worse duplicate client nodes in the; computation graph. This commit fixes that. Simple reproducer for the problem with the duplicate client nodes that; this commit solves:. ```C++; RooWorkspace w;; w.factory(""Gaussian::g1(x[0,20],mx1[10,0,20],sx1[3,0,10])"");; w.factory(""Gaussian::g2(x,mx2[10,0,20],sx2[1,0,10])"");; w.factory(""Gaussian::g3(y[0,20],my[10,0,20],sy[2,0,10])"");; w.factory(""Polynomial::pol(y,a[-0.01,-0.05,0.1])"");. w.factory(""SUM::pdfx(fx[0.2,0,1]*g1,g2)"");; w.factory(""SUM::pdfy(fy[0.4,0.,1.]*g3,pol)"");. w.pdf(""g1"")->Print(""V"");; w.pdf(""g3"")->Print(""V"");; ```. You will see that `pdfx` appears twice as a client of `g1`, and `pdfy`; appears twice as a client of `g3`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9120:520,Simpl,Simple,520,https://root.cern,https://github.com/root-project/root/pull/9120,1,['Simpl'],['Simple']
Usability,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845:200,Clear,Clear,200,https://root.cern,https://github.com/root-project/root/pull/12845,1,['Clear'],['Clear']
Usability,Include New Deep Learning Module with support for CNN.; Integrate the development of the 2017 GSOC students.; For the moment this PR does not include the RNN and the DAE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1826:17,Learn,Learning,17,https://root.cern,https://github.com/root-project/root/pull/1826,1,['Learn'],['Learning']
Usability,"Increase the speed of BDT training. For regression analysis with Grad boosting, the speed gain is almost 2x.; For multiclass the gain depends on the number of multiclasses.; For classification: haven't done the test. Non BDT algorithms will also be faster (assuming the progress bar is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/100:270,progress bar,progress bar,270,https://root.cern,https://github.com/root-project/root/pull/100,1,['progress bar'],['progress bar']
Usability,Indicate clearly that TRandom::GetSeed cannot be used to store state of generators for the derived classes (e.g. TRandom3). Modify implementation of TRandom3::GetSeed to return current state element used to generate the random number. This will change after each call to TRandom3::Rndm() instead before only the first state element was returned and it was not very useful still it is changing only after 624 calls to the random number. . This addresses the JIRA items ROOT-10059 and ROOT-10081 and github issue #6624,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6723:9,clear,clearly,9,https://root.cern,https://github.com/root-project/root/pull/6723,1,['clear'],['clearly']
Usability,"Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:3519,simpl,simple,3519,https://root.cern,https://github.com/root-project/root/issues/11784,1,['simpl'],['simple']
Usability,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:122,simpl,simply,122,https://root.cern,https://github.com/root-project/root/pull/16008,1,['simpl'],['simply']
Usability,"Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block; callback mechanism to reset addresses when needed.; We cannot trust TTree::CopyAddresses to do the right thing because; the output branch might be a different kind of branch than the input; branch (e.g. TBranch vs TBranchElement), which leads to the problem; described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8375:683,simpl,simple,683,https://root.cern,https://github.com/root-project/root/pull/8375,1,['simpl'],['simple']
Usability,Integration of all different layers in one Deep Learning module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:48,Learn,Learning,48,https://root.cern,https://github.com/root-project/root/pull/817,1,['Learn'],['Learning']
Usability,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14086:72,Simpl,Simple,72,https://root.cern,https://github.com/root-project/root/pull/14086,1,['Simpl'],['Simple']
Usability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:643,simpl,simpler,643,https://root.cern,https://github.com/root-project/root/pull/16594,1,['simpl'],['simpler']
Usability,"Introduce special handler for connecting and disconnecting events; Avoid usage of predefined ""CONN_READY"" and ""CONN_CLOSED"" arguments; Adjust existing widgets and tutorials; These changes in callbacks **brakes backward compatibility** - in my mind, it was necessary. Hide RWebWindowsManager for ordinary users - provide convenience `RWebWindow::Create()` and `RWebWindow::TerinateROOT()` methods. Now one can include just `ROOT/RWebWindow.hxx` to get all necessary functionality. Provide tutorial with simple openui5 panel - of course, using new methods",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4035:502,simpl,simple,502,https://root.cern,https://github.com/root-project/root/pull/4035,1,['simpl'],['simple']
Usability,"Introduced tutorial on how to create a Kahan summation, with a simple example on how it can give better results than the classical one. This issue solves the Jira issue ROOT-9461",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2328:63,simpl,simple,63,https://root.cern,https://github.com/root-project/root/pull/2328,1,['simpl'],['simple']
Usability,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11628:208,simpl,simple,208,https://root.cern,https://github.com/root-project/root/pull/11628,1,['simpl'],['simple']
Usability,"It happens often that you want to create a RooDataHist just to serve a; RooHistPdf or a RooHistFunc. In this case, it is convenient for the; HistPdf/HistFunc to take ownership of the RooDataHist. The cleanest way to implement this is probably via additional; constructors that take the RooDataHist via `std::unique_ptr`, such that; the ownership is always clear. A new transient member of; HistPdf/HistFunc is then taking over the ownership. With this change, it is easy to fix one of the remaining memory leaks in; the RooLagrangianMorphFunc. I second commit in this PR applies also some general code modernization to RooHistPdf and RooHistFunc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11107:356,clear,clear,356,https://root.cern,https://github.com/root-project/root/pull/11107,1,['clear'],['clear']
Usability,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16439:118,Simpl,Simple,118,https://root.cern,https://github.com/root-project/root/pull/16439,1,['Simpl'],['Simple']
Usability,It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10750:6,simpl,simpler,6,https://root.cern,https://github.com/root-project/root/pull/10750,1,['simpl'],['simpler']
Usability,"It seems (at least in the `TTreeDraw` case that the `TTreeCache` does return to the learning phase after the completion of a run:; ```; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x556fa2b6a770; root [1] ntuple->SetCacheSize(100000000);; root [2] ntuple->Draw(""py""); root [4] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70. root [5] ntuple->Draw(""px""); root [6] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12622:84,learn,learning,84,https://root.cern,https://github.com/root-project/root/issues/12622,1,['learn'],['learning']
Usability,"It seems independent Cling builds have been broken on Windows for a while (or am making an error when setting up the build in Cling's Github Actions CI?). Looking at Cling commits - https://github.com/root-project/cling/commits/master it looks like Cling's appveyor hasn't even triggered in a long time, so it is difficult to say when was the last time that an independent Cling built worked on Windows. I made some attempt to fix it via - https://github.com/root-project/root/pull/6750/commits/db80e8c0038ab830b1cc4e7d2d42ad640c1ec232 but that is clearly not enough. One can look at the build error logs on Windows in the corresponding Github Action workflow - https://github.com/reikdas/cling-1/runs/1348031890?check_suite_focus=true. @vgvassilev @bellenot Do you have any idea what could be going wrong?. If Cling can be built successfully on Windows, we can merge this in :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6750:548,clear,clearly,548,https://root.cern,https://github.com/root-project/root/pull/6750,1,['clear'],['clearly']
Usability,It shows simple communication between c++ server and JS client,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4022:9,simpl,simple,9,https://root.cern,https://github.com/root-project/root/pull/4022,1,['simpl'],['simple']
Usability,It simplifies some interfaces and removes one extra responsibility from the column readers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11307:3,simpl,simplifies,3,https://root.cern,https://github.com/root-project/root/pull/11307,1,['simpl'],['simplifies']
Usability,"It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5289:3,simpl,simplifies,3,https://root.cern,https://github.com/root-project/root/pull/5289,1,['simpl'],['simplifies']
Usability,"It uses RBrowser and RBrowsable functionality to select some files or input new file SaveAs.; Provide sync and async modes. Actual ui5 coding should be implemented by @Falcort . Now RFileDialog starts its own window, later adapter will be provided to use RFileDialog inside other widgets - like RCanvas or RBrowser. Provide simple tutorial macro.; For meaningful async mode I add `RDirectory::Remove(name)` method (@Axel-Naumann)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4607:324,simpl,simple,324,https://root.cern,https://github.com/root-project/root/pull/4607,1,['simpl'],['simple']
Usability,It was not clear in Doxygen which methods are not implemented in TH2Poly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11648:11,clear,clear,11,https://root.cern,https://github.com/root-project/root/pull/11648,1,['clear'],['clear']
Usability,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15937:1115,simpl,simple,1115,https://root.cern,https://github.com/root-project/root/pull/15937,1,['simpl'],['simple']
Usability,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:184,usab,usable,184,https://root.cern,https://github.com/root-project/root/pull/6298,1,['usab'],['usable']
Usability,"It would be very helpful if RooAbsData was able to store an optional associated RooArgSet (simply as a data member?) of global observable values. These should be settable by the user. Once this is added, the methods like 'fitTo' could automatically make use of this set for the global observables. Also it would make sense that 'getParameters' considered these global observables to be observables and so getParameters doesn't return the global observables in the list. Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8123:91,simpl,simply,91,https://root.cern,https://github.com/root-project/root/issues/8123,1,['simpl'],['simply']
Usability,It's currently completely undocumented: https://root.cern/doc/master/classTROOT.html#a78c012ca4694a4e0694735e48866be8d but we use it in several tutorials so users ask what it does.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11974:26,undo,undocumented,26,https://root.cern,https://github.com/root-project/root/issues/11974,1,['undo'],['undocumented']
Usability,"It's not clear to users whether the `RooDataSet` passed to a; RooNDKeysPdf has to live as long as that pdf or not. Right now it has to live just as long, because the RooNDKeysPdf contains; the RooDataSet by non-owning pointer. However, there was no reason for; that, because the dataset is only used in the constructor. This commit suggests to drop this unused `_data` member of the; RooNDKeysPdf, solving potential lifetime problems: the dataset doesn't; need to live as long as the RooNDKeysPdf anymore. With this change, it was possible to use some more of the `RooFit::OwningPtr<T>` alias in RooFit, which is done in the second commit of this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13308:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/13308,1,['clear'],['clear']
Usability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2847,simpl,simply,2847,https://root.cern,https://github.com/root-project/root/issues/13811,1,['simpl'],['simply']
Usability,Johannes pointed out that the links to the Old Math User's Guide should be changed to like to the manual.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7148:59,Guid,Guide,59,https://root.cern,https://github.com/root-project/root/pull/7148,2,['Guid'],['Guide']
Usability,"LLVM 16 deprecated the `makeArrayRef` function in favor of using deduction guides: https://github.com/llvm/llvm-project/commit/36117cc46388d677359f1180bd536f80d0c5fe97 A future LLVM version will likely remove them (hasn't happened yet), so we should preemptively migrate away.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14219:75,guid,guides,75,https://root.cern,https://github.com/root-project/root/issues/14219,1,['guid'],['guides']
Usability,"Launching the Python tutorials from the 'tutorials/launcher.py' module injected; the `__main__` namespace in the tutorial itself. In general it is not a problem,; but it can sometimes hide errors like the one fixed by; https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves; the same purpose and the tutorials can thus be launched by simply calling; 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10207:359,simpl,simply,359,https://root.cern,https://github.com/root-project/root/pull/10207,1,['simpl'],['simply']
Usability,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:457,simpl,simple,457,https://root.cern,https://github.com/root-project/root/pull/7777,1,['simpl'],['simple']
Usability,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:490,clear,clear,490,https://root.cern,https://github.com/root-project/root/issues/10618,1,['clear'],['clear']
Usability,Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6; - Make the groups structure for ROOT 7; - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7403:287,guid,guide,287,https://root.cern,https://github.com/root-project/root/pull/7403,1,['guid'],['guide']
Usability,Main problem - stack was drawn twice and only while histograms in original stack were destroyed ; producing canvas had nice look. . Changes:; * do not draw stack twice.; * clone histograms once and use in stack and in legend; * do not use sames - make no sense when calling `SetStats(false)` at the same time; * simplify text drawing; * make C++ and Python macro closer to each other,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15758:312,simpl,simplify,312,https://root.cern,https://github.com/root-project/root/pull/15758,1,['simpl'],['simplify']
Usability,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11821:221,clear,clearly,221,https://root.cern,https://github.com/root-project/root/pull/11821,1,['clear'],['clearly']
Usability,Make TFile usable as context manager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9947:11,usab,usable,11,https://root.cern,https://github.com/root-project/root/pull/9947,2,['usab'],['usable']
Usability,Make clear THtml is legacy code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7312:5,clear,clear,5,https://root.cern,https://github.com/root-project/root/pull/7312,2,['clear'],['clear']
Usability,Make sure to Clear the list 'extrainfos' before any of its content is deleted. See https://root-forum.cern.ch/t/tfile-makeproject-severely-broken-in-root-6-08-06-6-18-00/34924,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4285:13,Clear,Clear,13,https://root.cern,https://github.com/root-project/root/pull/4285,1,['Clear'],['Clear']
Usability,Make the TFile layout doc visible in Ref Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7891:41,Guid,Guide,41,https://root.cern,https://github.com/root-project/root/pull/7891,1,['Guid'],['Guide']
Usability,Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13929:84,guid,guide,84,https://root.cern,https://github.com/root-project/root/pull/13929,1,['guid'],['guide']
Usability,Make the web gui doc visible in the ref guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7138:40,guid,guide,40,https://root.cern,https://github.com/root-project/root/pull/7138,2,['guid'],['guide']
Usability,"Many changes to make the webgui doc visible in the ROOT reference guide.; May be the doc could me make a bit more verbose in some places, but at least the structure is there now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7138:66,guid,guide,66,https://root.cern,https://github.com/root-project/root/pull/7138,1,['guid'],['guide']
Usability,"Many improvements in CEF:; - support POST requests, let transfer arbitrary data from client to server; - replace text-based cefQuery messaging by longpoll, required for binary transfer; - assign X11 error handler to avoid application abort in case of minor X11 warnings; - use single-process mode in batch to reduce number of running processes. Provide special handling of batch mode for Chrome and Firefox:; - both support `--headless` mode completely without X ; - very simple workaround to stop browser after 30 s with `timeout 30 chromium ...` command; - let configure custom shell commands via `.rootrc` parameters. Changes in http and webgui libraries:; - ""hide"" TCivetweb, TFastCgi, THttpWSEngine classes from end-user (@Axel-Naumann); - remove some comments from civetweb.c (@amadio); - use std::copy() instead of memcpy() for std::string (@Axel-Naumann); - introduce simple key identification of clients, let recognize which client starts by TWebWindow::Show(); - simplify cmake files, separate v7 code in FitPanel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886:472,simpl,simple,472,https://root.cern,https://github.com/root-project/root/pull/1886,3,['simpl'],"['simple', 'simplify']"
Usability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:349,clear,clearer,349,https://root.cern,https://github.com/root-project/root/pull/9896,1,['clear'],['clearer']
Usability,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:61,guid,guide,61,https://root.cern,https://github.com/root-project/root/pull/7756,4,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,Mention RDatasetSpec in the user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12191:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/12191,2,['guid'],['guide']
Usability,Merge fixes in TMVA for Deep Learning from master to 6.14 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2111:29,Learn,Learning,29,https://root.cern,https://github.com/root-project/root/pull/2111,1,['Learn'],['Learning']
Usability,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882:245,simpl,simplifies,245,https://root.cern,https://github.com/root-project/root/pull/7882,1,['simpl'],['simplifies']
Usability,"More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9720:113,simpl,simplified,113,https://root.cern,https://github.com/root-project/root/pull/9720,1,['simpl'],['simplified']
Usability,More fixed in TMVA Deep Learning for running on GPU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2059:24,Learn,Learning,24,https://root.cern,https://github.com/root-project/root/pull/2059,1,['Learn'],['Learning']
Usability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:769,simpl,simpler,769,https://root.cern,https://github.com/root-project/root/pull/14311,1,['simpl'],['simpler']
Usability,"Mostly, this is a set of links to other, existing documentation. However, the GitHub web UI will recommend developers review this file before submitting a pull-request. It's a simple nudge to ""do the right thing"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839:176,simpl,simple,176,https://root.cern,https://github.com/root-project/root/pull/839,1,['simpl'],['simple']
Usability,Move documentation from the manual to the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8991:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/pull/8991,1,['guid'],['guide']
Usability,Move the implementation in the base class as currently its identical for the file and the DAOS backend. Additional minor simplification.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15767:121,simpl,simplification,121,https://root.cern,https://github.com/root-project/root/pull/15767,1,['simpl'],['simplification']
Usability,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16311:977,simpl,simplifies,977,https://root.cern,https://github.com/root-project/root/pull/16311,1,['simpl'],['simplifies']
Usability,Need an REveDataItem index in simple proxy builder in order to reuse common elements in same scene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4023:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/4023,1,['simpl'],['simple']
Usability,"Newest qt 5.13.0 crashes here during exit.; Disable it, while is not clear if defaultProfile can be still used -; seems to be not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4047:69,clear,clear,69,https://root.cern,https://github.com/root-project/root/pull/4047,1,['clear'],['clear']
Usability,"No any other dimension kinds are supported, therefore simplify API; Use canvas size in `jupyter` to configure output container",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8686:54,simpl,simplify,54,https://root.cern,https://github.com/root-project/root/pull/8686,1,['simpl'],['simplify']
Usability,Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3769:42,simpl,simplify,42,https://root.cern,https://github.com/root-project/root/pull/3769,1,['simpl'],['simplify']
Usability,"Now TWebCanvas provides method to store JSON files, which are send to the clients.; These files can be used for offline debugging of the JavaScript code.; Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2900:314,simpl,simple,314,https://root.cern,https://github.com/root-project/root/pull/2900,1,['simpl'],['simple']
Usability,"Now for each attribute three methods should be used:; 1. const Getter; 2. non-const Setter; 3. Access by reference. ```; const RAttrText &GetAttrText() const { return fAttrText; }; CustomAttrs &SetAttrText(const RAttrText &txt) { fAttrText = txt; return *this; }; RAttrText &AttrText() { return fAttrText; }; ```. Such set of methods allow to clearly separate const and non-const; access. And when setter is used, chain of methods can be called. Add several new tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4523:343,clear,clearly,343,https://root.cern,https://github.com/root-project/root/pull/4523,1,['clear'],['clearly']
Usability,Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster.; Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11778:47,guid,guide,47,https://root.cern,https://github.com/root-project/root/pull/11778,1,['guid'],['guide']
Usability,"OOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT version. 6.32.00 and 6.32.04. ### Installation method. aliBuild. ### Operating system. macOS Sequoia. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:13713,Simpl,Simply,13713,https://root.cern,https://github.com/root-project/root/issues/16449,1,['Simpl'],['Simply']
Usability,"OT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `digraph my gaussian{`; to; `digraph ""my gaussian""{`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:1176,simpl,simple,1176,https://root.cern,https://github.com/root-project/root/issues/7067,1,['simpl'],['simple']
Usability,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8111:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/8111,3,['simpl'],['simple']
Usability,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5339:68,simpl,simpler,68,https://root.cern,https://github.com/root-project/root/pull/5339,1,['simpl'],['simpler']
Usability,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650:457,simpl,simple,457,https://root.cern,https://github.com/root-project/root/pull/12650,1,['simpl'],['simple']
Usability,"One can add more elements in the future; No need special workarounds to ""hide"" HTML elements of StandardItem.; Simplify data organization in model of SummaryView.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4976:111,Simpl,Simplify,111,https://root.cern,https://github.com/root-project/root/pull/4976,1,['Simpl'],['Simplify']
Usability,One cannot simply call `delete this` in base class - ; especially when derived class uses multiple inheritance.; Therefore provide OnZeroRefCount implementation in all derived classes; In REve also mark this method as abstract to ensure that such problem; not appear in the future,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8354:11,simpl,simply,11,https://root.cern,https://github.com/root-project/root/pull/8354,1,['simpl'],['simply']
Usability,One have to delete result of gSystem->ExpandPathName() function.; Or as in the patch - use other signature.; Little bit simplify the code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4851:120,simpl,simplify,120,https://root.cern,https://github.com/root-project/root/pull/4851,1,['simpl'],['simplify']
Usability,"One of the overloads of `RooAbsData::createHistogram` was deprecated; because it behaved inconsistently with another more frequently used; overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and; pointed it out only in the source code with the deprecated macro. This; commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10663:412,guid,guide,412,https://root.cern,https://github.com/root-project/root/pull/10663,1,['guid'],['guide']
Usability,"Overall goals:; - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;; - simplify G__Core CMake setup;; - remove unnecessary dictionaries;; - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3371:127,simpl,simplify,127,https://root.cern,https://github.com/root-project/root/pull/3371,1,['simpl'],['simplify']
Usability,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1625,learn,learn,1625,https://root.cern,https://github.com/root-project/root/pull/15272,1,['learn'],['learn']
Usability,"PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++; #include ""RooRealVar.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(); {; using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool.; std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");; RooJSONFactoryWSTool::loadExportKeys(; rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");; RooJSONFactoryWSTool::loadFactoryExpressions(; rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json""; );. // Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.; RooRealVar x(""x"", ""x"", -8, 8);; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma);; RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));; RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});; RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);; RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);; simPdf.addPdf(model, ""physics"");; simPdf.addPdf(model_ctl, ""control"");. // Export to JSON; {; RooWorkspace ws{""workspace""};; ws.import(simPdf);; RooJSONFactoryWSTool tool{ws};; tool.exportJSON(""simPdf.json"");; // Output can be pretty-printed with `python -m json.tool simPdf.json`; }. // Import JSON; RooWorkspace ws{""workspace""};; RooJSONFactoryWSTool tool{ws};; tool.importJSON(""simPdf.json"");; // At the moment this will fail, because the Gaussians in the product are; // missing in the JSON dump!; }; ```. The JSON dump will look like this:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9372:160,simpl,simple,160,https://root.cern,https://github.com/root-project/root/issues/9372,1,['simpl'],['simple']
Usability,"Part of the RooFit code modernization, avoiding the use of unnecessary; wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10115:100,simpl,simple,100,https://root.cern,https://github.com/root-project/root/pull/10115,1,['simpl'],['simple']
Usability,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:1086,simpl,simplified,1086,https://root.cern,https://github.com/root-project/root/pull/8709,1,['simpl'],['simplified']
Usability,"People know that they can use `TF1::SetParameters()` to set the; parameter values of a TF1. For example, when you have two parameters:; ```C++; TF1 myexpo(""myexp"", ""[coef] * std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(1.0, 0.5);; ```. When people get rid of all parameters except for one, they therefore; automatically assume that this will work:. ```C++; TF1 myexpo(""myexp"", ""std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(0.5);; ```. However, it doesn't work because `SetParameters` requires at least two; arguments. This commit suggests to fix that and generalize the function; to take only one parameter as well. This reduces the surprises people have when interacting with a TF1 and; therefore improves the user experience for first-time ROOT users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11052:729,user experience,user experience,729,https://root.cern,https://github.com/root-project/root/pull/11052,1,['user experience'],['user experience']
Usability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/8880,2,"['learn', 'simpl']","['learning', 'simple']"
Usability,"Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit?; ##############; Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3694:27,simpl,simplification,27,https://root.cern,https://github.com/root-project/root/pull/3694,2,"['Simpl', 'simpl']","['Simplify', 'simplification']"
Usability,Preserve JSROOT when generating reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8599:42,guid,guide,42,https://root.cern,https://github.com/root-project/root/issues/8599,2,['guid'],['guide']
Usability,Prevent potential infinite recursion and simplify part of the code. This fixes the issue #13233 and doesn't affect the already closed Jira issue [#9260](https://sft.its.cern.ch/jira/browse/ROOT-9260),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284:41,simpl,simplify,41,https://root.cern,https://github.com/root-project/root/pull/13284,1,['simpl'],['simplify']
Usability,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705:471,guid,guide,471,https://root.cern,https://github.com/root-project/root/pull/7705,1,['guid'],['guide']
Usability,"Previously, it tried to use the clear method which does not exist. Corresponding unit tests are available on this branch:. https://github.com/bbockelm/roottest/tree/makeproject_bitset. @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61:32,clear,clear,32,https://root.cern,https://github.com/root-project/root/pull/61,1,['clear'],['clear']
Usability,Print value fixes introduced based on comments after the first pull request.; Removed the old code and made various changes to make the code simpler.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/76:141,simpl,simpler,141,https://root.cern,https://github.com/root-project/root/pull/76,1,['simpl'],['simpler']
Usability,"Probably due to historical reasons, the Minuit2 code uses several systems to report errors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:546,feedback,feedback,546,https://root.cern,https://github.com/root-project/root/issues/6421,1,['feedback'],['feedback']
Usability,"Protect `strlen(nullptr)` in gpad and graf classes, improve/simplify TMultiGraph ""pads"" drawing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10855:60,simpl,simplify,60,https://root.cern,https://github.com/root-project/root/pull/10855,2,['simpl'],['simplify']
Usability,Provide methods to check if sending via websocket is possible; Fix - correctly handle negative parameter values in TF1/TF2; Fix - clear range flag when drawings are cleared; Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2945:130,clear,clear,130,https://root.cern,https://github.com/root-project/root/pull/2945,2,['clear'],"['clear', 'cleared']"
Usability,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13657:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/pull/13657,1,['simpl'],['simple']
Usability,PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:48,Clear,ClearProxiedObjects,48,https://root.cern,https://github.com/root-project/root/pull/15106,1,['Clear'],['ClearProxiedObjects']
Usability,"RColor is pure color storage - RGBA or name.; RAttrColor is attribute class to extract colors from RDrawable attributes; Should simplify code. Provide several more ""well-known"" colors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5107:128,simpl,simplify,128,https://root.cern,https://github.com/root-project/root/pull/5107,1,['simpl'],['simplify']
Usability,RDF Progress bar seems to ignore Range() calls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15323:4,Progress bar,Progress bar,4,https://root.cern,https://github.com/root-project/root/issues/15323,1,['Progress bar'],['Progress bar']
Usability,RDF progress bar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8685:4,progress bar,progress bar,4,https://root.cern,https://github.com/root-project/root/issues/8685,2,['progress bar'],['progress bar']
Usability,REve: Add option to draw axis guides,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12634:30,guid,guides,30,https://root.cern,https://github.com/root-project/root/pull/12634,2,['guid'],['guides']
Usability,"RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:987,Clear,Clear,987,https://root.cern,https://github.com/root-project/root/pull/11525,1,['Clear'],['Clear']
Usability,RFitPanel missing from reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7304:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/7304,2,['guid'],['guide']
Usability,"RNTuple stores data in a directory. Upon opening this directory in TBrowser, not the opaque internal keys should be displayed but a user-friendly representation of the ntuple structure (fields). Thus, a new TDirectoryFile bit is introduced that should indicate to the TBrowser that an object of the type set in the directory's title shall take care of the in-directory browsing. @bellenot @Axel-Naumann Please have a look.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4081:132,user-friendly,user-friendly,132,https://root.cern,https://github.com/root-project/root/pull/4081,1,['user-friendly'],['user-friendly']
Usability,"RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```; 20220511/094820 At:100 N=104 TFile ; 20320223/050248 At:204 N=68423 CX = -11523.26 ; 20531200/160357 At:68627 N=14215937 CX = -24.78 ; 20531200/160357 At:14284564 N=1 END ; ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10559:384,usab,usable,384,https://root.cern,https://github.com/root-project/root/issues/10559,1,['usab'],['usable']
Usability,"ROOT's build directory (or any project's) should be included in .gitignore (it helps with a lot of tools as well as IDE/code editor file switchers). Now, 2 years ago [I proposed to reserve ""_build""](https://github.com/root-project/root/pull/8009) in .gitignore as a simple build directory name that we could use. That PR was closed in favor of [removing the ""build"" directory](https://github.com/root-project/root/issues/8031) from ROOT's sources and use that name instead. Since then I have been naming my build directories something that the current .gitignore would ignore: `cmake-build-foo` or similar. I realize it might seem silly, but it would be a non-negligible quality of life improvement for me if I could just use `cmake-build` instead, hence this PR (while we wait for #8031).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12881:266,simpl,simple,266,https://root.cern,https://github.com/root-project/root/pull/12881,1,['simpl'],['simple']
Usability,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06; ```; * perhaps there is a problem with the `FixCollectionV5`. ### Setup; 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK); 2. CentOS7 x86_64 (lxplus); 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:3872,simpl,simplest-,3872,https://root.cern,https://github.com/root-project/root/issues/7276,2,['simpl'],['simplest-']
Usability,"RWebWindow uses credit-based data transport. ; Default number of credits was always 10 and can be too small.; Now this default value can be changed via ""WebGui.ConnCredits"" variable. In WebEve checks amount of available credits to suppress highlight operations - main source of small packets send to server.; Let avoid situation when such small packets over-flood communication channel. Latest JSROOT code with better organization how TCanvas and TFrame painters provided when required.; Previous implementation was not adequate, while cannot take into account that object may be drawn on TCanvas or on RCanvas. Now it clearly stated in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6920:619,clear,clearly,619,https://root.cern,https://github.com/root-project/root/pull/6920,1,['clear'],['clearly']
Usability,"Recently, we accidentally introduced a bug into RooFit when removing the IO constructor of `RooBernstein`, and we brought it back months later: https://github.com/root-project/root/pull/10816. It's unexpected that a class with a `ClassDef` version greater than zero (meaning that it's clearly intended for IO) can even compile without an IO constructor, essentially breaking it for IO!. Could we add some checks at compile time to make sure that any class with a non-zero `ClassDef` version has an IO constructor implemented?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10824:285,clear,clearly,285,https://root.cern,https://github.com/root-project/root/issues/10824,1,['clear'],['clearly']
Usability,Ref guide version changer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863:4,guid,guide,4,https://root.cern,https://github.com/root-project/root/pull/5863,2,['guid'],['guide']
Usability,Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9606:21,guid,guide,21,https://root.cern,https://github.com/root-project/root/pull/9606,1,['guid'],['guide']
Usability,Reference guide version changer. first try. Needs more test and tuning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863:10,guid,guide,10,https://root.cern,https://github.com/root-project/root/pull/5863,1,['guid'],['guide']
Usability,Reland simplify loadpcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:7,simpl,simplify,7,https://root.cern,https://github.com/root-project/root/pull/3747,2,['simpl'],['simplify']
Usability,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:204,clear,clear,204,https://root.cern,https://github.com/root-project/root/pull/11254,2,['clear'],"['clear', 'clearer']"
Usability,Remove VariationsNode and simplify node creation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10565:26,simpl,simplify,26,https://root.cern,https://github.com/root-project/root/pull/10565,2,['simpl'],['simplify']
Usability,"Remove dependency from TBufferFile.; Now simply duplicate some code from TBufferFile in TBufferXML.; This is last version, which is fully compatible with previous XML I/O. Next steps - introduce TBufferText class, which will be base for JSON and XML classes.; Several methods will be shared between these two classes.; And both XML and JSON will use text actions for objects streaming, ; which may lead into incompatible changes in XML format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1481:41,simpl,simply,41,https://root.cern,https://github.com/root-project/root/pull/1481,1,['simpl'],['simply']
Usability,"Remove one layer of indirection by merging MakeColumnReadersHelper; and MakeColumnReader. Less code, we avoid some repeated checks,; and MakeColumnReader is not a bit simpler to call directly, which; we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9275:167,simpl,simpler,167,https://root.cern,https://github.com/root-project/root/pull/9275,1,['simpl'],['simpler']
Usability,Reorganise the ref guide main page to highlight the Manual. The tutorial and course are listed in a separated paragraph. Fix for typo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:19,guid,guide,19,https://root.cern,https://github.com/root-project/root/pull/8887,1,['guid'],['guide']
Usability,Reported here: https://connect.microsoft.com/VisualStudio/feedback/details/3143729,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1295:58,feedback,feedback,58,https://root.cern,https://github.com/root-project/root/pull/1295,1,['feedback'],['feedback']
Usability,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5071:70,Simpl,Simple,70,https://root.cern,https://github.com/root-project/root/pull/5071,1,['Simpl'],['Simple']
Usability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11173:1306,simpl,simple,1306,https://root.cern,https://github.com/root-project/root/issues/11173,1,['simpl'],['simple']
Usability,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14022:70,Simpl,Simple,70,https://root.cern,https://github.com/root-project/root/pull/14022,1,['Simpl'],['Simple']
Usability,"Resolves point 1. of [ROOT-9349](https://sft.its.cern.ch/jira/browse/ROOT-9349): ""[TDF] Only invoke the interpreter once per event loop"". Instead of having one single `JitTransformation` function with two entry points (`CallJit{Define,Filter}`) we now have two separate functions `JitDefine` and `JitFilter` that share several helper functions. There is slightly more code repetition than before, but the code is _much_ simpler. By the time ROOT-9849 is completed `JitDefine` and `JitFilter` will be different enough to justify this separation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1844:420,simpl,simpler,420,https://root.cern,https://github.com/root-project/root/pull/1844,1,['simpl'],['simpler']
Usability,"Restructure generic pythonization with the following idea:. 1. We would like to have a `_className.py` per class, where all pythonizations are added. However, for the very generic ones, a `_generic.py` file is added.; 2. Rename the implementation of the pretty printing (generic) pythonization so that it's much more clear what you have to expect in the file.; 3. ~~Rename the C++ side of the pythonization from `GenericPythonization` to `AddPrettyPrintingPyz` so that the python side of the pythonization is much more readable. This allows us to see all added pythonizations directly in the pythonization `_className.py` files.~~ We agreed on keeping teh `GenericPyz.cxx` filename of the source, although we want to rename the function `PythonizeGeneric` in a more meaningful way to `AddPrettyPrintingPyz`. That keeps the structure of the sources (one file per class) and enables us to see all pythonization for a class on the python side in the `_class.py` files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2467:317,clear,clear,317,https://root.cern,https://github.com/root-project/root/pull/2467,1,['clear'],['clear']
Usability,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702:265,Simpl,Simple,265,https://root.cern,https://github.com/root-project/root/issues/7702,1,['Simpl'],['Simple']
Usability,"Revert ""Further simplify the code. We do not need to use complex disc…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3734:16,simpl,simplify,16,https://root.cern,https://github.com/root-project/root/pull/3734,2,['simpl'],['simplify']
Usability,"Revert ""[Cling] Simplify std::tuple/pair value printer""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14197:16,Simpl,Simplify,16,https://root.cern,https://github.com/root-project/root/pull/14197,1,['Simpl'],['Simplify']
Usability,"Revert ""[cmake] Xcode 14 warns about -undefined dynamic_lookup; simply suppress:""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045:64,simpl,simply,64,https://root.cern,https://github.com/root-project/root/pull/12045,2,['simpl'],['simply']
Usability,"Revert ""[cmake] simplify copies of misc files into build directory""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9872:16,simpl,simplify,16,https://root.cern,https://github.com/root-project/root/pull/9872,2,['simpl'],['simplify']
Usability,"Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079.; ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3845:204,simpl,simple,204,https://root.cern,https://github.com/root-project/root/pull/3845,1,['simpl'],['simple']
Usability,"Revisit the doxygen formatting for ROOT 7 graphics.; Make new groups to better reflect the structure in ""Functional part""of the Reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4473:138,guid,guide,138,https://root.cern,https://github.com/root-project/root/pull/4473,1,['guid'],['guide']
Usability,"Revisiting the hist/hist headers to make them doxygen compatible . Some data members were not commented properly (not the right format). So the comments do not appear on the ref guide, or worst, sometimes a wrong comment appear on a data member.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7726:178,guid,guide,178,https://root.cern,https://github.com/root-project/root/pull/7726,1,['guid'],['guide']
Usability,"RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involved repeatedly writing and reading workspaces, and I wanted to understand",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8764:1028,simpl,simple,1028,https://root.cern,https://github.com/root-project/root/pull/8764,1,['simpl'],['simple']
Usability,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5969:157,intuit,intuitive,157,https://root.cern,https://github.com/root-project/root/pull/5969,2,['intuit'],['intuitive']
Usability,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; ```; RooTemplateProxy<const RooAbsPdf>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5966:157,intuit,intuitive,157,https://root.cern,https://github.com/root-project/root/pull/5966,1,['intuit'],['intuitive']
Usability,"Same as #3938, but for 6.18; When running eve7 application snapshot, server does not have functionality at all.; Therefore special highlight or selection requests cannot be processed.; Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3939:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/3939,1,['simpl'],['simple']
Usability,Second iteration of the distributed RunGraphs function. The logic is greatly simplified now.; * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle; * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9344:77,simpl,simplified,77,https://root.cern,https://github.com/root-project/root/pull/9344,1,['simpl'],['simplified']
Usability,"See `tutorials/pyroot/pyroot004_NumbaDeclare.py`: we currently support `RVec<int>` or similar in the signature of the Python function passed to Numba, but we don't support `RVecI`, `RVecD` and the other aliases. Maybe Ivan can take a look with Enric's guidance?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9898:252,guid,guidance,252,https://root.cern,https://github.com/root-project/root/issues/9898,1,['guid'],['guidance']
Usability,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12651:510,simpl,simple,510,https://root.cern,https://github.com/root-project/root/pull/12651,1,['simpl'],['simple']
Usability,"See https://root-forum.cern.ch/t/segfault-when-using-schema-evolution/43765. Hello,. We have an issue that we have not been able to solve, nor understand. We hope you can provide some help. We have a class written into a TTree with one of its Base class having been modified. We have udpated the class version during the modification. In the ROOT file, we have version 1 of the class (TVHit) while in the current software, we have version 2 of the class. We wrote in the LinkDef file a #pragma instruction on how to transform v1 into v2. When this #pragma line is omitted, we obviously read the wrong information from the input file, because the definition in the code does not correspond to the definition on file (as expected). But when using the #pragma line, we simply get a segfault while trying to read the TTree. I have prepared a self-contained minimal working example attached to this topic: [mwe.tgz|attachment](upload://34Fdg60DY7tGGh6cw40YICFFhLy.tgz) (224.3 KB) . The archive contains the following README.md with more details on how to reproduce the issue, and on the exact content of the archive:. Steps to reproduce issue on Minimal Working Example (MWE); =============================; - Set the ROOT_INCLUDE_PATH and LD_LIBRARY_PATH; `source env.sh`; - Compile the minimal persistency library; `make`; - Run test code on new persistency (opens pluto_newpers.root and reads the tree successfully); `root read_updated.C\(1\)`; or; `read_updated 1`; - Run test code on old persistency (opens pluto_oldpers.root and crashes when trying to read the tree); `root read_updated.C(\(0\)`; or; `read_updated 0`. The crash is traced back to line 109 of PersistencyDICT.cxx; `static Long_t offset_Onfile_TVHit_fMCTrackID = oldObj->GetClass()->GetDataMemberOffset(""fMCTrackID"");`; where GetClass returns a nullptr. Content of the archive; ======================; - The header files in include contain the current definition of the minimal persistency necessary to ; read the input files (TVHit ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754:766,simpl,simply,766,https://root.cern,https://github.com/root-project/root/issues/7754,1,['simpl'],['simply']
Usability,"See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:; ```C++; #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(); {; ProcInfo_t pinfo;; for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);; RooRealVar y(x);. if(i % 500 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }. }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9270:133,Simpl,Simple,133,https://root.cern,https://github.com/root-project/root/pull/9270,1,['Simpl'],['Simple']
Usability,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7497:234,simpl,simple,234,https://root.cern,https://github.com/root-project/root/issues/7497,1,['simpl'],['simple']
Usability,"SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:1920,Simpl,SimpleCompiler,1920,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleCompiler']
Usability,"Several changes were made. Firstly, several bugs were fixed in converttonotebook.py. The filter was modified to replace the \notebook line in a simple manner. Many tutorials were modified slightly, either ensuring tabs were three spaces as well as adding `-js`or `-nodraw` options. Finally, preprocessor statements involving `__CINT__` were removed from the tutorials, as well as `gStyle->SetPalette(1)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/216:144,simpl,simple,144,https://root.cern,https://github.com/root-project/root/pull/216,1,['simpl'],['simple']
Usability,"Several improvements to the [`RooDataSet` constructor](https://root.cern.ch/doc/master/classRooDataSet.html#a6a2302f27e1b016a0351f6e0a0329fa2) that takes command arguments to import other data:. 1. Automatically create weight variable when importing multiple data slices (closes #11487); 2. Support importing also RooDataHists (also as slices for combined datasets), and filling the weight errors correctly to match the `weightSquared()`; 3. Create the weight variable on the fly if it was specified by name in `WeightVar()` but is not in the list of variables; 4. Have a default argument for `WeightVar(=""weight"")`, because that's usually the name anyway; 5. Fix `RooVectorDataStore::loadValues()` for loading values from another vector data store: so far it used `assignValueOnly` to copy the values over, but the values might have errors, like for example in the case of importing a RooDataHist. That's why the regular `RooAbsCollection::assign()` is used now. All of these changes result in several code simplifications in the cases where RooDataSets are imported from other data, and fixes the bugs that might have been because the `weightSqaured()` was usually not transferred correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12227:1008,simpl,simplifications,1008,https://root.cern,https://github.com/root-project/root/pull/12227,1,['simpl'],['simplifications']
Usability,"Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:; ```; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':; ginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9067:427,clear,clearing,427,https://root.cern,https://github.com/root-project/root/pull/9067,1,['clear'],['clearing']
Usability,"Similar to #1777 but cleaned up and clearly separated from #1856. Implements memory adoption of `TVec` and `std.vector` for data-types `int`, `unsigned int`, `long`, `unsigned long`, `float` and `double` with numpy arrays using `numpy.asarray(root_obj)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871:36,clear,clearly,36,https://root.cern,https://github.com/root-project/root/pull/1871,1,['clear'],['clearly']
Usability,"Simple C++ code to demonstrate the problem:; ```C++; TF1{""f1"", ""1.0++x++x*x++x*x*x"", -1.0, 1.0}.Print();; ```; Before this commit, running this line gave you:; ```; Formula based function: f1; f1 : 1.0++x++x*x++x*x*x Ndim= 1, Npar= 3, Number= 0; Formula expression:; ([p0]*(1.0))+([p1]*(x))+([p2]*(x*x))+([p2]*(x*x))*x; ```. The problem is that `TFormula::HandleLinear()` uses pattern-matching to; replace the strings representing the linear terms. This is problematic; if one of the strings is a substring of another one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8801:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/8801,1,['Simpl'],['Simple']
Usability,"Simple PR, changes the year from 2023 to 2024",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14447:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/14447,1,['Simpl'],['Simple']
Usability,Simple TGraph ctor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10588:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/10588,1,['Simpl'],['Simple']
Usability,Simple `Int_t(v)` truncation was used for conversion user or NDC coordinates into pixel.; And of course it does not match very often. To somehow compensate this behavior strange `rounding = 0.00005` was introduced long time ago. Now use normal `TMath::Nint(v)`. And `rounding` no longer necessary. Also move inlined TPad methods into source file - `inline` makes no sense with virtual methods. This PR fixes #14546,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14837:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/14837,1,['Simpl'],['Simple']
Usability,Simple addition of the GetColumnType function to distributed RDF. . This PR fixes #15039,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16347:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/16347,1,['Simpl'],['Simple']
Usability,Simple backport of the latest fixes that landed in master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1538:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/1538,1,['Simpl'],['Simple']
Usability,Simple fix to force LLVM to use CXX1Y when cxx14 is enabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/195:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/195,1,['Simpl'],['Simple']
Usability,"Simple grammar fix correcting ""to"" to ""too"" and adjusting confusing period usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4740:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/4740,1,['Simpl'],['Simple']
Usability,Simple mods for TText.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1873:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/1873,1,['Simpl'],['Simple']
Usability,"Simple notebook test times out when root7=on, webgui=Off",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/issues/16689,1,['Simpl'],['Simple']
Usability,"Simple reproducer at the ROOT prompt:. ```cpp; ~ root -l; root [0] ROOT::RVec<std::vector<float>> rv(10);; root [1] rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; (unsigned long) 18446720510731583839. *** Break *** segmentation violation; ```. The implementation of `RVecN RVecN::operator[](const RVecN<V, M> &conds) const` assumes that the type is trivially-constructible, using `reserve` + copy-assignment + manual resizing (which never properly constructs the new elements) rather than `reserve` + `push_back` (which would constructs the new elements in place). This seems to be also the root cause of the crash/hang reported at https://root-forum.cern.ch/t/root-snapshot-function-seems-to-be-blocked-when-using-vector-vector-float/53696 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12398:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/issues/12398,1,['Simpl'],['Simple']
Usability,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5069:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/5069,1,['Simpl'],['Simple']
Usability,Simpler version of line.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1920:0,Simpl,Simpler,0,https://root.cern,https://github.com/root-project/root/pull/1920,1,['Simpl'],['Simpler']
Usability,Simplification of building builtin LZ4 and fixing ROOT-9071,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1225:0,Simpl,Simplification,0,https://root.cern,https://github.com/root-project/root/pull/1225,1,['Simpl'],['Simplification']
Usability,Simplifies `RNTuple::Show` and fixes the ntpl005 tutorial. Show now uses unconditionally the model bound to the reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12667:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/12667,1,['Simpl'],['Simplifies']
Usability,Simplifies script and allows to capture (and log) essential config values. Some more drive-by code fixes. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/13488,1,['Simpl'],['Simplifies']
Usability,"Simplifies types, considerably.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2302:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/2302,1,['Simpl'],['Simplifies']
Usability,Simplifies usage for the use-case:. https://root-forum.cern.ch/t/thttpserver-without-items-from-groot-only-explicitly-registered/24640,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/624:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/624,1,['Simpl'],['Simplifies']
Usability,Simplify CMake integration of LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13221:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/13221,1,['Simpl'],['Simplify']
Usability,Simplify CallFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10850:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/10850,1,['Simpl'],['Simplify']
Usability,Simplify CallFunc. NFC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12745:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/12745,1,['Simpl'],['Simplify']
Usability,Simplify Code. NFC.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/2452,1,['Simpl'],['Simplify']
Usability,Simplify Doxyfile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8451:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/8451,1,['Simpl'],['Simplify']
Usability,"Simplify EmptyCollection(). Thanks, Wolf Behrenhoff!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1577:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1577,1,['Simpl'],['Simplify']
Usability,Simplify PgSQL plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9738:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9738,1,['Simpl'],['Simplify']
Usability,Simplify ProcessRunCommand(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4926:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4926,1,['Simpl'],['Simplify']
Usability,Simplify callfunc more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11193:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/11193,1,['Simpl'],['Simplify']
Usability,Simplify check for out-of-source build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4132:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4132,1,['Simpl'],['Simplify']
Usability,Simplify cling value,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11380:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/11380,1,['Simpl'],['Simplify']
Usability,"Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9352,1,['Simpl'],['Simplify']
Usability,Simplify complex code to build URI string from components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7612:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/7612,1,['Simpl'],['Simplify']
Usability,Simplify distrdf relnotes for v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9526:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9526,1,['Simpl'],['Simplify']
Usability,Simplify implementation of TBufferMerger using TFileMerger directly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/577,1,['Simpl'],['Simplify']
Usability,Simplify implementation of TClass::FindClassOrBaseMethodWithId(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/908,1,['Simpl'],['Simplify']
Usability,Simplify llvm::Module emission in the JIT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1050,1,['Simpl'],['Simplify']
Usability,Simplify memory regulation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16837:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/16837,1,['Simpl'],['Simplify']
Usability,Simplify query for include directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4201,1,['Simpl'],['Simplify']
Usability,Simplify some graphics examples.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14457:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/14457,2,['Simpl'],['Simplify']
Usability,Simplify table proxy builders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3497:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/3497,1,['Simpl'],['Simplify']
Usability,"Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3021:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/3021,2,['Simpl'],['Simplify']
Usability,Simplify the deregistration procedure to `RLoopManager` and avoid relying on the order during member destruction of `RColumnRegister`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10072:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/10072,1,['Simpl'],['Simplify']
Usability,Simplify the platform-dependent part of a couple of add_custom_command,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12341:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/12341,1,['Simpl'],['Simplify']
Usability,Simplify the reading loop (thanks Axel!),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9982:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9982,1,['Simpl'],['Simplify']
Usability,Simplify the test for std::make_unique,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1210:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1210,1,['Simpl'],['Simplify']
Usability,Simplify travis runner,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1775,1,['Simpl'],['Simplify']
Usability,Simplify version definition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/13620,1,['Simpl'],['Simplify']
Usability,Simplify writing multiple `RNTuple`s in a single open `TFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6224:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/6224,1,['Simpl'],['Simplify']
Usability,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7218:0,Simpl,Simply,0,https://root.cern,https://github.com/root-project/root/pull/7218,2,"['Simpl', 'simpl']","['Simply', 'simple']"
Usability,Simply reuses the XXHASH implementation from the LZ4 library (also; used in the LZ4 frame format). @oshadura @jblomer - this should provide reasonable protection against bit-flips.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/907:0,Simpl,Simply,0,https://root.cern,https://github.com/root-project/root/pull/907,1,['Simpl'],['Simply']
Usability,Since root-project/root@10a0dec we do not expose flags from the build system; directly to rootcling. We use that opportunity to simplify the setup while; preparing rootcling for the new argument parser.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4269:128,simpl,simplify,128,https://root.cern,https://github.com/root-project/root/pull/4269,1,['simpl'],['simplify']
Usability,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9060:366,simpl,simple,366,https://root.cern,https://github.com/root-project/root/pull/9060,1,['simpl'],['simple']
Usability,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:431,user-friendly,user-friendly,431,https://root.cern,https://github.com/root-project/root/pull/5595,1,['user-friendly'],['user-friendly']
Usability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:101,user-friendly,user-friendly,101,https://root.cern,https://github.com/root-project/root/pull/527,1,['user-friendly'],['user-friendly']
Usability,"So far, one had to remove string attributes of a RooAbsArg with the; `RooAbsArg::removeStringAttribute(const char* key, const char* value)`; method, passing `nullptr` as a value. Passing a `nullptr` to a function; that takes a `const char*` is not supported in PyROOT, as explained in; GitHub issue #10954. Therefore, a new function is added to RooAbsArg to; remove a string attribute without having to use `nullptr`. This new function called `removeStringAttribute()` is now used in all; the ROOT code to remove string attributes from RooAbsArgs, and also; mentioned in the warnings that tell the user that they might want to; remove the `fitrange` attribute. The verb `remove` was chosen instead of `delete`, `clear`, or `erase`,; because there was already a `RooAbsArg::removeServer()` method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10957:712,clear,clear,712,https://root.cern,https://github.com/root-project/root/pull/10957,1,['clear'],['clear']
Usability,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13939:670,simpl,simply,670,https://root.cern,https://github.com/root-project/root/pull/13939,1,['simpl'],['simply']
Usability,"So, we just removed the assert that makes us aware that we need to; rethink this flag. I don't see a clear solution at the moment, but; this PR at least makes us aware that we need to solve this issue. For now I just removed it and we see what exactly Jenkins complains; about when it runs the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1049:101,clear,clear,101,https://root.cern,https://github.com/root-project/root/pull/1049,1,['clear'],['clear']
Usability,Some tutorials did not show correctly in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9125:49,guid,guide,49,https://root.cern,https://github.com/root-project/root/pull/9125,2,['guid'],['guide']
Usability,Specifically this fixes the one described at:; https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824; where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning; prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as; part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3007:267,learn,learning,267,https://root.cern,https://github.com/root-project/root/pull/3007,12,"['Learn', 'learn']","['LearningPrefill', 'learning']"
Usability,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5985:589,clear,clear,589,https://root.cern,https://github.com/root-project/root/pull/5985,1,['clear'],['clear']
Usability,"Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to; provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes.; To be on the safe side, we should preserve JSROOT version with generated reference guide.; Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files ; and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8599:377,guid,guide,377,https://root.cern,https://github.com/root-project/root/issues/8599,2,['guid'],['guide']
Usability,Support undoing of #undef preprocessor tokens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/645:8,undo,undoing,8,https://root.cern,https://github.com/root-project/root/pull/645,2,['undo'],['undoing']
Usability,Suppress gcc9 warnings in THistPainter.; Simplify the code.; Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3883:41,Simpl,Simplify,41,https://root.cern,https://github.com/root-project/root/pull/3883,1,['Simpl'],['Simplify']
Usability,"System crashes when calling `strlen(nullptr)`, therefore protect in cases when argument can be directly set as external parameter. Simplify TMultiGraph::PaintPads, do not use `TString` as `strlen()` argument",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10855:131,Simpl,Simplify,131,https://root.cern,https://github.com/root-project/root/pull/10855,1,['Simpl'],['Simplify']
Usability,TBulkRead::GetEntriesSerialized should simply work with destructive; serialization. Not sure why the check is there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6558:39,simpl,simply,39,https://root.cern,https://github.com/root-project/root/pull/6558,1,['simpl'],['simply']
Usability,"TDataFrame's user guide uses the term ""column"" interchangeably with ""branch"". At the same time, ""column"" is preferred as it is more general and will still be appropriate when TDataFrame will read data formats other than ROOT's. This commit updates the user-facing method signatures and the method documentations to use preferably use ""column"". This commit also adds some minor improvements to method descriptions.; It introduces no functional changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/814:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/814,1,['guid'],['guide']
Usability,"TF1 objects, created in the TFitEditor, were not destroyed properly.; Also use more clear c++11 syntax for STL containers; Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3810:84,clear,clear,84,https://root.cern,https://github.com/root-project/root/pull/3810,1,['clear'],['clear']
Usability,TLine simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1926:6,simpl,simplification,6,https://root.cern,https://github.com/root-project/root/pull/1926,2,['simpl'],['simplification']
Usability,TLine.hxx uses const TPadPos&; TPadLength.hxx allows expression like: 0.3_normal*TMath::Cos(angle) + 0.5_normal; line.cxx is much simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1920:130,simpl,simpler,130,https://root.cern,https://github.com/root-project/root/pull/1920,1,['simpl'],['simpler']
Usability,TMVA Errors while building the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:41,guid,guide,41,https://root.cern,https://github.com/root-project/root/issues/10461,2,['guid'],['guide']
Usability,TMVA regression output code simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3694:28,simpl,simplification,28,https://root.cern,https://github.com/root-project/root/pull/3694,2,['simpl'],['simplification']
Usability,TTree users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6358:12,guid,guide,12,https://root.cern,https://github.com/root-project/root/pull/6358,2,['guid'],['guide']
Usability,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314:318,simpl,simple,318,https://root.cern,https://github.com/root-project/root/pull/8314,2,['simpl'],['simple']
Usability,TTreeFormula give the wrong result in case of renaming rule (both simple and complex),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:66,simpl,simple,66,https://root.cern,https://github.com/root-project/root/issues/14493,2,['simpl'],['simple']
Usability,Test 25 had a minor difference in size compared to the reference value stored; in the reference file. This is a simple ratio plot example. All the other formats are; ok. A pdf comparison with a previous version shows that the two pdf files are the; same. So we give a bit more error margin.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12343:112,simpl,simple,112,https://root.cern,https://github.com/root-project/root/pull/12343,2,['simpl'],['simple']
Usability,"The Fedora Packaging Guidelines some time ago added a section on packaging javascript files. This section says that minified scripts should be treated as compiled code. And like for programs written in other languages, pre-compiled code that is part of the sources must not be used in packaging, but must be regenerated from sources during the package build. I recently implemented these guidelines in the root package and found some issues. This pull request has three commits. 1) The word ""default"" is a reserved word in the language, and when used as a key in a dictionary it must be quoted. The yuicompressor minifier complains about this:; ```; $ yuicompressor etc/notebook/JsMVA/js/DecisionTree.js ; [ERROR] in etc/notebook/JsMVA/js/DecisionTree.js; 57:24:invalid property id; ```; 2. In one place (and one place only) in the script a construct from a very new version of the javascript standard is used for defining default values to function parameters. This unnecessarily makes the code incompatible with old browsers. It also makes it hard to run the minification during the package build as both yuicompressor and uglufyjs choke on it.; ```; $ yuicompressor etc/notebook/JsMVA/js/NeuralNetwork.js ; [ERROR] in etc/notebook/JsMVA/js/NeuralNetwork.js; 509:75:missing ) after formal parameters; ```; ```; $ uglifyjs etc/notebook/JsMVA/js/NeuralNetwork.js -c -m; Parse error at etc/notebook/JsMVA/js/NeuralNetwork.js:509,73; = function (divid, netobj, oldStructure=false) {; ^; SyntaxError: Unexpected token operator «=», expected punc «,»; ```; 3. The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some portin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520:21,Guid,Guidelines,21,https://root.cern,https://github.com/root-project/root/pull/1520,2,"['Guid', 'guid']","['Guidelines', 'guidelines']"
Usability,"The IO for the tests statistics never worked anyway, not even for a simple Gaussian likelihood. It is better to exclude the old test statistics classes complete from IO. Like this, the users don't even attempt to do IO with them, and to developers it's clear that IO backwards compatibility is not necessary, taking away some maintenance burden. Here are some simple scripts to show that storing test statistics doesn't work anyway. Create a NLL object, write it of file and minimize it:; ```c++; void write(); {; using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. auto *data = gauss.generateBinned(x, 10000);. auto nll = gauss.createNLL(*data);. RooWorkspace ws(""ws"");; ws.import(*nll);. ws.Print();. ws.writeToFile(""ws.root"");. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. Attempt to read the NLL and minimize it again:; ```c++; void open() {. auto f = TFile::Open(""ws.root"");. auto ws = f->Get<RooWorkspace>(""ws"");. ws->Print();. ws->function(""nll_gauss_genData"")->Print();. auto nll = static_cast<RooNLLVar*>(ws->function(""nll_gauss_genData""));. auto& pdf = nll->function();; auto& data = nll->data();. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. The result is completely off this time. It was also confirmed with Wouter in one of the RooFit meetings that IO of the old test statistics never really worked and was also not intended to be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11909:68,simpl,simple,68,https://root.cern,https://github.com/root-project/root/pull/11909,3,"['clear', 'simpl']","['clear', 'simple']"
Usability,"The IO of RooFit proxies can be quite fragile sometimes, and it can happen when reading a RooProduct that the `_proxyList` is not synced with the proxy members. In dbc96810, I decided to throw an exception is this case, but I realized this was too strong: too many old workspace are affected. In all cases that I know of, one can simply recover by correctly resetting the `_proxyList`. This is now what is done, and only a warning is printed. The warning includes information on all the proxies, so the user can figure out themselves if what RooFit is doing here is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12046:330,simpl,simply,330,https://root.cern,https://github.com/root-project/root/pull/12046,1,['simpl'],['simply']
Usability,The PR changes TDF's source code as well as the tutorials. A related PR that changes the tests is open in roottest. I also added an extra commit with a minor fix to TDF's user guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/703:176,guid,guide,176,https://root.cern,https://github.com/root-project/root/pull/703,1,['guid'],['guide']
Usability,"The RCutFlowReport class could benefit of a Merge method since it would ease the implementation of the Report RDataFrame operation in a distributed environment.; In a situation where two chunks of a dataset have been processed separately, a report for each chunk would only contain filtering information of that chunk. In this case, merging the two reports together should provide general information on the cut flow of the entire dataset. Right now, the Merge function works as follows:; It takes another RCutFlowReport as argument (passed by reference).; The fCutInfos member of the current RCutFlowReport is stored in a temporary variable and then cleared.; For each TCutInfo, another TCutInfo with the same name is searched in the other report.; The information on all the entries and the passed entries is then summed up between the two objects.; Finally a new TCutInfo with the resulting information is added to the initial RCutFlowReport. The clearing of fCutInfos is needed since the fPass and fAll members of TCutInfo are const.; If seen appropriate, the const keyword can be removed, then the fCutInfos could be just updated each time. A very simple test has been added. TODO:; - [ ] Add more thorough tests.; - [ ] Decide on the return type of the Merge function (now is void).; - [ ] Possibly overload the function with RCutFlowReport* as argument.; - [ ] Finally add documentation when everything is set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4174:651,clear,cleared,651,https://root.cern,https://github.com/root-project/root/pull/4174,3,"['clear', 'simpl']","['cleared', 'clearing', 'simple']"
Usability,"The RResult class overwrites the `new` operator to prevent (make it harder for) heap creation of RResult objects. This does not work with PyROOT. E.g., PyROOT can't call `RFieldBase::Create()`. This patch removes the new operator overwrites. This should be a small safety compromise for PyROOT usability. Also: fixes namespace layering and moves RResultBase out of the Internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14463:294,usab,usability,294,https://root.cern,https://github.com/root-project/root/pull/14463,1,['usab'],['usability']
Usability,"The RooNameSet class is too complicated considering that it fulfills a; rather simple purpose, which is to serialize the names of objects in a; RooArgSet to a string that can be used to select objects from other; RooArgSets. This commit proposes to replace the RooNameSet class by new functions in; the RooHelpers namespace: `getColonSeparatedNameString` and; `selectFromArgSet`. These functions make use of `std::string` to be much; less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7819:79,simpl,simple,79,https://root.cern,https://github.com/root-project/root/pull/7819,1,['simpl'],['simple']
Usability,"The RooRealAnalytic class, and implementation detail of the RooRealIntegral, was not really necessary. You can get the same functionality when creating the corresponding analytic integral just with `createIntegral()`, and then wrapping the integral in a RooRealBinding. There are many unit tests that cover such hybrid integrals, but a simple code snippet to quickly test it is this one:. ```c++; RooWorkspace ws;; ws.factory(""Gaussian::gauss(x[-10, 10], mu[0, -10, 10], sigma[0.1, 3, 10])"");; RooArgSet iset{*ws.var(""x""), *ws.var(""sigma"")};. std::unique_ptr<RooAbsReal> integral{ws.pdf(""gauss"")->createIntegral(iset)};; integral->Print(""v"");; std::cout << integral->getVal() << std::endl;; ```. This commit is the first of a new effort to make the RooFit integral code simpler, in order to make it easier to eventually implement numerical integrals on the GPU.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13334:336,simpl,simple,336,https://root.cern,https://github.com/root-project/root/pull/13334,2,['simpl'],"['simple', 'simpler']"
Usability,"The RooStringVar class is planned to get deprecated soon, hence RooFit; code that is still using it is getting migrated away from it. In the RooCmdConfig case, one can use simple configuration structs; insread of RooStringVar. This change is tested by many unit tests in RooFit, as the; `RooCmdConfig` is used in many places, for example `RooAbsPdf::fitTo`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10106:172,simpl,simple,172,https://root.cern,https://github.com/root-project/root/pull/10106,1,['simpl'],['simple']
Usability,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10952:1041,clear,cleared,1041,https://root.cern,https://github.com/root-project/root/pull/10952,1,['clear'],['cleared']
Usability,"The THistRange class define a generic bin range region which can be used to efficiently iterate over bins.; It is used to create a THBinIterator class which can used to iterate over bins; without using for loops over axis or simple global bin iterations.; Example for computing histogram integral in a given range: . ```; auto hist = new TH1D(""h1"",""h1"",100,-5,5);; hist->FillRandom(""gaus""); ; hist->GetXaxis()->SetRange(40,60); ; THistRange r(hist); ; double integral = 0; ; for (auto & bin : r) { integral += hist->GetBinContent(bin); }; std::cout << ""integral "" << integral << std::endl;; ```. Add also a test program which measures the ieration time. When iterating over a multi-dimensional histogram (e.g. 3 d) the new iteration can be up to 10 times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6795:225,simpl,simple,225,https://root.cern,https://github.com/root-project/root/pull/6795,1,['simpl'],['simple']
Usability,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135:52,simpl,simple,52,https://root.cern,https://github.com/root-project/root/pull/14135,1,['simpl'],['simple']
Usability,"The TSpline3::SaveAs and TSpline5::SaveAs methods have two types of bugs. 1); if (klow > fNp-1) klow = fNp-1 is generally true such that equidistant knots are not used.; if (klow > fNp-1) klow = fNp-1 looks ok, to be used in lines 931, 1737. 2) double constants are written with %g resulting in a major loss of precision.; Proposed fix :; replace %g with %.17g; replace char numb[20] --> char numb[30]; replace snprintf(numb,20, --> snprintf(numb,30,. Can be checked as follows :; ```; const int n=11;; Double_t x[n],y[n];; for(int i=0; i<n; ++i) {; x[i]=i*0.1;; y[i]=sqrt(2.)*pow(x[i],2); // simple quadratic polynomial; }; //TSpline3* s=new TSpline3(""spline"", 0, 1, y, n);; TSpline5* s=new TSpline5(""spline"", 0, 1, y, n);; s->SaveAs(""spline.cc"");; int prec=15,wid=prec+7;; .L spline.cc; std::cout << "" x"" << setw(wid) << ""y"" << setw(wid) << ""spline"" << setw(wid) << ""diff"" << '\n';; for(int i=0; i<n; ++i) {; std::cout << setw(5) << x[i] << setw(wid) << y[i] << setw(wid) << spline(x[i]) << setw(wid) << y[i]-spline(x[i]) << std::endl;; }; ```. With the proposed changes, function and spline values agree, diff = 0. Loss in precision by writing double values with an insufficient number of digits in root has been observed before, see https://sft.its.cern.ch/jira/browse/ROOT-8844; Maybe a good idea to check this more generally. Cheers, Helmut Burkhardt. [TSpline.cxx.zip](https://github.com/root-project/root/files/10480476/TSpline.cxx.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12091:593,simpl,simple,593,https://root.cern,https://github.com/root-project/root/issues/12091,1,['simpl'],['simple']
Usability,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:124,simpl,simple,124,https://root.cern,https://github.com/root-project/root/pull/16528,1,['simpl'],['simple']
Usability,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:267,clear,clearly,267,https://root.cern,https://github.com/root-project/root/pull/15464,1,['clear'],['clearly']
Usability,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751:283,Simpl,Simple,283,https://root.cern,https://github.com/root-project/root/pull/13751,2,"['Simpl', 'clear']","['Simple', 'clear']"
Usability,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15224:569,simpl,simply,569,https://root.cern,https://github.com/root-project/root/pull/15224,1,['simpl'],['simply']
Usability,"The `RooParametricStepFunction` is not used much, but still there is an; issue requesting to explain its usage better that needs to be closed. I don't think it's worth it to have a tutorial for it, but nothing; speaks about having a little complete usage example script in the; reference guide instead of the code stub that is there right now. This change to the documentation goes together with some gentle code; modernization in this commit. Closes #7748.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10798:288,guid,guide,288,https://root.cern,https://github.com/root-project/root/pull/10798,1,['guid'],['guide']
Usability,"The `TClonesArray.__setitem__` pythonization was introduced in commit 67db9e5 with PR #3423. However, this pythonization is quite unnatural, because a `TObjArray` should not adopt external memory. In fact, on in the C++ side, all `TObjArray`-inherited methods that take a `TObject *` and that would adopt these objects are flagged as `MayNotUse` for good reasons!; See: https://github.com/root-project/root/blob/master/core/cont/inc/TClonesArray.h#L56. Supporting this element setting only on the Python side therefore comes with a very high cost of hacking deep into CPyCppyy, and the benefit of this is not clear because the PR that introduced this feature didn't refer to any user request. Hence, this commit suggests to remove this pythonization, with the ultimate goal of relying less on the usage of CPyCppyy internals.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14485:609,clear,clear,609,https://root.cern,https://github.com/root-project/root/pull/14485,1,['clear'],['clear']
Usability,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11117:541,clear,clearly,541,https://root.cern,https://github.com/root-project/root/pull/11117,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"The `rf507_debugtools` tutorial shows a functionality that doesn't work,; so it should be removed. The only way to get something useful out of; this tutorial is to recompile ROOT, changing the preprocessor macros; `TRACRE_CREATE` and `TRACE_DESTROY` to be defined in `RooTrace.h`.; That's way to advanced for the audience of the tutorials. The usage; example from the tutorial is moved to the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12934:403,guid,guide,403,https://root.cern,https://github.com/root-project/root/pull/12934,1,['guid'],['guide']
Usability,"The attempt to fix the following test that was failing:; roottest-python-basic-operator; led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. ; Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo.; The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3963:194,simpl,simply,194,https://root.cern,https://github.com/root-project/root/pull/3963,1,['simpl'],['simply']
Usability,"The corresponding leaflist letters are 'G' and 'g'.; A new class TLeafG is added -- basically a copy of TLeafL with; [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,; std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:; - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt); - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right?. ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx; - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`; - [x] update doc of class TTree; - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`; - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`; - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6600:1092,guid,guide,1092,https://root.cern,https://github.com/root-project/root/pull/6600,2,['guid'],['guide']
Usability,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022:158,simpl,simply,158,https://root.cern,https://github.com/root-project/root/pull/16022,1,['simpl'],['simply']
Usability,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16476:285,simpl,simplifies,285,https://root.cern,https://github.com/root-project/root/pull/16476,1,['simpl'],['simplifies']
Usability,"The different overloads of `RooAbsRealLValue::inRange()` implemented; different tolerances when checking if a value `x` falls inside a; specific range. Some overloads checked if the interval; `[x - 1e-6, x + 1e6]` is overlapping with the range, an other overload; checked if the interval `[x - 1e-8*x, x + 1e8*x]` is overlapping. It's better is this is done consistently and predictably so this commit; suggests to leave out these epsilon margins that were never documented.; For backwards compatibility, one can set a custom relative or absolute; epsilon via the `RooNumber` interface. Also, the checks if the range limits are `RooNumber::isInfinite()` were; removed. They were mathematically redundant, since in RooFit, +/-; infinity is simply defined as +/-1e30. This PR fixes some corner cases in which you get paradox results from rage checks, like in this example:; ```C++; RooRealVar x{""x"", ""x"", 1e-6, 2e-6};; RooRealVar y{""y"", ""y"", 1e30, 1e30};. std::cout << x.inRange(0.0, nullptr) << std::endl;; std::cout << y.inRange(0.0, nullptr) << std::endl;; // both checks will return true without this PR!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999:739,simpl,simply,739,https://root.cern,https://github.com/root-project/root/pull/11999,1,['simpl'],['simply']
Usability,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439:146,clear,clearer,146,https://root.cern,https://github.com/root-project/root/pull/11439,1,['clear'],['clearer']
Usability,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12442:416,clear,clearer,416,https://root.cern,https://github.com/root-project/root/pull/12442,1,['clear'],['clearer']
Usability,"The extended term needs a special correction, it should not just be; reevaluated with the squared weights replacing the weights. This is not; implemented correctly. The way how weights are handled in the batch mode was also simplified.; Previously, a dummy `RooRealVar` was created for the weight and the; squared weight each, but now the conventional name for the weight; variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:; https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10467:224,simpl,simplified,224,https://root.cern,https://github.com/root-project/root/pull/10467,1,['simpl'],['simplified']
Usability,"The fact that gradient computations are supported in a `ROOT::Math`; function wrapper was only transmitted by the static class type. However, this is rather inconvenient:. 1. If you forget to downcast your function to the gradient type, the; provided gradient won't be used. 2. Many minimizer function signatures must be overloaded for both the; function with and without gradients. 3. In RooFit, this caused particular pain: depending on if an external; gradient is provided, the function wrapper in the `RooMinimizer`; needs to have a different base class, and the RooMinimizer needs to; cast it correctly when fitting. This commit suggests two new virtual functions:. * `IBaseFunctionMultiDimTempl::HasGradient()` for multi-dim functions. * `IBaseFunctionOneDim::HasGradient()` for 1D functions. Like this, the gradient support can be queried without dynamic casting; at runtime, simplifying lots of other code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257:883,simpl,simplifying,883,https://root.cern,https://github.com/root-project/root/pull/12257,1,['simpl'],['simplifying']
Usability,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7264:682,simpl,simple,682,https://root.cern,https://github.com/root-project/root/pull/7264,1,['simpl'],['simple']
Usability,"The first commit introduces `DefineSlotEntry`, analogous to `DefineSlot` but also passes the entry number to the registered callable. The second commit is a simple refactoring of `Define` to separate user interface from internal details and error checking.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1216:157,simpl,simple,157,https://root.cern,https://github.com/root-project/root/pull/1216,1,['simpl'],['simple']
Usability,"The generic fill helper was called FillParHelper, now it is just; called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers; values and delayes the actual histogram filling to the end of the; processing had the deceptively simple name FillHelper, it is now; called DelayedFillHelper to call out that it is doing something; interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10138:299,simpl,simple,299,https://root.cern,https://github.com/root-project/root/pull/10138,1,['simpl'],['simple']
Usability,The getNameAsString interface causes a lot of temporary allocations.; The analysis if a decl is a cling-style wrapper can work only on a; simple declarations on the global scope. This patch filters out complex declarations (eg in namespaces) and; checks only the identifier content. The patch reduces the memory footprint difference shown in root-project/root#3012.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3593:138,simpl,simple,138,https://root.cern,https://github.com/root-project/root/pull/3593,1,['simpl'],['simple']
Usability,"The idea is to catch branch names, which will lead to problems when using the tree with `Draw` or `MakeClass`.; This can either be the member variables (branch names and `b_`branch names) which have to keep the generated code compilable (and ensure it does what it is expected to do). And the variable names should not lead to confusion with formula evaluation in Draw (e.g. branch names which are pure numbers). The tests suggested here are:; - test if branch name is a valid c++ variable name (w/o testing keywords).; - test if branch name begins with ""b_"" (potential problem with MakeClass). on top of that, I also have a [black list](https://github.com/pseyfert/tmva-branch-adder/blob/master/src/blacklist.cpp) of unfortunate branch names: methods of TTrees, which would clash in MakeClass, c++ keywords, variable types, and things TTree::Draw can parse (though I don't see how `TTree::Draw(""cos(x)"")` would clash with `TTree::Draw(""cos"")` if there is a variable named `cos`. Because the function `cos` wouldn't work without argument, and the variable `cos` wouldn't work with argument). I only warn here and don't abort the branch initialisation, not to break third party code (variables with `.` are probably common [e.g. dynamically generated from float](http://lhcb-release-area.web.cern.ch/LHCb-release-area/DOC/davinci/latest_doxygen/d9/d80/_tuple_tool_cone_isolation_8cpp_source.html#l00204) ). Feedback request:; I'm unsure if putting the blacklist into TBranch.cxx is really the best solution to apply here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/185:1406,Feedback,Feedback,1406,https://root.cern,https://github.com/root-project/root/pull/185,1,['Feedback'],['Feedback']
Usability,"The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7828:82,simpl,simple,82,https://root.cern,https://github.com/root-project/root/issues/7828,1,['simpl'],['simple']
Usability,"The logic of `SnapshotImpl` has been refactored to move the single-thread initialization and execution inside the `SnapshotHelper` class, and the multi-thread in `SnapshotHelperMT`. This code simplification also puts `Snapshot` in line with other actions, moving most of the logic inside `TDFActionHelpers.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/692:192,simpl,simplification,192,https://root.cern,https://github.com/root-project/root/pull/692,1,['simpl'],['simplification']
Usability,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:78,clear,clearer,78,https://root.cern,https://github.com/root-project/root/pull/6223,2,['clear'],"['clearer', 'clearly']"
Usability,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/15930,1,['clear'],['clear']
Usability,"The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. ; ```; void testMemPool() {. RooRealVar x(""x"",""x"",0,10);; RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {; if (i % 100000 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;; }; auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7933:76,simpl,simple,76,https://root.cern,https://github.com/root-project/root/issues/7933,1,['simpl'],['simple']
Usability,"The minimizer test quite often did not converge. As a result there were; many spurious test failures. The test is tuned to converge _much_ more reliably by increasing the; learning rate (0.0001 -> 0.001), and the number of early stopping epochs; (5 -> 50). This commit also makes the `testMinimization` test the minimizer; _without_ using momentum (this code path was previously untested here). The following code was used to benchmark changes (only single precision; part of the test was tested and some aux text was commented out if you; want to reproduce):; ```; for i in `seq 100`; do tmva/tmva/test/DNN/testMinimizationCpu; done | awk '{print $6;}' | python -c 'import numpy; import fileinput; a = map(float, fileinput.input()); print(numpy.std(a), numpy.mean(a), numpy.min(a), numpy.max(a))'; ```. Results (typical values):; - Old version: 2.70*10^{-7} (std dev), 3.34*10^5 (mean), 2.27*10^{-6} (min), 0.0017 (max); - New verstion: 2.59 * 10^{-6} (std dev), 2.51*10*{-6} (mean), 1.16*10*{-7} (min), 1.37*10^{-5} (max). Time taken is roughly doubled (~1 sec -> ~2 secs). All results on local mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:172,learn,learning,172,https://root.cern,https://github.com/root-project/root/pull/1958,1,['learn'],['learning']
Usability,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15330:553,feedback,feedback,553,https://root.cern,https://github.com/root-project/root/pull/15330,1,['feedback'],['feedback']
Usability,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15299:552,feedback,feedback,552,https://root.cern,https://github.com/root-project/root/pull/15299,1,['feedback'],['feedback']
Usability,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671:124,Clear,ClearProxiedObjects,124,https://root.cern,https://github.com/root-project/root/pull/16671,2,['Clear'],['ClearProxiedObjects']
Usability,The old users' guide contains valuable information for the geometry package. As it will be removed this PR imports all this documentation into the Reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9059:15,guid,guide,15,https://root.cern,https://github.com/root-project/root/pull/9059,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"The original ROOT CBShape and Johnson classes provided limited documentation on the effects of parameter variations on their respective distribution shapes. To improve clarity and usability for future users of these RooFit classes, I conducted a detailed study illustrating how changes in key parameters influence these distribution shapes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16817:180,usab,usability,180,https://root.cern,https://github.com/root-project/root/pull/16817,1,['usab'],['usability']
Usability,"The original table format cannot be properly rendered by GH flavored markdown. This PR attempts to clear up the formatting, respecting the formatting specs (and limits thereof) of GH flavored Markdown.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16798:99,clear,clear,99,https://root.cern,https://github.com/root-project/root/pull/16798,1,['clear'],['clear']
Usability,"The range is not used in RooParamHIstFunc::analyticalIntegralWN, see https://root.cern/doc/master/RooParamHistFunc_8cxx_source.html#l00247; as reported in https://root-forum.cern.ch/t/createintegral-giving-wrong-results/43508. . Simple code to reproduce:; ```; void testParamHistFunc() { ; ; RooRealVar x(""x"",""x"",0,10); ; TH1D h1(""h1"",""h1"",20,0,10); ; TF1 f1(""f1"",""gaus""); f1.SetParameters(1,5,1); ; h1.FillRandom(""f1"",1000); ; ; RooDataHist dh(""dh"",""dh"",x,&h1); ; RooParamHistFunc phf(""phf"","""",x,dh); ; phf.Print(""t""); ; x.setRange(""R1"",0,5); ; ; auto ig1n = phf.createIntegral(x,x); ; std::cout << ig1n->getVal() << std::endl; ; auto igr1 = phf.createIntegral(x,x,""R1""); ; std::cout << igr1->getVal() << std::endl; ; ; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182:229,Simpl,Simple,229,https://root.cern,https://github.com/root-project/root/issues/7182,1,['Simpl'],['Simple']
Usability,"The roottest-python-cmdLineUtils test sometimes fails with error along the line of:; ```; 16/22 Test #1217: roottest-python-cmdLineUtils-SimpleRootrm1CheckOutput .......***Failed 0.86 sec; -- TEST COMMAND --; cd /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils; /usr/bin/timeout -s USR2 270s /home/pcanal/root_working/build/master-debug/bin/rootls -1 victim1.root; -- BEGIN TEST OUTPUT --; dir; hprof; hprof; hpxpy; hpxpy; tof. -- END TEST OUTPUT --; -- BEGIN OUTDIFF OUTPUT --; --- /home/pcanal/root_working/code/root/roottest/python/cmdLineUtils/SimpleRootrm.ref Thu Dec 3 17:25:54 2020; +++ /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils/SimpleRootrm1CheckOutput.log Fri Jan 15 15:57:03 2021; @@ -1,4 +1,6 @@; dir; hprof; +hprof; +hpxpy; hpxpy; tof. -- END OUTDIFF OUTPUT --. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7054:573,Simpl,SimpleRootrm,573,https://root.cern,https://github.com/root-project/root/issues/7054,1,['Simpl'],['SimpleRootrm']
Usability,"The things we need to do before merging this PR and can probably be done by various people in parallel. Cling standalone:; - [x] Fix cling CUDA tests; - [ ] Fix the remaining test failures (6, see below); - [x] Revert the commit 'FIXME: Undo this change and debug why we have PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 56",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:237,Undo,Undo,237,https://root.cern,https://github.com/root-project/root/pull/10294,1,['Undo'],['Undo']
Usability,"The tutorials ""tutorial-pyroot-geometry-py"" and ""tutorial-pyroot-na49view-py"" were failing in Experimental PyROOT because of the absence of an extra lookup performed inside gROOT, which was implemented in the old PyROOT in the function LookupCppInstance(). ; It was decided to solve this problem by adding this third lookup to the _fallback_getattr() function inside _facade.py. ; This also allow to get an object inside gROOT by simply typing:; `ROOT.a`; instead of ; `ROOT.gROOT.FindObject(a)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4084:430,simpl,simply,430,https://root.cern,https://github.com/root-project/root/pull/4084,1,['simpl'],['simply']
Usability,"The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:4,undo,undo,4,https://root.cern,https://github.com/root-project/root/pull/10192,3,"['clear', 'undo']","['clears', 'undo']"
Usability,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276:131,simpl,simple,131,https://root.cern,https://github.com/root-project/root/pull/14276,1,['simpl'],['simple']
Usability,"The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well.; We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11798:344,simpl,simple,344,https://root.cern,https://github.com/root-project/root/pull/11798,1,['simpl'],['simple']
Usability,There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3816:74,guid,guide,74,https://root.cern,https://github.com/root-project/root/pull/3816,1,['guid'],['guide']
Usability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:57,Clear,ClearProxiedObjects,57,https://root.cern,https://github.com/root-project/root/pull/15106,1,['Clear'],['ClearProxiedObjects']
Usability,There is long-standing issue https://sft.its.cern.ch/jira/browse/ROOT-7530. As intermediate solution one must clearly state current limitations in class docu.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8148:110,clear,clearly,110,https://root.cern,https://github.com/root-project/root/issues/8148,1,['clear'],['clearly']
Usability,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:76,clear,clearly,76,https://root.cern,https://github.com/root-project/root/pull/15402,4,"['clear', 'simpl']","['clearly', 'simplify']"
Usability,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13634:55,learn,learn,55,https://root.cern,https://github.com/root-project/root/pull/13634,2,['learn'],['learn']
Usability,These changes let to reimplement string streamers in derived classes to provide better simpler representation of string in JSON/XML/SQL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/42:87,simpl,simpler,87,https://root.cern,https://github.com/root-project/root/pull/42,1,['simpl'],['simpler']
Usability,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365:533,simpl,simple,533,https://root.cern,https://github.com/root-project/root/pull/5365,1,['simpl'],['simple']
Usability,"These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:; 1) it makes dependencies between all classes much clearer; 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort); 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2709:263,clear,clearer,263,https://root.cern,https://github.com/root-project/root/pull/2709,2,"['clear', 'simpl']","['clearer', 'simpler']"
Usability,This PR add support for batch normalisation for MethodDL (deep learning in TMVA); The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3998:63,learn,learning,63,https://root.cern,https://github.com/root-project/root/pull/3998,1,['learn'],['learning']
Usability,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8816:475,simpl,simplicity,475,https://root.cern,https://github.com/root-project/root/pull/8816,1,['simpl'],['simplicity']
Usability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:578,simpl,simplified,578,https://root.cern,https://github.com/root-project/root/pull/2321,3,['simpl'],"['simplified', 'simplifies', 'simplify']"
Usability,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116:925,clear,clear,925,https://root.cern,https://github.com/root-project/root/pull/15116,1,['clear'],['clear']
Usability,"This PR adds a new data source for `RDataFrame` that is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:577,feedback,feedback,577,https://root.cern,https://github.com/root-project/root/pull/2322,1,['feedback'],['feedback']
Usability,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7235:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/pull/7235,1,['simpl'],['simple']
Usability,"This PR adds branch type inference to Histo1D with weights, as well as Histo2D, Histo3D, Profile1D and Profile2D both with and without weights.; Code has been simplified. Docs have been updated. A related PR in roottest introduces testing for the new functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/532:159,simpl,simplified,159,https://root.cern,https://github.com/root-project/root/pull/532,1,['simpl'],['simplified']
Usability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12395:173,feedback,feedback,173,https://root.cern,https://github.com/root-project/root/pull/12395,1,['feedback'],['feedback']
Usability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12396:173,feedback,feedback,173,https://root.cern,https://github.com/root-project/root/pull/12396,1,['feedback'],['feedback']
Usability,"This PR adds vectorized implementations of several functions in TMath. It is a work in progress, just to receive early feedback. Currently, the following functions are vectorized and tested:. - TMath::Min; - TMath::Gaus; - TMath::BreitWigner; - TMath::CauchyDist; - TMath::LaplaceDist; - TMath::LaplaceDistI. TODO:; - [ ] Refactor the tests to avoid repeated code.; - [ ] Implement remaining functions.; - [ ] Discuss what to do with functions that, i.e., receive an Int_t and return a Double_t. When vectorizing this kind of patterns, one problem arises: the length of integers and double vectors cannot be assumed to be the same. Any comment is more than welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655:119,feedback,feedback,119,https://root.cern,https://github.com/root-project/root/pull/655,1,['feedback'],['feedback']
Usability,This PR aims to add tutorials of PyTorch Interface in TMVA and is an extension to the main PR i.e #5757. Feel free to comment and share feedback.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6273:136,feedback,feedback,136,https://root.cern,https://github.com/root-project/root/pull/6273,1,['feedback'],['feedback']
Usability,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7812:942,intuit,intuitive,942,https://root.cern,https://github.com/root-project/root/pull/7812,1,['intuit'],['intuitive']
Usability,"This PR and their roottest sibling PR contain fixes for the following tests:. Roottest python basic tests:; - roottest-python-basic-basic; - roottest-python-basic-overload. Roofit tutorials fixed by the addition of a pythonisation to get the using declarations of `RooAbsData` into `RooDataHist`. This pythonisation will not be needed anymore when a general solution is provided by the bindings, mainly by merging this Cppyy patch into ROOT: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff; - tutorial-roofit-rf106_plotdecoration-py; - tutorial-roofit-rf610_visualerror-py; - pyunittests-pyroot-pyz-roodatahist-ploton; - tutorial-roofit-rf315_projectpdf-py; - tutorial-roofit-rf402_datahandling-py. Related to https://bitbucket.org/wlav/cppyy/issues/66/cppoverload-addmethod-cppoverload-clears; - tutorial-roofit-rf307_fullpereventerrors-py; - tutorial-roofit-rf706_histpdf-py. Some fixes for the following test, although it still can't be re-enabled due to https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; - roottest-python-basic-datatype. Some fixes for the following test, but still can't be re-enabled (more issues to investigate):; - roottest-python-regression-regression",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4294:822,clear,clears,822,https://root.cern,https://github.com/root-project/root/pull/4294,1,['clear'],['clears']
Usability,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125:73,clear,clearer,73,https://root.cern,https://github.com/root-project/root/pull/11125,4,"['clear', 'guid']","['clear', 'clearer', 'guidelines']"
Usability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:970,simpl,simple,970,https://root.cern,https://github.com/root-project/root/pull/394,1,['simpl'],['simple']
Usability,"This PR fixes ROOT-9453 (""Cannot instantiate RVec<bool>"") and some related issues. The different semantics of std::vector<bool> make memory adoption through a; custom allocator more complex -- namely, `RAdoptAllocator<bool>` must be; rebindable to `RAdoptAllocator<unsigned long>`, but if adopted memory is; really a buffer of bools, reinterpretation of the adopted buffer as a; different type is going to break things in horrible ways.; As a workaround, `RAdoptAllocator<bool>` is specialized to be a simple; allocator that forwards calls to `std::allocator`, never adopts memory, and; can be rebound to any other allocator (as it never adopts memory it can; rebind the same way that `std::allocator` can). Note that this is not enough to support `RVec<bool>` columns in `RDataFrame`, for two main reasons:; * `TTreeReaderArray<bool>` is broken, see [ROOT-9570](https://sft.its.cern.ch/jira/browse/ROOT-9570); * `RVec<bool>` cannot be constructed from a `(bool *, std::size_t)` pair and cannot adopt memory (because `RAdoptAllocator<bool>` cannot adopt memory, because of the problems mentioned above) . So `RDataFrame` would still have to treat `RVec<bool>` differently:; * use a `TTreeReaderValue<std::vector<bool>>` to read the data from disk correctly; * copy the data into an `RVec<bool>`, without relying on memory adoption. These changes might be added by a future PR as they are outside of the scope of ROOT-9453 (""Cannot instantiate RVec<bool>""), _if_ this proposed solution to ROOT-9453 is accepted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2433:502,simpl,simple,502,https://root.cern,https://github.com/root-project/root/pull/2433,1,['simpl'],['simple']
Usability,"This PR fixes a problem in fixing the parameter when using the linear fitter. ; This simple examples shows the problem (the fixed parameter is always the first one) instead of the second one; ```; {; auto h1 = new TH1D(""h1"",""h1"",20,0,10);; h1->FillRandom(""pol0"");; auto f1 = new TF1(""f1"",""pol1"");; f1->FixParameter(1,0);; h1->Fit(f1,"""");; }; ```; the bug is caused by `TLinearMinimizer::SetVariable` returning false instead of true. . The PR fixes also the counting of the total number of free parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11982:85,simpl,simple,85,https://root.cern,https://github.com/root-project/root/pull/11982,1,['simpl'],['simple']
Usability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:1327,clear,clearly,1327,https://root.cern,https://github.com/root-project/root/pull/453,1,['clear'],['clearly']
Usability,"This PR fixes the incorrect calculation of the compressed size by the `RNTupleInspector`. Because the vector of compressed page sizes is not cleared after each loop iteration, the accumulation needs to happen only after the loop has finished. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14316:141,clear,cleared,141,https://root.cern,https://github.com/root-project/root/pull/14316,1,['clear'],['cleared']
Usability,"This PR fixes the jira item, refactors the code of the models in order to simplify and reduce code duplication and extends significantly the test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1759:74,simpl,simplify,74,https://root.cern,https://github.com/root-project/root/pull/1759,1,['simpl'],['simplify']
Usability,This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13966:118,simpl,simplify,118,https://root.cern,https://github.com/root-project/root/pull/13966,1,['simpl'],['simplify']
Usability,This PR is a first simple implementation of the ternary plots requested [here](https://sft.its.cern.ch/jira/browse/ROOT-8378) and [here](https://root-forum.cern.ch/t/triangle-or-ternary-plot/8825/19). It is a Work In Progress.; This class is functional but very simple. The final idea would be to have a class allowing to make ternary plot as the ones shown [here](https://commons.wikimedia.org/wiki/Category:Ternary_phase_diagrams) or [here](https://en.wikipedia.org/wiki/Ternary_plot). It seems there exists Python library under free licence to do so: [python-ternary](https://github.com/marcharper/python-ternary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6713:19,simpl,simple,19,https://root.cern,https://github.com/root-project/root/pull/6713,2,['simpl'],['simple']
Usability,"This PR is a work in progress for a parallel version of the snapshot action introduced recently to TDataFrame. This version compiles and passes the `test_snaphot.C` test from roottest.git, but still needs quite a bit of work. I imported the files we use with attributed authorship for each part, but we now need to move them to the right place if needed and refactor the interfaces according to feedback from various sources. Please feel free to make comments directly on the code, and I will try to address everything by the deadline for branching out 6.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533:395,feedback,feedback,395,https://root.cern,https://github.com/root-project/root/pull/533,1,['feedback'],['feedback']
Usability,"This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`; - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`; - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`; - `TActionResultProxy.hxx`: class `TActionResultProxy`; - `TDFOperations.{hxx,cxx}`: all `*Operation` classes; - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**; - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency; - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`; - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`; - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423:56,feedback,feedback,56,https://root.cern,https://github.com/root-project/root/pull/423,1,['feedback'],['feedback']
Usability,This PR is meant to slim down the man pages while feedback from experts is collected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1544:50,feedback,feedback,50,https://root.cern,https://github.com/root-project/root/pull/1544,1,['feedback'],['feedback']
Usability,This PR makes the TFile Layout documentation visible in; the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown; - Doxyfile have io/doc/TFile folder as input; - References/links between the pages have been setup; - The \tableofcontents Doxygen functionality has been turned ON; - Some typos have been fixed. Still two links need to be resolved:; http://root.cern.ch/root/RootDoc.html; http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7891:84,Guid,Guide,84,https://root.cern,https://github.com/root-project/root/pull/7891,1,['Guid'],['Guide']
Usability,This PR migrates the TMVA Deep Learning classes (RNN) for new cud version 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15601:31,Learn,Learning,31,https://root.cern,https://github.com/root-project/root/pull/15601,1,['Learn'],['Learning']
Usability,"This PR moves the responsibility of knowing which custom columns have been defined at which point of the functional graph from `TCustomColumn` to `TInterface`. As an added improvement `TInterface` now checks that custom columns do not override each other (which was wrongly allowed before). As a consequence, `TCustomColumn` nodes are not required to be in the functional graph anymore (their function was to signal the point where a certain column name became valid), allowing simplifications of the graph traversing that TDF does during the event loop (e.g. to check all filters in a functional chain). `Define` now returns the same type as the node it was called on rather than `TInterface<TCustomColumn<Fun, PrevNode>>`. For this reason this PR is expected to break `test_templateRecursionLimit`, which depends on the exact type returned by `Define`. The test will be fixed by a separate PR to roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924:478,simpl,simplifications,478,https://root.cern,https://github.com/root-project/root/pull/924,1,['simpl'],['simplifications']
Usability,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:962,clear,clears,962,https://root.cern,https://github.com/root-project/root/pull/1769,5,"['clear', 'simpl']","['cleared', 'clearing', 'clears', 'simply']"
Usability,This PR provides some optimisation for Cuda. In particular: . - optimise update weights/gradient of SGD and ADAM/ ; - We avoid now creating temporary matrices in SGD ; - For ADAM it is more efficient defining three new updates functions which will blenched on the GPU. This also avoid creating temporaries . These changes speed-up by almost a factor of 2 the code in GPU for dense layer when using ADAM and restore the previous performances for SGD. - optimise also computation of convolutional weight gradients. ; In this case we can just simply use the ScaleAdd function. A speed up of ~ 20% is obtained . This PR also adds a commit that remove the computation of correlation matrix in case of large number of variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2502:540,simpl,simply,540,https://root.cern,https://github.com/root-project/root/pull/2502,1,['simpl'],['simply']
Usability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:369,clear,cleared,369,https://root.cern,https://github.com/root-project/root/pull/6841,2,"['clear', 'simpl']","['cleared', 'simple']"
Usability,"This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT.; https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3351:244,simpl,simple,244,https://root.cern,https://github.com/root-project/root/pull/3351,1,['simpl'],['simple']
Usability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:121,simpl,simpler,121,https://root.cern,https://github.com/root-project/root/pull/16090,2,['simpl'],"['simpler', 'simplification']"
Usability,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:219,simpl,simple,219,https://root.cern,https://github.com/root-project/root/pull/4911,1,['simpl'],['simple']
Usability,"This PR serves the same purpose as this one: #4695 ; However, I think that older PR was never merged, because it was opened before the hotfix #4698 and therefore was not able to compile. In this PR I simply format all code that has been added for the TGraphMultiErrors class using clang-format and the format settings file provided by ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4777:200,simpl,simply,200,https://root.cern,https://github.com/root-project/root/pull/4777,1,['simpl'],['simply']
Usability,This PR simplifies the trait whether an `RField` is mappable. It furthermore simplifies the use of this trait inside `RNTupleView`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12143:8,simpl,simplifies,8,https://root.cern,https://github.com/root-project/root/pull/12143,2,['simpl'],['simplifies']
Usability,This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/433:8,undo,undoes,8,https://root.cern,https://github.com/root-project/root/pull/433,2,"['simpl', 'undo']","['simplification', 'undoes']"
Usability,"This Pull request adds tutorials for RModelParser_ONNX, RModelParser_Keras, and RModelParser_PyTorch.; This depends on the SOFIE's Keras Parser (#8430) & PyTorch Parser (#8684). This work is a part of my project **ROOT Storage of Deep Learning Models** of Google Summer of Code'21. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8874:235,Learn,Learning,235,https://root.cern,https://github.com/root-project/root/pull/8874,1,['Learn'],['Learning']
Usability,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:121,simpl,simplified,121,https://root.cern,https://github.com/root-project/root/pull/10795,1,['simpl'],['simplified']
Usability,This Pull requests fixes an issue when evaluating regression networks using CNN or RNN architectures. ; It fixes to use the correct input shape. In addition: ; - include changes in #8573 for adding DL with GPU to regression tutorials; - fix an issue with drawing too often progress bar when evaluating regression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8960:273,progress bar,progress bar,273,https://root.cern,https://github.com/root-project/root/pull/8960,1,['progress bar'],['progress bar']
Usability,"This adds functionality to directly parse and create normalized sums as `TF1` objects (as opposed to creating `TF1NormSum` objects and then `TF1` functions from those), when our formula is of the form `NSUM(f1, f2, ...)`. This constructor is also more convenient than that of `TF1NormSum` because we allow the user to use a formula directly as function (such as `x^2`). Examples:; * `TF1 *f = new TF1(""f"", ""NSUM([sg] * gaus, [bg] * expo)"")`; * `TF1 *f = new TF1(""f"", ""NSUM(.5 * expo, .5 * (x + 1)^2)"")`. Note that this code uses the constructor for `TF1NormSum` which parses a formula. The constructor using the vectors of formulas may have been a better choice, but I could not get that constructor to work, even for the simplest inputs (I suspect it might be buggy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/799:722,simpl,simplest,722,https://root.cern,https://github.com/root-project/root/pull/799,1,['simpl'],['simplest']
Usability,"This allows programs (such as 3rd party readers) to create a RNTuple anchor while keeping it clear that ""regular"" users are not meant to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786:93,clear,clear,93,https://root.cern,https://github.com/root-project/root/pull/16786,1,['clear'],['clear']
Usability,"This almost broke me... I've been trying to find for days why ROOT would not build correctly in one particular (fairly complicated) setup for me. I just couldn't figure out why I wouldn't get the files meant for the `etc/` directory in my installation. Turns out that it was because in this weird setup I put the ROOT source code into a directory inside of another CMake project, into a directory that had `/CMakeFiles/` as part of its path. And would you know, macOS still comes with a case insensitive file system, so this exclusion rule was triggering for the full contents of the `etc/` directory in this setup. After realising this, I modified my project's setup to put the ROOT source code into a safer location. But this update should still help people avoid a similar situation later on... P.S. I checked in a simple standalone example that this formalism should do the right thing. (Took me some tries to find ""just the right"" incantation.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1625:818,simpl,simple,818,https://root.cern,https://github.com/root-project/root/pull/1625,1,['simpl'],['simple']
Usability,This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3745:104,clear,clear,104,https://root.cern,https://github.com/root-project/root/pull/3745,1,['clear'],['clear']
Usability,"This class holds all necessary parameters to start any supported web display.; These are kind of browser, width, height, URL and extra URL options.; Simplifies for the future extension of that API.; Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2845:149,Simpl,Simplifies,149,https://root.cern,https://github.com/root-project/root/pull/2845,2,"['Simpl', 'clear']","['Simplifies', 'clear']"
Usability,"This clearly signals ownership transfer and avoids circumventing smart pointer semantics. For more details on passing the vector by value, see also commit c7dac7370d.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16779:5,clear,clearly,5,https://root.cern,https://github.com/root-project/root/pull/16779,1,['clear'],['clearly']
Usability,This commit adds support for using RooNllVarNew in code-squashing/AD. It also adds a new test that uses code-squashing and AD based derivatives to minimize a simple model.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12576:158,simpl,simple,158,https://root.cern,https://github.com/root-project/root/pull/12576,1,['simpl'],['simple']
Usability,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10827:112,simpl,simple,112,https://root.cern,https://github.com/root-project/root/pull/10827,1,['simpl'],['simple']
Usability,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938:730,simpl,simple,730,https://root.cern,https://github.com/root-project/root/pull/5938,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8465:89,Simpl,SimpleFiller,89,https://root.cern,https://github.com/root-project/root/issues/8465,8,['Simpl'],['SimpleFiller']
Usability,"This does not completely resolve the issue of the race conditions, but simplifies the implementation of TBufferMerger a lot by doing away with the ThreadFileMerger imported from GeantV and using TFileMerger directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577:71,simpl,simplifies,71,https://root.cern,https://github.com/root-project/root/pull/577,1,['simpl'],['simplifies']
Usability,"This feature is implemented via a composite pythonizor that matches `TGraph`, `TGraph2D` and their error subclasses, and pythonises their getter methods of the X,Y,Z coordinate and error arrays, which in C++ return a pointer to double. The pythonisation consists in setting the size of the array buffer that the getter method returns, so that it is known in Python and the buffer is fully usable (its length can be obtained, it is iterable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3540:389,usab,usable,389,https://root.cern,https://github.com/root-project/root/pull/3540,1,['usab'],['usable']
Usability,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8176:433,simpl,simplifies,433,https://root.cern,https://github.com/root-project/root/pull/8176,2,['simpl'],"['simplified', 'simplifies']"
Usability,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11763:139,Clear,Clear,139,https://root.cern,https://github.com/root-project/root/pull/11763,2,['Clear'],['Clear']
Usability,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash. Backport of https://github.com/root-project/root/pull/11763",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11849:139,Clear,Clear,139,https://root.cern,https://github.com/root-project/root/pull/11849,2,['Clear'],['Clear']
Usability,"This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'; in the case of an emulated proxy for STL collection with (in the; name) a custom allocator. However the GenericLooper only usable; for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which; is not defined for vector ... and emulated collection. Using; it lead to an assert complaining (right fully so) that an; 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9764:209,usab,usable,209,https://root.cern,https://github.com/root-project/root/pull/9764,1,['usab'],['usable']
Usability,"This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),; and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:; ```c++; std::cout << \""check\"" << std::endl; return x;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3407:130,clear,clearer,130,https://root.cern,https://github.com/root-project/root/pull/3407,1,['clear'],['clearer']
Usability,"This fixes and cleans up the Travis runner; most notably, things like modern CMake and clang 5.0 now come by default (since last December). In theory, this should build much faster since several minutes per job was being spent waiting for apt-get to work. This moves the scripts in `.travis` to `.ci/*`. * CMake 3.9 is now installed by default on Travis: https://docs.travis-ci.com/user/build-environment-updates/2017-12-12/; * Clang 5.0 (and clang-format, clang-tidy) are now installed on Travis; * Move extensive setup to .ci/*; * Fix usage of yaml keys; * Avoid if statements by using build matrix entries; * Note clearly that one block of code will not run; * Remove comments about interleaved macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:617,clear,clearly,617,https://root.cern,https://github.com/root-project/root/pull/1775,1,['clear'],['clearly']
Usability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:61,simpl,simple,61,https://root.cern,https://github.com/root-project/root/pull/813,1,['simpl'],['simple']
Usability,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8030:724,clear,clear,724,https://root.cern,https://github.com/root-project/root/pull/8030,1,['clear'],['clear']
Usability,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:568,simpl,simplification,568,https://root.cern,https://github.com/root-project/root/pull/13197,1,['simpl'],['simplification']
Usability,"This follows the C++ Core Guidelines item F.16, 'For ""in"" parameters, pass cheaply-copied types by value and others by reference to const.' `RClusterIndex` consists of two 64-bit values which for most recent platforms with 64-bit pointers is cheap to copy and better to pass in two registers instead of passing a pointer to stack memory. This in turn helps some recursive calls in RNTuple, for example `RColumn::ReadV` (at the moment of writing). In numbers, this scores a single-digit performance improvement in the usual ATLAS analysis benchmark, -5% analysis runtime on my system. The other usual benchmarks show no changes beyond fluctuations. This changes was prepared by running; ```; $ git grep -l ""RClusterIndex &"" | xargs sed -i ""s/const \(ROOT::Experimental::\)\?RClusterIndex &/\\1RClusterIndex /g""; ```; then reverting the change in `RNTupleUtil.hxx` for the copy-constructor and copy-assignment operator, and finally running clang-format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14406:26,Guid,Guidelines,26,https://root.cern,https://github.com/root-project/root/pull/14406,1,['Guid'],['Guidelines']
Usability,"This follows the proposal and discussion during the ROOT team meeting on 22/01/2024 (https://indico.cern.ch/event/1368009/). The goal for these new guidelines is to keep the git history as organized as possible, as well as have something to point (new) contributors to. A few related points/questions remain open:; - [x] Do we want to keep both `[NFC]` and `[skip-ci]` tags (what is the difference, if any)?; - [ ] Do we want to we enable automatic labeling of PRs, e.g. through https://github.com/actions/labeler?; - [ ] How are the scopes for commit summaries defined?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410:148,guid,guidelines,148,https://root.cern,https://github.com/root-project/root/pull/14410,1,['guid'],['guidelines']
Usability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:1259,simpl,simpler,1259,https://root.cern,https://github.com/root-project/root/pull/12503,2,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"This goes hand-in-hand with #169 . ; These were found in a different way, though: ; By creating them with their default constructor and trying to stream them to a memory buffer (the ""StreamingTest"" of https://github.com/olifre/rootStaticAnalyzer ). . This PR demotes some class-versions for classes which break when streamed (and which are not supposed to be streamed) and makes one more member transient which should be transient (in TTreeFormula). . There's one more remaining issue:. ```; Error in <TStreamerInfo::Build>: TRandom1, discarding: const unsigned int* fTheSeeds, no [dimension]; ```. I'm not sure what the ""dimension"" should be for this member - it's not so clear from the ranlux code to me. . More issues are probably still there since rootStaticAnalyzer right now excludes some classes from testing completely if their construction / destruction using the default constructor fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/170:673,clear,clear,673,https://root.cern,https://github.com/root-project/root/pull/170,1,['clear'],['clear']
Usability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:183,usab,usable,183,https://root.cern,https://github.com/root-project/root/pull/303,1,['usab'],['usable']
Usability,"This is a PR including a lot of work on the convolutional layer. It can be logically divided the following parts:. 1. Back propagation in CUDA (this was the most complex). 2. Forward propagation in CUDA (this was a comparatively simpler task). 3. Helper static methods such as a column based sum reduction and matrix equality checkers for every architecture. 4. An element by element detailed test case for backward and forward propagation. The one on forward propagation was designed and solved on paper. I was not able to do the same for back-propagation, instead I considered the CPU implementation to be correct and asserted that the CUDA outputs the same result. 5. Trivial bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216:229,simpl,simpler,229,https://root.cern,https://github.com/root-project/root/pull/2216,2,['simpl'],['simpler']
Usability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:523,intuit,intuitive,523,https://root.cern,https://github.com/root-project/root/pull/11619,2,"['intuit', 'learn']","['intuitive', 'learned']"
Usability,"This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611:887,guid,guide,887,https://root.cern,https://github.com/root-project/root/pull/9611,1,['guid'],['guide']
Usability,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:132,feedback,feedback,132,https://root.cern,https://github.com/root-project/root/pull/5757,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is a remnant of [ROOT-9254](https://sft.its.cern.ch/jira/browse/ROOT-9254). We don't need the support for dots in `TTree::GetLeaf()` anymore, but I was dragging the branch along, and this simplifies the function and makes it easy to read, so might be worth merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2076:193,simpl,simplifies,193,https://root.cern,https://github.com/root-project/root/pull/2076,1,['simpl'],['simplifies']
Usability,"This is a simple fix to reduce imbalance in multi-thread event-loops; with no data-source: previously we spawned one task per worker thread. Expected to break `test_emptysource`, which is fixed by [PR 96](https://github.com/root-project/roottest/pull/96) in roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1104:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/1104,1,['simpl'],['simple']
Usability,"This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585:10,simpl,simplification,10,https://root.cern,https://github.com/root-project/root/pull/6585,1,['simpl'],['simplification']
Usability,"This is a simplified version of #7752 . It does not provide the same protection against evil doing; this will come in a subsequent PR, where `Transaction` ownership will be passed through `unique_ptr`s. Note to reviewers @vgvassilev @pcanal : You have reviewed all but the last commit, ""LookupHelper must not unload Transactions""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7773:10,simpl,simplified,10,https://root.cern,https://github.com/root-project/root/pull/7773,1,['simpl'],['simplified']
Usability,This is a suggestion for two improvements to the class:. 1. The projected pdf should be extended if the pdf it is projecting is also extended.; 2. The projection should respect the normalization range if one is given. Submitting this PR to solicit feedback on these proposals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12658:248,feedback,feedback,248,https://root.cern,https://github.com/root-project/root/pull/12658,1,['feedback'],['feedback']
Usability,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11851:376,usab,usable,376,https://root.cern,https://github.com/root-project/root/pull/11851,1,['usab'],['usable']
Usability,"This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690:498,simpl,simplify,498,https://root.cern,https://github.com/root-project/root/pull/10690,1,['simpl'],['simplify']
Usability,"This is done for consistency with the other backports.; The old header RStringView.h is left for backwards compatibility, and it simply includes ROOT/RStringView.hxx. Due to our cmake rules this change requires a removal of $ROOTSYS/core; (or anyway a regeneration of the cmake rules for it) in build; directories used for incremental builds. I think of this PR as a ""nice to have"", and I see no downsides, but feel free to close it if you are against such a change. @vgvassilev I did not know how to update `build/unix/module.modulemap` so I left it as is, let me know if it requires changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1635:129,simpl,simply,129,https://root.cern,https://github.com/root-project/root/pull/1635,1,['simpl'],['simply']
Usability,This is done in TImageDump via gStyle->SetImageScaling(x); x being a multiplication factor.; This new feature is now used in the ref guide generation with x=3.; Pictures in the ref guide are now much shaper and the text is as clear the rest of the text in the doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1850:133,guid,guide,133,https://root.cern,https://github.com/root-project/root/pull/1850,3,"['clear', 'guid']","['clear', 'guide']"
Usability,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:1418,Simpl,Simple,1418,https://root.cern,https://github.com/root-project/root/pull/2487,1,['Simpl'],['Simple']
Usability,"This is just a proposal for a simple but hopefully useful feature.; The idea is to let people check the type of a given RDF column:; ```cpp; df.GetColumnType(""x""); // returns e.g. ""int""; ```. Some usecases in which `GetColumnType` might be useful:; 1. a help to use RDF in interpreted C++ (check the type of a column, then call `df.Take<T>(""x"")` with the right type; 2. a help to write PyROOT utilities on top of RDF: often such utilities need to jit some RDF call but have no way to know what are the required template types; 3. easy way to programmatically get the type of a TTree branch (`TTree::Print` is easy but does not return anything, `TLeaf::GetTypeName` is less straightforward to use correctly, e.g. if I'm not mistaken it returns `int` for an `int[n]`). What do people think? Pinging @stwunsch @amadio @dpiparo @etejedor @Axel-Naumann",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2393:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/2393,1,['simpl'],['simple']
Usability,"This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:356,simpl,simply,356,https://root.cern,https://github.com/root-project/root/pull/2829,1,['simpl'],['simply']
Usability,"This is necessary to give the user a clear error message, since otherwise the build will go on and fail anyway with a cryptic message. See [ROOT-9441](https://sft.its.cern.ch/jira/browse/ROOT-9441).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2150:37,clear,clear,37,https://root.cern,https://github.com/root-project/root/pull/2150,1,['clear'],['clear']
Usability,"This is sadly more verbose, but I thought I'd bring all the other iterators in line with C++17 where inheriting from std::iterator is deprecated (https://en.cppreference.com/w/cpp/iterator/iterator). ; I mostly followed the guidelines here https://www.fluentcpp.com/2018/05/08/std-iterator-deprecated/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5890:224,guid,guidelines,224,https://root.cern,https://github.com/root-project/root/pull/5890,1,['guid'],['guidelines']
Usability,"This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8428:192,simpl,simple,192,https://root.cern,https://github.com/root-project/root/issues/8428,1,['simpl'],['simple']
Usability,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5379:572,simpl,simple,572,https://root.cern,https://github.com/root-project/root/pull/5379,1,['simpl'],['simple']
Usability,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:871,clear,clearer,871,https://root.cern,https://github.com/root-project/root/pull/5725,1,['clear'],['clearer']
Usability,"This is the first attempt for merging the bulk IO APIs (hidden inside the `ROOT::Internal` namespace). The initial goal here is to start getting reviewer attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:168,feedback,feedback,168,https://root.cern,https://github.com/root-project/root/pull/943,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is the second attempt for merging the bulk IO APIs (hidden inside the ROOT::Internal namespace); original version was in #943; this is a large rebase and update (particularly, removing the buffer sharing between the ROOT and the user). The initial goal here is to get another round of @pcanal attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:312,feedback,feedback,312,https://root.cern,https://github.com/root-project/root/pull/2519,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is very first attempt to make ROOT I/O conform RDrawable classes with attributes.; Means objects which are managed with `shared_ptr` duplicated by direct pointer, which is used only for I/O (see `RDrawableAttributes::fContIO` member in RDrawingAttr.hxx file). Attributes stored in `std::unordered_map<std::string, std::unique_ptr<Value_t>>` class. `Value_t` has several sub-classes. It potentially can be replaced by `std::variant<bool,int,double,std::string>` once we had it full support for I/O (especially for JSON). Special ""Visitor"" class can access or modify attributes. ""Visitor"" should be base class for all kind of LineAttr, FillAttr, ... classes. Visitor can has list of default values which first: specify name and kind of existing fields, and provide defaults which can be applied to the object. RStyleNew class is set blocks of attributes with selector rule (like in vanila CSS). For the moment selector not really implemented - just simple type of class match. I/O same as for attributes, therefore RStyleNew can be transported to client in same way as attributes. In JSON attributes storage looks like:; ```; ""fAttr"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes"",; ""fContIO"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::Record_t"",; ""user_class"" : """",; ""map"" : {; ""_typename"": ""unordered_map<string,ROOT::Experimental::RDrawableAttributes::Value_t*>"", ; ""line_width"": {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::DoubleValue_t"",; ""v"" : 2; }; }; }; }; ```; I can easily exclude ""_typename"" already now. ; Also one can implement compressions rule for `DoubleValue_t` class - store only ""v"" data member that finally we should get:; ```; ""line_width"": 2; ```; New DrawableAttributes class can be use in `RPadLength` implementation.; It has three components: ""fUser"", ""fPixel"", ""fNormal"". These components can be created only when really specified. This solves problem of **undefined** state for user-coordinate part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352:952,simpl,simple,952,https://root.cern,https://github.com/root-project/root/pull/4352,1,['simpl'],['simple']
Usability,"This is work done by Alex Saperstein, and ANL SULI who worked with me. While working on TTreeCache learning, our Summer Intern (Alex Saperstein) observed that for simple TTrees, the basket size optimization isn’t optimal for two reasons: 1) rounding down to 512 byte blocks 2) neglecting to accommodate for ROOT offsets stored in the baskets. As a result, e.g. with simple (constant size) float array branches the basket size is to small resulting in two baskets per auto-flush. The change would be pretty straight-forward: tree/tree/src/TTree.cxx. Line; -6583 newBsize = newBsize - newBsize%512;. Should become:; +6583 if (pass) { // only on the second pass so that it doesn't interfere with scaling; +6583 Int_t nevbuf = branch->GetBasket(0)->GetNevBuf();; +6583 newBsize = newBsize + (nevbuf \* sizeof(Int_t) \* 2); // make room for meta data; +6583 newBsize = newBsize - newBsize%512 + 512; // rounds up; +6583 }. Tests on simple data show that with this the baskets end up more appropriately sized so that all the auto-flush data fits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:99,learn,learning,99,https://root.cern,https://github.com/root-project/root/pull/238,4,"['learn', 'simpl']","['learning', 'simple']"
Usability,"This makes it possible to use _build as a build directory name under; the source directory. The actual preferred build directory name would; be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of `build` as a reserved, preferred name for build; directories (or `_build` as a fallback).; Other precedents are entries such as `cmake-build` and `.build` in; this .gitignore, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8009:292,guid,guidelines,292,https://root.cern,https://github.com/root-project/root/pull/8009,1,['guid'],['guidelines']
Usability,"This makes releasing waaay simpler, more reliable, and possibly at some point convertible to a Github action?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620:27,simpl,simpler,27,https://root.cern,https://github.com/root-project/root/pull/13620,1,['simpl'],['simpler']
Usability,This makes the code much simpler and avoids using virtual implemetation classes with dubious inheritance chains.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12355:25,simpl,simpler,25,https://root.cern,https://github.com/root-project/root/pull/12355,1,['simpl'],['simpler']
Usability,"This method called from `CPyCppyy::CPPMethod` destructor, but also from assign operator.; Means it is strongly advisable to clear pointers to avoid potential use of destroyed objects.; Also `fConverters` must be cleaned. Indirectly discovered via DeepCode analyzers:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7692:124,clear,clear,124,https://root.cern,https://github.com/root-project/root/issues/7692,1,['clear'],['clear']
Usability,This new release includes several fixes helping to simplify RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14794:51,simpl,simplify,51,https://root.cern,https://github.com/root-project/root/pull/14794,1,['simpl'],['simplify']
Usability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:565,clear,clearly,565,https://root.cern,https://github.com/root-project/root/pull/3267,1,['clear'],['clearly']
Usability,"This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3291:924,clear,clearly,924,https://root.cern,https://github.com/root-project/root/pull/3291,1,['clear'],['clearly']
Usability,This patch moves code which does similar things into standalone routines. This; way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:97,clear,clear,97,https://root.cern,https://github.com/root-project/root/pull/3865,1,['clear'],['clear']
Usability,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:267,simpl,simple,267,https://root.cern,https://github.com/root-project/root/pull/96,1,['simpl'],['simple']
Usability,"This patch should simplify the cmssw modules setup. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4660:18,simpl,simplify,18,https://root.cern,https://github.com/root-project/root/pull/4660,1,['simpl'],['simplify']
Usability,"This prevent the inappropriate execution on a rule intent for; an inner object on the outer object('s memory space). In a case where the top level branch is:; ```; 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >; ```; which contains; ```; 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>; 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase; 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**; ```; The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough; it was not split and it did so because it did not recognize there was a branch for; it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2860:330,simpl,simple,330,https://root.cern,https://github.com/root-project/root/pull/2860,4,['simpl'],['simple']
Usability,"This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:; * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. ; * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix; * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13109:1245,clear,clear,1245,https://root.cern,https://github.com/root-project/root/pull/13109,1,['clear'],['clear']
Usability,"This pull request addresses Pere's comments and adds some more changes like a simple test for VecCore functionality and better support for latest VecCore changes (from version 0.3.2 to 0.4.0). It should be ready for merging, but I'd like to see all tests pass first. I tested on my own machine with several combinations of `vc=ON/OFF`, `builtin_vc=ON/OFF` and `veccore=ON/OFF`, `builtin_veccore=ON/OFF`. It should all work properly. However, since external VecCore cannot find a builtin Vc, requesting `builtin_vc=ON` and `veccore=ON` will trigger `builtin_veccore=ON` automatically. Please feel free to to make more suggestions for extra changes if necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/497:78,simpl,simple,78,https://root.cern,https://github.com/root-project/root/pull/497,1,['simpl'],['simple']
Usability,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10652:622,usab,usable,622,https://root.cern,https://github.com/root-project/root/pull/10652,1,['usab'],['usable']
Usability,"This pull request allows one to use user-defined (and some predefined) functions with different variables and/or parameters from what was given in the original definition. For example, a function originally defined on variable `x` with parameter `[0]` can now easily be applied to variable `y` with parameter `[alpha]` as part of another function definition. The syntax for the `TFormula` is as follows:; * `f(var0, var1, var2, ..., param0, param1, param2, ...)`. Furthermore, this PR introduces a few shortcuts:; * The syntax `[n..m]` for ranges of numbered parameters (for example, `[1..3]` expands to `[1],[2],[3]`); * To simply replace/rename parameters, the variables may be omitted; * Otherwise, if redefining variables, the parameters may be omitted (except, of course, if substituting them all for parameters if the numbers of parameters and variables are equal). This PR supports the nesting of functions (but still not recursive definitions!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/860:625,simpl,simply,625,https://root.cern,https://github.com/root-project/root/pull/860,1,['simpl'],['simply']
Usability,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565:1347,simpl,simpler,1347,https://root.cern,https://github.com/root-project/root/pull/13565,1,['simpl'],['simpler']
Usability,"This pull request implements the Ctrl+L keybinding (clear terminal screen) in ROOT's textinput. ## Changes or fixes:; - Adds the `Display::Clear()` member function, which clears the visible part of the screen on a TTY and moves the cursor to the home position. For Windows, this requires to temporarily enable processing of VT control sequences.; - Provide implementation for the `kCmdClearScreen` editor command. ## Checklist:; - [X] tested changes locally. This PR fixes #10057.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10078:52,clear,clear,52,https://root.cern,https://github.com/root-project/root/pull/10078,3,"['Clear', 'clear']","['Clear', 'clear', 'clears']"
Usability,"This pull request improves the internal in-memory layout of `RNTupleLocator`, its serialization/deserialization, and introduces some changes to the binary specification (see list of individual changes below). ## Changes or fixes:; - **FIX** discrepancy between non-disk locators specification and implementation: [specifications.md, Section ""Locators and Envelope Links""](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links) stated that on non-disk locators, the 24LSb of _Size_ specify the size of the locator (and not only the size of the payload). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11828:790,simpl,simple,790,https://root.cern,https://github.com/root-project/root/pull/11828,1,['simpl'],['simple']
Usability,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:820,simpl,simplify,820,https://root.cern,https://github.com/root-project/root/pull/11480,1,['simpl'],['simplify']
Usability,"This pull request is a attempt to fix the problem described here:; https://root-forum.cern.ch/t/graphical-and-variable-cuts-in-ttree-draw/32862. When a selection including a graphical cut and and other cut is done on a tree having array variables, the selected entries depend in the order in which the graphical and the normal cut are done. The simplest macro showing the problem (using the root file attached to the forum) is:. ```; {; auto file = new TFile(""ptmac.root"");; auto C = new TCanvas();; C->Divide(2,1);. TCutG *gcut = new TCutG(""CUTG"",5);; gcut->SetVarX(""z"");; gcut->SetVarY(""theta"");; gcut->SetPoint(0,-30,2);; gcut->SetPoint(1,-10,5);; gcut->SetPoint(2,-5,40);; gcut->SetPoint(3,-50,25);; gcut->SetPoint(4,-30,2);. C->cd(1); tree->Draw(""z"",""z>-20 && CUTG"","""",10000);; C->cd(2); tree->Draw(""z"",""CUTG && z>-20"","""",10000);; }; ```. without this fix the two plots are different whereas they should be the same. . Not being an expert in that part of the ROOT code, I am not completely sure this fix is the best.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3591:345,simpl,simplest,345,https://root.cern,https://github.com/root-project/root/pull/3591,1,['simpl'],['simplest']
Usability,"This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; ; By setting the `MaxVirtualSize` of the tree to a negative value, entire clusters will be loaded into memory and previous clusters will be retained - the absolute value of `MaxVirtualSize` indicates how many additional clusters will be kept in memory.; ; If `TTree MaxVirtualSize` is set to a negative value, `GetEntry()` will load the entire cluster into memory, not just the first basket. `GetBasket()` is modified to call a new function `GetFreshCluster()` if `MaxVirtualSize` is negative. This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, `GetFreshCluster()` reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here).; ; To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry. - Without the change enables there were 1.5 GB read in 31102 read calls. ; - With MaxVirtualSize set to -1, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796:841,clear,clearing,841,https://root.cern,https://github.com/root-project/root/pull/796,2,['clear'],"['clear', 'clearing']"
Usability,"This pull request makes the ordering of parameters more intuitive. In particular, parameters whose names begin with a 'p' will only be considered numeric if followed by a number, and otherwise will be sorted in regular alphabetical order (so now [phi] will come after [alpha]). It is especially important to have an intuitive ordering of parameters, since we will be introducing syntax to specify parameters positionally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/857:56,intuit,intuitive,56,https://root.cern,https://github.com/root-project/root/pull/857,2,['intuit'],['intuitive']
Usability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:599,simpl,simple,599,https://root.cern,https://github.com/root-project/root/pull/12279,1,['simpl'],['simple']
Usability,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8771:81,simpl,simpler,81,https://root.cern,https://github.com/root-project/root/pull/8771,1,['simpl'],['simpler']
Usability,This pull request simplifies the implementation of `RPageSourceDaos::LoadClusters()` as a prior step to handling the population of the page zero. A follow-up PR factors out common code for handling `kTypePageZero` locators in storage backends + enables their population in the DAOS backend. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:18,simpl,simplifies,18,https://root.cern,https://github.com/root-project/root/pull/13381,1,['simpl'],['simplifies']
Usability,"This pull request slighly improves RClusterPool to reduce contention (due to `fLockXxxQueue` being held) in I/O and unzip; threads. To this end, each thread keeps its local buffer of elements to be processed. On wakeup, the local copy is swapped with `fXxxQueue`, which not only reduces contention but also reduces the overall number of allocations, as the internal storage of both copies is reused. The local copy should be cleared before the `std::swap()` in the next iteration. Also, the unzip thread is just notified once after all the elements are pushed into the queue. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044:425,clear,cleared,425,https://root.cern,https://github.com/root-project/root/pull/12044,1,['clear'],['cleared']
Usability,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16394:178,user experience,user experience,178,https://root.cern,https://github.com/root-project/root/pull/16394,1,['user experience'],['user experience']
Usability,"This reverts commit 2ecf45e5a37ab3f1108c5a9068b3cf330242b9dd, and makes some extra adjustments for Davix 0.6.7 to build or provide a clear error if something is missing in the system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1907:133,clear,clear,133,https://root.cern,https://github.com/root-project/root/pull/1907,1,['clear'],['clear']
Usability,"This should be the last crop of fixes needed by ROOT-10216. In brief, the changes are to replace lookup by simpler search to avoid nested; initialization of TClasses (leading to the outer nested initialization; to end using deleted memory). Some explanation of the reasons for and details of the actual changes. With. ```; namespace User {; class TrackerVtxBase; class BeamFlux : public User::TrackerVtxBase; class NTrackerVtx : public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:107,simpl,simpler,107,https://root.cern,https://github.com/root-project/root/pull/4389,2,['simpl'],['simpler']
Usability,"This simple code, gives a strange behaviour when running it within the ROOT prompt in 6.28 and master.; In ROOT master and 6,28 it seems the vector is initialised with the values used the first time and not with the new ones. ; It works fine in 6.26, where the second time the vector passed to the DummyBroadCast function is initialised correctly. . ```; .L testBroadCast.hxx; Test1::Session s1;; Test2::Session s2;; ```. Here is the code : `testBroadCast.hxx`. ```; #include <iostream>; #include <vector>. template<class T>; void DummyBroadCast(const T* data, std::vector<size_t> shape, std::vector<size_t> targetShape) {. std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;. }. namespace Test1 {. struct Session {; ; std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(64);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 4, 4 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);. }. };; }. namespace Test2 {. struct Session {. std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(100);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 5, 5 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);; // DummyBroadCast(tensor_conv0bias, { 4 , 1 , 1 }, { 2 , 4 , 5, 5 });. }. };; }; ```; ; This affects some failures seen in SOFIE test like ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164:5,simpl,simple,5,https://root.cern,https://github.com/root-project/root/issues/12164,1,['simpl'],['simple']
Usability,"This simplifies client code and it makes it simpler to evolve RColumnRegister internals in the future, which will be needed e.g. for bulk processing in RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10844:5,simpl,simplifies,5,https://root.cern,https://github.com/root-project/root/pull/10844,2,['simpl'],"['simpler', 'simplifies']"
Usability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:836,learn,learn,836,https://root.cern,https://github.com/root-project/root/pull/15272,1,['learn'],['learn']
Usability,"This turned out to be quite a bit harder to fix than I anticipated, but now almost all headers should be picked from the source directory, and many missing dependencies were added. After I also fix `ROOT_GENERATE_EXECUTABLE()` to use headers from the source directory, then generate headers out of `${CMAKE_BINARY_DIR}/include` and add them to their respective owning targets, we should be able to move the headers to the build directory only at the very end of the build in order to make ROOT usable from the build directory. However, in order to catch missing includes and other dependencies at build time, we need to keep using headers from the source directory only during the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299:494,usab,usable,494,https://root.cern,https://github.com/root-project/root/pull/4299,1,['usab'],['usable']
Usability,This tutorial was not properly displayed in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8203:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/pull/8203,1,['guid'],['guide']
Usability,This updates the checked in version of the TMVA User's guide to reflect the state of the tex sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2465:55,guid,guide,55,https://root.cern,https://github.com/root-project/root/pull/2465,1,['guid'],['guide']
Usability,"This was the intent, the regex was simply broken and did not take the trailing versioning part into account.; Now, -patches as minor "".99"", otherwise as expected.; This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3864:35,simpl,simply,35,https://root.cern,https://github.com/root-project/root/pull/3864,1,['simpl'],['simply']
Usability,This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15398:22,simpl,simplify,22,https://root.cern,https://github.com/root-project/root/pull/15398,2,['simpl'],['simplify']
Usability,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501:163,simpl,simplified,163,https://root.cern,https://github.com/root-project/root/pull/15501,1,['simpl'],['simplified']
Usability,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16616:20,usab,usable,20,https://root.cern,https://github.com/root-project/root/pull/16616,1,['usab'],['usable']
Usability,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11149:203,simpl,simplify,203,https://root.cern,https://github.com/root-project/root/pull/11149,2,['simpl'],"['simple', 'simplify']"
Usability,Today I learned: returning a local variable calls the move-ctor by default if available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1224:8,learn,learned,8,https://root.cern,https://github.com/root-project/root/pull/1224,1,['learn'],['learned']
Usability,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:20,Guid,Guide,20,https://root.cern,https://github.com/root-project/root/issues/7284,4,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],"['guide', 'guidelines']"
Usability,"Try to better fix https://github.com/root-project/root/issues/8051; In the files `Vector2-4-3D.h` the definitions in the fwd files are now duplicated, ; in order typedef like `PtEtaPhiMVector` appears defined in `Vector4D.h` in the ref guide; as it is the file users should include.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8224:236,guid,guide,236,https://root.cern,https://github.com/root-project/root/pull/8224,1,['guid'],['guide']
Usability,Try to simply update xrootd version (by M.K.Simon),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:7,simpl,simply,7,https://root.cern,https://github.com/root-project/root/pull/8963,2,['simpl'],['simply']
Usability,Tutorials order in the reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8342:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/8342,2,['guid'],['guide']
Usability,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:377,clear,clear,377,https://root.cern,https://github.com/root-project/root/pull/4968,1,['clear'],['clear']
Usability,Undo commit bed0e943466f5cc5c86bfaf434858ba1ab8202ca.; It has some side effects for images inline via Macro_Begin/Macro End,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5433:0,Undo,Undo,0,https://root.cern,https://github.com/root-project/root/pull/5433,1,['Undo'],['Undo']
Usability,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11183:524,simpl,simple,524,https://root.cern,https://github.com/root-project/root/pull/11183,1,['simpl'],['simple']
Usability,Update User's Guide pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:14,Guid,Guide,14,https://root.cern,https://github.com/root-project/root/issues/7279,1,['Guid'],['Guide']
Usability,Update and simplify some code for C++14,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9071:11,simpl,simplify,11,https://root.cern,https://github.com/root-project/root/pull/9071,2,['simpl'],['simplify']
Usability,Update build guide for cling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:13,guid,guide,13,https://root.cern,https://github.com/root-project/root/pull/15972,2,['guid'],['guide']
Usability,Update links of the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8062:24,guid,guide,24,https://root.cern,https://github.com/root-project/root/pull/8062,2,['guid'],['guide']
Usability,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5120:132,progress bar,progress bar,132,https://root.cern,https://github.com/root-project/root/pull/5120,1,['progress bar'],['progress bar']
Usability,Update the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:15,guid,guide,15,https://root.cern,https://github.com/root-project/root/pull/8887,2,['guid'],['guide']
Usability,Updated markdown documentation(user guide) for ROOT-R. Cheers.; Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/131:36,guid,guide,36,https://root.cern,https://github.com/root-project/root/pull/131,1,['guid'],['guide']
Usability,Updates of latex files of TMVA users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710:37,guid,guide,37,https://root.cern,https://github.com/root-project/root/pull/5710,1,['guid'],['guide']
Usability,Usability of TExecutor::MapReduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7871:0,Usab,Usability,0,https://root.cern,https://github.com/root-project/root/issues/7871,1,['Usab'],['Usability']
Usability,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5058:381,clear,clearly,381,https://root.cern,https://github.com/root-project/root/pull/5058,1,['clear'],['clearly']
Usability,Use clear =delete statements in TObjectSpy and TBufer3D classes declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4524:4,clear,clear,4,https://root.cern,https://github.com/root-project/root/pull/4524,1,['clear'],['clear']
Usability,"Use exactly the same BrowserModel for implementing hierarchy browser in both components; Code is maintained with RBrowser, Geometry viewer reuses components.; C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future.; Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3759:285,Simpl,Simplify,285,https://root.cern,https://github.com/root-project/root/pull/3759,1,['Simpl'],['Simplify']
Usability,Use in the Deep Learning the Fast implementation of Tanh from VDT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2567:16,Learn,Learning,16,https://root.cern,https://github.com/root-project/root/pull/2567,1,['Learn'],['Learning']
Usability,"Use of cmake should significantly simplify porting on different platforms; Fix compilation and running issues on Windows, provide readme; Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7811:34,simpl,simplify,34,https://root.cern,https://github.com/root-project/root/pull/7811,1,['simpl'],['simplify']
Usability,"Use the correct syntax for the `START` command, which is:; ```; START ""title"" [/D path] [options] ""command"" [parameters]; ```; This prevent the following error with the `.forum bug` command:; ```; root [0] .forum bug; The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"".; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13106:626,clear,clear,626,https://root.cern,https://github.com/root-project/root/pull/13106,4,['clear'],['clear']
Usability,User guide: remove contradiciton on STL splitting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551:5,guid,guide,5,https://root.cern,https://github.com/root-project/root/pull/12551,2,['guid'],['guide']
Usability,"Using `||` means that *any* event type would trigger the CI, as long as it was done against the main ROOT repository. I open this PR to understand why that condition was there in that way, I am sure there is a reason but it's undocumented",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14615:226,undo,undocumented,226,https://root.cern,https://github.com/root-project/root/pull/14615,1,['undo'],['undocumented']
Usability,"Using approach as before, just perform multiple `JSROOT.draw` inside; this special HTML file. When producing PDF - all these images should; be dump in single file. In all other cases correspondent number of; image files will be created. Advantage of such approach - starting web browser and loading JSROOT; scripts happens only once. Improve PDF generation. Simple 100 images can be generated in ~3 seconds (instead of 70s if doing one by one)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13244:358,Simpl,Simple,358,https://root.cern,https://github.com/root-project/root/pull/13244,1,['Simpl'],['Simple']
Usability,WIP - [TExecutor] Usability of TExecutor::MapReduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14718:18,Usab,Usability,18,https://root.cern,https://github.com/root-project/root/pull/14718,1,['Usab'],['Usability']
Usability,"Warning like:; ```; geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8316:167,Clear,Clear,167,https://root.cern,https://github.com/root-project/root/pull/8316,1,['Clear'],['Clear']
Usability,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15833:270,clear,clearly,270,https://root.cern,https://github.com/root-project/root/pull/15833,1,['clear'],['clearly']
Usability,"We get these symbols even for a simple hello world message. While it is not clear if we can skip all weak undefined symbols, we can certainly skip those which get resolved to libgcj.so and libitm.so. Oddly enough gcc emits a weak undefined symbol to _Jv_RegisterClasses (resolved in libgcj.so) which is some gcc/java library. _ITM_deregisterTMCloneTable and _ITM_registerTMCloneTable are emitted because (resolved in libitm.so) of pointer arithmetics for transactional memory support. The current understanding is that we can safely omit these when harvesting library dependencies. This should fix the rootbench builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4254:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/pull/4254,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"We have identified in previous meetings (see [here](https://indico.cern.ch/event/945804/) and [here](https://indico.cern.ch/event/956672/)) that a typical HEP analysis benefits from a `Define` version, which evaluates only once per ""dataset"". The identifier of a ""dataset"" is not yet clear. An example scenario is given below (event weights per sample, typical for simulated datasets):. ```cpp; // Construct RDF; RDataFrame df(tree, files);. // Declare computations; auto get_scale = [](const Identifier_t& dataset); {; // dataset = filename.root/treename; if (dataset.contains(""Data"")) return 1.0;; else if (dataset.contains(""DY"")) return 0.9;; else if (dataset.contains(""WJets"")) return 1.1;; else throw std::runtime_error(""Unknown dataset"");; };; auto h = df.DefinePerSample(""weight"", get_scale); .Histo1D(""nMuon"", ""weight"");. // Access result; h->Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6745:284,clear,clear,284,https://root.cern,https://github.com/root-project/root/issues/6745,1,['clear'],['clear']
Usability,"We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's defaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:504,undo,undocumented,504,https://root.cern,https://github.com/root-project/root/issues/8444,1,['undo'],['undocumented']
Usability,We helped CINT parse complex code and that is not needed anymore. This will help further simpliciations when parsing dictionaries with rootcling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12259:89,simpl,simpliciations,89,https://root.cern,https://github.com/root-project/root/pull/12259,1,['simpl'],['simpliciations']
Usability,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5910:72,simpl,simplify,72,https://root.cern,https://github.com/root-project/root/pull/5910,1,['simpl'],['simplify']
Usability,"We see the assert ""Specialization is already registered as lazy"" triggered; due to a hash collision of two sets of template arguments: the arguments; are different but the hash happens to be identical. Be more specific when; claiming that the specialization was already registered as lazy, by not; only comparing the hash, but also the template arguments we found under; that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:; $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C; where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition; |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init; | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr; | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveConstructor exists simple trivial needs_implicit; | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveAssignment exists simple trivial needs_implicit; | `-Destructor simple irrelevant trivial needs_implicit; `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:1141,simpl,simple,1141,https://root.cern,https://github.com/root-project/root/pull/9248,4,['simpl'],['simple']
Usability,"We should follow the shutdown procedure from FrontendAction::EndSourceFile which ensures clang is properly torn down. This patch allows us to write a module file without having to explicitly call CompilerInstance::clearOutputFiles. This is part of a patch intending to lay down some infrastructure to fix the conditional build of the clang-internal module _Builtin_intrinsics.pcm in the context of cmssw. I've found an easier way to do so, however, this is of generic importance for ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675:214,clear,clearOutputFiles,214,https://root.cern,https://github.com/root-project/root/pull/4675,1,['clear'],['clearOutputFiles']
Usability,"We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace; [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip); .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right?. I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here!. Thanks!; Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7912:95,Simpl,Simply,95,https://root.cern,https://github.com/root-project/root/issues/7912,1,['Simpl'],['Simply']
Usability,"Web-based geometry viewer now extracted into separate library. Rename classes: `REveGeomViewer` -> `RGeomViewer`. By this also simplify handling of so-called ""server-side shapes"" - less data can be transferred, no extra workaround for normals calculations. Ease usage of geometry viewer in `RBrowser`. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11554:127,simpl,simplify,127,https://root.cern,https://github.com/root-project/root/pull/11554,1,['simpl'],['simplify']
Usability,"When TCanvas created with TWebCanvas, it will be marked as batch; This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2805:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/pull/2805,1,['simpl'],['simple']
Usability,"When a RooDataSet is constructed without a weight variable, weights are ignored when events; are added to the dataset. Now, there will be a clear warning notifying the user that an event; weight is being ignored.; The documentation has also been updated. See also:; https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3657:140,clear,clear,140,https://root.cern,https://github.com/root-project/root/pull/3657,1,['clear'],['clear']
Usability,"When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```; [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'; SOFIE::RModelParser_ONNX Parser;; ~~~~~~~^; ```. ```; [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found; #include ""Higgs_trained_model.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~; Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/issues/10461,1,['guid'],['guide']
Usability,"When composing the expressions to jit autoparsing is redundant as we; know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of; autoparse and autoload (useful for modules); and secondly avoids deep call; chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3765:573,simpl,simplification,573,https://root.cern,https://github.com/root-project/root/pull/3765,1,['simpl'],['simplification']
Usability,"When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace).; The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me.; [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6529:504,simpl,simply,504,https://root.cern,https://github.com/root-project/root/issues/6529,1,['simpl'],['simply']
Usability,"When filling the result after the second fit , the covariance matrix, global correlations, parameter bounds and parameter Names were not cleared, and the new values were appended to the previous one.; This is now fixed by clearing the vectors. This fixes the problem reported in https://root-forum.cern.ch/t/problem-retrieving-minuit2-correlation-matrix/44120",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7670:137,clear,cleared,137,https://root.cern,https://github.com/root-project/root/pull/7670,2,['clear'],"['cleared', 'clearing']"
Usability,"When first doing a chi2 fit and later nll or vice-versa, RooFit didn't; remember the range of the last fit correctly, since it wasn't cleared; before a new fit starts. Now, it's cleared before all fits. Looking for the bug, I found two places where cleanups/improvements were in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5469:134,clear,cleared,134,https://root.cern,https://github.com/root-project/root/pull/5469,2,['clear'],['cleared']
Usability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . ; In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/pull/5221,1,['guid'],['guide']
Usability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() .; In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5230:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/pull/5230,1,['guid'],['guide']
Usability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:604,simpl,simply,604,https://root.cern,https://github.com/root-project/root/pull/16099,1,['simpl'],['simply']
Usability,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11698:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/11698,1,['clear'],['clear']
Usability,"When multiple threads are touching the list of cleanups, another thread can delete the object retrieved via TObjLink::GetObject(), and then when it is dereferenced in ob->TestBit(...) it causes a crash in ROOT. Stack trace (simplified):; ```; in TObject::TestBit (this=0x0, f=33554432) at TObject.h:159; ^^^; in TList::RecursiveRemove (this=0xb3c3e0, obj=0x7ff3547da6b0); at root/core/cont/src/TList.cxx:717; ^^^; in THashList::RecursiveRemove (this=0xb504b0, obj=0x7ff3547da6b0); at root/core/cont/src/THashList.cxx:286; in TObject::~TObject (this=0x7ff3547da6b0, __in_chrg=<optimized out>); at root/core/base/src/TObject.cxx:88; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719:224,simpl,simplified,224,https://root.cern,https://github.com/root-project/root/pull/719,1,['simpl'],['simplified']
Usability,"When processing a TTree with TTreeProcessorMT, each thread creates and uses its own TTreeView (by using a TThreadedObject<TTreeView>). . Until now, in the case of interleaved execution of tasks, the second task could overwrite the first's TFile and TTree, causing crashes when the first task resumed execution. This PR modifies TTreeView so that it supports several tasks opening and using different TFiles at the same time, solving the issue described above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828:292,resume,resumed,292,https://root.cern,https://github.com/root-project/root/pull/828,1,['resume'],['resumed']
Usability,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631:615,simpl,simple,615,https://root.cern,https://github.com/root-project/root/pull/11631,1,['simpl'],['simple']
Usability,"When running eve7 application snapshot, server does not have functionality at all.; Therefore special highlight or selection requests cannot be processed.; Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3938:165,simpl,simple,165,https://root.cern,https://github.com/root-project/root/pull/3938,1,['simpl'],['simple']
Usability,"When specified, all kinds of JS scripts and ui5 files will be loaded from; URL path, which includes such version tag. Therefore when version is; changed in C++, all related scripts will be automatically reloaded. . This helps to solve browser cache problem, especially for; development phase. Normally browser heavily uses cached files, but if; one changes these files, one should explain every user that he/she must; clear the cache. With provided solution no any user intervention are; required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4063:418,clear,clear,418,https://root.cern,https://github.com/root-project/root/pull/4063,1,['clear'],['clear']
Usability,"When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/246:194,simpl,simply,194,https://root.cern,https://github.com/root-project/root/pull/246,1,['simpl'],['simply']
Usability,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8011:449,Simpl,Simple,449,https://root.cern,https://github.com/root-project/root/issues/8011,1,['Simpl'],['Simple']
Usability,"When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. ; This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:; ```; double x[] = {1.1,2.2,3.3,TMath::Infinity()};; auto h1 = new TH1D(""h1"",""h1"",10,1,0);; h1->FillN(4,x,nullptr);; h1->Draw();; ```. and it works after applying this PR, with the infinity values appearing in the overflow bin.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10187:203,simpl,simple,203,https://root.cern,https://github.com/root-project/root/pull/10187,1,['simpl'],['simple']
Usability,"When the user passes a gradient to the `ROOT::Math::Minimizer` via inheriting from the `ROOT::Math::IMultiGradFunction`, the error level is only considered correctly if `SetFunction()` is **called after** `SetErrorDef()`, which is completely unexpected. This should either be fixed, or if not possible, the minimizer should error out if you try to set the function too early. This bug is the reason why it took me so long to figure out to use the analytical gradient provided by `clad` in the minimizer for RooFit: I just couldn't understand why the uncertainties were wrong and until now thought it was because the gradient was wrong or not handled correctly by the minimizer. But in the end, it was all just this simple configuration problem. This code reproduces the issue with the example of finding the minimum of a simple parabola:; ```C++; double eval(double x) { return x * x; }. double evalDerivative(double x) {return 2 * x; }. class MyFunc : public ROOT::Math::IMultiGenFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }. private:; double DoEval(const double *x) const override { return eval(x[0]); }; };. class MyGradFunc : public ROOT::Math::IMultiGradFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }; private:; double DoEval(const double *x) const override { return eval(x[0]); }; double DoDerivative(const double *x, unsigned int /*icoord*/) const override { return evalDerivative(x[0]); }; };. template<class Func>; void minimize(Func const& func); {; std::unique_ptr<ROOT::Math::Minimizer> m{ROOT::Math::Factory::CreateMinimizer(""Minuit2"")};; m->SetPrintLevel(1);. // Set initial value, step size, and range; m->SetLimitedVariable(0, ""x"", 10, 1, -50, 50);. // The error level will be ignored in the IMultiGradFunction case without; // any warning to the user! Swapping the next two lines ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:715,simpl,simple,715,https://root.cern,https://github.com/root-project/root/issues/12338,2,['simpl'],['simple']
Usability,"When url has options before, it was not correctly released; Following code always produced memory leak:. TUrl url;; url.SetUrl(""http://server/file?arg=1&arg2=2"");; url.SetUrl(""http://server/file?arg=1&arg2=2"");. Simplify handling of options",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4908:212,Simpl,Simplify,212,https://root.cern,https://github.com/root-project/root/pull/4908,1,['Simpl'],['Simplify']
Usability,"When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3427:136,simpl,simple,136,https://root.cern,https://github.com/root-project/root/pull/3427,1,['simpl'],['simple']
Usability,"When using option ""x"" for TPrincipal::MakeHistograms(), the histogram is made with the number of bins as calculated by:; `Int_t xbins = fNumberOfDataPoints/100;`; If the number of data points is less than 100, this will try to make a histogram with 0 bins. The code still functions, as TH1 itself compensates by setting the number of bins to 1, and issuing a warning. But clearly TPrincipal could be smarter to avoid the unnecessary / unhelpful warning. The same happens for the calculation of `dbins` with the ""d"" option. Sidenote: this was a non-urgent issue I raised 7 years ago, but if no one else has been complaining, it's clearly a low priority ;-). https://sft.its.cern.ch/jira/browse/ROOT-8238. -Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12926:372,clear,clearly,372,https://root.cern,https://github.com/root-project/root/pull/12926,2,['clear'],['clearly']
Usability,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684:964,simpl,simpler,964,https://root.cern,https://github.com/root-project/root/issues/10684,1,['simpl'],['simpler']
Usability,"When using the `CONV` operator in TF1 with a different range, but re-using the same function, the new range is not used correctly. ; This code shows the problem: ; ```; auto f1 = new TF1(""f1"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",0,10);; f1->SetParameters(5,1,1,0,1); ; f1->Draw(); // this is ok; // do convolution in a different range; auto f2 = new TF1(""f2"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",10,20); ; f2->SetParameters(15,1,1,0,1);; f2->Draw(); // WRONG result because it performs convolution in 0,10 instead of 10,20; ```. This problem has been reported in https://root-forum.cern.ch/t/fitting-histograms-convolution/44973/7. A simple workaround is just to call:; ```; f2-SetRange(10,20); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8252:664,simpl,simple,664,https://root.cern,https://github.com/root-project/root/issues/8252,1,['simpl'],['simple']
Usability,"When we want to autoload contents from namespaces we end up in; Sema::LookupQualifiedName; then we issue a callback to; FindExternallyVisibleName which forwards to LookupObject. Lookup object; takes a DeclContext as an argument. This argument is always the primary; lookup context (which for a NamespaceDecl is the original namespace. Regular autoloading does not consider this (or has chosen not to) because; this reduces the amount of autoloads. Such autoloads can happen when; resolving template specializations when computing a decl's linkage by; clang's CodeGen. This in turn loads unexpected libraries such as RooFit; when trying to resolve all template specializations of __to_raw_pointer; (located in &lt;memory&gt;), including the one taking a HistFactory::Data*.; The amount of deserializations might be reduced by applying [D29951](https://reviews.llvm.org/D29951). That way we end up needlessly loading RooFit and showing it's weird; banner, potentially breaking a lot of tests. This behavior can be considered as broken because we hide information; about possible redeclarations which can affect the linkage computation or; other checks in codegen. If we fix the bug we will probably explode; ROOT's memory footprint and make the gap between standard ROOT and ROOT; with modules even bigger. Since it is not clear how much work and issue resolving is required for; standard ROOT, we can probably only live with the workaround of the missing; concept: moving entities in namespaces whose autoloading requires declarations; to be in the PCH. For instance, ROOT::Experimental::TDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337:1321,clear,clear,1321,https://root.cern,https://github.com/root-project/root/pull/1337,1,['clear'],['clear']
Usability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:234,clear,clear,234,https://root.cern,https://github.com/root-project/root/pull/14105,1,['clear'],['clear']
Usability,"While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. ; Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. ; Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2862:424,simpl,simple,424,https://root.cern,https://github.com/root-project/root/pull/2862,2,['simpl'],['simple']
Usability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:513,clear,clear,513,https://root.cern,https://github.com/root-project/root/issues/11955,1,['clear'],['clear']
Usability,"While doing some unrelated work I stumbled on an incosistency. Since the fix was so simple, I decided to go for a pr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6978:84,simpl,simple,84,https://root.cern,https://github.com/root-project/root/pull/6978,1,['simpl'],['simple']
Usability,"While many widgets will access JSROOT, try to always access JSROOT version from top server location; One cannot simply use src=""/jsrootsys/scripts/JSRoot.core.js"" while it does not work with FastCGI.; Therefore one have to use relative paths like ""../../jsrootsys/scripts/JSRoot.core.js"".; More efficiently will use browser cache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7124:112,simpl,simply,112,https://root.cern,https://github.com/root-project/root/pull/7124,1,['simpl'],['simply']
Usability,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10919:96,Simpl,Simplest,96,https://root.cern,https://github.com/root-project/root/issues/10919,1,['Simpl'],['Simplest']
Usability,Why can't compilers simply ignore these options when they don't know?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3108:20,simpl,simply,20,https://root.cern,https://github.com/root-project/root/pull/3108,1,['simpl'],['simply']
Usability,"With 16 threads, the cache is simply too small.; These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675:30,simpl,simply,30,https://root.cern,https://github.com/root-project/root/pull/2675,1,['simpl'],['simply']
Usability,With new version (1.4) of scikit-learn the bool parameters must be passed as bool and not anymore as integers. In addition in AdaBoost base_estimator was renamed to estimator. This Pull request should fix failures observed in PR builds when the new version (1.4) of scikit-learn is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14977:33,learn,learn,33,https://root.cern,https://github.com/root-project/root/pull/14977,2,['learn'],['learn']
Usability,"With the current ROOT `master` and `v626` branch, the reading of some RooFit workspaces crashes consistently. To reproduce this problem, one can try to read the [WS-Comb-STXS_toy workspace](https://gitlab.cern.ch/kran/toyws/-/blob/master/WS-Comb-STXS_toy.root) from ATLAS:. ```bash; # run this in the terminal first to not run out of stack space.; ulimit -S -s unlimited; ```. ```C++; auto f = TFile::Open(""toyws/WS-Comb-STXS_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. This crash was introduced by these two commits, that were also backported to v626:; 1. https://github.com/root-project/root/commit/79e101cdb08c39667b3012b56883932f2fa9ed11; 2. https://github.com/root-project/root/commit/a5d205a66accf3ce45d7a10958b3782690db4097. I list these two commits together, because ROOT doesn't compile at that first commit. So the second commit it the first one that compiles and crashes. The commit before these two, 819b4e321, is still OK. If it would help to produce a simpler reproducer workspace, I'm glad to help out by trying to build one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282:983,simpl,simpler,983,https://root.cern,https://github.com/root-project/root/issues/10282,1,['simpl'],['simpler']
Usability,"With the latest refactorings, MakeColumnReaders does not actually; create the column readers but simply gets them from RLoopManager or RColumnRegister.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11306:97,simpl,simply,97,https://root.cern,https://github.com/root-project/root/pull/11306,1,['simpl'],['simply']
Usability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:83,Simpl,SimpleCompiler,83,https://root.cern,https://github.com/root-project/root/pull/11945,2,['Simpl'],['SimpleCompiler']
Usability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:83,Simpl,SimpleCompiler,83,https://root.cern,https://github.com/root-project/root/pull/12096,2,['Simpl'],['SimpleCompiler']
Usability,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:74,learn,learn,74,https://root.cern,https://github.com/root-project/root/pull/11517,1,['learn'],['learn']
Usability,With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. ; The new added operators are: ; - Slice; - Squeeze/Unsqueeze,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9369:29,simpl,simple,29,https://root.cern,https://github.com/root-project/root/pull/9369,1,['simpl'],['simple']
Usability,"With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8451:327,guid,guide,327,https://root.cern,https://github.com/root-project/root/pull/8451,2,['guid'],['guide']
Usability,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5714:28,simpl,simplifying,28,https://root.cern,https://github.com/root-project/root/pull/5714,1,['simpl'],['simplifying']
Usability,"Work in progress to fully generalize gradient interfaces, in order to allow vectorization and parallelization of the fitting methods that make use of them. The implementation of Chi2 gradient has been parallelized and vectorized: these new implementations are unit tested and benchmarked against the simple scalar serial case. To do: test the general use case, where the user simply calls the fitting method specifying that the gradient should be used. Early reviews are more than welcome!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793:300,simpl,simple,300,https://root.cern,https://github.com/root-project/root/pull/793,2,['simpl'],"['simple', 'simply']"
Usability,"Wrap owning pointers in the RooFit tutorials in `std::unique_ptr`. This has three benefits:. 1. Less memory leaks in tutorials (`delete` was almost never done); 2. Tutorials would also run if the `RooFit::OwningPtr` were to be defined at `std::unique_ptr`, which is useful for debug builds; 3. Users learn about automatic memory management correctly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12927:300,learn,learn,300,https://root.cern,https://github.com/root-project/root/pull/12927,1,['learn'],['learn']
Usability,"[ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. ; If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. ; It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`.; . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ); ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) ; ; ## Setup. 1. ROOT version 6.22-6.23; 2. Operating system lxplus ; 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context; <!--; Add any other context about the problem here.; -->; It could have something common with [issue#6370](https://github.com/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552:388,clear,clear,388,https://root.cern,https://github.com/root-project/root/issues/6552,2,['clear'],['clear']
Usability,[CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183:31,learn,learn,31,https://root.cern,https://github.com/root-project/root/pull/15183,2,['learn'],['learn']
Usability,[CMake] Simplify build configuration with Python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15401,1,['Simpl'],['Simplify']
Usability,[CMake] Simplify search for X11 components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/16008,1,['Simpl'],['Simplify']
Usability,[Cling] Simplify std::tuple value printer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/13619,1,['Simpl'],['Simplify']
Usability,[Cling][Backport] Simplify tuple value printer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:18,Simpl,Simplify,18,https://root.cern,https://github.com/root-project/root/pull/13887,1,['Simpl'],['Simplify']
Usability,[Core] 1MB less RSS at root startup with simple optimisations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3383:41,simpl,simple,41,https://root.cern,https://github.com/root-project/root/pull/3383,2,['simpl'],['simple']
Usability,[Core] Attempt to make TThreadExecutor usable even if (build option) IMT=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:39,usab,usable,39,https://root.cern,https://github.com/root-project/root/pull/6298,2,['usab'],['usable']
Usability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296:274,simpl,simplify,274,https://root.cern,https://github.com/root-project/root/pull/16296,1,['simpl'],['simplify']
Usability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:439,simpl,simplify,439,https://root.cern,https://github.com/root-project/root/pull/16814,1,['simpl'],['simplify']
Usability,"[DF] Add a missing include, make some code slightly clearer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9190:52,clear,clearer,52,https://root.cern,https://github.com/root-project/root/pull/9190,2,['clear'],['clearer']
Usability,[DF] Add two simple tutorials in C++ and Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8990:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/pull/8990,2,['simpl'],['simple']
Usability,[DF] Improve progress bar finalization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13855:13,progress bar,progress bar,13,https://root.cern,https://github.com/root-project/root/pull/13855,2,['progress bar'],['progress bar']
Usability,[DF] Make API clearer w.r.t. what can/cannot be null,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11471:14,clear,clearer,14,https://root.cern,https://github.com/root-project/root/pull/11471,2,['clear'],['clearer']
Usability,[DF] Section of RDF reference guide about RDF+RVec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7086:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/issues/7086,2,['guid'],['guide']
Usability,[DF] Simplification/refactoring of dataframe_regression gtests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6550:5,Simpl,Simplification,5,https://root.cern,https://github.com/root-project/root/pull/6550,1,['Simpl'],['Simplification']
Usability,[DF] Simplify BoolArray helper class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7484:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/7484,1,['Simpl'],['Simplify']
Usability,[DF] Simplify EXPECT_EQ call,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10723:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10723,1,['Simpl'],['Simplify']
Usability,[DF] Simplify MakeColumnReaders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9275:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/9275,1,['Simpl'],['Simplify']
Usability,[DF] Simplify RTreeColumnReader destructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16158:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/16158,1,['Simpl'],['Simplify']
Usability,[DF] Simplify adding friend info in distributed task,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10244:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10244,1,['Simpl'],['Simplify']
Usability,[DF] Simplify column reader ownership model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11314:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/11314,1,['Simpl'],['Simplify']
Usability,"[DF] Simplify df003_profiles.{C,py}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11087:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/11087,1,['Simpl'],['Simplify']
Usability,[DF] Simplify friend trees creation in RLoopManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12262:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/12262,1,['Simpl'],['Simplify']
Usability,[DF] Simplify internals now that lifetimes are simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2536:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/2536,3,"['Simpl', 'simpl']","['Simplify', 'simpler']"
Usability,[DF] Simplify logic now that lifetimes are simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2594:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/2594,3,"['Simpl', 'simpl']","['Simplify', 'simpler']"
Usability,[DF] Simplify reading of RDataSource columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/6208,1,['Simpl'],['Simplify']
Usability,[DF] Simplify reg-/deregistration with RLoopManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10653,1,['Simpl'],['Simplify']
Usability,[DF] Trigger the creation of notebooks for RDF simple tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9002:47,simpl,simple,47,https://root.cern,https://github.com/root-project/root/pull/9002,2,['simpl'],['simple']
Usability,[DF] Use auto instead of auto* when it's clear type is a pointer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2126:41,clear,clear,41,https://root.cern,https://github.com/root-project/root/pull/2126,2,['clear'],['clear']
Usability,[DF] User-friendly error in case of Fill signature mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895:5,User-friendly,User-friendly,5,https://root.cern,https://github.com/root-project/root/pull/9895,1,['User-friendly'],['User-friendly']
Usability,[DF][DOC] Small amendments to user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2105:35,guid,guide,35,https://root.cern,https://github.com/root-project/root/pull/2105,4,['guid'],['guide']
Usability,[DF][NFC] Change RDF reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9606:31,guid,guide,31,https://root.cern,https://github.com/root-project/root/pull/9606,2,['guid'],['guide']
Usability,[DF][NFC] Fix error in user guide image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6032:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/pull/6032,2,['guid'],['guide']
Usability,[DF][NFC] Mention conversion to RNode in user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2974:46,guid,guide,46,https://root.cern,https://github.com/root-project/root/pull/2974,2,['guid'],['guide']
Usability,[DF][NFC] Simplify BoolArray helper class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7487:10,Simpl,Simplify,10,https://root.cern,https://github.com/root-project/root/pull/7487,1,['Simpl'],['Simplify']
Usability,[DF][ntuple] simplify RNTupleDS construction with new fields iterator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5910:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/5910,2,['simpl'],['simplify']
Usability,[DF][skip-ci] Minor updates to RDF user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7797:40,guid,guide,40,https://root.cern,https://github.com/root-project/root/pull/7797,2,['guid'],['guide']
Usability,[DF][skip-ci] Revise user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7388:26,guid,guide,26,https://root.cern,https://github.com/root-project/root/pull/7388,2,['guid'],['guide']
Usability,[DOC] Fix Alias example usage in TDF user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1542:42,guid,guide,42,https://root.cern,https://github.com/root-project/root/pull/1542,2,['guid'],['guide']
Usability,[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671:35,Clear,ClearProxiedObjects,35,https://root.cern,https://github.com/root-project/root/pull/16671,1,['Clear'],['ClearProxiedObjects']
Usability,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391:67,Guid,Guide,67,https://root.cern,https://github.com/root-project/root/pull/391,1,['Guid'],['Guide']
Usability,[Doc] Resolving grammatical errors and spellings in user-guides,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3816:57,guid,guides,57,https://root.cern,https://github.com/root-project/root/pull/3816,2,['guid'],['guides']
Usability,[Exp PyROOT][ROOT-10395] Clear PyErr after getting __cpp_name__,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4623:25,Clear,Clear,25,https://root.cern,https://github.com/root-project/root/pull/4623,1,['Clear'],['Clear']
Usability,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11180:75,simpl,simple,75,https://root.cern,https://github.com/root-project/root/pull/11180,2,['simpl'],['simple']
Usability,[NFC][CONTRIBUTING] Extend contribution guidelines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410:40,guid,guidelines,40,https://root.cern,https://github.com/root-project/root/pull/14410,2,['guid'],['guidelines']
Usability,[NFC][TMVA] Users guide -- update instructions for randomised trees,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3256:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/3256,2,['guid'],['guide']
Usability,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13744:26,pause,pause,26,https://root.cern,https://github.com/root-project/root/issues/13744,2,['pause'],['pause']
Usability,[PyROOT] Simplify lookup logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5187:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/5187,1,['Simpl'],['Simplify']
Usability,[RDF] Add progress bar + event statistics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675:10,progress bar,progress bar,10,https://root.cern,https://github.com/root-project/root/pull/8675,2,['progress bar'],['progress bar']
Usability,"[RDF] Re-enable all of dataframe_{cache,simple,interface}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:40,simpl,simple,40,https://root.cern,https://github.com/root-project/root/pull/2066,2,['simpl'],['simple']
Usability,"[RDF] Re-enable dataframe_{interface,simple}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2083:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/pull/2083,2,['simpl'],['simple']
Usability,[RDataFrame] Inaccurate example of progress bar from documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:35,progress bar,progress bar,35,https://root.cern,https://github.com/root-project/root/issues/15040,2,['progress bar'],['progress bar']
Usability,"[RDrawable] change drawable identifier logic, simplify painting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4469:46,simpl,simplify,46,https://root.cern,https://github.com/root-project/root/pull/4469,2,['simpl'],['simplify']
Usability,"[README] Remove link to removed ""Bug reporting guidelines"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6834:47,guid,guidelines,47,https://root.cern,https://github.com/root-project/root/pull/6834,2,['guid'],['guidelines']
Usability,"[RF-8932] When a RooCurve is plotted as a filled polygon, one point has; to be added at the lower left of the plot to close the polygon.; A few lines of code have been cleaned up and simplified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4759:183,simpl,simplified,183,https://root.cern,https://github.com/root-project/root/pull/4759,1,['simpl'],['simplified']
Usability,"[RF-8932] When a RooCurve is plotted as a filled polygon, one point has; to be added at the lower left of the plot to close the polygon.; A few lines of code have been cleaned up and simplified. See also here:; https://root-forum.cern.ch/t/odd-behaviour-using-drawoption-f/19104. https://root-forum.cern.ch/t/plotting-issue-with-multiple-filled-pdfs-using-addto/25746",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4760:183,simpl,simplified,183,https://root.cern,https://github.com/root-project/root/pull/4760,1,['simpl'],['simplified']
Usability,[RF] Add function to clear Minuit status history in RooMinimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13610:21,clear,clear,21,https://root.cern,https://github.com/root-project/root/pull/13610,2,['clear'],['clear']
Usability,[RF] Avoid clearing full RunContext after each NLL evaluation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344:11,clear,clearing,11,https://root.cern,https://github.com/root-project/root/pull/7344,2,['clear'],['clearing']
Usability,[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:70,Progress bar,Progress bar,70,https://root.cern,https://github.com/root-project/root/issues/9489,1,['Progress bar'],['Progress bar']
Usability,[RF] Change buffer management in BatchMode such that queues get cleared,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:64,clear,cleared,64,https://root.cern,https://github.com/root-project/root/pull/10736,2,['clear'],['cleared']
Usability,[RF] Clear out `RooFit.h` header with outdated compiler fix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10231:5,Clear,Clear,5,https://root.cern,https://github.com/root-project/root/pull/10231,1,['Clear'],['Clear']
Usability,[RF] Clearly mark `RooFit::CloneData()` as deprecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12330:5,Clear,Clearly,5,https://root.cern,https://github.com/root-project/root/pull/12330,1,['Clear'],['Clearly']
Usability,[RF] Documentation and usability improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7997:23,usab,usability,23,https://root.cern,https://github.com/root-project/root/pull/7997,2,['usab'],['usability']
Usability,[RF] Improve some documentation and usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8070:36,usab,usability,36,https://root.cern,https://github.com/root-project/root/pull/8070,2,['usab'],['usability']
Usability,[RF] Make Offset(“bin”) usable for CLs method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15959:24,usab,usable,24,https://root.cern,https://github.com/root-project/root/issues/15959,2,['usab'],['usable']
Usability,[RF] Refactor RooFitHS3 to solve various bugs and improve usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482:58,usab,usability,58,https://root.cern,https://github.com/root-project/root/pull/9482,2,['usab'],['usability']
Usability,[RF] Simplify HistFactory models,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/8167,1,['Simpl'],['Simplify']
Usability,[RF] Speed improvement and a little usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6090:36,usab,usability,36,https://root.cern,https://github.com/root-project/root/pull/6090,2,['usab'],['usability']
Usability,[RF] Usability improvements for RooArgSet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6323:5,Usab,Usability,5,https://root.cern,https://github.com/root-project/root/pull/6323,1,['Usab'],['Usability']
Usability,[RF] remove RooGradMinimizerFcn and simplify RooMinimizer configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:36,simpl,simplify,36,https://root.cern,https://github.com/root-project/root/pull/11716,2,['simpl'],['simplify']
Usability,[RF][HF] Clearly mark interpolation code 3 as unknown,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:9,Clear,Clearly,9,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Clear'],['Clearly']
Usability,"[ROOT-10093] When generating events with simultaneous PDFs that contain; further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3738:172,usab,usable,172,https://root.cern,https://github.com/root-project/root/pull/3738,1,['usab'],['usable']
Usability,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/5412,2,['simpl'],"['simple', 'simply']"
Usability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:650,clear,clearer,650,https://root.cern,https://github.com/root-project/root/pull/5062,1,['clear'],['clearer']
Usability,[ROOT-10802] We need a clear explanation of cycle numbers in our docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584:23,clear,clear,23,https://root.cern,https://github.com/root-project/root/issues/14584,2,['clear'],['clear']
Usability,[ROOT-130] Update Minuit2 User Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551:31,Guid,Guide,31,https://root.cern,https://github.com/root-project/root/issues/14551,1,['Guid'],['Guide']
Usability,"[R] #undef Free, simply because. And ROOT-9258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3053:17,simpl,simply,17,https://root.cern,https://github.com/root-project/root/pull/3053,2,['simpl'],['simply']
Usability,"[SaveGraph](https://root.cern/doc/master/namespaceROOT_1_1RDF.html#ac06a36e745255fb8744b1e0a563074c9) would benefit from the following improvements:. - [x] usage of static variables should be removed, in order to make `SaveGraph` safe to be called concurrently from multiple threads; - [x] a tutorial should be added, and an example usage should be included in the docs in the reference guide. ### Additional context; <!--; Add any other context about the problem here.; -->. Related old jira tickets:; - https://sft.its.cern.ch/jira/browse/ROOT-11023 (this is the original issue regarding the usage of statics in the implementation of SaveGraph); - https://sft.its.cern.ch/jira/browse/ROOT-9721 (this contains a draft tutorial and an old SaveGraph bug report)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9145:387,guid,guide,387,https://root.cern,https://github.com/root-project/root/issues/9145,1,['guid'],['guide']
Usability,[TCanvas] How to set the size for Canvas to show more histograms clearly when using THttpServer?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10657:65,clear,clearly,65,https://root.cern,https://github.com/root-project/root/issues/10657,2,['clear'],['clearly']
Usability,[TDF] Add ranges to user guide + a little bit of code formatting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/449:25,guid,guide,25,https://root.cern,https://github.com/root-project/root/pull/449,2,['guid'],['guide']
Usability,[TDF] Clear TTreeReaderValues before exiting TBB tasks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:6,Clear,Clear,6,https://root.cern,https://github.com/root-project/root/pull/837,1,['Clear'],['Clear']
Usability,[TDF] Simplify action creation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:6,Simpl,Simplify,6,https://root.cern,https://github.com/root-project/root/pull/348,1,['Simpl'],['Simplify']
Usability,"[TDF] Simplify logic, reduce instructions in column value reading",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060:6,Simpl,Simplify,6,https://root.cern,https://github.com/root-project/root/pull/1060,1,['Simpl'],['Simplify']
Usability,[TDF] Update user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/418:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/418,4,['guid'],['guide']
Usability,"[TDF][TO REVERT] Disable dataframe_{interface,simple} tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1906:46,simpl,simple,46,https://root.cern,https://github.com/root-project/root/pull/1906,2,['simpl'],['simple']
Usability,[TGL] Add scaling factor for TGLViewer axis guides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10573:44,guid,guides,44,https://root.cern,https://github.com/root-project/root/pull/10573,2,['guid'],['guides']
Usability,"[TMVA] API-Support for SGD Optimizer:; * Add Base Class VOptimizer.; * Add Derived Class TSGD with Momentum implementation.; * Add Unit Tests for SGD Optimizer.; * Modify the MethodDL Tests to include parsing options for Optimizer. An example Training Strategy string may look like,. ```; ""LearningRate=1e-1,Optimizer=SGD,Momentum=0.9,Repetitions=1,""; ""ConvergenceSteps=20,BatchSize=256,TestRepetitions=10,""; ""WeightDecay=1e-4,Regularization=L2,""; ""DropConfig=0.0+0.5+0.5+0.5, Multithreading=True""; ```. Reference Implementation: Tensorflow; Blog Post: https://www.sravikiran.com/GSOC18//2018/07/09/sgd/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309:290,Learn,LearningRate,290,https://root.cern,https://github.com/root-project/root/pull/2309,1,['Learn'],['LearningRate']
Usability,[TMVA] Enhance usability of CVResults and Envelope interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:15,usab,usability,15,https://root.cern,https://github.com/root-project/root/pull/1694,2,['usab'],['usability']
Usability,[TMVA] Fix evaluation of regression events for TMVA Deep Learning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8960:57,Learn,Learning,57,https://root.cern,https://github.com/root-project/root/pull/8960,1,['Learn'],['Learning']
Usability,[TMVA] Optimizer choice simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3414:24,simpl,simplification,24,https://root.cern,https://github.com/root-project/root/pull/3414,2,['simpl'],['simplification']
Usability,[TMVA] Optimizer choice simplification (Update of #3414),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:24,simpl,simplification,24,https://root.cern,https://github.com/root-project/root/pull/3493,2,['simpl'],['simplification']
Usability,[TMVA] Update User's Guide authors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2399:21,Guid,Guide,21,https://root.cern,https://github.com/root-project/root/pull/2399,1,['Guid'],['Guide']
Usability,"[This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp; auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());; const RFieldBase *rvecf = r->GetModel()->GetField(""v"");; // ERROR: GenerateValue is non-const, rvecf is a const pointer; auto rvecv = rvecf->GenerateValue();; ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();; ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408:665,simpl,simple,665,https://root.cern,https://github.com/root-project/root/issues/10408,1,['simpl'],['simple']
Usability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:825,clear,clear,825,https://root.cern,https://github.com/root-project/root/issues/9335,2,['clear'],['clear']
Usability,[VecOps] Interaction between memory adoption and `clear` yields wrong results,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6796:50,clear,clear,50,https://root.cern,https://github.com/root-project/root/issues/6796,2,['clear'],['clear']
Usability,[Web Graphics] Two failures with one simple PyROOT plotter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/issues/15474,2,['simpl'],['simple']
Usability,[bugfix] Update SimplexBuilder.cxx to fix #6775,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10492:16,Simpl,SimplexBuilder,16,https://root.cern,https://github.com/root-project/root/pull/10492,1,['Simpl'],['SimplexBuilder']
Usability,[ci] Simplify clang-format options for compatibility with older versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14741:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/14741,1,['Simpl'],['Simplify']
Usability,[cling] Set up TargetMachine for JITLink and simplify its creation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12218:45,simpl,simplify,45,https://root.cern,https://github.com/root-project/root/pull/12218,2,['simpl'],['simplify']
Usability,[cling] Simplify mangling by using mangleAndIntern,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15914:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15914,1,['Simpl'],['Simplify']
Usability,[cling] Simplify symbol overrides and `addOrReplaceDefinition`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15966:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15966,1,['Simpl'],['Simplify']
Usability,[cling] Undocumented behaviour of root macro_C.so,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14772:8,Undo,Undocumented,8,https://root.cern,https://github.com/root-project/root/issues/14772,1,['Undo'],['Undocumented']
Usability,[cling] Use deduction guides for llvm::ArrayRef,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14219:22,guid,guides,22,https://root.cern,https://github.com/root-project/root/issues/14219,4,['guid'],['guides']
Usability,[cling] crash / compilation exception after undo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178:44,undo,undo,44,https://root.cern,https://github.com/root-project/root/issues/10178,2,['undo'],['undo']
Usability,[clingutils] simplify TMetaUtils::GetCppName,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7463:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/7463,2,['simpl'],['simplify']
Usability,[cmake] Xcode 14 warns about `-undefined dynamic_lookup`; simply suppress,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11691:58,simpl,simply,58,https://root.cern,https://github.com/root-project/root/pull/11691,2,['simpl'],['simply']
Usability,[cmake] simplify copies of misc files into build directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9834:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/9834,2,['simpl'],['simplify']
Usability,[cmake] simplify include dirs handling in ROOT_GENERATE_DICTIONARY,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5573:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/5573,2,['simpl'],['simplify']
Usability,[core] 1 missing Undo revert Classdef version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021:17,Undo,Undo,17,https://root.cern,https://github.com/root-project/root/pull/15021,1,['Undo'],['Undo']
Usability,[core] Simplify typedef of `[U]Long64_t`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16040:7,Simpl,Simplify,7,https://root.cern,https://github.com/root-project/root/pull/16040,1,['Simpl'],['Simplify']
Usability,[cxxmodules] Simplify LoadPCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715:13,Simpl,Simplify,13,https://root.cern,https://github.com/root-project/root/pull/3715,1,['Simpl'],['Simplify']
Usability,[cxxmodules] Simplify and use more meaningful variable names. NFC.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4155:13,Simpl,Simplify,13,https://root.cern,https://github.com/root-project/root/pull/4155,1,['Simpl'],['Simplify']
Usability,[df] Avoid lock to check simple typeids,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:25,simpl,simple,25,https://root.cern,https://github.com/root-project/root/pull/16528,2,['simpl'],['simple']
Usability,[doc] CMake flag for building Doxygen reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:48,guid,guide,48,https://root.cern,https://github.com/root-project/root/issues/8950,2,['guid'],['guide']
Usability,[histv7] Simplify class structure:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5986:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/5986,1,['Simpl'],['Simplify']
Usability,[math] Add virtual HasGradient() to ROOT::Math function base classes and simplify them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257:73,simpl,simplify,73,https://root.cern,https://github.com/root-project/root/pull/12257,2,['simpl'],['simplify']
Usability,[math] remove unused param from SimplexSeedGenerator::operator(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15981:32,Simpl,SimplexSeedGenerator,32,https://root.cern,https://github.com/root-project/root/pull/15981,1,['Simpl'],['SimplexSeedGenerator']
Usability,[ntuple] Simplifications for concrete page storage classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4247:9,Simpl,Simplifications,9,https://root.cern,https://github.com/root-project/root/pull/4247,1,['Simpl'],['Simplifications']
Usability,[ntuple] Simplify RPageSourceFriends::LoadClusters() implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9148:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/9148,1,['Simpl'],['Simplify']
Usability,[ntuple] Simplify `RPageSourceDaos::LoadClusters()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/13381,1,['Simpl'],['Simplify']
Usability,[ntuple] Speed up reading/writing of simple vectors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13590:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/pull/13590,2,['simpl'],['simple']
Usability,[ntuple] WIP simplify offset column indexing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5714:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/5714,2,['simpl'],['simplify']
Usability,[ntuple] remove parameter from simple SealPage overload,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15849:31,simpl,simple,31,https://root.cern,https://github.com/root-project/root/pull/15849,2,['simpl'],['simple']
Usability,[ntuple] simplify REntry implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14756:9,simpl,simplify,9,https://root.cern,https://github.com/root-project/root/pull/14756,2,['simpl'],['simplify']
Usability,[r] Rename R Users Guide file to have less spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5678:19,Guid,Guide,19,https://root.cern,https://github.com/root-project/root/pull/5678,1,['Guid'],['Guide']
Usability,[rootcling] Deep is always set to false. Simplify. NFC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4235:41,Simpl,Simplify,41,https://root.cern,https://github.com/root-project/root/pull/4235,1,['Simpl'],['Simplify']
Usability,[rootcling] Remove unused code. Simplify.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4198:32,Simpl,Simplify,32,https://root.cern,https://github.com/root-project/root/pull/4198,1,['Simpl'],['Simplify']
Usability,[rootcling] Simplify pch generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4168:12,Simpl,Simplify,12,https://root.cern,https://github.com/root-project/root/pull/4168,1,['Simpl'],['Simplify']
Usability,[rootcling]Simplify dictionary stream splitting logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5345:11,Simpl,Simplify,11,https://root.cern,https://github.com/root-project/root/pull/5345,1,['Simpl'],['Simplify']
Usability,[skip ci][ci] Simplify root 626 yml and run 6.26/8 nightlies every other day,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15568:14,Simpl,Simplify,14,https://root.cern,https://github.com/root-project/root/pull/15568,1,['Simpl'],['Simplify']
Usability,[skip-CI][DF][NFC] Mention AsRNode in the progress bar documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15041:42,progress bar,progress bar,42,https://root.cern,https://github.com/root-project/root/pull/15041,2,['progress bar'],['progress bar']
Usability,[skip-CI][ci] Simplify yml files configuring nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14882:14,Simpl,Simplify,14,https://root.cern,https://github.com/root-project/root/pull/14882,1,['Simpl'],['Simplify']
Usability,[skip-ci] Add a warning on the User's Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10888:38,Guid,Guide,38,https://root.cern,https://github.com/root-project/root/pull/10888,1,['Guid'],['Guide']
Usability,[skip-ci] Import the old user's guide into the reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9059:32,guid,guide,32,https://root.cern,https://github.com/root-project/root/pull/9059,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,[skip-ci] Simplify distrdf relnotes for v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9527:10,Simpl,Simplify,10,https://root.cern,https://github.com/root-project/root/pull/9527,1,['Simpl'],['Simplify']
Usability,[skip-ci] fix ref guide build for non master branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12382:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/12382,2,['guid'],['guide']
Usability,[skip-ci] improve the cleanup after the ref guide build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9076:44,guid,guide,44,https://root.cern,https://github.com/root-project/root/pull/9076,2,['guid'],['guide']
Usability,[skip-ci] remove reference to the old user's guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9063:45,guid,guide,45,https://root.cern,https://github.com/root-project/root/pull/9063,2,['guid'],['guide']
Usability,[skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6068:91,guid,guide,91,https://root.cern,https://github.com/root-project/root/pull/6068,1,['guid'],['guide']
Usability,[skip-ci]; In notebook this script generates:; ```; Error in <TXMLEngine::ParseFile>: Unexpected end of xml file; ```; This patch deactivate the notebook generation as this error seems to be the last one preventing to have; the ref guide build green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10483:232,guid,guide,232,https://root.cern,https://github.com/root-project/root/pull/10483,1,['guid'],['guide']
Usability,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13148:43,simpl,simplify,43,https://root.cern,https://github.com/root-project/root/pull/13148,2,['simpl'],['simplify']
Usability,[skip-ci][ci][docu] Generate ref guide with Makefile and Github Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15769:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/pull/15769,2,['guid'],['guide']
Usability,[skip=-ci] \ was not displayed in ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11184:38,guid,guide,38,https://root.cern,https://github.com/root-project/root/pull/11184,2,['guid'],['guide']
Usability,[tcling] Use more variables to denote clearly the state and intent.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:38,clear,clearly,38,https://root.cern,https://github.com/root-project/root/pull/3896,2,['clear'],['clearly']
Usability,[textinput] Clear the terminal screen on Ctrl+L,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10078:12,Clear,Clear,12,https://root.cern,https://github.com/root-project/root/pull/10078,1,['Clear'],['Clear']
Usability,[textinput] Clear undo buffer after taking an input line,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:12,Clear,Clear,12,https://root.cern,https://github.com/root-project/root/pull/10192,3,"['Clear', 'undo']","['Clear', 'undo']"
Usability,[textinput] Undo buffer misses one entry in the actual sequence,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10182:12,Undo,Undo,12,https://root.cern,https://github.com/root-project/root/issues/10182,1,['Undo'],['Undo']
Usability,[textinput] segmentation violation on Undo shortcut,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10180:38,Undo,Undo,38,https://root.cern,https://github.com/root-project/root/issues/10180,1,['Undo'],['Undo']
Usability,[tmva][pymva] Changes for new version (1.4) of scikit-learn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14977:54,learn,learn,54,https://root.cern,https://github.com/root-project/root/pull/14977,2,['learn'],['learn']
Usability,[treereader] Clearer error message in SetEntriesRange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705:13,Clear,Clearer,13,https://root.cern,https://github.com/root-project/root/pull/10705,1,['Clear'],['Clearer']
Usability,[tutorials] Simplify TMVA_SOFIE_RDataFrame.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11458:12,Simpl,Simplify,12,https://root.cern,https://github.com/root-project/root/pull/11458,1,['Simpl'],['Simplify']
Usability,[v6-32-00-patches] [skip-ci] improve labeling in candle plot examples. | Fix warnings in timeaxis3.C | Simplify timeonaxis.C and make the year labels clearer | simplify timeonaxis examples. | Remove an unused variable and use exact dates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:103,Simpl,Simplify,103,https://root.cern,https://github.com/root-project/root/pull/15674,5,"['Simpl', 'clear', 'simpl']","['Simplify', 'clearer', 'simplify']"
Usability,[v626][cmake] Xcode 14 warns about `-undefined dynamic_lookup`; simply suppress:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693:64,simpl,simply,64,https://root.cern,https://github.com/root-project/root/pull/11693,2,['simpl'],['simply']
Usability,[v628][CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15237:37,learn,learn,37,https://root.cern,https://github.com/root-project/root/pull/15237,2,['learn'],['learn']
Usability,[v630][CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15238:37,learn,learn,37,https://root.cern,https://github.com/root-project/root/pull/15238,2,['learn'],['learn']
Usability,[webcanv] Clearly indicate error in the canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16424:10,Clear,Clearly,10,https://root.cern,https://github.com/root-project/root/pull/16424,1,['Clear'],['Clearly']
Usability,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:22,Clear,ClearOnClose,22,https://root.cern,https://github.com/root-project/root/pull/12463,1,['Clear'],['ClearOnClose']
Usability,"[webgui] adoption of jsroot v6, improve usability with ROOT6 classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6739:40,usab,usability,40,https://root.cern,https://github.com/root-project/root/pull/6739,2,['usab'],['usability']
Usability,[webgui] introduce simple RWebWindow tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4022:19,simpl,simple,19,https://root.cern,https://github.com/root-project/root/pull/4022,2,['simpl'],['simple']
Usability,"[wincxxmodules] Simplify includes, Expose M_PI for Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6309:16,Simpl,Simplify,16,https://root.cern,https://github.com/root-project/root/pull/6309,1,['Simpl'],['Simplify']
Usability,"_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value of the variables at the line in question (null ptrs).; > ; > I would greatly appreciate some guidance or direct help in further debugging this situation. At this point, I'm not sure whether art is using ROOT poorly, or if this is a different issue. Please let me know if it would work best to meet via Zoom.; > ; > Thanks very much,; > Kyle; > ; >",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:8585,guid,guidance,8585,https://root.cern,https://github.com/root-project/root/issues/6939,1,['guid'],['guidance']
Usability,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597:2174,simpl,simply,2174,https://root.cern,https://github.com/root-project/root/pull/11597,1,['simpl'],['simply']
Usability,"` of an RDF complex type column gives the following error:; ```bash; Column type: _Complex double; <cppyy.gbl.ROOT.RDF.RResultPtr<vector<_Complex double> > object at 0x7fc929ee8430>; Error pythonizing class std::vector<_Complex double>:; Traceback (most recent call last):; File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y""; data_frame_rnode = cppyy.gbl.ROOT.RDF.AsRNode(data_frame_xy); column_type = data_frame_rnode.GetColumnType(column); print(""Column type:"", column_type); result_ptrs = data_frame_rnode.Take[column_type](column); cpp_reference = result_ptrs.GetValue(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. locally built ROOT-master from 21.04.20222. ; ```bash;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:1453,clear,clear,1453,https://root.cern,https://github.com/root-project/root/issues/10522,1,['clear'],['clear']
Usability,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12376:2829,usab,usable,2829,https://root.cern,https://github.com/root-project/root/pull/12376,1,['usab'],['usable']
Usability,"`Nonzero` simply goes through the input vector and checks whether an element is zero or not. The time complexity is `O(N)`. `Intersect` goes through the vector `v1` and searches each element in the vector `v2`. The approach is sorting `v2` first and loop trivially over `v1`. The resulting time complexity is `O(N1*log(N2))`. A common use-case is shown below:. ```cpp; using namespace ROOT::VecOps;. // user data, e.g., in NanoAOD format; RVec<int> Muon_charge = {1, -1, 1};; RVec<float> Muon_pt = {20.0, 30.0, 10.0};; RVec<float> Muon_eta = {1.0, -2.0, 0.5};. // make first selection based on Muon charge; auto idx_mask = Nonzero(Muon_charge>0);. // get indices that sort Muon pt with descending values and pass the previous selection; auto idx_sorted = Reverse(Argsort(Muon_pt));; auto idx_selection = Intersect(idx_sorted, idx_mask);. // get Muon eta of positive Muons sorted by pt; auto values = Take(Muon_eta, idx_selection);; // Returns: { 1, 0.5 }; ```. This scenario is very common in processing of NanoAOD files. The naming matches the numpy API with [`numpy.nonzero`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.nonzero.html) and [`numpy.intersect1d`](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.intersect1d.html). **TODO:**. - [x] Write a tutorial when we agreed on the functionality.; - [x] Change the API for `Sorted` and `Reversed` to `Sort` and `Reverse` before merging this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2620:10,simpl,simply,10,https://root.cern,https://github.com/root-project/root/pull/2620,1,['simpl'],['simply']
Usability,"`RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }; const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8373:297,Simpl,Simplify,297,https://root.cern,https://github.com/root-project/root/pull/8373,1,['Simpl'],['Simplify']
Usability,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6310:184,simpl,simplifies,184,https://root.cern,https://github.com/root-project/root/pull/6310,1,['simpl'],['simplifies']
Usability,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7395:343,simpl,simple,343,https://root.cern,https://github.com/root-project/root/issues/7395,1,['simpl'],['simple']
Usability,"``""_typename""`` was always first member in JSON object.; Therefore every next member add to object was separated with ``"",""`` - very simple.; Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3215:133,simpl,simple,133,https://root.cern,https://github.com/root-project/root/pull/3215,2,['simpl'],['simple']
Usability,`can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:70,Simpl,SimpleCollectionProxy,70,https://root.cern,https://github.com/root-project/root/issues/13568,1,['Simpl'],['SimpleCollectionProxy']
Usability,"`clang-format` will not be happy with the very long lines in the user guide, but on the other hand markdown only accepts table rows on a single line, so I think this case calls for an exception.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/479:70,guid,guide,70,https://root.cern,https://github.com/root-project/root/pull/479,1,['guid'],['guide']
Usability,"`from ROOT import *` leads to a segmentation violation when used with Python 3.6. One could try fixing it instead of disabling it but the code which is used to install the lookup handler in the module `RootModule::SetRootLazyLookup` depends on internal CPython implementation details of the dict class which are not part of the public API. As a consequence keeping this alive will lead to very; fragile code, require continuous effort to adapt to internal changes and cause a lot of #ifdef handling. (as a matter of fact, Python 3.7 would probably already require new changes to this code already). . Also there's a statement in the bug report that `from ROOT import *` is broken in Python 3 so I don't understand why it's not disabled as it will only confuse users: https://sft.its.cern.ch/jira/browse/ROOT-8931. As such I would propose to instead have a clear error message that `from ROOT import *` does not work. This pr adds an `ImportError` which is easy to handle but cannot be just ignored by the user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/825:856,clear,clear,856,https://root.cern,https://github.com/root-project/root/pull/825,1,['clear'],['clear']
Usability,"`gInterpreter::ProcessLine` has an important run-time cost.; Instead of calling it everytime the jitting of an action is required, we now store all the strings that are to jit in TLoopManager and do a single call to `gInterpreter::ProcessLine` before running the event-loop. A couple of life-time issues had to be resolved for this to work properly: in order to let result proxies and action helpers share ownership of the result object, I introduced (simple) manual lifetime management of a shared_ptr (weird, I know). In order to deal with deferred jitting of an action that hangs from a node whose `TInterface` has already been destroyed (can happen due to the deferral of jitting) all `BuildAndBook` functions have been made independent of `TInterface`. In the long term it might be possible to refactor the jitting mechanism so that the `TAction` (and the `TTreeReaderValue/Array`s that it contains) is jitted but the action helpers are not, lifting the requirement of manual lifetime management of a shared_ptr. Although this should be possible in principle, I currently don't see how we could integrate it with the existing logic, so I decided for this much less invasive solution. Before/after runtimes for two extreme scenarios:. `test_inference.cxx` (which performs a lot of jitting).; compile time: ~8s -> ~9s; run time: ~40s -> ~7s. 50 jitted Histo1D calls in a loop (thanks to Attila for the use-case):; run time: ~35s -> <2s. This PR conflicts with #713 . Depending on which one gets merged first I will rebase the other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/720:452,simpl,simple,452,https://root.cern,https://github.com/root-project/root/pull/720,1,['simpl'],['simple']
Usability,"a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2621) returns an owning raw pointer too, while it should return a `std::unique_ptr<TH1>` in this case. Can this interface still be changed without disrupting users too much? **No, this can break usercode, so this suggestion was not implemented!**. All these flaws above have been addressed by @rahulgrit in #9912. Some more flaws were fixed in #11023. - [x] The `getCache` function takes a unused argument. It is a private function, so to signature can simply be changed and the argument removed; - [x] The unused `_ownsParameters` member should be removed. However, that's not all! There are more issues with this class that have to be resolved in a followup PR:. - [x] Various memory leaks (search for `new ` in the file and you will find them, almost everything created on the heap is leaking.; - for example, [here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L836) we even have some RooDataHists that leak; - [x] There is a static counter variable in the default constructor. It is unused and should be removed; - [x] The `RooStringVar` is used in the configuration of the class. We should investigate if it's not possible to simply use `std::string` here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:2516,simpl,simply,2516,https://root.cern,https://github.com/root-project/root/issues/9845,2,['simpl'],['simply']
Usability,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:1952,clear,clear,1952,https://root.cern,https://github.com/root-project/root/issues/8745,1,['clear'],['clear']
Usability,"actorySimultaneous( *model );. // Minimisation; RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));; RooMinimizer *minuit = new RooMinimizer(*nll_hf);; minuit->setOffsetting(kTRUE);; minuit->setStrategy(1);; minuit->migrad();. // Run MINOS on the parameter of interest; minuit->minos(*parameter_of_interest);; ```; Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug; After cloning the repository, you can run:; ```bash; root example.C; ```. After running it, you should observe the following:; ```; [...]. ======== Before MINOS ========; Lumi: 1; SigXsecOverSM: 1.11544; alpha_syst1: 0; alpha_syst2: -0.00946086; alpha_syst3: 0.0209843; gamma_stat_channel1_bin_0: 0.999547; gamma_stat_channel1_bin_1: 1.00348; nom_alpha_syst1: 0; nom_alpha_syst2: 0; nom_alpha_syst3: 0; nom_gamma_stat_channel1_bin_0: 400; nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========; Lumi: 1; SigXsecOverSM: 1.11544; alpha_syst1: 0; alpha_syst2: -0.00946086; alpha_syst3: 0.0209843; gamma_stat_channel1_bin_0: 1.02666; gamma_stat_channel1_bin_1: 1.04061; nom_alpha_syst1: 0; nom_alpha_syst2: 0; nom_alpha_syst3: 0; nom_gamma_stat_channel1_bin_0: 400; nom_gamma_stat_channel1_bin_1: 100; nominalLumi: 1; ```; The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called.; Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13142:3169,learn,learning,3169,https://root.cern,https://github.com/root-project/root/issues/13142,1,['learn'],['learning']
Usability,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:2860,simpl,simply,2860,https://root.cern,https://github.com/root-project/root/issues/7199,1,['simpl'],['simply']
Usability,and use a simple vector of pointers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/2708,1,['simpl'],['simple']
Usability,"ar, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #9 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x209f250) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #10 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1ab6a80) at /usr/include/c++/12/bits/hashtable.h:2500; #11 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:5714,clear,clear,5714,https://root.cern,https://github.com/root-project/root/issues/12023,1,['clear'],['clear']
Usability,"arameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Se",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1807,Simpl,SimplexBuilder,1807,https://root.cern,https://github.com/root-project/root/issues/6775,1,['Simpl'],['SimplexBuilder']
Usability,"aring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`; * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`; * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:; ```; #include ""A.h""; #include ""B.h""; ```; * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!); * `B.h` is being included is reached:; ```; class B : public A; ```; which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:; ```; Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)); ; de facto implementing lazy payload parsing instead of header; parsing on demand.; ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):; ```; diff Makefile.orig Makefile; 25c25; < rootcint -f ${DICT} -c ${DICTHDRS}; ---; > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}; ```. Full stack trace at the starting point of the failing recursive parsing:. ```; #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449; #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628; #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661; #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:4039,clear,clear,4039,https://root.cern,https://github.com/root-project/root/issues/13034,1,['clear'],['clear']
Usability,"be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:1900,clear,clear,1900,https://root.cern,https://github.com/root-project/root/issues/12645,1,['clear'],['clear']
Usability,"be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1542,simpl,simplest-,1542,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"build/lib/libCling.6.27.01.so] llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::__1::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::__1::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)::'lambda'()::operator()() const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::JITSymbol::getAddress() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::'lambda'()::operator()() const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::JITSymbol::getAddress() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::IncrementalJIT::getSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10061:3061,Simpl,SimpleCompiler,3061,https://root.cern,https://github.com/root-project/root/issues/10061,2,['Simpl'],['SimpleCompiler']
Usability,but add a comment to the jitted code in order to obtain a clear error message if; the user tries to use this type in a jitted action/transformation later in the chain.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558:58,clear,clear,58,https://root.cern,https://github.com/root-project/root/pull/2558,1,['clear'],['clear']
Usability,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13898:219,simpl,simple,219,https://root.cern,https://github.com/root-project/root/pull/13898,1,['simpl'],['simple']
Usability,"c/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:1671,Simpl,SimpleClass,1671,https://root.cern,https://github.com/root-project/root/issues/6597,1,['Simpl'],['SimpleClass']
Usability,"c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2683,Simpl,SimplifyCFGOptions,2683,https://root.cern,https://github.com/root-project/root/issues/14037,1,['Simpl'],['SimplifyCFGOptions']
Usability,"cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; | From tags/v6-22-06@v6-22-06 |; | Try '.help', '.demo', '.license', '.credi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7626:1139,clear,clear,1139,https://root.cern,https://github.com/root-project/root/issues/7626,1,['clear'],['clear']
Usability,"chment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:6438,simpl,simplifyFunctionCFGImpl,6438,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyFunctionCFGImpl']"
Usability,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:228,simpl,simple,228,https://root.cern,https://github.com/root-project/root/pull/13542,1,['simpl'],['simple']
Usability,"clude <TROOT.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. void workload(TTreeReader &r) {; TTreeReaderArray<double> ra(r, ""truthCaloPt"");; while (r.Next()); ra.GetSize();; }. int main() {; ROOT::EnableImplicitMT(2);; ROOT::TTreeProcessorMT mt({""f1.root"", ""f2.root"", ""f3.root"", ""f4.root"", ""f5.root""}, ""t"");; mt.Process(workload);; }; ```. With these files: [files.zip](https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:1125,clear,clear,1125,https://root.cern,https://github.com/root-project/root/issues/10357,1,['clear'],['clear']
Usability,"conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version 6.24.00; 2. OS X 10.15; 3. conda install. ### Additional context; It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:3068,clear,clear,3068,https://root.cern,https://github.com/root-project/root/issues/8418,1,['clear'],['clear']
Usability,"ct/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12652:1080,clear,clear,1080,https://root.cern,https://github.com/root-project/root/issues/12652,1,['clear'],['clear']
Usability,"cts/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16613:1478,simpl,simplified,1478,https://root.cern,https://github.com/root-project/root/issues/16613,1,['simpl'],['simplified']
Usability,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725:374,simpl,simply,374,https://root.cern,https://github.com/root-project/root/pull/7725,1,['simpl'],['simply']
Usability,"d from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:29463,clear,clear,29463,https://root.cern,https://github.com/root-project/root/issues/10528,1,['clear'],['clear']
Usability,"d on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT.RooFit.Cut(""BDT>0.0"")); ROOT.SetOwnership(small",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10811:1006,simpl,simpler,1006,https://root.cern,https://github.com/root-project/root/pull/10811,1,['simpl'],['simpler']
Usability,"de ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1265,simpl,simplex,1265,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:1666,simpl,simple,1666,https://root.cern,https://github.com/root-project/root/issues/11797,1,['simpl'],['simple']
Usability,"e = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}. def add_branch(self, name, f, value_type=""float""):; self.new_branches[name] = {}; self.new_branches[name][""f""] = f; self.new_branches[name][""name""] = name; self.new_branches[name][""value_type""] = value_type; self.new_branches[name][""value""] = value = ROOT.std.vector(value_type)(); self.new_branches[name][""tbranch""] = self.new_tree.Branch(name, value). def run(self):; nentries = self.src_tree.GetEntries(); for i in range(nentries):; # Get entry and make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:2687,clear,clear,2687,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"e ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173:1046,learn,learning,1046,https://root.cern,https://github.com/root-project/root/pull/15173,1,['learn'],['learning']
Usability,"e are a number of trivial operations that users often want to perform on dataframes that are surprisingly hard to get right, for example adding several `Define`s in a loop or conditionally adding a `Filter` depending on a runtime boolean (both use-cases are challenging in C++, trivial in python). The way I see it, difficulties boil down to the fact that different dataframe nodes have different types (because their types incorporate e.g. the type of the callable passed to a `Filter` and the type of their parent node in the computation graph). In this PR I propose to add a common base class `ROOT::RDF::RNode` to all nodes of the graph (except leaves a.k.a results, which have a completely different interface),; so that users can, for example:; * take any dataframe node by reference in non-template functions as `RNode&`; * `emplace_back` dataframe nodes in ~`std::vector<RNode>`~ `vector<RInterface<RNode>>`; * have non-const pointers to dataframe nodes. and so on. For example, conditionally adding a `Range` do a dataframe now looks like this:. ```c++; auto maybe_ranged = [&df, mustAddRange] { ; return mustAddRange ? ROOT::RDF::RNode(d.Range(1)); : ROOT::RDF::RNode(d); ; }(); ; ```. while before this PR one would have to add fake `Filter(""true"")` filters to normalize the return type of the lambda, involving the interpreter for no reason. Internal `RDataFrame` code is also simplified by the introduction of this common base class.; The only downside I can think of is that if this mechanism is abused users might end up with extra, unnecessary virtual calls in their event loop -- on the other hand, this mechanism should only be used in situations that required either complex template magic or dirty and slow tricks before. Questions:; * can we come up with a better name than `ROOT::RDF::ToCommonNodeType` for the function that upcasts any dataframe object to the same type?; * should this cast only be explicit through an upcasting function call or should we allow implicit casts?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182:1393,simpl,simplified,1393,https://root.cern,https://github.com/root-project/root/pull/2182,1,['simpl'],['simplified']
Usability,"e column names.; * The redefined `TClonesArray` can be snapshot correctly. ### To Reproduce; 1. Place two ROOT macros in the same directory:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TClonesArray.h>; #include <TLorentzVector.h>. #include <string>; #include <cstdio>; #include <cstdlib>; #include <iostream>. Float_t gen_rand() {; 	return rand() / static_cast<Double_t>(RAND_MAX);; }. void gen_tree(const std::string pathFile = ""file_tcatlv.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of TClonesArrays of TLorentzVectors"");; 	auto *tcaTest = new TClonesArray(""TLorentzVector"", 8);; 	size_t nVar;; 	ttOut->Branch(""TestVar1"", tcaTest);; 	ttOut->Branch(""nTestVar1"", &nVar);; 	constexpr size_t nEntries = 10;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		tcaTest->Clear();; 		nVar = rand() % 8;; 		tcaTest->Expand(nVar);; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tsize: "" << tcaTest->GetSize() << std::endl;; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			const auto &pVar = new((*tcaTest)[iVar]) TLorentzVector(gen_rand(), gen_rand(), gen_rand(), gen_rand());; 			std::fprintf(stderr, ""(%F, %F, %F, %F) "", pVar->Px(), pVar->Py(), pVar->Pz(), pVar->M());; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }. int main(int argc, char* argv[]) {; 	if (argc > 1) {; 		gen_tree(argv[1]);; 	} else {; 		gen_tree();; 	}; 	return 0;; }; ```. `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <TLorentzVector.h>; #include <ROOT/RDataFrame.hxx>; #include <Math/Vector4D.h>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_tcatlv.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:1798,Clear,Clear,1798,https://root.cern,https://github.com/root-project/root/issues/9240,1,['Clear'],['Clear']
Usability,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669:1444,clear,clear,1444,https://root.cern,https://github.com/root-project/root/issues/7669,1,['clear'],['clear']
Usability,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:2112,clear,clear,2112,https://root.cern,https://github.com/root-project/root/issues/7788,1,['clear'],['clear']
Usability,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1368,clear,clear,1368,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"e, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or clos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1061,clear,clearer,1061,https://root.cern,https://github.com/root-project/root/issues/7282,1,['clear'],['clearer']
Usability,"ecutable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for your help!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:5745,guid,guide,5745,https://root.cern,https://github.com/root-project/root/issues/14479,1,['guid'],['guide']
Usability,"ed behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:981,simpl,simple,981,https://root.cern,https://github.com/root-project/root/issues/9115,1,['simpl'],['simple']
Usability,"ee also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:4181,clear,clear,4181,https://root.cern,https://github.com/root-project/root/issues/7982,1,['clear'],['clear']
Usability,"es/mmprivate.h:56,; from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:; /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here; 163 | int getpagesize(void);; | ^~~~~~~~~~~; ```. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this?. Here's a [lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:1304,clear,clear,1304,https://root.cern,https://github.com/root-project/root/issues/9253,1,['clear'],['clear']
Usability,"essor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/sakib/root/lib/libCling.so; #26 0x00007ff62b940b4e in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #27 0x00007ff62b9417da in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #28 0x00007ff6302ed70a in TApplication::ExecuteFile(char const*, int*, bool) () from /home/sakib/root/lib/libCore.so.6.24; #29 0x00007ff6302ee443 in TApplication::ProcessLine(char const*, bool, int*) () from /home/sakib/root/lib/libCore.so.6.24; #30 0x00007ff630666166 in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/sakib/root/lib/libRint.so.6.24; #31 0x00007ff63066656a in TRint::HandleTermInput() () from /home/sakib/root/lib/libRint.so.6.24; #32 0x00007ff630441b62 in TUnixSystem::CheckDescriptors() () from /home/sakib/root/lib/libCore.so.6.24; #33 0x00007ff630443828 in TUnixSystem::DispatchOneEvent(bool) () from /home/sakib/root/lib/libCore.so.6.24; #34 0x00007ff630353669 in TSystem::Run() () from /home/sakib/root/lib/libCore.so.6.24; #35 0x00007ff6302eb443 in TApplication::Run(bool) () from /home/sakib/root/lib/libCore.so.6.24; #36 0x00007ff630667c0e in TRint::Run(bool) () from /home/sakib/root/lib/libRint.so.6.24; #37 0x000055b5825ea180 in main (); ===========================================================; ```. ### Describe the bug; tried to execute a code, crashes. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. ; ```; {; g = new TGraph();; ; for(i=0; i<12; i++) {; g->SetPoint(i, i, i*i + 4*i + 7);; }; ; g->SetMarkerStyle(49);; ; g->Draw(""ALP"");; }; ```; 2. .x graph2.C. ### Setup; 1. ROOT version 6.24.00; 2. Operating system ubuntu 20.04; 3. How you obtained ROOT-> binary download . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367:5682,clear,clear,5682,https://root.cern,https://github.com/root-project/root/issues/8367,1,['clear'],['clear']
Usability,"et before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this makes the speed of NLL creation with the BatchMode on par; with the speed of `createNLL()` wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:1053,learn,learned,1053,https://root.cern,https://github.com/root-project/root/pull/12079,1,['learn'],['learned']
Usability,"ew TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1961,Simpl,SimplexBuilder,1961,https://root.cern,https://github.com/root-project/root/issues/6775,1,['Simpl'],['SimplexBuilder']
Usability,"f all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m); ; ; tree.Fill(); ; tree.Print(); tree.Write(); f.Close(); ; ##################; ##Function to visualize the bug; def show_bug() :; ; f = TFile( 'VectorTree.root'); tree=f.Get(""Tree""); ; h=TH1F(""h"",""h"",20,25.,1000.); ##The same bug is observed also with projection; tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""); h.Print(""all""); f.Close(). #####Call the functions; if __name__ == '__main__':; ###Function to create a tree; create_tree(); ###Function to reproduce the bug; show_bug(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8497:1898,clear,clear,1898,https://root.cern,https://github.com/root-project/root/issues/8497,2,['clear'],['clear']
Usability,fix opening reference guide with .help Class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8025:22,guid,guide,22,https://root.cern,https://github.com/root-project/root/pull/8025,2,['guid'],['guide']
Usability,"float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w""; ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb; 4.87410593033; ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:4460,guid,guide,4460,https://root.cern,https://github.com/root-project/root/issues/10430,1,['guid'],['guide']
Usability,"g at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:6331,Simpl,SimplifyCFGOptions,6331,https://root.cern,https://github.com/root-project/root/issues/14037,1,['Simpl'],['SimplifyCFGOptions']
Usability,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:6458,simpl,simplified,6458,https://root.cern,https://github.com/root-project/root/issues/10861,1,['simpl'],['simplified']
Usability,"gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2030,guid,guide,2030,https://root.cern,https://github.com/root-project/root/issues/11920,1,['guid'],['guide']
Usability,"gcc14 issue warning when `std::vector<char>` is used. Also simplify loop over points. ```; In file included from /usr/include/c++/14/x86_64-suse-linux/bits/c++allocator.h:33,; from /usr/include/c++/14/bits/allocator.h:46,; from /usr/include/c++/14/vector:63,; from /home/linev/git/webgui/math/minuit2/inc/Minuit2/MnPlot.h:14,; from /home/linev/git/webgui/math/minuit2/src/MnPlot.cxx:10:; In member function ‘void std::__new_allocator<_Tp>::deallocate(_Tp*, size_type) [with _Tp = char]’,; inlined from ‘constexpr void std::allocator< <template-parameter-1-1> >::deallocate(_Tp*, std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:208:35,; inlined from ‘static constexpr void std::allocator_traits<std::allocator<_Up> >::deallocate(allocator_type&, pointer, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:513:23,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...)::_Guard::~_Guard() [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:616:18,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:688:7,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16359:59,simpl,simplify,59,https://root.cern,https://github.com/root-project/root/pull/16359,1,['simpl'],['simplify']
Usability,"here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8938:1078,simpl,simplefilter,1078,https://root.cern,https://github.com/root-project/root/pull/8938,1,['simpl'],['simplefilter']
Usability,"https://github.com/root-project/root/issues/7657. To add a member of type `PushTransactionRAII*` to `Transaction`, the former must end up in a separate header - else `Transaction.h` must `#include` `Interpreter.h` which seems worse. As we don't guarantee backward compatibility for cling, just move the type out of `Interpreter`, without even leaving a type alias in `Interpreter`. Keeps things simple and straight. Kudos to @vgvassilev for the idea of ""push_if_none""!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7752:395,simpl,simple,395,https://root.cern,https://github.com/root-project/root/pull/7752,1,['simpl'],['simple']
Usability,"https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1123,clear,clear,1123,https://root.cern,https://github.com/root-project/root/issues/12182,1,['clear'],['clear']
Usability,"ibCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:3778,Simpl,SimpleParallelRDFs,3778,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleParallelRDFs']
Usability,"ication (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2471,Learn,Learning,2471,https://root.cern,https://github.com/root-project/root/issues/16242,1,['Learn'],['Learning']
Usability,"ileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /home/geonwoo/root/lib/libCling.so; #16 0x00007fd7ce21b224 in TCling::TCling(char const*, char const*, char const* const*) () from /home/geonwoo/root/lib/libCling.so; #17 0x00007fd7ce21ceea in CreateInterpreter () from /home/geonwoo/root/lib/libCling.so; #18 0x00007fd7d1edeb13 in TROOT::InitInterpreter() () from /home/geonwoo/root/lib/libCore.so.6.22; #19 0x00007fd7d1edf00f in ROOT::Internal::GetROOT2() () from /home/geonwoo/root/lib/libCore.so.6.22; #20 0x00007fd7d1eebdcd in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/geonwoo/root/lib/libCore.so.6.22; #21 0x00007fd7d2263f0f in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/geonwoo/root/lib/libRint.so.6.22; #22 0x0000561a6211b174 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; i installed root from homepage, ; ```; $ wget https://root.cern/download/root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ tar -xzvf root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ source root/bin/thisroot.sh # also available: thisroot.{csh,fish,bat}; ```; i finished these steps and finally i had tried to excute root by $root and then this error message had poped up . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1.latest version 2. oracle VM VirtualBox in window 10 3.i don't know i just followed steps from cern homepage. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:9471,clear,clear,9471,https://root.cern,https://github.com/root-project/root/issues/6859,1,['clear'],['clear']
Usability,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:7317,clear,clear,7317,https://root.cern,https://github.com/root-project/root/issues/7893,1,['clear'],['clear']
Usability,"inFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python; import ROOT. class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); ```. This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }. void tgmainframe_repro(); {; TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:1110,clear,clear,1110,https://root.cern,https://github.com/root-project/root/issues/6578,1,['clear'],['clear']
Usability,"inor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1557,simpl,simply,1557,https://root.cern,https://github.com/root-project/root/issues/14555,1,['simpl'],['simply']
Usability,"int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TColor* c= new TColor();; TRandom* r= new TRandom();; float rgb[3];; //c->SetRGB(212.467392, 0.529984, 94.476196);; for (size_t i=0; i<1000000;i++); {; rgb[0]=512*(1.0-r->Rndm());; rgb[1]=512*(1.0-r->Rndm());; rgb[2]=512*(1.0-r->Rndm());; printf(""%f %f %f\n"",rgb[0],rgb[1],rgb[2]);; c->SetRGB(rgb[0],rgb[1],rgb[2]);; }; delete c;; delete r;; return 0;; }; ```; Compile; ```; clang++ color.cxx $(root-config --glibs --cflags --libs) -o color; ```; Run; ```; ./color; ```; ## Setup",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:1945,clear,clear,1945,https://root.cern,https://github.com/root-project/root/issues/6373,1,['clear'],['clear']
Usability,"int) (this=0x5960390, event=21, px=1031, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:2149; #6 0x00007fc5a100442d in TCanvas::HandleInput(EEventType, int, int) (this=0x3566d70, event=kButton1Motion, px=637, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:1291; #7 0x00007fc5a156c04b in TRootEmbeddedCanvas::HandleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPad::Resize, e.g. ```; // Compute new pad positions in the NDC space of parent; fXlowNDC = Do",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344:1339,simpl,simply,1339,https://root.cern,https://github.com/root-project/root/issues/6344,1,['simpl'],['simply']
Usability,"irly easy to reproduce. It seems that one can not provide `-isystem` and `-D` command line options to `genreflex` in any order. Specifying `-D` flags after `-isystem` flags seems to not work. ### Reproducer. Take the following file, called `header.h`:. ```c++; #ifndef HEADER_H; #define HEADER_H. // Require the preprocessor definition.; #ifndef DO_NOT_FAIL; #error ""Preprocessor definition not set!""; #endif. /// Dummy type; struct TypeWithDictionary {; int foo;; };. #endif; ```. With the following additional `selection.xml` file:. ```xml; <lcgdict>; <class name=""TypeWithDictionary"" />; </lcgdict>; ```. With these two, I can run the following happily:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_success.cpp -D DO_NOT_FAIL -isystem /some/path; [bash][atspot01]:root-dict-isystem > head test_dict_success.cpp ; // Do NOT change. Changes will be lost next time file is generated. #define R__DICTIONARY_FILENAME test_dict_success; #define R__NO_DEPRECATION. /*******************************************************************/; #include <stddef.h>; #include <stdio.h>; #include <stdlib.h>; #include <string.h>; [bash][atspot01]:root-dict-isystem >; ```. But the following fails:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_fail.cpp -isystem /some/path -D DO_NOT_FAIL; input_line_7:8:2: error: ""Preprocessor definition not set!""; #error ""Preprocessor definition not set!""; ^; Error: rootcling: compilation failure (./test_dict_fail5dde80a7de_dictUmbrella.h); [bash][atspot01]:root-dict-isystem >; ```. My guess is that `-isystem` in general is not taken correctly into account, but as I wrote in the description, I couldn't clearly demonstrate that thing just yet... ### ROOT version. Tried `6.26.06` and `v6-28-00-patches`. ### Installation method. Does not play a role here. ### Operating system. `x86_64-ubuntu2004-gcc9-opt`, `x86_64-el9-gcc13-opt`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13207:2607,clear,clearly,2607,https://root.cern,https://github.com/root-project/root/issues/13207,1,['clear'],['clearly']
Usability,"is works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); >#include <new>; > ^; >input_line_1:1:2: note: imported by module 'std' in '/home/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:1254,simpl,simply,1254,https://root.cern,https://github.com/root-project/root/issues/7055,1,['simpl'],['simply']
Usability,"issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When passing a argument to a formula based RooFit function (e.g. `RooFormulaVar` or `RooGenericPdf`), RooFit will search for all occurrences of the object name in the formula and replace them with an ordinal parameter (needed for the underling `TFormula`). However, when the argument is a `RooConst` the name is just a string containing the value and this can break if there are numeric literals inside the formula.; For example; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```; becomes inside the `TFormula`; ```; x[0].7*x[0]; ```; because the name 2 of the `RooConst` matched the 2 of the numeric literal. This of course breaks during formula compilation. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The variables do not replace numeric literals no matter the name. Possibly `RooConst`s should be matched only by index?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; HEAD of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->; `RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.7))` creates `x[0]*x[0]`, which is mostly fine but may break if servers are redirected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992:1162,clear,clear,1162,https://root.cern,https://github.com/root-project/root/issues/11992,1,['clear'],['clear']
Usability,"ithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:5495,clear,clear,5495,https://root.cern,https://github.com/root-project/root/issues/7654,1,['clear'],['clear']
Usability,"jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1160,clear,clear,1160,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"kEntryBeyondEnd is what is expected to be set at the end of a `while(r.Next())` event loop. This change is not backward-compatible if anyone relied on `kEntryNotFound` being set even at the end of a well-behaved event loop. On the other hand, the second usage example in TTreeReader's docs (https://root.cern/doc/master/classTTreeReader.html) as well as the names of the enum values seem to indicate that `kEntryNotFound` is an error state and `kEntryBeyondEnd` is what indicates a normal completion of the event loop. P.S.; to be clear, the problem I'm trying to solve is that in the current state it's hard (maybe impossible) to distinguish between a TTreeReader event loop that ended well and one that ended because an entry that was supposed to be there was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8747:531,clear,clear,531,https://root.cern,https://github.com/root-project/root/pull/8747,1,['clear'],['clear']
Usability,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:4020,Simpl,SimpleParallelRDFs,4020,https://root.cern,https://github.com/root-project/root/issues/8899,3,['Simpl'],['SimpleParallelRDFs']
Usability,"lLValue.cxx#L93) or [this line in the code](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:1857,clear,clear,1857,https://root.cern,https://github.com/root-project/root/issues/11954,1,['clear'],['clear']
Usability,"ld/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:11495,clear,clear,11495,https://root.cern,https://github.com/root-project/root/issues/8578,1,['clear'],['clear']
Usability,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:1766,simpl,simple,1766,https://root.cern,https://github.com/root-project/root/issues/7880,1,['simpl'],['simple']
Usability,"lear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11017:1378,clear,clear,1378,https://root.cern,https://github.com/root-project/root/issues/11017,1,['clear'],['clear']
Usability,"led support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1557,clear,clear,1557,https://root.cern,https://github.com/root-project/root/issues/10777,1,['clear'],['clear']
Usability,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:1873,clear,clear,1873,https://root.cern,https://github.com/root-project/root/issues/12729,1,['clear'],['clear']
Usability,"lines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of som",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1265,guid,guides,1265,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],"['guide', 'guides']"
Usability,"lumns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:1429,clear,clear,1429,https://root.cern,https://github.com/root-project/root/issues/8857,1,['clear'],['clear']
Usability,"m to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:2473,simpl,simple,2473,https://root.cern,https://github.com/root-project/root/issues/12645,1,['simpl'],['simple']
Usability,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12820:1366,clear,clear,1366,https://root.cern,https://github.com/root-project/root/issues/12820,2,['clear'],['clear']
Usability,"n (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2901; #23 0x00007fba331e1752 in G__getitem (item=0xe65770 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:6604,pause,pause,6604,https://root.cern,https://github.com/root-project/root/issues/6977,1,['pause'],['pause']
Usability,"n all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```. Output with this PR:; ```txt; 0 memory usage 361396 1544116; 10000 memory usage 375848 1544304; 20000 memory usa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:3553,clear,clear,3553,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:1972,simpl,simply,1972,https://root.cern,https://github.com/root-project/root/issues/8444,1,['simpl'],['simply']
Usability,"namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:2218,Simpl,SimpleCompiler,2218,https://root.cern,https://github.com/root-project/root/issues/8899,2,['Simpl'],['SimpleCompiler']
Usability,"nclude ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1322,simpl,simplex,1322,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability,"nclude/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8783d361d25c13e2c65 is reverted (the commit mentions some fixes though); - CMake checks for `builtin_llvm=OFF` and sets the dir accordingly; - Some other path is found that prevents the issues mentioned in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 (maybe `CLING_BINARY_DIR`?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build from master with `builtin_llvm=OFF`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. git master, Debian Sid. ### Additional context; <!--; Add any other context about the problem here.; -->. /cc @hahnjo @vgvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:1863,clear,clear,1863,https://root.cern,https://github.com/root-project/root/issues/12151,1,['clear'],['clear']
Usability,"nd make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:3440,clear,clear,3440,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"nd we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1212,intuit,intuitively,1212,https://root.cern,https://github.com/root-project/root/issues/14555,1,['intuit'],['intuitively']
Usability,"ndling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the README file to accurately state the default units (G4).; - Suggest a better mechanism to allow the user to establish the default units.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695:1533,simpl,simply,1533,https://root.cern,https://github.com/root-project/root/issues/8695,1,['simpl'],['simply']
Usability,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1781,feedback,feedback,1781,https://root.cern,https://github.com/root-project/root/issues/7282,4,"['Guid', 'clear', 'feedback', 'guid']","['Guides', 'clear', 'feedback', 'guides-and-manuals']"
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Shou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:3768,clear,clear,3768,https://root.cern,https://github.com/root-project/root/issues/6428,1,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; pri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:1940,clear,clear,1940,https://root.cern,https://github.com/root-project/root/issues/6677,1,['clear'],['clear']
Usability,"ng at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #8 0x00007fb451224a01 in TGeoPainter::Paint(char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #9 0x00007fb451222460 in TGeoPainter::DrawVolume(TGeoVolume*, char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #10 0x0000000000400a94 in main (); ===========================================================; ```. ### Expected behavior; Loading of the *.GDML file without issues - default behaviour for non-existing ""type"" argument. ### To Reproduce; 1. Create a GDML file with G4 (10.5) containing a tessellated object; 2. Importing it with ROOT TGeoManager::Import(). ### Setup; 1. ROOT version: 6.22.02; 2. Operating system: CC7; 3. How you obtained ROOT: built myself. ### Additional context; I add an example *gdml file with the missing ""type"" attribute in the tessellated object. The CAD part are here the simple ""Cubes"" for testing - tiny things at the very front. Don't get confused by the ""normal"" G4 geometry ""TPC' object in the center; [withTessCAD.gdml.zip](https://github.com/root-project/root/files/5583749/withTessCAD.gdml.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:4334,simpl,simple,4334,https://root.cern,https://github.com/root-project/root/issues/6868,1,['simpl'],['simple']
Usability,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and; PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:2726,simpl,simple,2726,https://root.cern,https://github.com/root-project/root/issues/14555,1,['simpl'],['simple']
Usability,"ng issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954:1394,clear,clearly,1394,https://root.cern,https://github.com/root-project/root/pull/7954,1,['clear'],['clearly']
Usability,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:14484,clear,clear,14484,https://root.cern,https://github.com/root-project/root/issues/8487,2,['clear'],['clear']
Usability,"ningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1224,Guid,Guide,1224,https://root.cern,https://github.com/root-project/root/issues/7282,1,['Guid'],['Guide']
Usability,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:3875,clear,clear,3875,https://root.cern,https://github.com/root-project/root/issues/10572,1,['clear'],['clear']
Usability,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:8062,clear,clear,8062,https://root.cern,https://github.com/root-project/root/issues/11430,1,['clear'],['clear']
Usability,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:4354,simpl,simpler,4354,https://root.cern,https://github.com/root-project/root/pull/5960,1,['simpl'],['simpler']
Usability,"of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that ROOT 6.26.10+python3.9 does not have this issue, so maybe some change in the pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1232,simpl,simply,1232,https://root.cern,https://github.com/root-project/root/issues/12182,1,['simpl'],['simply']
Usability,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758:1086,feedback,feedback,1086,https://root.cern,https://github.com/root-project/root/issues/8758,1,['feedback'],['feedback']
Usability,"or field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .Fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:1289,simpl,simple,1289,https://root.cern,https://github.com/root-project/root/pull/5934,1,['simpl'],['simple']
Usability,"ore/unix/src/TUnixSystem.cxx:407; #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620; #7 <signal handler called>; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also comme",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:3075,clear,clear,3075,https://root.cern,https://github.com/root-project/root/issues/6523,1,['clear'],['clear']
Usability,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:2071,simpl,simple,2071,https://root.cern,https://github.com/root-project/root/issues/8474,1,['simpl'],['simple']
Usability,"ot/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332:1085,clear,clear,1085,https://root.cern,https://github.com/root-project/root/issues/11332,1,['clear'],['clear']
Usability,"ote: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-impl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:4343,clear,clear,4343,https://root.cern,https://github.com/root-project/root/issues/10984,1,['clear'],['clear']
Usability,"panda 2.2 used to be the more recent version and a special check was needed in case a version older that 2.2 was used.; Some options were backward incompatible between version older that 2.2 and version 2.2. Now on the jenkins machine used to build the guides, the pandoc version is 2.5 so we do not need to check on pandoc version anymore. And the way the test was done produced a wrong set of options for versions above 2.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5931:253,guid,guides,253,https://root.cern,https://github.com/root-project/root/pull/5931,1,['guid'],['guides']
Usability,"plicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:1006,clear,clear,1006,https://root.cern,https://github.com/root-project/root/issues/10991,1,['clear'],['clear']
Usability,"pped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1777,simpl,simple,1777,https://root.cern,https://github.com/root-project/root/issues/14113,1,['simpl'],['simple']
Usability,"proved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and seve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15252:1001,guid,guide,1001,https://root.cern,https://github.com/root-project/root/issues/15252,1,['guid'],['guide']
Usability,"ps://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:1048,clear,clear,1048,https://root.cern,https://github.com/root-project/root/issues/8155,1,['clear'],['clear']
Usability,"pts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TColor* c= new TColor();; TRandom* r= new TRandom();; float rgb[3];; //c->SetRGB(212.467392, 0.529984, 94.476196);; for (size_t i=0; i<1000000;i++); {; rgb[0]=512*(1.0-r->Rndm());; rgb[1]=512*(1.0-r->Rndm());; rgb[2]=512*(1.0-r->Rndm());; printf(""%f %f %f\n"",rgb[0],rgb[1],rgb[2]);; c->SetRGB(rgb[0],rgb[1],rgb[2]);; }; delete c;; delete r;; return 0;; }; ```; Compile; ```; clang++ color.cxx $(root-config --glibs --cflags --libs) -o color; ```; Run; ```; ./color; ```; ## Setup; 1. ROOT 6.22.02 from the official site that matches XCode. ## Additional context; This is similar to #6344 but seen only on Mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:2277,clear,clear,2277,https://root.cern,https://github.com/root-project/root/issues/6373,1,['clear'],['clear']
Usability,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13630:287,simpl,simply,287,https://root.cern,https://github.com/root-project/root/pull/13630,2,['simpl'],['simply']
Usability,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:1724,clear,clear,1724,https://root.cern,https://github.com/root-project/root/issues/8902,1,['clear'],['clear']
Usability,"r, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x22dedd0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #16 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x22ded30) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #17 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1cf6570) at /usr/include/c++/12/bits/hashtable.h:2500; #18 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:16567,clear,clear,16567,https://root.cern,https://github.com/root-project/root/issues/12023,2,['clear'],['clear']
Usability,"ra/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooKeysPdf` do not have an internal generation method, and relies on numerical generation (e.g. `RooAcceptReject`).; However, if the call to generate contains `ProtoData`, the distribution of the generated data is not correct. ; I tried the same with other numerically generated pdf, specifically `RooGenericPdf`, but only `RooKeysPdf` seems to be affected.; This may be caused by a bad interaction between `RooKeysPdf` and `RooAcceptReject`, since adding a prototype switches the generator from `RooFoamGenerator` to `RooAcceptReject`.; I verified that forcing `RooFoamGenerator` (which I can only do by recompiling ROOT, as far as I know) solves the issue. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Generation works correctly regardless of prototype data. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); pdf_x = ROOT.RooGenericPdf('pdf_x', 'x', [x]). # correct, of course; dt_base = pdf_x.generate({x}, NumEvents = 10000). pdf_keys = ROOT.RooKeysPdf('pdf_keys', '', x, dt_base, ROOT.RooKeysPdf.MirrorBoth). # also correct; dt_keys = pdf_keys.generate({x}, NumEvents = 10000). y = ROOT.RooRealVar('y', '', 0, 1); proto = ROOT.RooDataSet('proto_y', '', {y}); proto.add(ROOT.RooArgSet(y)). # still correct; dt_base_with_proto = pdf_x.generate({x}, NumEvents = 10000, ProtoData = proto). # broken; dt_keys_with_proto = pdf_keys.generate({x}, NumEvents = 10000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286:1149,clear,clear,1149,https://root.cern,https://github.com/root-project/root/issues/12286,1,['clear'],['clear']
Usability,"rain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLevel = 0;; ROOT::Minuit2::MnPrint::ClearFilter();; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(2);; ; RooMinimizer mini(*nll);; mini.setMaxFunctionCalls(10000);; mini.setMaxIterations(175000);; mini.setPrintLevel(2);; mini.optimizeConst(1);; mini.setMinimizerType(""Minuit2"");; mini.setEvalErrorWall(1);; mini.setOffsetting(1);; mini.setPrintEvalErrors(5);; mini.setVerbose(0);; mini.setProfile(1);; mini.setStrategy(2);; mini.setEps(0.001);; ; std::cout << ""starting minimization"" << std::endl;; ; mini.minimize(""Minuit2"",""Migrad"");. // the call to nll->getVal() here seems to break it; std::cout << ""nll val at minimum is "" << nll->getVal() << std::endl;; ; mini.hesse();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7659:2035,Clear,ClearFilter,2035,https://root.cern,https://github.com/root-project/root/issues/7659,1,['Clear'],['ClearFilter']
Usability,raw_input is simply input in Python 3. suggested in https://sft.its.cern.ch/jira/browse/ROOT-10721,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5517:13,simpl,simply,13,https://root.cern,https://github.com/root-project/root/pull/5517,1,['simpl'],['simply']
Usability,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:3643,feedback,feedback,3643,https://root.cern,https://github.com/root-project/root/pull/9128,1,['feedback'],['feedback']
Usability,"rom command line; collect2: error: ld returned 1 exit status; ```. Digging a bit deeper with the `-Wl,--verbose` linker flag:. ```; <<snip>>; attempt to open /usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_L",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:9938,clear,clear,9938,https://root.cern,https://github.com/root-project/root/issues/12152,1,['clear'],['clear']
Usability,"rters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess; nb.cells[index], resources = self.preprocess_cell(cell, resources, index); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell; raise CellExecutionError.from_cell_and_msg(cell, out); nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:; ------------------; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:2615,usab,usable,2615,https://root.cern,https://github.com/root-project/root/issues/10430,1,['usab'],['usable']
Usability,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:4572,learn,learn,4572,https://root.cern,https://github.com/root-project/root/pull/11049,1,['learn'],['learn']
Usability,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:2519,clear,clear,2519,https://root.cern,https://github.com/root-project/root/issues/7971,2,['clear'],['clear']
Usability,"s; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:1001,clear,clear,1001,https://root.cern,https://github.com/root-project/root/issues/7393,1,['clear'],['clear']
Usability,"sEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /home/stephan/Projects/ROOT/core/base/inc/LinkDef.h; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Build does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Building git master with #12154 and `builtin_llvm=OFF libbsd=ON`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. git master with #12154, 13.0.1-11+b2. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:5974,clear,clear,5974,https://root.cern,https://github.com/root-project/root/issues/12156,1,['clear'],['clear']
Usability,"sLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; ===========================================================. Root > Function RunEtaC() busy flag cleared; ```. I want to merge all the jobs and create a .root file. Please help me to solve this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:8805,clear,cleared,8805,https://root.cern,https://github.com/root-project/root/issues/6977,1,['clear'],['cleared']
Usability,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15638:1170,clear,clear,1170,https://root.cern,https://github.com/root-project/root/issues/15638,1,['clear'],['clear']
Usability,"st JSON. . The attached class `TJSON` allows for this in a relatively straight forward manner. For example, one can do . ```c++; TJSON null;; TJSON b(true);; TJSON s(""RawString"");; TJSON s2(std::string(""C++String""));; TJSON i(42);; TJSON f(3.14);; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();; ```; for null, boolean, string, numbers (int and float), arrays or objects (associative container). . A more complex object can be created like . ```c++ ; TJSON o2 = std::map<std::string,TJSON>{; {""key1"",""value""},; {""key2"",true},; {""key3"",; {""key4"", TJSON::Array(""This"",""is"",""an"",""array""),; ""key5"",; {""boolean"", true}; }; }; };; ```. and elements are accessed via `operator[]` . ```c++; assert o2[""key1""] == ""value"";; assert o2[""key3""][""key4""][1] == ""is""; ```. One can loop over arrays or objects via `TJSON::ArrayRange` or `TJSON::ObjectRange` respectively. . ```c++; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();. for (size_t i = 0; i < 4; i++); a[i] = ""Test""+std::to_string(i);. o[""key0""] = ""value1"";; o[""key1""] = a;; o[""key2""] = 123;. std::cout << ""Array: "" << std::endl;; for (auto& e : a.ArrayRange()); std::cout << e << std::endl;. std::cout << ""Object: "" << std::endl;; for (auto& kv : o.ObjectRange()); std::cout << ""o["" << kv.first << ""] = "" << kv.second << std::endl;; ```. JSON can be read and written to streams . ```c++; std::cout << ""=== Loading ==="" << std::endl;; std::string s(""{\""key1\"":\""string\"",""; 		"" \""key2\"": true,""; 		"" \""key3\"": 1234,""; 		"" \""key4\"":null}"");. std::stringstream str(s);. TJSON j;; str >> j;; std::cout << j << std::endl;; ; TJSON j2 = TJSON::Load(s);; std::cout << j2 << std::endl;; ```. I attach `TJSON.h` and `TJSON.cxx` as well as a script with examples `Example.C`. Note, objects of the class are clearly not meant to by stored in ROOT files and thus there is no call to the `ClassImp` macro. . . Feel free to incorporate the code as you see fit. . Yours, . Christian; [TJSON.zip](https://github.com/root-project/root/files/5614520/TJSON.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889:2259,clear,clearly,2259,https://root.cern,https://github.com/root-project/root/issues/6889,1,['clear'],['clearly']
Usability,"st part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1326,guid,guides,1326,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],['guides']
Usability,"st.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a par",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505:1651,clear,clear,1651,https://root.cern,https://github.com/root-project/root/issues/8505,1,['clear'],['clear']
Usability,"strings. properly, for example treating cases such as 'branch0' and 'branch01'.; The code of the helper FindUsedColumnNames has been simplified.; A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3353:133,simpl,simplified,133,https://root.cern,https://github.com/root-project/root/pull/3353,1,['simpl'],['simplified']
Usability,"t in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC ROOT::Libraries ROOT::Flags); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:2009,Simpl,SimpleExample,2009,https://root.cern,https://github.com/root-project/root/pull/1959,2,['Simpl'],['SimpleExample']
Usability,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:3222,learn,learn,3222,https://root.cern,https://github.com/root-project/root/issues/12710,1,['learn'],['learn']
Usability,"t the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:5998,simpl,simplifyCFG,5998,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyCFG']"
Usability,"t/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1075,clear,clear,1075,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"table used to back a higher level representation of table in which case the columns are not independent - they would be related (unless ""independent columns"" is being used to mean statistically independent variables). And I came across ""event"" in code comments which sounds very like ""event"" is a ""row"" of data which'd make sense from a Cern perspective but is ambiguous/meaningless/confusing to a newbie. ### share how it could be improved. A Glossary with ROOT term equivalents in other frames of reference. Eg. Event ~ row ~ tuple ~ observation (assuming I guessed correctly). TTRee ~ RDataFrame/TDataFrame ~ dataset ~ Table ~ 1 or 2 dimensional Array or Tensor ~ a grid of data with one row per event/observation/record.; TBranch ~ column of data in a grid or table of data; TLeaf ~ element ~ cell - a single observation of single variable. And where these are not correct list the differences between them to clarify what they actually are. Without a clear and precise understanding of what the terms mean you are never sure about what you are doing. ----------------------------------------------------------; Some (more) high level notes on how the framework works would be very useful at the start of the primer or comments in the code to explain ""magic"" when it happens - I was scratching my head as to how one particular object knew to use another when no relationship appeared in the code anywhere;; ```. // The canvas on which we'll draw the graph; auto mycanvas = new TCanvas();. // lots of code like... // Draw the graph !; graph.DrawClone(""APE"");. // but no mention of mycanvas again until... . mycanvas->Print(""graph_with_law.pdf"");; ```. which raises all sorts of questions ( as it is not obvious what is going on ).; ; ------------------------------------------------------------. Basic stuff first: . Most people will want to read in a multi column file and get stats/analysis on those columns - fromCSV is buried pretty deep considering - why why why am I reading about ""TTree""s w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11967:1225,clear,clear,1225,https://root.cern,https://github.com/root-project/root/issues/11967,1,['clear'],['clear']
Usability,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:6045,Simpl,SimpleParallelRDFs,6045,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleParallelRDFs']
Usability,"tegral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:1207,clear,clear,1207,https://root.cern,https://github.com/root-project/root/issues/7258,2,['clear'],['clear']
Usability,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5484,clear,clearing,5484,https://root.cern,https://github.com/root-project/root/pull/14039,1,['clear'],['clearing']
Usability,"ten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2447,simpl,simply,2447,https://root.cern,https://github.com/root-project/root/pull/12202,1,['simpl'],['simply']
Usability,"the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #8 0x000000000040124b in main (argc=<optimized out>, argv=<optimized out>) at /test/pad6.cxx:9; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code ; ```; #include <TCanvas.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""cnvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; delete c;; delete C;; return 0;; }. ```; Compile; ```; g++ pad6.cxx $(root-config --glibs --cflags --libs) -o pad6 -g; ```. Run; ```; ./pad6; ```. ## Setup; EPEL ROOT 62202/gcc485/CentOS7; ROOT night buil/gcc10/lxplus; ; ## Additional context; Possible fix in Tpad::Close; Replace; ```; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSelectedPad(0);; if (fCanvas->GetClickSelectedPad() == this); fCanvas->SetClickSelectedPad(0);; ```; with. ```; if (fCanvas); {; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSelectedPad(0);; if (fCanvas->GetClickSelectedPad() == this); fCanvas->SetClickSelectedPad(0);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6453:3064,Clear,ClearPadSave,3064,https://root.cern,https://github.com/root-project/root/issues/6453,2,['Clear'],['ClearPadSave']
Usability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1650,clear,clearing,1650,https://root.cern,https://github.com/root-project/root/pull/5219,1,['clear'],['clearing']
Usability,"the implementation of histo models has been simplified avoiding code duplication.; The creation of the shared_pointer containing the histogram has been moved to; the model classes, in order to simplify the TDFInterface.; Test coverage has been significantly increased.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1770:44,simpl,simplified,44,https://root.cern,https://github.com/root-project/root/pull/1770,2,['simpl'],"['simplified', 'simplify']"
Usability,"theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12827,Learn,Learning,12827,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Learn'],['Learning']
Usability,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8021:2352,clear,clear,2352,https://root.cern,https://github.com/root-project/root/issues/8021,1,['clear'],['clear']
Usability,"tic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:2267,simpl,simple,2267,https://root.cern,https://github.com/root-project/root/pull/11049,1,['simpl'],['simple']
Usability,"till exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1334,simpl,simplest-,1334,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"timized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash; PATH_FOR_REPRODUCING=/scratch2/root-debug2; mkdir -p ""$PATH_FOR_REPRODUCING""; docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash; ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash; curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh; bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge; source $PWD/mambaforge/bin/activate; mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge; exit; ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash; source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1""; echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp; # These always work; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++; # This crashes under centos:7 but not centos:8; EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:29765,simpl,simple,29765,https://root.cern,https://github.com/root-project/root/issues/9595,1,['simpl'],['simple']
Usability,"tionRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namesp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:2871,simpl,simply,2871,https://root.cern,https://github.com/root-project/root/pull/11049,1,['simpl'],['simply']
Usability,"tions; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2350,simpl,simplifyCFG,2350,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyCFG']"
Usability,"tlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:1187,clear,clear,1187,https://root.cern,https://github.com/root-project/root/issues/7308,1,['clear'],['clear']
Usability,"unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TBranchProxy.h:163:42; frame #10: 0x0000000107649ba8 libTreePlayer.so`(anonymous namespace)::TObjectArrayReader::At(this=0x0000603000169900, proxy=0x00006110000c9580, idx=1) at TTreeReaderArray.cxx:176:22; frame #11: 0x000000010000c2e4 repro.out`ROOT::Internal::TTreeReaderArrayBase::UntypedAt(this=0x000000016fdfe740, idx=1) const at TTreeReaderArray.h:41:62; frame #12: 0x000000010000c200 repro.out`TTreeReaderArray<double>::At(this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:205:54; frame #13: 0x00000001000065e0 repro.out`TTreeReaderArray<double>::operator[](this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:207:44; frame #14: 0x0000000100007b48 repro.out`simpleTest() at repro.cpp:123:26; frame #15: 0x0000000100007e10 repro.out`main at repro.cpp:128:5; frame #16: 0x000000018c718274 dyld`start + 2840; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:6895,simpl,simpleTest,6895,https://root.cern,https://github.com/root-project/root/pull/16501,1,['simpl'],['simpleTest']
Usability,undo fix to remove extra ///,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5433:0,undo,undo,0,https://root.cern,https://github.com/root-project/root/pull/5433,2,['undo'],['undo']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:1209,clear,clear,1209,https://root.cern,https://github.com/root-project/root/issues/11482,1,['clear'],['clear']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1234,simpl,simplest-,1234,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:1198,clear,clear,1198,https://root.cern,https://github.com/root-project/root/issues/8155,1,['clear'],['clear']
Usability,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1765,progress bar,progress bar,1765,https://root.cern,https://github.com/root-project/root/issues/9489,1,['progress bar'],['progress bar']
Usability,"usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_LIBBSD` (in addition to `HAS_STRLCPY`) that triggers the inclusion of bsd/string.h in clib/inc/strlcpy.h in the `#else` case of `#ifndef HAS_STRLCPY`. ### To Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:10049,Clear,Clearly,10049,https://root.cern,https://github.com/root-project/root/issues/12152,1,['Clear'],['Clearly']
Usability,"valid next size (fast); ninja: build stopped: subcommand failed.; ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D); - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification.; Thanks!. ### Reproducer. ```; mkdir root_build;; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; cd root_build; cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16; ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:9514,clear,clear,9514,https://root.cern,https://github.com/root-project/root/issues/14037,1,['clear'],['clear']
Usability,"webgui: simply ignore Show() in batch, update most of tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2655:8,simpl,simply,8,https://root.cern,https://github.com/root-project/root/pull/2655,2,['simpl'],['simply']
Usability,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123:822,clear,clear,822,https://root.cern,https://github.com/root-project/root/issues/9123,2,['clear'],['clear']
Usability,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:1105,guid,guide,1105,https://root.cern,https://github.com/root-project/root/issues/6343,2,['guid'],['guide']
Usability,"ype='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4100,clear,clear,4100,https://root.cern,https://github.com/root-project/root/issues/11602,1,['clear'],['clear']
Usability,"~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8129:4383,Clear,Clear,4383,https://root.cern,https://github.com/root-project/root/issues/8129,1,['Clear'],['Clear']
Usability,… and to clear the TLines instances used for the dashed lines. This is needed to trigger recreation after a pad clear from the outside. @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/235:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/235,2,['clear'],['clear']
Usability,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:265,simpl,simplified,265,https://root.cern,https://github.com/root-project/root/pull/2803,3,"['clear', 'simpl']","['clear', 'simplification', 'simplified']"
Usability,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11005:239,guid,guide,239,https://root.cern,https://github.com/root-project/root/pull/11005,1,['guid'],['guide']
