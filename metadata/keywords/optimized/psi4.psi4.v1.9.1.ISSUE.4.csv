quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"Looks like the plugin didn't get the infrastructure changes update. If you change the signature and return according to http://forum.psicode.org/t/wavefunction-passing-update/139 , does that fix it? @SebWouters, did your latest changes cover the plugin signature change?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-185841947:60,update,update,60,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-185841947,2,['update'],['update']
Deployability,"Looks like this still doesn't quite work. We did not copy the point group originally because a molecule does not have a PG until `update_geometry` is called. This can cause a seg fault as is. Also, it appears we are missing some symmetry information. I think we are going to have to unlock the frame and allow for a full update to get this to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/299#issuecomment-196887129:321,update,update,321,https://psicode.org,https://github.com/psi4/psi4/pull/299#issuecomment-196887129,1,['update'],['update']
Deployability,"Looks like we missed a `os.path.abspath` somewhere. This should be able to be patched up, ill dig through the code when I get a chance.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/669#issuecomment-290459005:78,patch,patched,78,https://psicode.org,https://github.com/psi4/psi4/issues/669#issuecomment-290459005,1,['patch'],['patched']
Deployability,Looks like your native gcc is too old. Activate the conda environment (something like `source activate p4env`) to use the newer gcc that is installed alongside the psi4 binary. Or `export LD_LIBRARY_PATH=/path/to/miniconda/envs/p4env/bin/../lib:$LD_LIBRARY_PATH` .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675#issuecomment-291261254:140,install,installed,140,https://psicode.org,https://github.com/psi4/psi4/issues/675#issuecomment-291261254,1,['install'],['installed']
Deployability,"Lori's right (as usual); it's the auto-generated samples that changed. I thought about removing them from this PR to make the review easier but figured that the samples will need to be updated eventually anyway. The samples can be completely ignored for review purposes, but I'm happy to roll back the changes if anybody would prefer a more minimal PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1274#issuecomment-426117811:185,update,updated,185,https://psicode.org,https://github.com/psi4/psi4/pull/1274#issuecomment-426117811,1,['update'],['updated']
Deployability,Loriab patch 3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3190:7,patch,patch,7,https://psicode.org,https://github.com/psi4/psi4/pull/3190,3,['patch'],['patch']
Deployability,Loriab patch 4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3197:7,patch,patch,7,https://psicode.org,https://github.com/psi4/psi4/pull/3197,1,['patch'],['patch']
Deployability,"M=) | `83.80% <0.00%> (-10.63%)` | :arrow_down: |; | [psi4/src/psi4/libfock/sap.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJmb2NrL3NhcC5jYw==) | `80.00% <0.00%> (-9.29%)` | :arrow_down: |; | [psi4/src/psi4/scfgrad/scf\_grad.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9zY2ZncmFkL3NjZl9ncmFkLmNj) | `95.09% <0.00%> (-1.19%)` | :arrow_down: |; | [psi4/src/psi4/liboptions/liboptions.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJvcHRpb25zL2xpYm9wdGlvbnMuY2M=) | `56.26% <0.00%> (-0.91%)` | :arrow_down: |; | [psi4/src/psi4/libmints/vector.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJtaW50cy92ZWN0b3IuY2M=) | `62.27% <0.00%> (-0.60%)` | :arrow_down: |; | [psi4/src/psi4/libfock/points.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJmb2NrL3BvaW50cy5jYw==) | `72.24% <0.00%> (-0.27%)` | :arrow_down: |; | [psi4/src/core.cc](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9zcmMvY29yZS5jYw==) | `82.19% <0.00%> (-0.25%)` | :arrow_down: |; | [psi4/driver/driver.py](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree#diff-cHNpNC9kcml2ZXIvZHJpdmVyLnB5) | `79.10% <0.00%> (-0.22%)` | :arrow_down: |; | ... and [106 more](https://codecov.io/gh/psi4/psi4/pull/1351/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1351?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1351?src=pr&el=footer). Last update [7d35d14...6e36f6b](https://codecov.io/gh/psi4/psi4/pull/1351?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-505723097:3315,update,update,3315,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-505723097,1,['update'],['update']
Deployability,"MBIS is Georgia Tech's department, so obligatory @loriab ping - I'm not sure who has taken over MBIS now that Jeff has left. Is there a legitimate reason for us not to support MBIS for iodine? It looks to me like we just need to extend the `get_mbis_params` table one more row of the periodic table and then update the `mA` setting. If so, this is an easy project for one of your developers who is still learning Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728#issuecomment-1262298053:308,update,update,308,https://psicode.org,https://github.com/psi4/psi4/issues/2728#issuecomment-1262298053,1,['update'],['update']
Deployability,"MP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - fo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:14697,release,release,14697,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,MRCC interface broken with MRCC 2022 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497:37,release,release,37,https://psicode.org,https://github.com/psi4/psi4/issues/2497,1,['release'],['release']
Deployability,"MRCC-related CTests pass with an older version (2019 with some unknown patches) of MRCC, but the 2022 release broke the interface (again?).; For what its worth, it also no longer works with Molpro 2015. ```; (p4dev) gytibor@CRD-MILAN-3:~/psi4/objdir$ ctest -L mrcc -j`getconf _NPROCESSORS_ONLN` --rerun-failed --output-on-failure; Test project /home/gytibor/psi4/objdir; Start 499: mrcc-ccsdt; Start 500: mrcc-ccsd_t_; Start 501: mrcc-ccsdt_q_; Start 502: mrcc-rohf_ccsdt_q_; Start 503: mrcc-optfreq; 1/5 Test #499: mrcc-ccsdt .......................***Failed 0.62 sec; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /tmp/mrcc_67625/KEYWD; Image PC Routine Line Source; dmrcc 0000000001284F08 Unknown Unknown Unknown; dmrcc 00000000012A12A2 Unknown Unknown Unknown; dmrcc 00000000004AE4BD Unknown Unknown Unknown; dmrcc 0000000000507E55 Unknown Unknown Unknown; dmrcc 000000000040D9DD Unknown Unknown Unknown; dmrcc 00000000004021AA Unknown Unknown Unknown; dmrcc 0000000000400DF2 Unknown Unknown Unknown; dmrcc 00000000013571F9 Unknown Unknown Unknown; dmrcc 0000000000400CCA Unknown Unknown Unknown; Traceback (most recent call last):; File ""/home/gytibor/psi4/objdir/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 599, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4732, in run_mrcc; for line in open('iface'):. FileNotFoundError: [Errno 2] No such file or directory: 'iface'. Printing out the relevant lines from the Psithon --> Python processed input file:; h 1 1.0 2 104.5; """""",""h2o""); core.IO.set_default_namespace(""h2o""); core.set_global_option(""BASIS"", ""cc-pvdz""); core.set_global_option(""FREEZE_CORE"", ""true""); --> energy('mrccsdt'); compare_values( 8.801465529972, variable(""NUCLEAR REPULSION ENERGY""), 6, 'N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497:71,patch,patches,71,https://psicode.org,https://github.com/psi4/psi4/issues/2497,2,"['patch', 'release']","['patches', 'release']"
Deployability,"Made all the necessary code changes. Have not had time to update docs yet (classes). Feel free to review the code, and I will update the docs tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2543#issuecomment-1095549080:58,update,update,58,https://psicode.org,https://github.com/psi4/psi4/pull/2543#issuecomment-1095549080,2,['update'],['update']
Deployability,Make Psi4 installable via pip,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3091:10,install,installable,10,https://psicode.org,https://github.com/psi4/psi4/issues/3091,1,['install'],['installable']
Deployability,"Make sure you install. Sent from my Android (without spellcheck). Please forgive the brevity. On Jul 25, 2016 7:40 PM, ""Andy Simmonett"" notifications@github.com wrote:. > The patch I just pushed allows it to compile. The tests all fail instantly; > on my laptop, so I still have some more work to do, but that's almost; > certainly user error.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/442#issuecomment-235119557, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AFCRi08tfysGPjLLYYwmAXVcqfjyQ7CVks5qZUlygaJpZM4JHR4P; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235119690:14,install,install,14,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235119690,2,"['install', 'patch']","['install', 'patch']"
Deployability,Mamba installation of Psi4 1.8 on linux misconfigures PSIDATADIR,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2993:6,install,installation,6,https://psicode.org,https://github.com/psi4/psi4/issues/2993,1,['install'],['installation']
Deployability,"Many thanks for your answers and support. We basically want to export the two-electron integrals, and use them with other programs. So the integrals will be written to a binary file together with other 1el matrices. The code snippet that is working at the moment:. ``` c++; MintsHelper mints(ref_wfn->basisset(), options, 0);; auto intFactory = mints.integral();; auto basis = mints.basisset();; auto tBO = intFactory->eri();; AOShellCombinationsIterator shellIter = intFactory->shells_iterator();. std::vector<double> intval;; std::vector<int> intnums;. for (shellIter.first(); shellIter.is_done() == false; shellIter.next()) {; tBO->compute_shell(shellIter.p(),shellIter.q(),shellIter.r(),shellIter.s());; double cutOff = 1E-12;; auto aoIter = intFactory->integrals_iterator(shellIter.p(),shellIter.q(),shellIter.r(),shellIter.s());; for (aoIter.first(); aoIter.is_done() == false; aoIter.next()) {; int i = aoIter.i();; int j = aoIter.j();; int k = aoIter.k();; int l = aoIter.l();. if (fabs(tBO->buffer()[aoIter.index()])>cutOff){; intval.push_back(tBO->buffer()[aoIter.index()]);; intnums.push_back(i); ; intnums.push_back(j);; intnums.push_back(k);; intnums.push_back(l);. }. }; // Continue Sorting + Exporting; ````. If we use the conda install, we get an error that the symbol cannot be found. Compiling with modified integral.h works as expected. Thanks again!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2239#issuecomment-876632135:1244,install,install,1244,https://psicode.org,https://github.com/psi4/psi4/issues/2239#issuecomment-876632135,1,['install'],['install']
Deployability,"Many thanks for your help! Your comment is very useful to me. Now, I have installed PSI4 successfully.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56#issuecomment-40277811:74,install,installed,74,https://psicode.org,https://github.com/psi4/psi4/issues/56#issuecomment-40277811,1,['install'],['installed']
Deployability,"Many thanks! I do not remember any announcement. Perhaps, I missed it. I have install numpy and psi4 works now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/407#issuecomment-225173266:78,install,install,78,https://psicode.org,https://github.com/psi4/psi4/issues/407#issuecomment-225173266,1,['install'],['install']
Deployability,"Matt,. You accidentally typed. scf(‘energy’). instead of. energy(‘scf’). Normally you’d get a more useful python error related to calling an undefined function but, unfortunately, the scf function does exist in this case so you got a more obscure error message. Andy. > On Apr 19, 2015, at 9:53 PM, Matt Ernst notifications@github.com wrote:; > ; > Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message; > ; > Traceback (most recent call last):; > File ""<string>"", line 59, in <module>; > Boost.Python.ArgumentError: Python argument types in; > psi4.scf(str); > did not match C++ signature:; > scf(void); > scf(P7_object, P7_object); > Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange.; > ; > #methane test; > ; > molecule {; > #charge multiplicity; > 0 1; > C0 0.000000 0.000000 0.000000; > H0 1.092199 0.000000 -0.000001; > H0 -0.364063 0.138497 1.020380; > H0 -0.364067 -0.952923 -0.390247; > H0 -0.364068 0.814425 -0.630132; > }; > ; > set globals {; > reference RHF; > maxiter 999; > }; > ; > basis {; > assign C0 C0bas; > assign H0 H0bas; > #C 3-21G; > [ C0bas ]; > cartesian; > ; > ---; > ; > C 0 ; > S 3 1.00; > 172.2560000 0.0617669 ; > 25.9109000 0.3587940 ; > 5.5333500 0.7007130 ; > SP 2 1.00; > 3.6649800 -0.3958970 0.2364600 ; > 0.7705450 1.2158400 0.8606190 ; > SP 1 1.00; > 0.1958570 1.0000000 1.0000000 ; > ; > ---; > ; > #H 3-21G; > [ H0bas ]; > cartesian; > ; > ---; > ; > H 0 ; > S 2 1.00; > 5.4471780 0.1562850 ; > 0.8245470 0.9046910 ; > S 1 1.00; > 0.1831920 1.0000000 ; > ; > ---; > ; > }; > ; > ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79#issuecomment-94352477:663,install,installed,663,https://psicode.org,https://github.com/psi4/psi4/issues/79#issuecomment-94352477,1,['install'],['installed']
Deployability,Maybe we could set `-DENABLE_simint=OFF` automatically in cmake when AM>7 is requested?; Is that a reasonable cmake configuration goal @loriab ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-869457099:116,configurat,configuration,116,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-869457099,1,['configurat'],['configuration']
Deployability,"Me neither. Oh well, easier for me to patch up than outsider anyway. Plus, I finally figured out why `@using_snsmp2`, `@using_cppe`, etc. weren't enabling/skipping tests as they ought -- will be fixed in next qcel.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1929#issuecomment-643563633:38,patch,patch,38,https://psicode.org,https://github.com/psi4/psi4/pull/1929#issuecomment-643563633,1,['patch'],['patch']
Deployability,Molden Writer update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2229:14,update,update,14,https://psicode.org,https://github.com/psi4/psi4/pull/2229,1,['update'],['update']
Deployability,Molecule Mass and Z Update for Ghosts,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/990:20,Update,Update,20,https://psicode.org,https://github.com/psi4/psi4/pull/990,1,['Update'],['Update']
Deployability,"Most errors appear to be related to formatting, which is likely caused by a mismatch of formatters used by Psi4 upstream and FreeBSD. The latter could have an older version, for example. There are errors related to missing functionals in Libxc. Looks like FreeBSD only has Libxc 6.0.0 released over a year ago. E.g. HYB_GGA_XC_R2SCAN0 was only added in Libxc 6.1.0. Is the version check in Psi4 not stringent enough or was it disabled in the FreeBSD build?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3099#issuecomment-1848328400:285,release,released,285,https://psicode.org,https://github.com/psi4/psi4/issues/3099#issuecomment-1848328400,1,['release'],['released']
Deployability,"Moved to 1.5 per discussion on conference call. It's not worth the further delay to the 1.4 release, given that most users will get Psi from conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046#issuecomment-815133710:92,release,release,92,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-815133710,1,['release'],['release']
Deployability,"My build is broken again, but, if it's any use, the below was working last week for building this branch from anaconda python. Would an internal boost build be worth trying?. ```; source /theoryfs2/common/software/intel2016/bin/compilervars.sh intel64. cmake -H. -Bobjdir5 \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DCMAKE_Fortran_COMPILER=ifort \; -DCMAKE_INSTALL_PREFIX=/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr/install \; -DCMAKE_BUILD_TYPE=release \; -DPYTHON_EXECUTABLE=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/bin/python2.7 \; -DPYTHON_LIBRARY=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/lib/libpython2.7.so \; -DPYTHON_INCLUDE_DIR=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/include/python2.7 \; -DSPHINX_ROOT=/theoryfs2/ds/cdsgroup/miniconda/envs/sphinxenv; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235113769:432,install,install,432,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235113769,2,"['install', 'release']","['install', 'release']"
Deployability,"My guess is that pybind11 didn't update in your build directory. Were you reusing a build directory from pre ```git pull```? If so, that's the issue, create a new build directory, configure, and make and it should work. I just built psi4 in a clean build directory with gcc 5.4. If not, then we'll look into it more.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273460491:33,update,update,33,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273460491,1,['update'],['update']
Deployability,"My impression is that raw pointers are still fine (and widespread) for single module and single class usage, especially for picking data out of a larger structure to send to BLAS, so I wouldn't feel obliged to modernize those. But yeah, if today you'd type `std::vector` for a usage without a second thought, it'd be nice to update.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1877#issuecomment-632771603:325,update,update,325,https://psicode.org,https://github.com/psi4/psi4/issues/1877#issuecomment-632771603,1,['update'],['update']
Deployability,"My issue here seems specific to our cluster. I have no problems on my workstation or our second cluster. Maybe the old (gcc 4.7.2) on the cluster makes troubles together with the local installation of gcc 4.9.4. But I have no real desire to dig into this... Btw, uncommenting these cmake debug messages did produce no output at all (or I did something wrong)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/657#issuecomment-289040592:185,install,installation,185,https://psicode.org,https://github.com/psi4/psi4/issues/657#issuecomment-289040592,1,['install'],['installation']
Deployability,"My laptops finds accelerate on Yosemite without any options set as well. Could this be a Xcode issue?. -Daniel Smith; Sent from my iPhone. . > On Jul 16, 2015, at 18:37, Justin Turney notifications@github.com wrote:; > ; > We should not have to explicitly state the usage of the Accelerate; > framework. The test for the system BLAS is sufficient as libblas.\* and; > liblapack.\* both reference Accelerate. This has been the case for the last; > several versions of Mac OS X. Is this not the case of other people's Macs?; > ; > -Jet; > ; > ls -l /usr/lib/libblas\* /usr/lib/liblapack*; > /usr/lib/libblas.dylib ->; > ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib; > /usr/lib/liblapack.dylib ->; > ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib; > ; > Justin Turney, Ph.D.; > Senior Research Scientist; > CCQC/UGA; > ; > On Thu, Jul 16, 2015 at 6:18 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Actually, you still do have to pass --accelerate to setup, as it's not on; > > by default. @robertodr https://github.com/robertodr , is there a reason; > > accelerate shouldn't be on by default for release builds?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/36#issuecomment-122120131.; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/36#issuecomment-122124114:1253,release,release,1253,https://psicode.org,https://github.com/psi4/psi4/issues/36#issuecomment-122124114,1,['release'],['release']
Deployability,"My pybind11 package was accepted in Fedora, so I started updating the psi4 package (which was at rc1!). It built fine on the released versions, but failed in the development version that has the newest GCC. The error(s) I get is. ```; cd /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/objdir-x86_64-redhat-linux-gnu/psi4-core-prefix/src/psi4-core-build/src/psi4/libpsio && /usr/bin/g++ -I/builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/include -I/builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src -isystem /usr/include/python3.6m -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -fopenmp -DUSING_CheMPS2 -O2 -DNDEBUG -fPIC -std=c++11 -std=gnu++11 -o CMakeFiles/psio.dir/aio_handler.cc.o -c /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc: In member function 'long unsigned int psi::AIOHandler::read(unsigned int, const char*, char*, psi::ULI, psi::psio_address, psi::psio_address*)':; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: error: 'bind' is not a member of 'std'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: note: suggested alternative: 'find'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; find; ```. Note that I've defined; ```; -DCUSTOM_C_FLAGS=-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631:125,release,released,125,https://psicode.org,https://github.com/psi4/psi4/issues/631,1,['release'],['released']
Deployability,"My thoughts are; * I'm jealous you were able to pull this off, I gave up in a fit of rage the last time I tried to do this migration; * Having 1.9 drop with `pydantic =2` constrained everywhere would be a small problem (I think that's what the contents of this PR would require?). We'd be stuck on 1.8.something, which isn't the end of the world but also not preferred.; * Waiting until the QCArchive stack works with v1/v2 at installation time and then having the next-ish Psi4 release be `pydantic =2` sounds like a great idea (I think this is what you're suggesting?)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034#issuecomment-1809334518:427,install,installation,427,https://psicode.org,https://github.com/psi4/psi4/pull/3034#issuecomment-1809334518,2,"['install', 'release']","['installation', 'release']"
Deployability,"NABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DLIBINT_OPT_AM=7 -DEXECUTABLE_SUFFIX= -DEXPLICIT_BLAS_LIB=/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so -DENABLE_AUTO_BLAS=OFF -DEXPLICIT_LAPACK_LIB=/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so -DENABLE_AUTO_LAPACK=OFF -DBOOST_INCLUDEDIR=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/include -DBOOST_LIBRARYDIR=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64 -DZLIB_ROOT=/usr -DGSL_ROOT_DIR=/cluster/apps/gsl/1.16/x86_64/gcc_4.8.2 -DHDF5_ROOT=/cluster/apps/hdf5/1.8.12/x86_64/gcc_4.8.2/serial -DEXTRA_C_FLAGS=""-ftree-vectorize -march=corei7-avx -mavx"" -DEXTRA_CXX_FLAGS=""-ftree-vectorize -march=corei7-avx -mavx"" -DEXTRA_Fortran_FLAGS=""-ftree-vectorize -march=corei7-avx -mavx"" -DCMAKE_INSTALL_PREFIX=/cluster/apps/psi4/1.0/x86_64 -DCMAKE_BUILD_TYPE=release -DCMAKE_VERBOSE_MAKEFILE=ON -DHDF5_sz_LIBRARY_RELEASE=/cluster/apps/szip/2.1/x86_64/gcc_4.8.2/lib/libsz.so -DBoost_CHRONO_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_chrono.so -DBoost_FILESYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_filesystem.so -DBoost_PYTHON_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_python.so -DBoost_REGEX_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: usin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:5595,release,release,5595,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['release'],['release']
Deployability,"NTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED TOTAL ENERGY"": (""NOCP-CORRECTED TOTAL ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY"", 1.7),; ""VALIRON-MAYER FUNCTION COUTERPOISE TOTAL ENERGY"": (""VALIRON-MAYER FUNCTION COUNTERPOISE TOTAL ENERGY"", 1.7), # note misspelling; ""VALIRON-MAYER FUNCTION COUTERPOISE INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY"", 1.7),; ``` ; - [x] added managed mode for scf gradient. it's not wholly effective at consolidating code, though, since only triggers for `gradient(""hf"")`, not `gradient(correlated)`. digits to compare has to be relaxed, but this has been seen with other qc programs, too.; - [x] Distributed driver should not be advertised for use with QCFractal at this time. It hasn't been tested in a while, and mem, cores, etc. setting may need tweaking in a non-continuous mode. Use it experimentally and report back.; - [x] n-body wrapper can no longer do embedding with internally calculated Mulliken charges. Charges must now be provided with `embedding_charges` kwarg.; - [x] stdsuite: consolidated the caller fn to remove duplicate code. added HF Hessian testing, through DF can't be uncommented until refs released in qcng.; - [x] the addition of ccsd iterations qcvar to dfocc could maybe be reverted. ## Questions; - [x] Any critical eye or independent tests that you can bring to the manybody wrapper much appreciated, @jeffschriber. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:7332,continuous,continuous,7332,https://psicode.org,https://github.com/psi4/psi4/pull/2575,2,"['continuous', 'release']","['continuous', 'released']"
Deployability,"New LinK PR opened, comments on this are certainly welcome, but I still need to make my tests and update the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-974334935:98,update,update,98,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-974334935,1,['update'],['update']
Deployability,New MRCC Release Broke Psi Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/1866,1,['Release'],['Release']
Deployability,New release of PCMSolver is up: https://github.com/PCMSolver/pcmsolver/releases/tag/v1.3.0,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-736024760:4,release,release,4,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-736024760,2,['release'],"['release', 'releases']"
Deployability,"Nice! If you're allowing general use, that might even cross off the lingering 'add RESP to psi4' ticket (https://github.com/psi4/psi4/issues/20). I've added a `bin/psi4-config` script to the installation, final contents (for the binary) below. Binary nightly build is off for the moment, because I'm working on it for other reasons, but you can see if something like the below is what you'd like. I'm concerned that it's got a lot of full paths and binary-specific (static) flags and libraries, but perhaps it can be made useful with some modifications. ``` py; #!/usr/bin/env python; # vim:ft=python. import sys; from collections import OrderedDict. def main(argv):; info = OrderedDict(); info['--cc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icc'; info['--cxx'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc' # aka PLUGIN_CXX; info['--fc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/ifort'; info['--version'] = psiver; info['--githash'] = githash; if 'ON' == 'ON':; info['--prefix'] = '/opt/anaconda1anaconda2anaconda3'; else:; info['--prefix'] = '/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl'; info['--top-level-psi4-dir'] = '/scratch/cdsgroup/conda-builds/work'; info['--max-am-eri'] = '4'; info['--python-version'] = '2.7'; info['--has-pcmsolver'] = 'ON'; info['--has-chemps2'] = 'ON'; info['--includes'] = '-I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include' # aka PLUGIN_INCLUDES; info['--defines'] = '-DHAVE_PCMSOLVER -DHAVE_DKH -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172395303:191,install,installation,191,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172395303,1,['install'],['installation']
Deployability,"No errors building with ambit enabled when I add those two lines to external/upstream/ambit/CMakeLists.txt (with just ambit added as an extra option). Adding gpu_dfcc into the build (and restarting from scratch with CMAKE_CUDA_COMPILER, CUDA_TOOLKIT_ROOT_DIR, and c and c++ compilers set to gcc-4.9) fails when building with:; ```; [ 82%] Performing configure step for 'gpu_dfcc_external'; loading initial cache file /home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/tmp/gpu_dfcc_external-cache-Release.cmake; -- Psi4 script: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/bin/psi4; -- Psi4 headers: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/include; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/down",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:532,Release,Release,532,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,1,['Release'],['Release']
Deployability,No need for this patch with psi4public.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/11#issuecomment-34667483:17,patch,patch,17,https://psicode.org,https://github.com/psi4/psi4/issues/11#issuecomment-34667483,1,['patch'],['patch']
Deployability,"No problem @andysim It was just, as you say, confusing! The updated `input.dat` is basically [`tests/props1/input.dat`](https://github.com/psi4/psi4/blob/master/tests/props1/input.dat) with CPCM for HF and KS-B3LYP. I will just update the `output.ref` and this one in ready to go :wink:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-291544765:60,update,updated,60,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-291544765,2,['update'],"['update', 'updated']"
Deployability,"No problem with `conda install psi4`, but the standalone psi4 installers (psi4conda button and curl from vergil in attached screenshot) are temporarily down due to facilities issues. <img width=""751"" alt=""Screenshot 2024-07-26 at 12 17 42 PM"" src=""https://github.com/user-attachments/assets/5a0c462c-895e-4d8e-a7f5-e233ec737aac"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199:23,install,install,23,https://psicode.org,https://github.com/psi4/psi4/issues/3199,2,['install'],"['install', 'installers']"
Deployability,"No reason you should know this, but `gcc-5-mp` is sign that the solver can't install a recent psi4 into the existing environment and so is instead going back 5+ years to a time when packages were less defensively pinned and conda only had gcc v4 available on defaults channel. I'd suggest creating a new env and specifying the python. If needed, you can specify the psi4 version. And if you've got your setup pulling from conda-forge at higher priority than defaults, you can clobber that, too. So something along the lines of the below, to be over-explicit. Also see https://psicode.org/installs/v17/ if you haven't already. If that works, but you really don't want a separate environment, then try the more explicit install into your working env and/or post back here with your `conda list`, and I'll try to see if there's any red flags. ```; conda create -n p4env python=3.9 psi4=1.7 -c defaults -c psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898#issuecomment-1468521746:77,install,install,77,https://psicode.org,https://github.com/psi4/psi4/issues/2898#issuecomment-1468521746,3,['install'],"['install', 'installs']"
Deployability,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:108,update,updated,108,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750,2,['update'],['updated']
Deployability,"No, Easybuild has support for Psi4. Maybe mentioning it in the documentation would be nice? Next to the manual install?. The point I'm trying to make here is that users should use (or tell their sysadmins to) a module system. It's no problem than to use old and new compilers and to support C++11/14/17.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105252795:111,install,install,111,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105252795,1,['install'],['install']
Deployability,"No, I have to refactor the code such that the PE stuff is Python-side only (see ToDo list above).; In the meantime, I'll hopefully a) have a first ""release"" of `cppe` ready that can be pinned in the `ExternalProject` and b) have the PR with performance improvements for electric field integrals done. Is there a deadline for the Psi4 1.4 release?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-504107769:148,release,release,148,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-504107769,2,['release'],['release']
Deployability,"No, that wasn’t intentional. If it’s new since ~12 days ago, it probably has to do with removal of the Makefile system. In any case, should integrate the plugins better with cmake and make them test cases again so that we know when they break. Thanks for the notice. Lori. > On Mar 18, 2015, at 10:42 AM, Sebastian Wouters notifications@github.com wrote:; > ; > Dear all,; > ; > I have built the latest version of psi4 with plugins:; > ; > BLA_VENDOR=Intel10_64lp CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_DUMMY_PLUGIN=ON; > and can create new plugins and compile them. However, the old examples, typically in the folder; > ; > /path/to/source/psi4/objects/plugins/; > are not generated anymore. I don't know if this was intentional?; > ; > Best regards,; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/78.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/78#issuecomment-83015983:140,integrat,integrate,140,https://psicode.org,https://github.com/psi4/psi4/issues/78#issuecomment-83015983,1,['integrat'],['integrate']
Deployability,"No, the build is clean on cerebro. This is on blueridge, but perhaps it's; the same issue? This change was just made on January 8th, which was after; we discussed the GCC header thing. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Wed, Jan 20, 2016 at 9:37 AM, Roberto Di Remigio <; notifications@github.com> wrote:. > Is this on cerebro? We discussed this issue some time ago, since it's the; > same hiccup that hinders compilation of PCMSolver on cerebro. Intel relies; > on the standard headers from some installation of GCC. The only; > non-conflicting GCC on cerebro is 4.4.6 which implemented just those 3; > overloads for std::to_string.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/220#issuecomment-173222692.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/220#issuecomment-173224110:512,install,installation,512,https://psicode.org,https://github.com/psi4/psi4/issues/220#issuecomment-173224110,1,['install'],['installation']
Deployability,"No, the content of my CMakeLists.txt is identical to the given tag. I further add that i can compile the code with gcc_4.9.2 without any problems on my lap top,; but i need to compile it on the cluster, and there we have the older version of gcc, therefore; the compilation with intel 2017. find_package(pybind11 CONFIG QUIET). if(${pybind11_FOUND}); message(STATUS ""Found pybind11: ${pybind11_INCLUDE_DIR} (found version ${pybind11_VERSION})""); add_library(pybind11_external INTERFACE) # dummy; else(); include(ExternalProject); message(STATUS ""Suitable pybind11 could not be located, building one instead.""); ExternalProject_Add(pybind11_external; GIT_REPOSITORY https://github.com/psi4/pybind11; GIT_TAG oct18ud; UPDATE_COMMAND """"; CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/external; -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DPYBIND11_CPP_STANDARD=-std=c++${PSI4_CXX_STANDARD}; -DPYBIND11_TEST=OFF; -DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}; CMAKE_CACHE_ARGS -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}; -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}; INSTALL_COMMAND ${CMAKE_MAKE_PROGRAM} install; DESTDIR=${CMAKE_BINARY_DIR}/stage); endif()",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261729566:1241,install,install,1241,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261729566,1,['install'],['install']
Deployability,"No, we haven't taken over maintainership of libint-1 from Valeev. There's a bit of history at the README of https://github.com/psi4/libint . We'll probably mirror any bugfixes that Valeev implements. The new external repo is based on libint as extracted from Psi4, not on https://github.com/evaleev/libint/releases/tag/release-1-1-6 . I did a grand diff at one point, and there were very many little changes; so many that I did not examine them further, yet they were mostly line tweaks, not insertions/deletions. That's actually interesting that you've been using Valeev's libint-1 with Psi4, and it's presumably been working just fine. I don't think any of the Psi4 development people have tried that in years. The main purpose of the psi4/libint repo has been to get libint built with CMake and to get it switched over to exporting CMake targets through `libintConfig.cmake` rather than detecting the installation through `Findlibint.cmake`. In that, we may have broken your ability to use your upstream libint-1.1.5 package, as the Psi4 build system expects to link to a `libint::int` target. If there are things we can do to make your life easier in not dealing with two libint-1's, let us know. Our external repo does respect `GNUInstallDirs`. . Psi4 will probably switch over to libint-2 when we get the time. But once again, we'll want a CMake build and exported targets. Hopefully, we'll be able to contribute those changes upstream to evaleev/libint, as we have with other projects (e.g., CheMPS2).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474#issuecomment-249616760:306,release,releases,306,https://psicode.org,https://github.com/psi4/psi4/issues/474#issuecomment-249616760,3,"['install', 'release']","['installation', 'release-', 'releases']"
Deployability,"Nope, just an oversight on my part. Good catch. Most of the changes to the tests that I made were a result of high precision checks failing (3 point f.d. vs. analytic can be a little noisy), so I was just doing trial and error to figure out where things needed to be updated. I must have missed this one, because I just saw that it timed out on my machine. Sorry about that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-235365542:267,update,updated,267,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-235365542,1,['update'],['updated']
Deployability,"Nope, they're fine! I did break the install by adding an install rule to the optional psi4so target, but that's unrelated, and I've got a fix in the works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/272#issuecomment-187809940:36,install,install,36,https://psicode.org,https://github.com/psi4/psi4/pull/272#issuecomment-187809940,2,['install'],['install']
Deployability,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79:314,install,installed,314,https://psicode.org,https://github.com/psi4/psi4/issues/79,1,['install'],['installed']
Deployability,"Normally, they are installed into /usr/local (under the stage directory). But these files go into /usr/ports under the same stage directory. It must have ran ```pwd``` or something like that during build/install.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/855#issuecomment-343778979:19,install,installed,19,https://psicode.org,https://github.com/psi4/psi4/issues/855#issuecomment-343778979,2,['install'],"['install', 'installed']"
Deployability,"Not a fluke, but not your fault either. Ask again when [Lori's patch](https://github.com/psi4/psi4/pull/2815) is merged in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1332748782:63,patch,patch,63,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1332748782,1,['patch'],['patch']
Deployability,"Not a major issue per-say since I currently run Psi4 on a Linux system, but I wanted to try it on WSL for fun. However, I kept getting curl 404s when I went to download 1.3.2. It turns out there are currently no binaries for 1.3.2 on the [download page](https://admiring-tesla-08529a.netlify.com/installs/v132/) for WSL. . Not sure if this version is broken on WSL or it's just been overlooked, figure you'd like to know!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1658:296,install,installs,296,https://psicode.org,https://github.com/psi4/psi4/issues/1658,1,['install'],['installs']
Deployability,"Not according to [this](https://www.gnu.org/licenses/gpl-howto.en.html); ""You should also include a copy of the license itself somewhere in the distribution of your program. All programs, whether they are released under the GPL or LGPL, should include the text version of the GPL. In GNU programs the license is usually in a file called COPYING. If you are releasing your program under the LGPL, you should also include the text version of the LGPL, usually in a file called COPYING.LESSER. Please note that, since the LGPL is a set of additional permissions on top of the GPL, it's important to include both licenses so users have all the materials they need to understand their rights.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/688#issuecomment-301915147:205,release,released,205,https://psicode.org,https://github.com/psi4/psi4/issues/688#issuecomment-301915147,1,['release'],['released']
Deployability,"Not looking good for a compatible patch at [GL 61](https://gitlab.com/libxc/libxc/issues/61). Sounds like best hope would be static library as discussed around https://gitlab.com/libxc/libxc/issues/59#note_84144469 . If by ""libxc included in tarball"" you mean any copying of libxc code into psi4 repo as code or tarball such that the source download produced by github has libxc, @mbanck, then that's not likely. But if you mean a special hand-constructed psi4 release tarball that includes req'd deps, then that's possible.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451262059:34,patch,patch,34,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451262059,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Not quite so great as it looks on the testing front, as I'm copying tests from one repo to another. Properly, I wanted to shift psi's testing so that each native ctest dir has a one-line mirror run through pytest. Then pytest can automatically pick up other projects' (also pytest) tests from their install locations. Thus no test duplication, tests stay synched, and all testing available for _installed_ software, too. But that seemed like a deep rabbit hole, so just copied the tests :-) Maybe at least I can keep v2rdm in working order now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/866#issuecomment-350503264:299,install,install,299,https://psicode.org,https://github.com/psi4/psi4/pull/866#issuecomment-350503264,1,['install'],['install']
Deployability,"Not really related, but I think it makes sense to roll a release candidate once the code is frozen, so people not using git master can try building and running on various platforms. That might make an immediate brown-paperbag 1.0.1 release unnecessary or less likely.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-178106520:57,release,release,57,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-178106520,2,['release'],['release']
Deployability,Not really. Libxc4 doesn't have anything that crashes. I've backported the SCAN implementation to libxc 3 at; https://gitlab.com/libxc/libxc/commit/96568b1dd36130df57d19f7037fab7afecde48a4; as it appears there's going to be a new release in that series soon.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863#issuecomment-345267250:230,release,release,230,https://psicode.org,https://github.com/psi4/psi4/issues/863#issuecomment-345267250,1,['release'],['release']
Deployability,"Not sure what you exactly mean. Setting vv10_b in the superfunctional is straightforward. I followed what was done for the LRC omega. . Ideally the user has not do anything for the pre-defined functionals once I get the -nl dashparam to work. The manual setting is more for developers who want to fit the vv10_b for a new functional. Using DFT-NL should be like using DFT-D. Having the vv10 integrator exposed to python and supplying a user-defined density would be nice. And for a post-scf VV10 correction that is probably the way to go for the scfitertopy implementation. Though this pybind is currently a level too much for me, i dont even understand the errors i get. Small steps for me ;-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/914#issuecomment-364091920:391,integrat,integrator,391,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364091920,1,['integrat'],['integrator']
Deployability,"Note that some projects distribute conda packages for general use, then tell users that if the packages don't work or if they want hardware-tuned builds, distribute conda recipes to build locally. Without some of the oddities I use, this is pretty much like distributing a do-configure that's guaranteed to work and the resulting install is relocatable. Miniconda would be required but only python and conda-build used from it. I considered this overkill for psi4's cli-friendly developer community, but such a relocation solution is worth considering rather than doing lots of `install_name_tool`, `patchelf`, `rpath`, `@loader_path` mechanics on our own.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235927654:330,install,install,330,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235927654,2,"['install', 'patch']","['install', 'patchelf']"
Deployability,"Noted. In the current system, on the first point, you may have to use ""extra"" or ""custom"" prefixes to c_flags to get them noticed. The new cmake system will require installation, so the second point should be fixed. It was partially fixed in #410 , but you're probably wanting the add-on headers, too, that weren't addressed in that ticket.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/436#issuecomment-230783892:165,install,installation,165,https://psicode.org,https://github.com/psi4/psi4/pull/436#issuecomment-230783892,1,['install'],['installation']
Deployability,"Now *Azure* can build an optimized *Psi4*, run all the tests, and make a conda package: https://dev.azure.com/raimisg/psi4/_build/results?buildId=569. Queue time variables:; ```; cmake.build_type= Release; conda.build=true; ctest.type=full; pytest.type=full; python.version=3.6; ```. The built package is on *Anaconda*: https://anaconda.org/raimis/psi4/files. You can install and try:; ```; conda install -c raimis -c conda-forge psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1560#issuecomment-468745000:197,Release,Release,197,https://psicode.org,https://github.com/psi4/psi4/pull/1560#issuecomment-468745000,3,"['Release', 'install']","['Release', 'install']"
Deployability,"Now I get; ```; + ctest -L smoketests; Test project /builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/tests; Start 7: casscf-sp; Could not find executable ; Looked in the following places:; Release/; Release/; Debug/; Debug/; MinSizeRel/; MinSizeRel/; RelWithDebInfo/; RelWithDebInfo/; Deployment/; Deployment/; Development/; Development/; 1/12 Test #7: casscf-sp ........................***Not Run 0.00 sec; ```; It did seem to install the executable, though.; https://koji.fedoraproject.org/koji/watchlogs?taskID=104800455",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676504482:192,Release,Release,192,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676504482,5,"['Deploy', 'Release', 'install']","['Deployment', 'Release', 'install']"
Deployability,"Now I have install a fresh binary version (Psi4 0.4.16) and run the same input and get:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914770; REF Energy (a.u.) : -25.94513055914770; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150033; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408834; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973583; CD-MP2 Correlation Energy (a.u.) : -0.02151506744300; CD-MP2 Total Energy (a.u.) : -25.96664562659070; =======================================================================; ```. I also tried with another older version (Psi4 0.3.137) I still get the correct result. Hence, the new version yields wrong result while older versions give the correct result. Therefore, it should be related to the recent changes were made. I do not know how to fix it. ; @loriab @CDSherrill @andysim @jturney",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183535595:11,install,install,11,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183535595,1,['install'],['install']
Deployability,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373052900:30,update,update,30,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900,2,['update'],['update']
Deployability,"Now that #641 has been merged in, I'll go back in and update the memory setting section. @loriab, should I do that in my repo, or somewhere else since it needed some massaging for nbsphinx to take it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/637#issuecomment-285992716:54,update,update,54,https://psicode.org,https://github.com/psi4/psi4/pull/637#issuecomment-285992716,1,['update'],['update']
Deployability,Now uses ```core.get_num_threads()``` to determine the number of threads to use with MRCC; this can be overridden by ```MRCC_OMP_NUM_THREADS```. Updates documentation with reference to Kallay's CCSDT(Q)/A and CCSDT(Q)/B paper and makes note about CCSDT(Q)/B being used by default and cites Martin's paper. I couldn't compile the documentation so please let me know if the formatting is off.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/634#issuecomment-287899667:145,Update,Updates,145,https://psicode.org,https://github.com/psi4/psi4/pull/634#issuecomment-287899667,1,['Update'],['Updates']
Deployability,"NumPY-1.24.0 got released in late December, and Debian's psi4 (still based on 1.3 due to LibInt) now fails (most of) the testsuite like this:. ```; 133/143 Test #406: python-curve .....................***Failed 0.42 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/tests/python/curve/input.py"", line 21, in <module>; out[d] = psi4.energy('SCF', molecule=geom); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/procrouting/proc.py"", line 1276, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/p4util/python_helpers.py"", line 115, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/p4util/python_helpers.py"", line 79, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(; ^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/libmintsbasisset.py"", line 635, in pyconstruct; mol = Molecule(mol); ^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/molecule.py"", line 143, in __init__; self._internal_from_dict(molrec, verbose=verbose); File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/molecule.py"", l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2865:17,release,released,17,https://psicode.org,https://github.com/psi4/psi4/issues/2865,1,['release'],['released']
Deployability,"Numpy `.so` that links BLAS can be found at `python -c ""import os; import numpy as np; print(os.path.dirname(np.__file__))""` + `/numpy/core/multiarray.*.so`. Where the star depends on your python installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1007#issuecomment-387923462:196,install,installation,196,https://psicode.org,https://github.com/psi4/psi4/issues/1007#issuecomment-387923462,1,['install'],['installation']
Deployability,Numpy scipy version mismatch on default conda executable install of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2661:57,install,install,57,https://psicode.org,https://github.com/psi4/psi4/issues/2661,1,['install'],['install']
Deployability,Numpy update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/751:6,update,update,6,https://psicode.org,https://github.com/psi4/psi4/pull/751,1,['update'],['update']
Deployability,"O install it last week, so I should be using de last version. I download the script version py3.6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373016592:2,install,install,2,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373016592,1,['install'],['install']
Deployability,"OInt::create_sieve_pair_info()` function via the new wrapper function `TwoBodyAOInt::initialize_sieve()`. Multiple JK builds rely on values of variables initialized via `create_sieve_pair_info()` , and `initialize_sieve()` is now used to initialize the required variables if `SCREENING = NONE` is set. In this way, `SCREENING = NONE` can exist with the benefits it provides, while still working with all JK builds. Also, changes are made to ensure that no screening actually occurs in JK builds when `SCREENING` is set to `NONE`. In line with the above, some tests have been expanded. `test_comprehensive_jk_screening.py` has been changed to account for the `SCF_TYPE`/`SCF_SUBTYPE`/`SCREENING` combinations that were fixed. `test_erisieve.py` has been updated to more thoroughly test `SCREENING=NONE`. It is worth noting that, unfortunately, `TwoBodyAOInt::initialize_sieve()` must be defined per integral engine, and so the fixes of this PR only work with Libint2. The issues this PR tries to fix, still persist if Simint is used instead. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new function to `TwoBodyAOInt`, `initialize_sieve`, which allows for manual initialization of screening variables via `create_sieve_pair_info()` needed for JK builds.; - [X] Uses the above function to fix combinations of `SCF_TYPE`, `SCF_SUBTYPE`, and `SCREENING` which were broken.; - [X] Updates the `test_comprehensive_jk_screening.py` and `test_erisieve.py` test to account for the previously-described fixes. ## Questions; -[] Should we keep the `initialize_sieve` name? I named it as such, because it is basically a light wrapper to manually call `create_sieve_pair_info`. But the name of ""sieve"" might be objectionable. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3060:2276,Update,Updates,2276,https://psicode.org,https://github.com/psi4/psi4/pull/3060,1,['Update'],['Updates']
Deployability,"OK, I think I've got it working on my local machine. Using the Psi4 input file you provided I obtain the following Mulliken charges:. ```; Mulliken Charges; ================; N 0.0380; H -0.2743; H 0.0121; H 0.2242. Sum of Mulliken Charges: 0.0000; ```. I'll get the patch pushed in shortly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60#issuecomment-54483620:267,patch,patch,267,https://psicode.org,https://github.com/psi4/psi4/issues/60#issuecomment-54483620,1,['patch'],['patch']
Deployability,"OK, I've reverted that change and updated gpu_dfcc to have find_package(CUDA REQUIRED). Aside from the large memory requirement @loriab mentioned, I think everything is good on the psi4 and gpu_dfcc sides.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/997#issuecomment-397381557:34,update,updated,34,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397381557,1,['update'],['updated']
Deployability,"OK, installed 1.3 and the littering is gone, thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475862946:4,install,installed,4,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475862946,1,['install'],['installed']
Deployability,"OK, my bad. I checked in this fix for this problem in the library own repository PCMSolver/pcmsolver@affeac5528b4e31d76c2c5a7b2777afe39e57c5d but forgot to update the version in Psi4... I'll do it in a minute.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/207#issuecomment-171085200:156,update,update,156,https://psicode.org,https://github.com/psi4/psi4/issues/207#issuecomment-171085200,1,['update'],['update']
Deployability,"OK, switched to python 2.7 and all is fine.; -Rollin. On Mon, Mar 14, 2016 at 9:48 AM, Lori A. Burns notifications@github.com; wrote:. > Oh bother, python 2.6 doesn't have dictionary comprehensions. I updated; > qcdb within the last couple weeks with accumulated improvements and python; > 3.5 prep.; > ; > It doesn't look like I use dictionary comprehensions all that much, so you; > can try the following, then report any subsequent errors.; > ; > ```; > return {db: odb.integer_reactions() for db, odb in self.dbdict.items()} # replace this; > return dict((db, odb.integer_reactions()) for db, odb in self.dbdict.items()) # with this; > ```; > ; > Or, would you like to give python 2.7 a try? Do the binary instructions (; > http://psicode.org/psi4manual/master/conda.html#quick-installation); > through the conda update step (replace ""Linux"" with ""MacOSX"" in installer; > file name, if on Mac), be sure your which python points to 2.7, then; > compile psi4 with --python $MINICONDA/bin/python. When we get around to; > supporting python3.5, python2.6 support may go.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/310#issuecomment-196346044.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196569625:201,update,updated,201,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196569625,4,"['install', 'update']","['installation', 'installer', 'update', 'updated']"
Deployability,"OK, this should be working 100% now. The output looks correct on all the systems I've run so far, and I've added tests. I initially tried to use H2O, but it seems there's something weird going on with the CI wave functions there. Namely, when the CI wave function appears to flip its overall sign between the computed and the reference wave function, there are some configurations that *do not* flip their sign. I guess this must be some weird thing to do with symmetry, in that the wave function can individually flip signs within symmetry subblocks...?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301282245:366,configurat,configurations,366,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301282245,1,['configurat'],['configurations']
Deployability,"OK, this sounds like a possible plan. I'm going to try to update dfocc.h and replace orbital related ints with long long ints... fingers crossed it'll work :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679#issuecomment-511959405:58,update,update,58,https://psicode.org,https://github.com/psi4/psi4/issues/1679#issuecomment-511959405,1,['update'],['update']
Deployability,"OK, with Clang built in release mode I get:; - For `-G""Ninja""`; ```; real	7m35.581s; user	31m11.930s; sys	2m7.600s; ```; - For `-G""Unix Makefiles""`; ```; real	8m9.513s; user	31m30.395s; sys	3m24.407s; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794#issuecomment-336326567:24,release,release,24,https://psicode.org,https://github.com/psi4/psi4/pull/794#issuecomment-336326567,1,['release'],['release']
Deployability,"OK. About the brown-paperbag, I've now looked it up in the hacker dictionary, and I didn't mean it in that sense, sorry. I use it in the sense of ""maintainer successfully built and tested on their machine, but it's obviously broken on a different configuration they did not test"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-178169351:247,configurat,configuration,247,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-178169351,1,['configurat'],['configuration']
Deployability,"OK. I added a test that also servers as an example on some details. Combinations of empty, X-only, C-only and multiple X,C kernels are being tested. Also check out the updated OP.; I am happy with the functionality. This would be ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-612518067:168,update,updated,168,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-612518067,1,['update'],['updated']
Deployability,"OK... I managed to get gpu_dfcc built as a separate tree using gcc/g++ 5.5.0 by adding; `-DCMAKE_PREFIX_PATH` (pointing at `psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK`); and; `-DOpenMP_LIBRARY_DIRS=/opt/intel/compilers_and_libraries_2018.3.222/linux/compiler/lib/intel64_lin` ; to the do-configure script. (I'm not sure how that would translate into building it within the psi4 build.). gcc/g++-4.9 gave me compile errors about missing symbols and gcc/g++-6 triggers a known bug with the version of CUDA I have on Debian (9.1.85). (If I had gcc/g++-6 installed and told it to use 4.9, cmake still tried to pull in a load of headers from V6!). It's built, installed into my installed psi4 tree and the gpu_dfcc test jobs run happily with reasonable looking bits about the GPU in the output file. I suspect I'll need to try a bigger job to see what it's really doing, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400462333:566,install,installed,566,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400462333,3,['install'],['installed']
Deployability,"OS: Windows 10. I downloaded the psi4 installation executable and ran the commands from the manual as described. >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. psi4 is unrecognizable after installation, but I added the directory to my path. . rerunning psi4 -- test gives following error:. `C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:38,install,installation,38,https://psicode.org,https://github.com/psi4/psi4/issues/2236,3,"['Install', 'install']","['InstallationType', 'installation']"
Deployability,"Obligatory @susilehtola and @hokru pings. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Improved UKS gradient parallelization. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Commented LSDA gradients; - [x] Synchronizing of RKS and UKS gradient code is **deferred** to a separate PR. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2839:175,release,release,175,https://psicode.org,https://github.com/psi4/psi4/pull/2839,1,['release'],['release']
Deployability,"Observations:; * RMcG found that psi4 Mac conda pkg (linked to native Accelerate) and numpy conda pkg (linked to in-env MKL) was fragile wrt psi4/numpy import ordering; * DGAS found that psi4 built from source (linked to native Accelerate but managing its own RPATH) and numpy conda pkg (linked to in-env MKL) was steady wrt psi4/numpy import ordering; * LAB found that psi4 built from source on Linux (linked to in-env OpenBlas) and numpy conda pkg (linked to in-env MKL) was fragile wrt numpy operation w/i psi4. Conclusions:; * Linking to multiple math libs in the same conda env is risky (perhaps more so on Mac than Linux); * Best solution for Mac is to just link Psi4 to MKL, not Accelerate if installing psi4 into same env as numpy (which, for ease of use and distribution, we want to do); * Requires mix and match of default-channel MKL and intel-channel mkl-include (for `mkl.h`) to get full py27/py35/py36 stack; * In practice, rolling this out along with `sse4.1` ""Illegal Instruction 4"" fix for old Mac hardware, so expect solutions in the coming week, rather than the coming day.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-312305798:700,install,installing,700,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-312305798,2,"['install', 'rolling']","['installing', 'rolling']"
Deployability,"Oh bother, python 2.6 doesn't have dictionary comprehensions. I updated qcdb within the last couple weeks with accumulated improvements and python 3.5 prep. It doesn't look like I use dictionary comprehensions all that much, so you can try the following, then report any subsequent errors. ```; return {db: odb.integer_reactions() for db, odb in self.dbdict.items()} # replace this; return dict((db, odb.integer_reactions()) for db, odb in self.dbdict.items()) # with this; ```. Or, would you like to give python 2.7 a try? Do the binary instructions (http://psicode.org/psi4manual/master/conda.html#quick-installation) through the `conda update` step (replace ""Linux"" with ""MacOSX"" in installer file name, if on Mac), be sure your `which python` points to 2.7, then compile psi4 with `--python $MINICONDA/bin/python`. When we get around to supporting python3.5, python2.6 support may go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196346044:64,update,updated,64,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196346044,4,"['install', 'update']","['installation', 'installer', 'update', 'updated']"
Deployability,"Oh dear, I see your PR has become contaminated by non-you commits. This probably happened because you rebased to pull in changes from upstream, tried to push, GH told you that's not a fast-forward so you probably want to pull, you pulled, then pushed. Hence current state. In this instance, that was bad advice from git. From step 9 or the `git push -f origin fastci` text of http://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow, what you really want to do in this case is *force push without pulling*. Because you're the only one using that branch on your fork, this is quite safe, and no one will chase you with pitchforks :-). Don't feel bad about about doing this wrong. Most everyone in the psi connection has done this (I did it three times in succession). Next step is to heal your branch. Don't do anything more on that branch locally. Check out master and update it to upstream. Check out a new branch, then apply the commits that are yours. Test and then force push back to GH to the branch that GH knows to be associated with this PR. ```; git checkout master; git pull --rebase upstream master; git checkout -b new_sinf; git cherry-pick b2b49f6; git cherry-pick 147f5b2; ...; # I'm applying the commits you authored in order, just reading the hashes from this webpage above; # it's possible but unlikely that you'll have to resolve conflicts; ...; git cherry-pick 502d234; # build and test; git push origin new_sinf:e2_exch_disp_sinf -f # force added in edit 15 May 2019; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1490#issuecomment-457765390:889,update,update,889,https://psicode.org,https://github.com/psi4/psi4/pull/1490#issuecomment-457765390,1,['update'],['update']
Deployability,"Oh yeah, on linux you can try out `conda install psi4 -c psi4/label/agg` . It's a basic compile and low AM integrals, and only py36, but it is using the new 7.2 conda compilers and full-length prefix padding. (Still segfaults linux jupyter `import psi4`, though.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/812#issuecomment-347016842:41,install,install,41,https://psicode.org,https://github.com/psi4/psi4/issues/812#issuecomment-347016842,1,['install'],['install']
Deployability,"Oh, I meant that it looks like your installer was from this page (https://psicode.netlify.app/installs/v14rc1/) rather than this page (https://psicode.netlify.app/installs/v14rc2/). May as well try the most recent.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-874976689:36,install,installer,36,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874976689,3,['install'],"['installer', 'installs']"
Deployability,"Oh, I see you suggested some code changes. I guess that would do the trick; however, the point of `set maxiter 0` is exactly that one would not need to `set fail_on_maxiter false` since taking 0 SCF iterations means that the orbitals aren't updated. `fail_on_maxiter` should only be checked if `maxiter > 0`!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2073#issuecomment-784464192:241,update,updated,241,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-784464192,1,['update'],['updated']
Deployability,"Oh, sorry I missed the message about the TOCLEN. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Mon, Apr 4, 2016 at 10:21 AM, Daniel Smith notifications@github.com; wrote:. > The job did not have enough memory and failed due to a TOCLEN error. I; > shot you a gchat about this awhile back, but did not receive a response and; > consequently forgot about it.; > ; > > On Apr 4, 2016, at 10:03 AM, T. Daniel Crawford <; > > notifications@github.com> wrote:; > > ; > > What was the bug in cc5?; > > ; > > ## ; > > ; > > Prof. T. Daniel Crawford; > > crawdad@vt.edu; > > ; > > On Mon, Apr 4, 2016 at 9:32 AM, Daniel Smith notifications@github.com; > > wrote:; > > ; > > > @lothian https://github.com/lothian I fixed cc5 in this branch. cc5; > > > now; > > > runs, passes, and the output.ref is updated.; > > > ; > > > —; > > > You are receiving this because you were mentioned.; > > > Reply to this email directly or view it on GitHub; > > > https://github.com/psi4/psi4/pull/315#issuecomment-205297042; > > > ; > > > —; > > > You are receiving this because you authored the thread.; > > > Reply to this email directly or view it on GitHub <; > > > https://github.com/psi4/psi4/pull/315#issuecomment-205307609>; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/pull/315#issuecomment-205318258",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205319180:793,update,updated,793,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205319180,1,['update'],['updated']
Deployability,"Oh, this should have been changed at some point to correctly drop these to PSI_SCRATCH. However, it doesn't look like this is present in master. I wonder if this was overwritten at some point... ill make a patch for this sometime today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/646#issuecomment-285708645:206,patch,patch,206,https://psicode.org,https://github.com/psi4/psi4/issues/646#issuecomment-285708645,1,['patch'],['patch']
Deployability,"Ok starting to see the problem, although I don't know how it happened. v0.7 that is posted doesn't have this commit, which fixed it just prior to release: https://github.com/simint-chem/simint-generator/commit/7ea0109da8fe756903eed48b79f772ec2646b69a#diff-5a855f00d19271887654b21b58214a87. I have a feeling this was due to a change in the way I build my website... @loriab you wouldn't happen to have a simint-v.0.7 tarball from your conda builds, do you?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-357044640:146,release,release,146,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-357044640,1,['release'],['release']
Deployability,"Ok thanks for the summary. I agree the current behavior is logical, and; also that there is an inconsistency between Zmat and Cartesians that could; confuse a user. I am very happy there is a little warning printed by the; code if the user is updating the Cartesian coordinates. Perhaps that; warning could be updated to say something like ""(multipole moments of; charged molecules may be affected)"" or something? And/or a sentence or two; in whatever section of the manual might cover something like this?. I also recommend expanding the comment in the props2/input.dat from ""#; Force COM for pole computation"" to the more detailed ""# Force COM; translation so multipoles of charged molecule will match reference values"". On Tue, Sep 26, 2017 at 2:50 PM, Daniel Smith <notifications@github.com>; wrote:. > Im still not completely sure that there is a way to bridge the two.; > Ultimately the modification in-place leads to quite a few errors; however,; > the Psithon API make the in-place a logical operation.; >; > It would be better to do something like:; >; > new_mol = molecule.update({""var1"": 5, ""var2"": 6}); >; > or something similar. Getting that across in something like Psithon would; > be difficult I think.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/782#issuecomment-332298418>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdlu-db-VElBfiw-oAMiX7_n0LAOsks5smUeIgaJpZM4O79qb>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/782#issuecomment-332340271:310,update,updated,310,https://psicode.org,https://github.com/psi4/psi4/issues/782#issuecomment-332340271,2,['update'],"['update', 'updated']"
Deployability,"Ok then no point of trying the ```psi-dev``` as I'm on a Mac but want to use ```gcc``` (right?). @loriab I just reinstalled python few days ago with homebrew. Before it was installed with the psi4conda package but I decided to get rid of it for now, as I want the source version of the code. But then I reainstalled numpy using pip, as follows, so I guess it's ok?:. ```; >>> pip3 install numpy; Requirement already satisfied: numpy in /usr/local/lib/python3.7/site-packages (1.18.2)```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614793642:173,install,installed,173,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614793642,2,['install'],"['install', 'installed']"
Deployability,"Ok, 3 min to inspect and fix code, 1 hr to access it in an actual job to check it's doing the right thing. That `_AM` bit is only in local, which isn't hit by any test case. If you turn on local, it complains about no Weak Pairs TOC entry. Fair enough. Transplant code to main ccsort for better observation, but ccsort is turned off in favor of cctranssort. Force ccsort. Possible helpful note: from objdir, it's not ../psi4/share that's running _unless_ it's been through an install. Rather, stage/... is running. Anyway, change made and it should work, not that anyone could know :-) CC codes free of libint deps. Thanks Andy and Jet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240466044:476,install,install,476,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240466044,1,['install'],['install']
Deployability,"Ok, @andysim and @rmcgibbo, try out a mkl-built psi4 for Mac and see if it fixes both, either, or none of your problems. This is a minimal build with libint (am4) and libxc as internal dylibs. Install into a new env with. ```; >>> conda create -n idp35 psi4test python=3 -c intel -c psi4; >>> source activate idp35; ```. ```; >>> otool -L lib/python3.5/site-packages/psi4/core.so ; lib/python3.5/site-packages/psi4/core.so:; 	@rpath/core.so (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libxc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libderiv.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libint.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```. The env should look like this. Note that py36 is _not_ avail. Also, do _not_ install this into the main env of an anaconda or miniconda – subenvs only.; ```; >>> conda list; # packages in environment at /Users/loriab/linux/miniconda3/envs/idp35:; #; icc_rt 16.0.3 intel_6 [intel] intel; intelpython 2017.0.3 4 intel; mkl 2017.0.3 intel_6 [intel] intel; numpy 1.12.1 py35_intel_8 [intel] intel; openmp 2017.0.3 intel_8 intel; openssl 1.0.2k intel_3 [intel] intel; pip 9.0.1 py35_intel_0 [intel] intel; psi4test 1.2a1.dev370+d9c89ae py35_6 psi4; py 1.4.34 py35_0 defaults; pytest 3.1.2 py35_0 defaults; python 3.5.3 intel_1 [intel] intel; setuptools 27.2.0 py35_intel_0 [intel] intel; sqlite 3.13.0 intel_14 [intel] intel; tcl 8.6.4 intel_16 [intel] intel; tk 8.6.4 intel_26 [intel] intel; wheel 0.29.0 py35_intel_5 [intel] intel; xz 5.2.2 intel_15 [intel] intel; zlib 1.2.11 intel_2 [intel] intel; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311866695:193,Install,Install,193,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311866695,2,"['Install', 'install']","['Install', 'install']"
Deployability,"Ok, @bennybp and @ryanmrichard, take a look at https://github.com/loriab/psi4/commit/ea33ace7bcfcf7aff42f07a1399ae022508ca757, please. Sorry it's not so clean as I'd like, but our server's going down soon. **What it does**; - when libgdma is dynamic and; - `ENABLE_gdma` is on and `CMAKE_PREFIX_PATH` and `gdma_DIR` unspecified, builds externalproject downloaded from www.github.com/loriab/gdma and detects it and links it properly (no real change from your setup besides origin of code from user perspective); - `ENABLE_gdma` is on and `CMAKE_PREFIX_PATH` points to a pre-built installation, detects that and links to it properly; - The gdmaConfig exports all the usual suspect CMake variables (library, libraries, include_dir, include_dirs) (see below) but also; - manages requesting static shared, e.g., `find_package(gmda CONFIG REQUIRED COMPONENTS shared)`; - manages version requests; - exports a target `gdma::gdma` that has all its location, includes, `-DUSING_gdma` compiler definition, properties attached.; - so, after `find_package(gdma CONFIG REQUIRED)`, you don't have to add a library or use the usual suspects. Instead, just attach as needed (though I still think the second one should be simpler); - `target_link_libraries(psi4_exe PUBLIC gdma::gdma)`; - `target_compile_definitions(gdma_interface PRIVATE $<TARGET_PROPERTY:gdma::gdma,INTERFACE_COMPILE_DEFINITIONS>)`. ```; gdma_FOUND : 1; gdma_VERSION : 2.2.06; gdma_INCLUDE_DIRS : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_INCLUDE_DIR : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_LIBRARIES : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; gdma_LIBRARY : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/sta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:579,install,installation,579,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,1,['install'],['installation']
Deployability,"Ok, @psi4/maintainers and @psi-rking, this mammoth is ready to review. I've updated the RN at the top, and I recommend reading them over before meeting the code. Nitpick away (esp. at numpy stuff that I was still learning at the start), and feel free to question the broader (esp. vibanal) logic flow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834#issuecomment-362098903:76,update,updated,76,https://psicode.org,https://github.com/psi4/psi4/pull/834#issuecomment-362098903,1,['update'],['updated']
Deployability,"Ok, I just pushed a (still slightly broken) version that changes the libint2 interface very significantly, and almost has gradients working. The problematic derivatives are those where the angular momentum is greater in the bra than the ket, so perhaps that's a limitation that I need to resolve by ensuring loops satisfy ang mom constraints. Here's how I built the code in case anybody wants to replicate... 1. Clone the libint2 repo and checkout the v2.6 branch. 2. `LIBS=-L/u/andysim/anaconda3/lib CXXFLAGS=""-std=c++14 -I/u/andysim/anaconda3/include"" ../configure --enable-eri=2 --enable-eri3=2 --enable-eri2=2 --with-eri-max-am=5 --with-eri2-max-am=6 --with-eri3-max-am=6 --with-shgauss-ordering=gaussian --prefix=/u/andysim/programming/libint/installdir3 --enable-eri2-pure-sh --enable-eri3-pure-sh`. 3. `make install` (this will take a *very* long time). 4. `make export` - this will generate a tarball that can be used to build a version for Psi4 called `libint-2.7.0-beta.1.tgz`. 5. Untar that tarball somewhere else and modify the file `include/libint2_params.h` to read; ```; #ifndef LIBINT2_MAX_AM_default; # define LIBINT2_MAX_AM_default 4; #endif. #ifndef LIBINT2_MAX_AM_default1; # define LIBINT2_MAX_AM_default1 LIBINT2_MAX_AM_default; #endif. #ifndef LIBINT2_MAX_AM_default2; # define LIBINT2_MAX_AM_default2 LIBINT2_MAX_AM_default; #endif; ```; from line 81 onwards. 6. Make a `build` subdir and from there `cmake .. -DCMAKE_INSTALL_PREFIX=/u/andysim/programming/libint/installdir_2.6 -DLIBINT2_SHGAUSS_ORDERING=gaussian -DCMAKE_CXX_FLAGS=""-fPIC""` The fPIC flag is needed, or you'll get some nasty link errors. 7. Now you can build Psi4. Yay! `cmake .. -DCMAKE_BUILD_TYPE=Debug -DLibint2_DIR=/u/andysim/programming/libint/installdir_2.6/lib/cmake/libint2 -DLibint_DIR=/u/andysim/programming/libint1/installdir/share/cmake/Libint -DCMAKE_CXX_FLAGS=""-g -O0 -gxx-name=/v/apps/gcc/5.4.0/bin/g++ $CXXFLAGS""` The libint1 should be the hacked version with the `Libint_t` changed to `Libint1_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417:815,install,install,815,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417,1,['install'],['install']
Deployability,"Ok, I think this all goes back to the physconst update that introduced a discontinuity in the reference for two points: (wait for full load and jump) https://github.com/psi4/psi4/commit/64ea27fc1afc8fbcaf87eb03304eb8b40e99bf23#diff-4fd9a0a7922adf8bb30dbcc1278ab5d0R12 and following line (6.2 and 6.3 occ). Going to reset the reference unless @robparrish says nay. Also going to set non-zero for 6.5 occ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-123487770:48,update,update,48,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-123487770,1,['update'],['update']
Deployability,"Ok, I understand what's going on now. Background is that the windows package goes through a different build process than linux and mac, so it doesn't get pinned as well as it ought (particularly, in this case, for qcelemental and qcengine). And the psi4 channel used to have to host some non-qc packages (like pydantic and pint) before the big base channels (defaults, conda-forge) had the needed versions. Anyway, the env you show has very old (10 releases behind) qcel and qcengine packages, and those use pre-1.8.2 pydantic. The solution is to switch the channel order `-c conda-forge -c psi4` so that only the few packages needed from the psi4 channel (psi4 itself, libint2) get pulled from it. Thanks for alerting us to this issue. For future reference, I'll post this handy command that lets one solve windows environments from non-win platforms: `CONDA_SUBDIR=win-64 conda create -n winprob python=3.8 psi4 -c psi4 -c conda-forge`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1161833721:449,release,releases,449,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1161833721,1,['release'],['releases']
Deployability,"Ok, I'll pull in that test case in the chemps2 follow-up PR. So, [1] I'll accept this after travis re-certifies it, [2] I'll re-rebase #383 , [3] anytime after that one re-certifies, I think it's ready for merging. For anyone following this thread for binary updates, there are now mac versions of 1.7 chemps (libs and bin) and pychemps (py interface) at https://anaconda.org/psi4 . They're untested until either (a) this PR merges into psi4 or (b) I find a small enough test case w/i the chemps2 repo. @SebWouters , I'd like to find a < 30 s test case, but the compiled or py tests churn away for several minutes on my laptop before I kill them. Does this sound like incorrect behavior? Or, if correct, is a shorter test case manageable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223826600:259,update,updates,259,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223826600,1,['update'],['updates']
Deployability,"Ok, I've secured `psi4` login at sylabs. I'm for storing them where they can be found. The ""install apptainer"" GHA only had two stars, so I bet there isn't a ready-made ""upload to sylabs GHA"". I'm not sure if it's doing no root or writeable filesys or anything. Do you want repo access to play with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2951#issuecomment-1536705064:92,install,install,92,https://psicode.org,https://github.com/psi4/psi4/issues/2951#issuecomment-1536705064,1,['install'],['install']
Deployability,"Ok, as promised, the QC deps for Psi4 are now available on conda-forge natively for `osx-arm64`. Note that these are cross-compiled on regular `osx-64`, so don't get tested. I'd be glad to hear if/how they're working. You can either build psi4 master and still provide your own libint or use the libint package and build a special branch of psi4. There's a c-f tracker for osx-arm64 packages at https://github.com/orgs/psi4/projects/2/views/5. #### psi4 master; `conda install gau2grid libxc-c optking qcengine -c conda-forge`; #### psi4 with #2861 ; * `conda install gau2grid libxc-c optking qcengine conda-forge/label/libint_dev::libint -c conda-forge`; * or `conda install gau2grid libxc-c optking qcengine libint -c conda-forge/label/libint_dev -c conda-forge` (channel order matters)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-1474685603:469,install,install,469,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-1474685603,3,['install'],['install']
Deployability,"Ok, good, I was still trying to untangle what were your srcdirs, objdirs, installdirs, etc. Yes, in ~1.1 and beyond you really shouldn't ever have to set PSIDATADIR. But having it set can definitely confuse everything, which you've found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565#issuecomment-271978963:74,install,installdirs,74,https://psicode.org,https://github.com/psi4/psi4/issues/565#issuecomment-271978963,1,['install'],['installdirs']
Deployability,"Ok, good. Now that psi4 is up-to-date with cb3 and defaults libraries, it's possible to install it into the base env (that was a bad idea when psi4 was distributing gcc52 alongside), but there's still enough turbulence among the big channels that own env is a safer bet. Btw, if your base env is longstanding and contains `gcc-5-mp`, that's a non-modern-psi artifact that can be gotten rid of.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1036#issuecomment-395781344:88,install,install,88,https://psicode.org,https://github.com/psi4/psi4/issues/1036#issuecomment-395781344,1,['install'],['install']
Deployability,"Ok, if one installs into a conda env the packages `psi4` (from us), `gcc`, and `openblas` (from default/anaconda channel), check out a new plugin from that psi4 exe, and modify the Makefile as below, it should work. . ```; # miniconda environment; MCONDA = /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug; # Flags that were used to compile Psi4.; CXX = ${MCONDA}/bin/g++; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; LDFLAGS =; LDFLAGS=""-Wl,-rpath,${MCONDA}/lib/""; INCLUDES = -I${MCONDA}/include/ -I${MCONDA}/include/psi4 -I${MCONDA}/include/python2.7 -I/usr/include; ```. more explicitly,. ```; conda create -n p4plug2 psi4; source activate p4plug2; cd p4plug2 # may vary; just get into the miniconda/envs/p4plug2 directory; conda install gcc # 4.8.5-3; psi4 --new-plugin testplug; cd testplug; vi Makefile # copy in Makefile mods above, changing MCONDA variable; cp -pR ../../p4plug/include/psi4/ ../include/ # copy in a set of psi4 headers; make; psi4 # run sample input.dat; ldd testplug.so ; linux-vdso.so.1 => (0x00007fff969fe000); libstdc++.so.6 => /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug2/lib/libstdc++.so.6 (0x00007f763d984000); libm.so.6 => /lib64/libm.so.6 (0x00007f763d65c000); libgcc_s.so.1 => /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug2/lib/libgcc_s.so.1 (0x00007f763d446000); libc.so.6 => /lib64/libc.so.6 (0x00007f763d085000); /lib64/ld-linux-x86-64.so.2 (0x00007f763de9e000); ```. @jturney, if you approve the plan, do you want to fix the includes installation and",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172256746:11,install,installs,11,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172256746,2,['install'],"['install', 'installs']"
Deployability,"Ok, it sounds like we're all in agreement on this. The situation is a bit tricky because of the many spaces needed in a general CAS-like calculation, but that doesn't matter if DETCI just handles the Fock build itself, which is the current situation. Thanks for the quick feedback, everybody. I'll approve this even though I wrote the patch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-454778525:335,patch,patch,335,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-454778525,1,['patch'],['patch']
Deployability,"Ok, new pkgs at https://anaconda.org/psi4/dkh/files (and gdma and erd) that should have a sane linkage listing. I get the following. Should be obtainable through `conda update dkh erd gdma -c psi4`. Those are the only ones I could see, and that's reasonable since I usually build the three pure fortran ones together. ```; /Users/github/builds/conda-builds/dkh_1498680189814/_t_env/lib/libdkh.dylib:; 	@rpath/libdkh.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libgfortran.3.dylib (compatibility version 4.0.0, current version 4.0.0); 	@rpath/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	@rpath/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); 	@rpath/libquadmath.0.dylib (compatibility version 1.0.0, current version 1.0.0); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/749#issuecomment-311781954:169,update,update,169,https://psicode.org,https://github.com/psi4/psi4/issues/749#issuecomment-311781954,1,['update'],['update']
Deployability,"Ok, since last review round, this adds tests for CCSD gradients and CCSD(T) energies. As there's more items stored and printed from the cc* modules (i.e., mp2 & ccsd singles), @lothian should have a chance to review. All conventional values actively compared against cfour downstream. All matchable except for _CCSD_ energy in the course of _CCSD(T)_ energy for ROHF FC (see below), though this is the realm where differences expected. I haven't experimented much, but if these differences surprise anyone or if more toggles besides canonicalize come to mind, I'd be glad to hear of them. ```; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-dz-ene0] CCSD CORRELATION ENERGY: computed value (-0.08256310) does not match (-0.08256719) to atol=1e-06 by difference (0.00000409).; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-adz-ene0] CCSD CORRELATION ENERGY: computed value (-0.17599322) does not match (-0.17598849) to atol=1e-06 by difference (-0.00000473).; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-qz2p-ene0] CCSD CORRELATION ENERGY: computed value (-0.19283228) does not match (-0.19282621) to atol=1e-06 by difference (-0.00000607).; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-627499447:517,toggle,toggles,517,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-627499447,1,['toggle'],['toggles']
Deployability,"Ok, so you've got two branches, ""devdevel_bugs"" and ""cepa_test"" and they both have the same commits. Make note of which commit hashes ought to be in each PR. Then go back to your master branch and update it wrt upstream master (`git checkout master`, `git pull --rebase upstream master`). Make a _new_ branch and apply only the appropriate commits (`git checkout -b cepa_new`, `git cherry-pick aaaa`, `git cherry-pick dddd`). Then push the new branch onto github using the name of the old branch so that the new set of fewer commits show up under the existing PR. It'll have to be a force push because you're rewriting the history of the github branch (`git push -f cepa_new:cepa_test`). Then go back to master (`git checkout master`) and repeat with the t1/d1 commits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/712#issuecomment-302948800:197,update,update,197,https://psicode.org,https://github.com/psi4/psi4/pull/712#issuecomment-302948800,1,['update'],['update']
Deployability,"Ok, sounds safe to leave the `boost::python` out for the time being and go ahead and merge this PR to get the python so `psi4.so` working again. @bennybp, you'll have noticed that I didn't do the initialize and finalize changes possibly necessary for your linux so `libpsi4.so` since I couldn't test the built product. Whenever you like, add a `libpsi4so` target to build your version. Even if the python so and the linux so are identical, I think they'll have different names and install locations (site-packages and lib, respectively), so they'll need different targets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/268#issuecomment-187021220:481,install,install,481,https://psicode.org,https://github.com/psi4/psi4/pull/268#issuecomment-187021220,1,['install'],['install']
Deployability,"Ok, thanks to your very detailed examples, I was able to track down the problem(s). If you pull the latest version of the code, it should be fixed. There's a new test case, extern1, that confirms the correctness of the gradients by finite differences. The PBE results don't seem to match the Gaussian results that you posted; I don't have access to Gaussian so I can't investigate that any further, I'm afraid. A good place to start would be an SCF calculation, because DFT grids are not uniform between packages. It's also a good idea to manually specify the basis set (Psi4 uses the G94 standard) to ensure that both packages are using the exact same functions. With these changes, the energies and gradients should match exactly; if not it's probably confusion between A/Bohr in the Gaussian input for the TIP3P fragment. Until these fixes, Psi4 assumed that the external potential was always in Bohr, but now the code will assume the same units as those used to specify the QM molecule. Good luck!. Andy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/184#issuecomment-156220388:772,A/B,A/Bohr,772,https://psicode.org,https://github.com/psi4/psi4/issues/184#issuecomment-156220388,1,['A/B'],['A/Bohr']
Deployability,"Ok, that looks fine for psi4 in its own right. Jupyter must be in a separate environment. That can also work, but it'll need a little configuration -- I'm not surprised the initial jupy couldn't find it. Pretty much `export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/` or `sys.path.append(<same>)` from the jupy env should make the connection. `psi4 --psiapi` gives the exact values. https://psicode.org/psi4manual/master/build_planning.html#how-to-run-psi4-as-executable-or-python-module-from-conda-installation may also be helpful (do set scratch if running anything non-trivial).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024:134,configurat,configuration,134,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"Ok, that makes sense. I got Psi4 by cloning the repo as usual, and it seems like I'm pulling CheMPS2 from the Miniconda p4dev (Psi4 development) environment. Using `conda update chemps2` doesn't show any available updates; the button on the CheMPS2 page says the most recent version is 1.8.4, but the Conda site says it's 1.8.3. I'll try pulling from GitHub and see if that fixes anything. Thanks for the help!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347979916:171,update,update,171,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347979916,2,['update'],"['update', 'updates']"
Deployability,"Ok, the 6311g_2d* fluorine was patched in psi4/psi4#1066. The Iodine 6311g_d, I looked up the paper and confirmed it's all-electron, not ecp. However, the paper also lists a _f_ exp for 6-311G(df) for iodine that doesn't match the existing pattern (other elements are _2df_). Since I hope to abandon this for Ben's project, I'm skipping the complication. . The Ga-Kr in Psi4 but not in EMSL a byproduct of EMSL's inconsistency is storing basis set precursors. They only define these elements in the full ""6-31G*"" basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1058#issuecomment-401920388:31,patch,patched,31,https://psicode.org,https://github.com/psi4/psi4/issues/1058#issuecomment-401920388,1,['patch'],['patched']
Deployability,"Ok, the error is a combination of utc & snowflake. Nothing to worry about, I think. Python 3.12 changed some things and Ben replaced some utc commands in the last couple of days. _But_ there was a snowflake bug that he also fixed, and we're grabbing inconsistent qcportal and fractal pieces: https://github.com/psi4/psi4/blob/master/.github/workflows/ecosystem.yml#L234 @bennybp's doing a v0.52 release in the next couple days that should fix all this. Fine to merge with these errors until then. ```; E --> snowflake = FractalSnowflake(); E client = snowflake.client(); E h2o = geometry(""""""; E O; E H 1 1.0; E H 1 1.0 2 104.5; E ; E ; E !----------------------------------------------------------------------------------!; E ! !; E ! cannot import name 'now_at_utc' from 'qcportal.utils' !; E ! (/usr/share/miniconda3/envs/p4build/lib/python3.12/site- !; E ! packages/qcportal/utils.py) !; E ! !; E !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3088#issuecomment-1831177563:395,release,release,395,https://psicode.org,https://github.com/psi4/psi4/pull/3088#issuecomment-1831177563,1,['release'],['release']
Deployability,"Ok, the mac conda package is rebuilt (https://anaconda.org/psi4/pcmsolver/files). Having some filesystem problems with the linux one. I'm not re-packaging up the installer (the large psi4conda bash file), so one would need to `conda update pcmsolver` after that installation. Haven't formulated guidelines for when installer gets updated or which `conda update`s to recommend after that installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/440#issuecomment-230793056:162,install,installer,162,https://psicode.org,https://github.com/psi4/psi4/pull/440#issuecomment-230793056,7,"['install', 'update']","['installation', 'installer', 'update', 'updated']"
Deployability,"Ok, the task of this ticket shall be:. Install changes:; - `prefix/include/*` --> `prefix/include/psi4/*`; - `share/psi/*` --> `share/psi4/*`. Source changes:; - `top-source-dir/lib/*` --> `top-source-dir/share/*`. with reference to https://github.com/SebWouters/CheMPS2/blob/master/CMakeLists.txt as needed, since CheMPS2 has already been through packaging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/215#issuecomment-173979302:39,Install,Install,39,https://psicode.org,https://github.com/psi4/psi4/issues/215#issuecomment-173979302,1,['Install'],['Install']
Deployability,"Ok, this has been rebased and a lot of the internal CI commits have been squashed. It's now in pretty good working order. Remaining reservations:. * `qcel.constants` interface may still change; * snsmp2 only works if you pull from my branch (which CM is set up to do; but snsmp2 conda pkg won't work) b/c they use psifiles and physconst. I patched those up, of course, but I don't want to send that PR to RMcG until we're sure about the interface.; * ionization tests still seem fragile. the dftd3-dft-bench-ionization works with CI but not for me locally. Even with these, I think it's pretty much RTG. Glad to hear arguments against or arguments about want qcelemental conda pkg first. #### Note that this _does_ add qcelemental dependence, whereas the previous codata 2014 one didn't (that just used qcelemental-generated data added to _this_ repo).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1234#issuecomment-426084025:340,patch,patched,340,https://psicode.org,https://github.com/psi4/psi4/pull/1234#issuecomment-426084025,1,['patch'],['patched']
Deployability,"Ok, this one's been rebased and is ready for review. Many thanks to @loriab for the help integrating the code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1382#issuecomment-445559926:89,integrat,integrating,89,https://psicode.org,https://github.com/psi4/psi4/pull/1382#issuecomment-445559926,1,['integrat'],['integrating']
Deployability,"Ok, tracked down the whole DFHelper metric error in cartesian basis sets. Turns out that this was not an error after all in DFHelper and had to do with the fact that DiskDFJK never passed in it's metric condition tolerance to the FittingHelper. This *was* a bug. This lead to quite a few other changes in the past 5 commits and quite a bit of time to track down. This does mean we have a decision to make DFJK has been using a `1.e-10` tolerance for about two years now rather than a `1.e-12` tolerance. Should we consider changing these tolerances at all?. @loriab Yup, patched up opt13.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1446#issuecomment-449669501:571,patch,patched,571,https://psicode.org,https://github.com/psi4/psi4/pull/1446#issuecomment-449669501,1,['patch'],['patched']
Deployability,"Ok, two different levels here:; * v2rdm (and potentially other plugins or codes that link to psi4 (not that I know any in the latter case)) are using `ERISeive` c-side. They can do so b/c it's `PSI_API`d so the symbols are exposed in `psi4/core.*so`. These should be deprecated by `PSI_DEPRECATED`. If the plugin owner is compiling his plugin but never psi4 itself, he might still miss the notice, but at least we're giving such a fair chance.; * anyone could be using `ERISeive` py-side if it's exported by pb11. (And this has nothing to do with whether it's `PSI_API`d.) I think the way to deprecate those is to wrap the fns like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L1480-L1495. Whenever dealing with deprecations, I think it's a good idea to use the ""_as soon as_ v1.x"" phrasing. We want to get the urgency across, but we almost never clear things out ASAP so that phrasing keeps the message accurate. For semi-completeness, I bring up a couple other deprecation/removal items:; * When you've got to make a breaking change py-side or you want to provide some guidance even after removal, there's `UpgradeHelper`s https://github.com/psi4/psi4/blob/master/psi4/driver/driver_cbs.py#L1062 that stop the calc but provide advice for fixing the input.; * When you want to remove an option, there's a pattern in core.cc; * When you want to remove or change the meaning of a QCVariable, there's a list in python_helpers.py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2935#issuecomment-1527977259:1142,Upgrade,UpgradeHelper,1142,https://psicode.org,https://github.com/psi4/psi4/pull/2935#issuecomment-1527977259,1,['Upgrade'],['UpgradeHelper']
Deployability,"Ok, we're up on c-f at https://anaconda.org/conda-forge/psi4/files . For now, you'll need `conda install psi4 -c conda-forge -c conda-forge/label/libint_dev -c conda-forge/label/psi4_dev`. After the v1.8 release, you can drop the `psi4_dev` but not the `libint_dev`. It'll be changing often as I need to add osx_arm64 and py311. And there's stuff in master it doesn't have, and stuff in it that master doesn't have. But all the main functionality should be fine. ### Please report *any* problems or oddities. None of the docs reflect new build/install procedures yet. I'll be making a list of where folks go awry. First one (that's bitten me and Jonathon):; * To start an environment with conda compilers from c-f, don't use `conda create -n mydev gxx_linux-64 ... -c conda-forge` as the c-f analog to the usual procedure. That will work to form the env, but if you look in `conda list`, there's some deep pieces like the sysroot still present from `defaults`. When you start compiling, it will give you obscure C++ errors outside your code. Instead, use `conda create -n mydev cxx-compiler ... -c conda-forge` (same for all platforms) which will give a cohesive compiler stack.; * (Added 28 Apr) If you use the c-f dep packages to _compile_ psi4, remember to mind libints: `master` + `psi4/label/dev::libint2` or `cf_iterations` + `conda_forge/label/libint_dev::libint` (also note `libint2` vs `libint`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1523559384:97,install,install,97,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1523559384,3,"['install', 'release']","['install', 'release']"
Deployability,"Okay thanks! I will close :). On Fri, Jan 29, 2021 at 10:54 AM Lori A. Burns <notifications@github.com>; wrote:. > Those comments aren't always 1:1 with the contents.; >; > But what's happening for 6-311+G* in particular is that 3 partial basis; > sets are getting merged: the 6-311 defined through Kr, the polarization; > defined through Kr, and the diffuse only defined through Ca. Only elements; > with partial basis sets available for all three pieces show up in the full; > basis file, so Kr, etc. are missing. Looking at 6-311+G* at; > https://www.basissetexchange.org/, that ends at Ca, too, so nothing to; > update. Does this clear up what's going on?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2097#issuecomment-769922422>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AKNB26P7KNIQBAOTKDLTCETS4LR4DANCNFSM4WZDDXEA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2097#issuecomment-769932213:616,update,update,616,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769932213,1,['update'],['update']
Deployability,"Okay, I see. I tried again, installing the proper chemps2 from the conda environment, and using gcc/g++ instead of Intel.; Believe it or not, it did work. And the first few tests are ok. Side note: while testing I noticed that HDF5 detection in CMake fails if 1) HDF5 is installed on the system AND 2) I use conda to install chemps2, which installs hdf5 in conda as well. Should I open a new issue about that ? Or is it too specific a case for being worth the time ?. Thanks for all your input, @loriab and @susilehtola",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288573307:28,install,installing,28,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288573307,4,['install'],"['install', 'installed', 'installing', 'installs']"
Deployability,"Okay, I was able to build after I updated to the latest Psi4 master and changed the git tag in `external/downstream/v2rdm_casscf/CMakeLists.txt`. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426#issuecomment-451784852:34,update,updated,34,https://psicode.org,https://github.com/psi4/psi4/issues/1426#issuecomment-451784852,1,['update'],['updated']
Deployability,"Okay, I'm not a fan of that. I do not install anything, psi4 or anything else, until I know that the tests pass, irregardless of what Travis CI says. Plus, I spend most of my time C-side or work in plugins that also require changes to C-side. I'll give it some thought and see what I can do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235910224:38,install,install,38,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235910224,1,['install'],['install']
Deployability,"Okay, I've updated the body of this issue with five SCF outputs that fail to converge with the default `INTS_TOLERANCE` (1e-12), but do converge when `INTS_TOLERANCE` is explicitly set to 0.0. All calculations were done with a clean version of psi4 master (the previous outputs were with a psi4 branch containing commits from an unrelated project). @susilehtola yes, that is the relevant commit in which the default `INTS_TOLERANCE` changed. I agree that the new default appears conservative enough, and I'm surprised such a small threshold has this kind of effect, even for a large, diffuse basis set. Do you know of any integral screening protocols specific to diffuse functions?. @hokru your observation that some virtual orbitals have negative energies is true for all zero-screening outputs. Would this imply that the SCF solution is not the global minimum? I don't have any specifics about these structures, they're part of a large dataset for a ML project. However, they all look relatively ordinary. @JonathonMisiewicz Your observation that `INTS_TOLERANCE` has a large effect on the very first SCF iteration also is true of all five outputs. In the second example, the first SCF iteration differs between the two outputs by almost four(!) hartree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2114#issuecomment-779545622:11,update,updated,11,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779545622,1,['update'],['updated']
Deployability,"Okay, so I think the problem is that i did not have ```gcc``` in the ```/home/artfin/miniconda/envs/psi4-env/bin```. So I installed it with ```conda install -c anaconda gcc=4.8.5``` in the ```psi4-env``` environment. ; After rerunning ```psi4``` I still get:. ```psi4: symbol lookup error: psi4: undefined symbol:```; ```_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE```. ```export LD_LIBRARY_PATH=/home/artfin/miniconda/envs/psi4-env/lib:$LD_LIBRARY_PATH``` does not change anything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675#issuecomment-297042835:122,install,installed,122,https://psicode.org,https://github.com/psi4/psi4/issues/675#issuecomment-297042835,2,['install'],"['install', 'installed']"
Deployability,Okay. Please rename `cc5a` to `cc5` and update `tests/cc_index`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2655#issuecomment-1203201750:40,update,update,40,https://psicode.org,https://github.com/psi4/psi4/pull/2655#issuecomment-1203201750,1,['update'],['update']
Deployability,"On RDR's point 2,. * Looks like CMake has the following hash algorithms available `file(<MD5|SHA1|SHA224|SHA256|SHA384|SHA512> filename variable)`; * And ExternalProject has `URL_HASH ALGO=value` to specify them; * `conda install openssl -c conda-forge` followed by `openssl sha256 your_sdist.tar.gz` to compute them. Only problem is that I suspect that's a tarball (single file) procedure, not the GH hash we usually do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/856#issuecomment-344288297:222,install,install,222,https://psicode.org,https://github.com/psi4/psi4/pull/856#issuecomment-344288297,1,['install'],['install']
Deployability,"On another issue, the buildtime configuration now seems to ask for LIBINT_OPT_AM, which AFAIK is the maximum angular momentum for which specially optimized code is generated. It doesn't ask a value for LIBINT_MAX_AM at all, which determines the maximum angular momentum for which evaluation routines are generated. In Ed's upstream release of libint, LIBINT_OPT_AM defaults to (LIBINT_MAX_AM/2 + 1). I believe the scripts should be adjusted to make it possible to set OPT_AM and MAX_AM separately, since a large value of OPT_AM generates huge code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/180#issuecomment-139102907:32,configurat,configuration,32,https://psicode.org,https://github.com/psi4/psi4/issues/180#issuecomment-139102907,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"On second thought, this works as a test, it's just... not a usual test where the value is ""correct"" but a test where the value is ""current"" and sometimes does need to be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2323#issuecomment-943298421:170,update,updated,170,https://psicode.org,https://github.com/psi4/psi4/pull/2323#issuecomment-943298421,1,['update'],['updated']
Deployability,"On some systems, the default temp location should not be `/tmp`; but it is set by either `$TMPDIR`, `$TEMP` or `$TMP` (commenly done on HPC; systems, where the temp location may be somthing special, a ssd for example).; This patch first checks those 3 environment variables; and uses its value when set. It falls back to `/tmp` when; nothing is set. `std::getenv` needs C++11 to be thread safe.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97:225,patch,patch,225,https://psicode.org,https://github.com/psi4/psi4/pull/97,1,['patch'],['patch']
Deployability,"On tests: Wonderful! Our standard way to test `oeprop` can be found [here](https://github.com/psi4/psi4/blob/master/tests/pytests/test_dipoles.py). You'll want a new entry for OREMP with both RHF/UHF and Conv/DF integrals. On merging: We've started talking with Ugur Bozkaya on merging his branch in, and we want that merged in before we merge in your contributions. If you want, you can split the `occ` part of this into its own PR, and we can merge that in without complications. If you have no interest in that, it's no problem for us. I'll keep you updated on how the `dfocc` update goes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2354#issuecomment-988756347:553,update,updated,553,https://psicode.org,https://github.com/psi4/psi4/pull/2354#issuecomment-988756347,2,['update'],"['update', 'updated']"
Deployability,"On the [install page](https://psicode.org/installs/v191/), for Linux > Conda > 3.11 > Stable, it returns. ```; conda install psi4 python=3.11 -c conda-forge ; ```. Should it not be using the conda-forge/label/libint_dev?. I should note that libint main just updated 12 hrs ago and seems to cause some seg faults in psi4 1.91.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3144:8,install,install,8,https://psicode.org,https://github.com/psi4/psi4/issues/3144,4,"['install', 'update']","['install', 'installs', 'updated']"
Deployability,"On the first, update v2rdm_casscf for fix (`conda update v2rdm_casscf -c psi4`). On the second, so long as you have activated the environment or added the installer to path, you should be good to go. http://psicode.org/psi4manual/master/build_planning.html#how-to-run-psi4-as-executable-or-python-module-from-conda-installation Otherwise, `psi4 --psiapi-path` will give you the commands to make it importable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710#issuecomment-302114845:14,update,update,14,https://psicode.org,https://github.com/psi4/psi4/issues/710#issuecomment-302114845,4,"['install', 'update']","['installation', 'installer', 'update']"
Deployability,On the note of the discussion in #2952 we did a bit more digging and actually found that we are missing a term in the current way we currently build the Fock matrix contributions for LPB. The extra term has been implemented in ddx (https://github.com/ddsolvation/ddX/pull/143) and currently under release to pypi / conda-forge. I will try to get a PR on the psi4 side as soon as this is done. @loriab Flagging this because of the upcoming release ... I hope this can still be merged in. Otherwise LPB would be broken in v1.8.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2962:297,release,release,297,https://psicode.org,https://github.com/psi4/psi4/issues/2962,2,['release'],['release']
Deployability,"On the one hand, for cases like SAPT/auto-CP/etc, I'd be fine with just disabling `num_frozen_docc` -- it's clearly inappropriate in any supersystem calculation where the user knows at the `energy` call that it's going to run sub-systems. But going upthread back to the original issue, there's use-cases like `MBIS_VOLUME_RATIOS` that are an add-on to what would otherwise be a valid standalone calculation to use `num_frozen_docc` with (a monomer calc), and there's still the question of what should happen there. You can't just guess based on calc name, because you don't know if the user is going to call `oeprop` down-stream. Disabling `num_frozen_docc` for any calculation where this *could* happen would effectively ban the keyword. . A reasonableness check, or a good guess, could be inserted before any calculation done on a new mol if `num_frozen_docc` is set in the global scope -- with a warning. Or simply error out if a new mol is calculated without `num_frozen_docc` having been updated (not sure how reasonable that is?). . This is but one user's thoughts, of course.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1212141916:993,update,updated,993,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1212141916,1,['update'],['updated']
Deployability,"On the semi-manual `psi4conda` [instructions](http://psicode.org/psi4manual/master/conda.html#psi4conda-installer), for both Linux and Mac, the `curl` flag should be changed from `-o` to `-O`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/487:104,install,installer,104,https://psicode.org,https://github.com/psi4/psi4/issues/487,1,['install'],['installer']
Deployability,"On the test failures, can you find out why through http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput? Especially the ""align"" ones, it might just be something not installed. The ""cubeprop"" ones have a history of being compiler sensitive, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402524125:185,install,installed,185,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402524125,1,['install'],['installed']
Deployability,"Once upon a time, Psi4 was made python3 compatible. I haven't heard of it being tested since. Make it so once more. potentially helpful tools:; - `conda create -n pyconv python=3.4` if you need a python3 environment; - http://python-modernize.readthedocs.org/en/latest/ looks like a helpful project. `pip install modernize` then run on each file. Driver is a sad mix of `print vari` and `print(vari)`. Feel free to import latter from future and standardize. But leave qcdb alone. It has its own ticket and repository.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/110:305,install,install,305,https://psicode.org,https://github.com/psi4/psi4/issues/110,1,['install'],['install']
Deployability,"One could try to incorporate the debugging ""Printf"" statements from the attached file to mp3_W_intr.cc in your patched-up system to see how far the MP3 calculation progresses. The lines with anavirAnQ1, anavirAnQ2, anavirAnQ3 are probably not relevant after your patches but printing the value of the product (a navirA nQ) out in this main loop would be still helpful. [mp3_W_intr.cc.gz](https://github.com/psi4/psi4/files/3928773/mp3_W_intr.cc.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-562292735:111,patch,patched-up,111,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-562292735,2,['patch'],"['patched-up', 'patches']"
Deployability,"One more thing, should [these names](https://github.com/andysim/psi4/blob/basisset/psi4/src/export_mints.cc#L890-L891) be updated now that BasisSet is unified? And is it clear where to get QC-frozen core vs. ECP-frozen core?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/734#issuecomment-307963177:122,update,updated,122,https://psicode.org,https://github.com/psi4/psi4/pull/734#issuecomment-307963177,1,['update'],['updated']
Deployability,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-879347426:79,configurat,configurations,79,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426,2,['configurat'],"['configuration', 'configurations']"
Deployability,One thing that needs to be added: update `tests/CMakeLists.txt` with the name of your new test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2344#issuecomment-961182029:34,update,update,34,https://psicode.org,https://github.com/psi4/psi4/pull/2344#issuecomment-961182029,1,['update'],['update']
Deployability,One thing to note about the c++ standard is that it is showing up on the command line twice. I'm almost certain that one is coming from pybind11 interface definitions (which might not be a good idea). . cd /home/ben/programming/psi4/build.reference/psi4-core-prefix/src/psi4-core-build/src/psi4/liboptions && /opt/intel2017/compilers_and_libraries_2017.1.132/linux/bin/intel64/icpc; -I/home/ben/programming/psi4/psi4.reference/psi4/include; -I/home/ben/programming/psi4/psi4.reference/psi4/src; -isystem /home/ben/programming/psi4/build.reference/stage/home/ben/programming/psi4/install.reference/include; -isystem /usr/include/python2.7 -xHost -qopenmp; -std=c++11 -O3 -DNDEBUG -fPIC -std=c++11; -o CMakeFiles/options.dir/print.cc.o; -c /home/ben/programming/psi4/psi4.reference/psi4/src/psi4/liboptions/print.cc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281389274:579,install,install,579,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281389274,1,['install'],['install']
Deployability,"Ooh, I like option 2. Thanks for the suggestion! I guess most other packages don't have this problem because they don't generate Makefiles for you. Another solution could be using a relative path so that it always finds the include files relative to the binary, regardless of whether or not they are installed. I guess it depends on how you guys want users to run things. But I think in general, most users will be confused by the current behavior.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/410#issuecomment-226007667:300,install,installed,300,https://psicode.org,https://github.com/psi4/psi4/issues/410#issuecomment-226007667,1,['install'],['installed']
Deployability,"Oops, thanks for the reminder! I'd love to add the things that @loriab suggested so Psi4FockCI can be built with Psi4. It should be a relatively quick fix, so I can try and get that done before tomorrow if that's okay for the 1.4 release timeline. After that's complete, I think everything should be good to go, assuming there aren't any additional issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1855#issuecomment-644216732:230,release,release,230,https://psicode.org,https://github.com/psi4/psi4/pull/1855#issuecomment-644216732,1,['release'],['release']
Deployability,"Ouch, sorry @dgasmith. It looks like I used VERSION_GREATER_EQUAL which was added in https://cmake.org/cmake/help/v3.7/release/3.7.html",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923#issuecomment-369958097:119,release,release,119,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369958097,1,['release'],['release']
Deployability,"Ouch, the ""latest"" in http://www.psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-command-line suggests the python-3.5 version, which is `psi4-1.1rc1+6db9b1f-py35_0`. The latest folder really is not latest at all ...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475856396:81,install,install-a-,81,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475856396,2,['install'],"['install-a-', 'installer-command-line']"
Deployability,"Ouch, the problem cannot be reproduced with the current 1.5 release as the release version will die even much earlier with ``MemoryError: std::bad_array_new_length``. When calculating array lengths for ampiitudes, residua and density fitting b factors, simple int32 arithmethic is used, which overflows at some point. `new` is then called with a negative size. i fixed this already in my development branch... Input for reproducing the problem:; ```; memory 160 GB; molecule PR20 {; 0 1; Ir -0.0036453 -0.0067418 0.0546240; P 2.3412316 0.2633260 -0.0827666; C 2.8322725 1.6499560 -1.1514034; C 3.1508965 0.5810022 1.5225953; H 2.7397226 1.4975243 1.9544020; H 3.0796627 -2.0414912 -0.0970847; H 4.2325349 0.6920499 1.3971415; H 2.8126116 -1.4065392 -1.7435421; H 3.9236645 1.7279364 -1.1921940; H 2.9451701 -0.2527656 2.1998134; C 3.2265215 -1.1827248 -0.7571267; H 2.4227823 1.4722103 -2.1484758; H 4.2962318 -0.9681045 -0.8457994; H 2.3889675 2.5675955 -0.7590075; P -2.3731653 -0.0356822 -0.0699620; C -3.1396700 1.0016926 1.2209589; C -3.0094090 0.6380218 -1.6352816; H -2.9455753 -2.3068093 -0.7136733; H -4.2946110 -1.5213106 0.1442505; H -2.8800339 -2.1267692 1.0512420; C -3.2080716 -1.6536880 0.1215551; H -4.1029305 0.6851097 -1.6068349; H -2.5824278 1.6361161 -1.7615996; H -4.2216153 1.0653282 1.0682275; H -2.6891213 1.9959193 1.1600952; H -2.6744520 0.0098950 -2.4628143; H -2.9377790 0.5752071 2.2074361; C -0.0445914 0.2683835 1.8872601; O -0.0651117 0.4624335 3.0248963; Cl -0.3329573 2.5059651 -0.2539036; C 0.2355846 -2.0382203 0.3696479; O 0.5870862 -2.4771706 1.4540805; Cl 0.1349587 -0.2718086 -2.3358022; C 0.0008664 -3.0153971 -0.7782268; H -0.1231146 -4.0205893 -0.3660997; H 0.8774694 -2.9930708 -1.4340628; H -0.8449842 -2.7261204 -1.4026378; }. set reference rhf; set basis def2-TZVPP; set{; freeze_core false; cc_type df; mp2_type df; } . set{; e_convergence 1.0E-9; r_convergence 1.0E-8; max_mograd_convergence 1.0E-7; rms_mograd_convergence 1.0E-8; TPDM_ABCD_TYPE direct",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591#issuecomment-1141902495:60,release,release,60,https://psicode.org,https://github.com/psi4/psi4/issues/2591#issuecomment-1141902495,2,['release'],['release']
Deployability,PACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAPACK_LIBS openblas); + ; + #-------------------------------------------------------------------------------; # MKL; ; set(MKL_BLAS_INCLUDE_PATH_SUFFIXES); [sfux@develop01 psi4]$ ls; cdash CMakeAddOpenBLAS.patch _conda_vers.py doc LICENSE plugins README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:2886,patch,patch,2886,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['patch'],['patch']
Deployability,"PCM-ROHF is currently broken. A fix is in the pipeline with #953, but is sufficiently invasive that it **will not make it** to the upcoming 1.2 release.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/999:46,pipeline,pipeline,46,https://psicode.org,https://github.com/psi4/psi4/issues/999,2,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,PE Updates: FMM and PE(ECP),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2025:3,Update,Updates,3,https://psicode.org,https://github.com/psi4/psi4/pull/2025,1,['Update'],['Updates']
Deployability,"PR #922 should address the `DSD-xxx`-class of functionals. I have also modified the `dashparams.py` in that PR, however I plan to expand the dashparams even further (to include references as well and to automatically generate the functionals listed). . It would be really good to get these tests merged. My wish would be to have reference values from Psi4 1.1 (or even 1.2a1.dev781 - which is the latest conda release, if we trust them) in addition to Q-Chem, to make the comparison with PR #922 easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-369512570:410,release,release,410,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369512570,1,['release'],['release']
Deployability,PR intro updated. Is a rebase going to be required before merge?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465#issuecomment-1069389171:9,update,updated,9,https://psicode.org,https://github.com/psi4/psi4/pull/2465#issuecomment-1069389171,1,['update'],['updated']
Deployability,PSA: Psi4 installers unavailable [RESOLVED],MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199:10,install,installers,10,https://psicode.org,https://github.com/psi4/psi4/issues/3199,1,['install'],['installers']
Deployability,PSI4 cmake build does not seem to check if python development is installed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2060:65,install,installed,65,https://psicode.org,https://github.com/psi4/psi4/issues/2060,1,['install'],['installed']
Deployability,"Partially, I'm running these tests with `python psi4 --test`:; ```; 2018-12-05T15:54:19.2192346Z ============================= test session starts =============================; 2018-12-05T15:54:19.2192531Z platform win32 -- Python 3.6.6, pytest-4.0.1, py-1.7.0, pluggy-0.8.0 -- C:\tools\miniconda3\python.exe; 2018-12-05T15:54:19.2193957Z cachedir: .pytest_cache; 2018-12-05T15:54:19.2194153Z rootdir: D:\a\1\b\install, inifile:; 2018-12-05T15:54:19.5028575Z collecting ... collected 43 items / 21 deselected; 2018-12-05T15:54:19.5042204Z ; 2018-12-05T15:54:19.5056742Z ..\lib\psi4\tests\test_addons.py::test_gdma SKIPPED [ 4%]; 2018-12-05T15:54:19.5070445Z ..\lib\psi4\tests\test_addons.py::test_mrcc SKIPPED [ 9%]; 2018-12-05T15:54:19.5085682Z ..\lib\psi4\tests\test_addons.py::test_chemps2 SKIPPED [ 13%]; 2018-12-05T15:54:19.5098425Z ..\lib\psi4\tests\test_addons.py::test_dftd3 SKIPPED [ 18%]; 2018-12-05T15:54:19.5111431Z ..\lib\psi4\tests\test_addons.py::test_libefp SKIPPED [ 22%]; 2018-12-05T15:54:19.5124637Z ..\lib\psi4\tests\test_addons.py::test_pcmsolver SKIPPED [ 27%]; 2018-12-05T15:54:19.5137383Z ..\lib\psi4\tests\test_addons.py::test_erd SKIPPED [ 31%]; 2018-12-05T15:54:19.5159968Z ..\lib\psi4\tests\test_addons.py::test_simint SKIPPED [ 36%]; 2018-12-05T15:54:21.2422176Z ..\lib\psi4\tests\test_addons.py::test_json PASSED [ 40%]; 2018-12-05T15:54:21.2458012Z ..\lib\psi4\tests\test_addons.py::test_cfour SKIPPED [ 45%]; 2018-12-05T15:54:21.2473322Z ..\lib\psi4\tests\test_addons.py::test_v2rdm_casscf SKIPPED [ 50%]; 2018-12-05T15:54:21.2488441Z ..\lib\psi4\tests\test_addons.py::test_gpu_dfcc SKIPPED [ 54%]; 2018-12-05T15:54:21.2503496Z ..\lib\psi4\tests\test_addons.py::test_grimme_3c SKIPPED [ 59%]; 2018-12-05T15:54:21.2517677Z ..\lib\psi4\tests\test_addons.py::test_dkh SKIPPED [ 63%]; 2018-12-05T15:54:21.2531717Z ..\lib\psi4\tests\test_addons.py::test_snsmp2 SKIPPED [ 68%]; 2018-12-05T15:54:21.2547307Z ..\lib\psi4\tests\test_addons.py::test_resp SKIPPED [ 72%]; 2018-12",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1399#issuecomment-444539647:412,install,install,412,https://psicode.org,https://github.com/psi4/psi4/pull/1399#issuecomment-444539647,1,['install'],['install']
Deployability,Patch failing tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/811:0,Patch,Patch,0,https://psicode.org,https://github.com/psi4/psi4/pull/811,1,['Patch'],['Patch']
Deployability,Patch to allow the plugin code to work with PYMOD paths,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/490:0,Patch,Patch,0,https://psicode.org,https://github.com/psi4/psi4/pull/490,1,['Patch'],['Patch']
Deployability,"Patched up, thanks for the comments.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1027#issuecomment-394474834:0,Patch,Patched,0,https://psicode.org,https://github.com/psi4/psi4/pull/1027#issuecomment-394474834,1,['Patch'],['Patched']
Deployability,Patches up wiggles in SAPT(DFT) FDDS Dispersion,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/840:0,Patch,Patches,0,https://psicode.org,https://github.com/psi4/psi4/pull/840,1,['Patch'],['Patches']
Deployability,"Per discussion on conference call, moved to 1.5. Trying to get this in will delay 1.4, and it's not the wisest to do an API reorganization after we already have a release candidate out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2166#issuecomment-832912260:163,release,release,163,https://psicode.org,https://github.com/psi4/psi4/pull/2166#issuecomment-832912260,1,['release'],['release']
Deployability,"Perhaps I am just an idiot, but I can't seem to import the Python bindings; into a Python script unless the library that contains them (in this case; psi4_main.so or libpsi4.so) has the same name as the boost python module; (psi4). This is why I was insisting on a a psi4.so library. Sent from my Android (without spellcheck). Please forgive the brevity. On Aug 23, 2016 1:58 PM, ""Lori A. Burns"" notifications@github.com wrote:. > To avoid the complications forecasted by my last comment, we're going to; > update this repo to the current development head. This probably still; > breaks the items mentioned in #442 (comment); > https://github.com/psi4/psi4/pull/442#issuecomment-241027531, but I; > know Ryan's already shifted to some of my commits, so I think the trouble; > of Pulsar maybe having to tie their externalproject psi4 to e705b88; > https://github.com/psi4/psi4/commit/e705b88b562a303e1b789417ad9cfe1648251d63; > is less than the trouble if the development head gets lost or nonlinear. So; > FYI, particularly @bennybp https://github.com/bennybp .; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/442#issuecomment-241819043, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AFCRi5xifLl8M1ZtI7tKuEapnaMgrB0Qks5qizSugaJpZM4JHR4P; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-241853765:507,update,update,507,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-241853765,1,['update'],['update']
Deployability,"Perhaps a starting point can be porting a few packages in https://github.com/psi4/psi4meta/tree/master/conda-recipes? It'll need to happen for this to succeed, it doesn't require agreeing on a concrete strategy for the full path, and even if for some reason the larger effort fails, it's still a small value add. I am happy to get the ball rolling, but I do need some direction on which package(s) would be good starting point(s) and maybe in which order.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-942624994:340,rolling,rolling,340,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-942624994,1,['rolling'],['rolling']
Deployability,"Pipeline variables now configured. With respect to your other questions, yes, max_am_eri=8 will be plenty high enough. That matches what we distribute for linux now (Mac is 6). And don't worry about py3.5 -- there were enough oddities that we dropped it, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1539#issuecomment-467076328:0,Pipeline,Pipeline,0,https://psicode.org,https://github.com/psi4/psi4/pull/1539#issuecomment-467076328,1,['Pipeline'],['Pipeline']
Deployability,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962#issuecomment-384487129:595,integrat,integration,595,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129,2,['integrat'],['integration']
Deployability,"Please let us know how you installed Psi4. In particular, we need to know the version number that should appear in the header of your input file. @loriab, I hate to keep pinging you on things, but I feel that the CFOUR interface is your department.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155129126:27,install,installed,27,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155129126,1,['install'],['installed']
Deployability,"Please try the latest 1.4 release. 61K is the size of the aux basis, 12k basis functions in the orbital basis.; It is still a huge(!) calculation and PSI4 is not optimised to deal with that.; Usually negligible matrices can become large enough that our memory estimates are off.; Maybe the memory of your machine ran out. The aux basis can probably be reduced by 20K functions without loss in accuracy with some smart manipulations of the aux basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2288#issuecomment-911433216:26,release,release,26,https://psicode.org,https://github.com/psi4/psi4/issues/2288#issuecomment-911433216,1,['release'],['release']
Deployability,"Please update the error message to say that the grid is unusable with COSX, rather than ""better fix"" incoming.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906#issuecomment-1497949553:7,update,update,7,https://psicode.org,https://github.com/psi4/psi4/pull/2906#issuecomment-1497949553,1,['update'],['update']
Deployability,"Please use `PYMOD_INSTALL_LIBDIR` https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L94-L95 to adjust the path. Since Linux build conventions and Python build conventions can't both be fully adhered to, Psi4 prefers the former, especially as one doesn't always want an install into Python's site-packages. I suspect the `__init__` logic will heal if this cmake var is used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2800#issuecomment-1328095947:275,install,install,275,https://psicode.org,https://github.com/psi4/psi4/issues/2800#issuecomment-1328095947,1,['install'],['install']
Deployability,Port Björn Esser's patch for flexiblas support from Fedora,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2246:19,patch,patch,19,https://psicode.org,https://github.com/psi4/psi4/pull/2246,1,['patch'],['patch']
Deployability,"Possible, but I really doubt it, as glibc mismatches aren't usually healable. Usually this is a symptom of packages depending on different versions of a library and symbols getting sometimes loaded one way and sometimes another depending on import order. Often fixable by swapping import order, but in the psi-in-jupyter case, there's simply nothing to swap. I thoroughly expected this to be fixed when I built with the newer compilers and was alarmed when it wasn't. @sergsb, would you want to try the conda env line in https://github.com/psi4/psi4/issues/862#issuecomment-347074303 ? Possibly more defaults packages have been updated to the new compilers since November and healed the problem. Only thing else I can think of is that I'm still linking libc++ statically (which it should be entirely safe to do, being the least-fundamental of the `glibc`, `libgcc_s`, `libstdc++` trio) and that's running into a symbol error with the jupyter stack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369640226:628,update,updated,628,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369640226,1,['update'],['updated']
Deployability,"Possibly you're looking in `stage/lib/pythonx.x/site-packages/psi4/` for the `core.*so`. Note that without this var https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L94-L95, psi4 installs to generic `stage/lib/psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2690#issuecomment-1215857373:186,install,installs,186,https://psicode.org,https://github.com/psi4/psi4/issues/2690#issuecomment-1215857373,1,['install'],['installs']
Deployability,"Posting Dom's very nice summary for easier perusal and searchability. Effective `scf_type df` Testing: `mem_df` & `disk_df`; =====================================================. All tests listed below examine calls to both `energy()` and `gradient()` when; employing the `scf_type mem_df` and `scf_type disk_df` settings. Each test; employs a different model chemistry (indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:646,install,install,646,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,3,['install'],['install']
Deployability,"Preparing the 1.3 update to the Fedora package of psi4, I get; ```; Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/driver.py ...; File ""/usr/lib64/psi4/driver/driver.py"", line 160; print("""""" %d"""""" % (n), end=('\n' if (n == ndisp) else '')); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/driver_util.py ...; File ""/usr/lib64/psi4/driver/driver_util.py"", line 80; print(' Setting convergence', end=' '); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/molutil.py ...; File ""/usr/lib64/psi4/driver/molutil.py"", line 259; raise ImportError(""""""Install pylibefp to use EFP functionality. `conda install pylibefp -c psi4` Or build with `-DENABLE_libefp=ON`"""""") from e; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/procutil.py ...; File ""/usr/lib64/psi4/driver/p4util/procutil.py"", line 491; print(""""""building %s %s"""""" % (pvar, '.' * (50 - len(pvar))), end=''); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/python_helpers.py ...; File ""/usr/lib64/psi4/driver/p4util/python_helpers.py"", line 649; return {**core.scalar_variables(), **core.array_variables()}; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/text.py ...; File ""/usr/lib64/psi4/driver/p4util/text.py"", line 197; print(stuff, file=sys.stdout); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/interface_cfour.py ...; File ""/usr/lib64/psi4/driver/procrouting/interface_cfour.py"", line 356; print('Unable to remove CFOUR temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/proc.py ...; File ""/usr/lib64/psi4/driver/procrouting/proc.py"", ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1565:18,update,update,18,https://psicode.org,https://github.com/psi4/psi4/issues/1565,3,"['Install', 'install', 'update']","['Install', 'install', 'update']"
Deployability,"Presently, there are rather few `compare_values()` statements in the `tests/cc*/input.dat` test cases. This is because there's a very thorough [perl script](https://github.com/psi4/psi4/blob/master/tests/psitest.pl) that parses the output file and parses the alongside `reference.dat` file and compares everything in sight to a sensible number of decimal places. Works great (except when we accidentally break its arrangements and then everything trivially passes for months at a time until someone notices) in Make or CMake testing framework for checking CC. _Doesn't_ work great to check that psivar coverage is good for the cc* modules or independently of the ctest testing macros or in an installed (as opposed to source) testing env w/o reference.dat files or without perl. I think the in-file compare_values() testing is an idea that has proven its worth. I suggest that:; 1. the key reference values from each `reference.dat` be collected into the various `cc*/input.dat` tests,; 2. more psivars be defined as needed in the `psi4/src/psi4/cc*` modules, ; 3. a `compare_coupledcluster()` be written to take in a wfn and a structure of reference values and apply all the checks that the perl script currently does through compare_values(), compare_arrays(), etc. (3) is negotiable; it's just my current idea on how to move toward compare_values() without losing coverage. Primary aims are to make coupled-cluster tests suitable for installed testing (`assert compare_values(...)` works great in pytest) and increase coupled-cluster psivar usage (@amjames already did one follow-up pass) for the QCSchema project. Further note that in the near future, psivars need to be on Wfn, *not* `P::e`. Might be worth multiple ppl working to spread the pain. This hasn't been run by @lothian, so he may have other ideas.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943:693,install,installed,693,https://psicode.org,https://github.com/psi4/psi4/issues/943,2,['install'],['installed']
Deployability,"Pretty easy answer, if you look at the results you see pure nonsense in the molecule geometry. Each time you update a variable the molecule geometry is updated, since you do not have `no_com` set the molecule is moving around on you quite a bit and you're not building the geometry you think you are building. If you set `no_com`, everything works fine. This kind of variable setting really only should be used with a z-matrix. I wonder if we should enforce this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/759#issuecomment-313982153:109,update,update,109,https://psicode.org,https://github.com/psi4/psi4/issues/759#issuecomment-313982153,2,['update'],"['update', 'updated']"
Deployability,"Pretty sure I'm using the homebrew boost, but that could still be the; problem. I upgraded homebrew a few days ago, but I didn't recompile PSI; since. The current homebrew boost is 1.60.0, and cmake sees it when it; configures. Everything compiles smoothly, but I get the following error; immediately on any attempt to execute with any input file:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""/Users/crawdad/psi4/share/psi4/python/aliases.py"", line 39, in; <module>. ```; from wrappers import *; ```. File ""/Users/crawdad/psi4/share/psi4/python/wrappers.py"", line 39, in; <module>. ```; from driver import *; ```. File ""/Users/crawdad/psi4/share/psi4/python/driver.py"", line 265, in; <module>. ```; for ssuper in superfunctional_list():; ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 3365, in; superfunctional_list. ```; sup = superfunctionals[key](key, 1, 1); ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 1910, in; build_b3lypd1_superfunctional. ```; sup = build_b3lyp_superfunctional(name, npoints, deriv); ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 1224, in; build_b3lyp_superfunctional. ```; sup = psi4.SuperFunctional.blank(); ```. TypeError: No to_python (by-value) converter found for C++ type:; boost::shared_ptrpsi::SuperFunctional. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Tue, Feb 2, 2016 at 2:39 PM, Andy Simmonett notifications@github.com; wrote:. > Messaging from 30000 feet, @lothian https://github.com/lothian . Fancy!; > I bet the problem you're seeing is due to some incompatibility between the; > way boost and psi4 are compiled. On the Mac I had a hard time getting a GCC; > version to compile. I had to compile boost with some modified settings to; > get the code to link, but it failed in the way that you described when it; > did link. I had no problems using the Homebrew (or the Psi4 bundled) Boost; > if I used clang.; > ; > —; > Reply to this emai",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178853828:82,upgrade,upgraded,82,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178853828,1,['upgrade'],['upgraded']
Deployability,"Printing through SAPT modules updated with a24c32fefdc47feebc8c2bbdbfbc737e17dfc75d, SAPT section in Psi4 manual updated as well with b96745b43112f629146394e9fd57fdbf2aece8fb",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/37#issuecomment-176528304:30,update,updated,30,https://psicode.org,https://github.com/psi4/psi4/issues/37#issuecomment-176528304,2,['update'],['updated']
Deployability,Probably a patch or two needed to the plugin templates to satisfy Travis.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/844#issuecomment-343331298:11,patch,patch,11,https://psicode.org,https://github.com/psi4/psi4/pull/844#issuecomment-343331298,1,['patch'],['patch']
Deployability,"Probably what's happening is that psi4 is packaged only with MKL (except for Apple Silicon) and OpenFF is flexible in BLAS, but conda-forge defaults to OpenBLAS. So one needs to install both together or install psi4 and then openff, as you worked out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3046#issuecomment-1706634544:178,install,install,178,https://psicode.org,https://github.com/psi4/psi4/issues/3046#issuecomment-1706634544,2,['install'],['install']
Deployability,Problem with curl flag in installation instructions,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/487:26,install,installation,26,https://psicode.org,https://github.com/psi4/psi4/issues/487,1,['install'],['installation']
Deployability,Proper update of post-scf wave-functions for fchk interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/747:7,update,update,7,https://psicode.org,https://github.com/psi4/psi4/pull/747,1,['update'],['update']
Deployability,Provides continuous build testing against new pushes to the repo and pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/223:9,continuous,continuous,9,https://psicode.org,https://github.com/psi4/psi4/pull/223,1,['continuous'],['continuous']
Deployability,Psi4 1.0 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/367,1,['Release'],['Release']
Deployability,"Psi4 1.0 and its successors in the 1.0 release series have the new SAPT code _and_ build with GCC 4.8. But for all the aforementioned reasons I advise building a 1.1a1 series Psi4 (and the fact that I tested the sapt2+3dmp2 forum post on a 1.1a1 series). We can get around your problem 4.8.2 problem. You don't have to compile _everything_ with >=4.9 GCC, just Psi4. (HDF5 isn't a dependency unless you `ENABLE_CheMPS2=ON`; GSL no longer a dependency at all; Python only an interpreter and header dependency, not library). You can get a gcc 5.2 from conda vis [these instructions](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/build_planning.rst#how-to-satisfy-the-gcc--49-requirement-on-linux-without-updating-the-os) and use that to compile Psi4, without ever interfering with your system gcc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274087513:39,release,release,39,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274087513,1,['release'],['release']
Deployability,Psi4 1.1 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/485:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/485,1,['Release'],['Release']
Deployability,Psi4 1.2 Release Candidate and Release Dates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/960:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/960,2,['Release'],['Release']
Deployability,Psi4 1.2 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/959,1,['Release'],['Release']
Deployability,Psi4 1.3 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:9,Release,Release,9,https://psicode.org,https://github.com/psi4/psi4/issues/1406,1,['Release'],['Release']
Deployability,"Psi4 1.5 is quite old at this point.; Ordinarily, I would ask you to try 1.7, but I have no idea why `conda install -c psi4 psi4` is giving you 1.5 instead of the latest release. Maybe you could try `conda install psi4 python=3.9 -c psi4` ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2930#issuecomment-1520147773:108,install,install,108,https://psicode.org,https://github.com/psi4/psi4/issues/2930#issuecomment-1520147773,3,"['install', 'release']","['install', 'release']"
Deployability,Psi4 Cannot find Pytest installed in Conda,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1705:24,install,installed,24,https://psicode.org,https://github.com/psi4/psi4/issues/1705,1,['install'],['installed']
Deployability,"Psi4 changes directory if **DFT-D3** is used:; ```python; import os; import psi4. print(psi4.__version__). print(os.getcwd()). psi4.set_output_file('/dev/null'); psi4.geometry('He 0 0 0'); psi4.energy('PBE-D3/3-21G'). print(os.getcwd()); ```; ```bash; $ python test1.py ; 1.2rc3; /shared/raimis/debug/psi4; /home/tmp/psi.15136..dftd3.a9f60419; ```; This does not happen if **DFT-D2** is used:; ```python; import os; import psi4. print(psi4.__version__). print(os.getcwd()). psi4.set_output_file('/dev/null'); psi4.geometry('He 0 0 0'); psi4.energy('PBE-D2/3-21G'). print(os.getcwd()); ```; ```bash; $ python test2.py ; 1.2rc3; /shared/raimis/debug/psi4; /shared/raimis/debug/psi4; ```; A small detail, but it is messing up our pipelines. And it is similar to #817.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1064:727,pipeline,pipelines,727,https://psicode.org,https://github.com/psi4/psi4/issues/1064,1,['pipeline'],['pipelines']
Deployability,"Psi4 does not have X2C analytic gradients. If a previous version of Psi4 let you calculate them, that was probably a bug, and they would not have agreed with the numerical gradients. ...It's _probably_ possible to add X2C analytic gradients to Psi4, with updates in Libint.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3151#issuecomment-2029758825:255,update,updates,255,https://psicode.org,https://github.com/psi4/psi4/issues/3151#issuecomment-2029758825,1,['update'],['updates']
Deployability,"Psi4 is really only safe to install with a defaults base, not a c-f base, on Linux. If you added `defaults` to the channel list or `anaconda::intel-openmp`, it'd likely solve, but I think you'd get a runtime error related to symbols and/or mkl- vs openblas-based environment. It's possible to get it working through a careful install order (iirc) or to run two conda envs at once (one defaults-based with psi4 and one c-f based with others) as the ecosystem GHA does. But on the whole, Linux psi4 in c-f env is not suggested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1164880108:28,install,install,28,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1164880108,2,['install'],['install']
Deployability,"Psi4 source and am actively phasing it out to; get us back to C98). I'm also under the impression that reading; environment variables is typically done in Python for Psi4 and I think that; is where such things should be done long term anyways. Personally for this problem the solutions on the Psi4 webpage,; http://sirius.chem.vt.edu/psi4manual/4.0b5/external.html, have worked great; for me. In particular setting this in your .psi4rc file is a convenient; way to accomplish this on a per machine basis. I haven't actually rejected the pull so other developers feel free to veto; my veto if I missed something (particularly @lorilab who I suspect is the; pro on these sorts of environment things). Ryan. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 24, 2015 8:21 AM, ""wpoely86"" notifications@github.com wrote:. > On some systems, the default temp location should not be /tmp; > but it is set by either $TMPDIR, $TEMP or $TMP (commenly done on HPC; > systems, where the temp location may be somthing special, a ssd for; > example).; > This patch first checks those 3 environment variables; > and uses its value when set. It falls back to /tmp when; > nothing is set.; > ; > ## std::getenv needs C++11 to be thread safe.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4public/pull/97; > Commit Summary; > - Use $TMPDIR for default of PSI_SCRATCH when set; > ; > File Changes; > - _M_ src/bin/psi4/psi_start.cc; > https://github.com/psi4/psi4public/pull/97/files#diff-0 (3); > - _M_ src/lib/libpsio/filemanager.cc; > https://github.com/psi4/psi4public/pull/97/files#diff-1 (16); > - _M_ src/lib/libpsio/psio.hpp; > https://github.com/psi4/psi4public/pull/97/files#diff-2 (4); > ; > Patch Links:; > - https://github.com/psi4/psi4public/pull/97.patch; > - https://github.com/psi4/psi4public/pull/97.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/pull/97.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105036059:1750,patch,patch,1750,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105036059,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Psi4 uses an branch of L2 that hasn't been merged to master and uses CMake detection, not pkgconfig detection. While the detection scheme can be overcome, several build options need to be set for Psi4 such that if you have a L2 install that works with any other QC package, it probably doesn't work with Psi4. See https://github.com/evaleev/libint/issues/190. > Could NOT find Libint2 (missing: Libint2_DIR). I'd guess this is a red herring. Unless you've built from https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 tarball, the Psi4 buildsys as-is won't succeed for L2.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2675#issuecomment-1212521732:228,install,install,228,https://psicode.org,https://github.com/psi4/psi4/issues/2675#issuecomment-1212521732,1,['install'],['install']
Deployability,"Psi4 v1.2 has been released, closing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-404502624:19,release,released,19,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-404502624,2,['release'],['released']
Deployability,Psi4 v1.4 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:10,Release,Release,10,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['Release'],['Release']
Deployability,Psi4 v1.5 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1768:10,Release,Release,10,https://psicode.org,https://github.com/psi4/psi4/issues/1768,1,['Release'],['Release']
Deployability,"Psi4 v1.6 installation issue Windows, conda, Python 3.8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614:10,install,installation,10,https://psicode.org,https://github.com/psi4/psi4/issues/2614,1,['install'],['installation']
Deployability,"Psi4 version 0.4.186 was installed using miniconda on Linux 4.4.5-200.fc22.x86_64 #1 SMP Thu Mar 10 17:54:17 UTC 2016 x86_64 x86_64. Parenthetical polarization qualifiers in Pople basis set names do not parse reliably. While 6-31G(d), 6-31G(d,p) names are accepted, more elaborately polarized basis set names fail unless [+,()] conversion to _underscore_ is already done. ""set basis **6-311G(2d,2p)**"" is in the attached example. ; Instead of seeking file **6- 311g_2d_2p_.gbs**, it aborts from the boost-python module (instead of from ./share/psi4/python/inputparser.py or similar):. > _An error has occurred. Traceback:; > <class 'Boost.Python.ArgumentError'>: Python argument types in; > psi4.set_global_option(str, str, str); > did not match C++ signature:; > set_global_option(Ss, N5boost6python4listE); > set_global_option(Ss, N5boost6python4listE, PN3psi8DataTypeE); > set_global_option(Ss, i); > set_global_option(Ss, d); > set_global_option(Ss, Ss): File ""<string>"", line 28, in <module>_. [h2o.zip](https://github.com/psi4/psi4/files/190703/h2o.zip)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-201953614:25,install,installed,25,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-201953614,1,['install'],['installed']
Deployability,"Psi5 only exists in arguments about version naming :-) . I agree that `1.0.0` is out-of-sync with the released beta versions like 4.0b5. But it is in sync with the past 11 months (https://anaconda.org/psi4/psi4/files), ever since we started identifying commits by actual version numbers rather than just git hashes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-182956745:102,release,released,102,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-182956745,1,['release'],['released']
Deployability,Pushed out a new round of updates mostly removing more pybind11 from the core `size_t`ifying the code base. Also merged through @andysim ECP Basis changes without too much issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/736#issuecomment-308591444:26,update,updates,26,https://psicode.org,https://github.com/psi4/psi4/pull/736#issuecomment-308591444,1,['update'],['updates']
Deployability,Python module psi4 isn't installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2690:25,install,installed,25,https://psicode.org,https://github.com/psi4/psi4/issues/2690,1,['install'],['installed']
Deployability,Python modules are installed into a wrong path,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2800:19,install,installed,19,https://psicode.org,https://github.com/psi4/psi4/issues/2800,1,['install'],['installed']
Deployability,QC JSON Update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1011:8,Update,Update,8,https://psicode.org,https://github.com/psi4/psi4/pull/1011,1,['Update'],['Update']
Deployability,QCSchema update and SCF properties,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1421:9,update,update,9,https://psicode.org,https://github.com/psi4/psi4/pull/1421,1,['update'],['update']
Deployability,"Question 2, I think answer 1 is the accepted one by the C++ community; so I'd strongly recommend that one. Question 1 is a toughie. I don't know if I feel strongly about it, but I do think namespace protecting all header files is good practice and should be done for any library regardless of the number and complexity of headers. This also seems to be the norm for C++ projects, which in turn makes it somewhat of a null issue. If you really don't like installing `efp.h` to `efp/efp.h` I'd say go ahead and remove the extra `efp`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239220614:454,install,installing,454,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239220614,1,['install'],['installing']
Deployability,"Question about plugin ""installation""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/229:23,install,installation,23,https://psicode.org,https://github.com/psi4/psi4/issues/229,1,['install'],['installation']
Deployability,"Quick notes on timer.dat; * the file is cummulative so run each calc in separate directory so you can match an input file with a timer.dat entry; * timer.dat is mostly for developers so it has just enough info to identify things but not much description; * if you're willing to compile the code (for c-side entries) or edit the installation (for py-side entries), adding more subdivisions to timer.dat is easy; * py-side, have matching labels like https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L196-L198; * c-side, have matching entries like https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dfmp2/mp2.cc#L219-L221; * for a single run, timer.dat shows the same info two ways -- ; * one is sorted cummulative time spent w/i each label marker; * other is nested so you can see what label markers contain others; * so the hardest part is finding/adding appropriate marks that you want to measure the time over; * you can get the number of scf iterations from `psi4.variable(""SCF ITERATIONS"")` at the end of a calc. Hope this is broadly helpful. Feel free to ask questions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2601#issuecomment-1152763335:328,install,installation,328,https://psicode.org,https://github.com/psi4/psi4/issues/2601#issuecomment-1152763335,1,['install'],['installation']
Deployability,"Quite right on the chicken/egg problem. One approach I considered was to get normal 3-round approval of this PR with the current scf-only changes. The re-rebase it, `c-f` it, and post it to psi4/psi4 as a branch. _Then_ ppl can make additional EFP/PCM/etc. PRs to that branch rather than master, so all the discussion will stay on psi4/psi4 but we won't have an enormous final PR that no one wants to review. For longer term, though, yes, if we had a stable, vetted, low-key release every couple months, there wouldn't be this considerable pressure to maintain master in top-notch working order. And if we wanted to deprecate something, wouldn't take 2 years to get through warning release, then error release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/847#issuecomment-347013624:475,release,release,475,https://psicode.org,https://github.com/psi4/psi4/pull/847#issuecomment-347013624,3,['release'],['release']
Deployability,"Quite true. Among the developers, the usual practice has been to run and develop from source (for python) and objdir (for compiled), so there was no assurance of an installation directory. In fact, the psi4 headers weren't installed until recently (and if you build the internal boost, those headers _still_ aren't installed). I fixed recently the generation of plugins from an installed copy, but only for the special case of a conda binary. As an interim solution, you can (1) check out source to permanent storage and keep it around, while still building in objdir in scratch or (2) hardcoding PLUGIN_ values `$PREFIX/share/psi4/plugin/Makefile.template` into (can copy from the sample Makefile you created, then just patch up the header paths). I'll see about having the plugin Makefiles search source _and_ install directories for headers so that all can use plugins the way they want. Thanks for alerting us to this problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/410#issuecomment-226000498:165,install,installation,165,https://psicode.org,https://github.com/psi4/psi4/issues/410#issuecomment-226000498,6,"['install', 'patch']","['install', 'installation', 'installed', 'patch']"
Deployability,"R will be smoother, and CompositeJK development can continue parallel to the developments discussed in https://github.com/psi4/psi4/pull/2682. Additionally, this PR serves as a first step the to decomposition of https://github.com/psi4/psi4/pull/2682 as discussed in that PR's comments, allowing for the full standardization of IncFock among integral-direct JK subclasses. For reviewers, since this PR is the bottleneck for two different routes of JK development (CompositeJK and IncFock standardization), it should be considered the highest-priority JK development PR to merge into Psi4 at the moment. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Switches DFJLinK to using the incremental Fock build implementation used in DFJCOSK. This change standardizes the incremental Fock implementation between DFJLinK and DFJCOSK and improves the memory usage of DFJLinK in the process.; - [X] Changes LinK machinery to support new incremental Fock formalism. ## Questions; - [ ] Since this PR specifically focuses on changes to DFJLinK, there are still a couple of small differences in IncFock between DFJLinK and DFJCOSK, mainly, refactorings and the aforementioned bells and whistles that DFJLinK has that DFJCOSK doesn't. Would it be better to make adjustments to DFJCOSK in this PR as well, to further standardize the two; or is it preferrable to punt that down to the next CompositeJK PR, when DFJLinK and DFJCOSK are combined into the pilot CompositeJK implementation? If we decide to make the changes to DFJCOSK this PR, it would essentially consist of refactoring the DFJCOSK IncFock to match that of DFJLinK, and adding the bells and whistles that DFJLinK currently has.; - [ ] Should the relevant test outputs be updated?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792:3814,update,updated,3814,https://psicode.org,https://github.com/psi4/psi4/pull/2792,1,['update'],['updated']
Deployability,"RSION : 2.2.06; gdma_INCLUDE_DIRS : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_INCLUDE_DIR : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_LIBRARIES : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; gdma_LIBRARY : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; ======================== gdma::gdma ========================; tgt='gdma::gdma' prop='IMPORTED'; value='TRUE'; defined='0'; set='1'; gt='gdma::gdma' prop='INTERFACE_COMPILE_DEFINITIONS'; value='USING_gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='INTERFACE_INCLUDE_DIRECTORIES'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include/GDMA'; defined='0'; set='1'; tgt='gdma::gdma' prop='LOCATION'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so'; defined='0'; set='1'; tgt='gdma::gdma' prop='NAME'; value='gdma::gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='POSITION_INDEPENDENT_CODE'; value='True'; defined='0'; set='1'; tgt='gdma::gdma' prop='TYPE'; value='SHARED_LIBRARY'; defined='0'; set='1'; ```; - Yes, you could make a plausible case that we haven't gained an immense lot. But it is more CMake-ic and attaching properties to a target seems the OO thing to do compared to the ordered data structure of the usual suspect variables.; - Also switching from `ENABLE_<PKG>` as both the CMake user will variable and the compiler definition to `ENABLE_<Pkg>` as the CMake user will variable and `USING_<Pkg>` ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:2489,install,install-,2489,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,2,['install'],['install-']
Deployability,"R`: whether `<pkg>Config.cmake` findable at this loc; (d) `CMAKE_PREFIX_PATH`. | (a) enabled | (b) disable find | (c) findable dir | (d) findable gen | outcome |; | --- | --- | --- | --- | --- |; | T | T | | | extproj_add, detect superbuild |; | T | F | T | | detect pre-built at <pkg>_dir |; | T | F | F | T | detect pre-built at cmake_prefix_path |; | T | F | F | F | extproj_add, detect superbuild |; | F | | | | no add-on |. **Questions**; - Since it's tricky to detangle plan from implementation, have I violated any of your superbuild principles?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH` has to be hinted (`find_package(gdma CONFIG REQUIRED HINTS ${CMAKE_PREFIX_PATH}/gdma)`) and the current way I've done can't be robust (think ;-lists). I can understand your wanting to separate out extproj() installations as not-quite-up-to-snuff, but the extra hinting level is annoying, so how about keeping `externals/` (controlled by a keyword maybe; `INSTALL_EXTPROJ_SEPARATE`) and dropping the extra namespacing level. So a default installation looks like below. ```; - bin/; -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:4776,install,install,4776,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,1,['install'],['install']
Deployability,"Ran into this issue myself a week ago. It turns out that you need to patch a few file in the MRCC tarball and recompile to make it work (and this has to be done independently of the Psi4 interface) I couldn't see this info advertised on the MRCC website, I happened to browse the ""Patches"" section in their download page and noticed that there were few patches more recent than the tarball I had just downloaded.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866#issuecomment-613267151:69,patch,patch,69,https://psicode.org,https://github.com/psi4/psi4/issues/1866#issuecomment-613267151,3,"['Patch', 'patch']","['Patches', 'patch', 'patches']"
Deployability,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:130,pipeline,pipelines,130,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048,3,"['pipeline', 'update']","['pipelines', 'pipelines-linux', 'updated']"
Deployability,"Rebasing is not trivial for some reason, I am getting this error on force-push. > refusing to allow an OAuth App to create or update workflow `.github/workflows/ecosystem.yml` without `workflow` scope. Tried a few things to get a new token, etc. with no avail. I can work around this, but only a bit later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2813#issuecomment-1333565864:126,update,update,126,https://psicode.org,https://github.com/psi4/psi4/pull/2813#issuecomment-1333565864,1,['update'],['update']
Deployability,"Rebuilding Psi4 1.3.2 in Fedora rawhide fails with; ```; -- Found PythonInterp: /usr/bin/python3 (found suitable version ""3.12"", minimum required is ""3.5"") ; CMake Error at cmake/FindPythonLibsNew.cmake:94 (message):; Python config failure:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ModuleNotFoundError: No module named 'distutils'; Call Stack (most recent call first):; CMakeLists.txt:168 (find_package); -- Configuring incomplete, errors occurred!; error: Bad exit status from /var/tmp/rpm-tmp.sQzcRh (%build); ```; The issue here is that distutils was deprecated in Python 3.10 and marked for deletion in 3.12:; https://docs.python.org/3/whatsnew/3.10.html#distutils-deprecated. The file in master has been slightly updated, but still features the use of distutils, so this issue is likely present on the master branch as well.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020:752,update,updated,752,https://psicode.org,https://github.com/psi4/psi4/issues/3020,1,['update'],['updated']
Deployability,Refreshed all tests/*/output.ref's for the Psi4 release.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315:48,release,release,48,https://psicode.org,https://github.com/psi4/psi4/pull/315,1,['release'],['release']
Deployability,"Regarding the debian detection: since CMake decides the folder location,; CMake should also detect it:. The headers are always in /usr/include/chemps2/, but since in; https://github.com/psi4/psi4public/blob/f81842d2e9c255490d450681bc6bdeca551b81e1/src/bin/dmrg/dmrgscf.cc; they are included as ""chemps2/DMRG.h"" etc, it will always need. ```; /usr/include; ```. I suppose CMake will always look there, but it cannot hurt to append this; folder again :-). The library is in the folder. ```; /usr/${CMAKE_INSTALL_LIBDIR}; ```. where the latter part is automatically set by calling. ```; include(GNUInstallDirs); ```. in the CMakeLists.txt. Check; https://github.com/SebWouters/CheMPS2/blob/master/CMakeLists.txt#L10 and; https://github.com/SebWouters/CheMPS2/blob/master/CheMPS2/CMakeLists.txt#L21; for an example. Best wishes,; Sebastian. 2015-07-19 16:23 GMT-04:00 Lori A. Burns notifications@github.com:. > Lingering issues for finalizing CheMPS2:; > ; > -; > ; > Make sure can detect Debian installation of CheMPS2 in ""list of files""; > https://packages.debian.org/sid/libchemps2-dev; > -; > ; > make up new conda package; > -; > ; > add conda package to metapackage; > -; > ; > add chemps2.rst to interfaces in docs; > -; > ; > add chemps2 to binary; > -; > ; > review keywords; > -; > ; > add acceptance for Intel redistributable for chemps2.so; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/150. ## . ---. dr. ir. Sebastian Wouters; Fellow of the Belgian American Educational Foundation; Princeton University; (address) Department of Chemistry; Frick Laboratory 351; Princeton, NJ 08544, USA; (e-mail) sebastianwouters@gmail.com. ---",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/150#issuecomment-123019591:992,install,installation,992,https://psicode.org,https://github.com/psi4/psi4/issues/150#issuecomment-123019591,1,['install'],['installation']
Deployability,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236:154,install,install,154,https://psicode.org,https://github.com/psi4/psi4/issues/3236,1,['install'],['install']
Deployability,"Related to #1255, I tried to compile psi4 by hand to get an up to date version. However, the compilation fails; ```; [ 98%] Building CXX object src/CMakeFiles/core.dir/core.cc.o; cd /home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/src && /usr/lib64/ccache/c++ -DUSING_CheMPS2 -DUSING_dkh -Dcore_EXPORTS -I/home/work/psi4/psi4/psi4/include -I/home/work/psi4/psi4/psi4/src -isystem /home/work/psi4/psi4/objdir/stage/include -I/home/work/psi4/install/include -isystem /usr/include/python3.6m -march=native -O2 -g -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/core.dir/core.cc.o -c /home/work/psi4/psi4/psi4/src/core.cc; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detai",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:456,install,install,456,https://psicode.org,https://github.com/psi4/psi4/issues/1256,3,['install'],['install']
Deployability,"Related to issue #414 : when using the GCC 5.2 trick reported [here](http://psicode.org/psi4manual/master/build_planning.html#faq-modgcc) AND building CheMPS2, which requires to specify the -DCMAKE_AR and -DCMAKE_RANLIB variables, the build fails with the message:. `sorry - this program has been built without plugin support`. I traced it back to gcc-ar for both gcc5.2 from conda and gcc4.8 from the local system being built without plugin support. After more staring, it looks like both gcc-ar are wrappers which call the same /usr/bin/ar, which was built without plugin support. Anyone can think of a workaround for this ? Could we install a local ar in the conda environment and have gcc5.2 call this one, for example ?. (Note: Edited for clarity.)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660:636,install,install,636,https://psicode.org,https://github.com/psi4/psi4/issues/660,1,['install'],['install']
Deployability,"Release 0.3 fails to build with gcc 5.1.1, error is. /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc: In member function 'virtual std::vectorpsi::ShellInfo psi::Gaussian94BasisSetParser::parse(const string&, const std::vectorstd::basic_string<char >&)':; /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc:176:104: error: narrowing conversion of '-1' from 'int' to 'char' inside { } [-Wnarrowing]; char shell_to_am[] = {-1,-1,-1, 2,-1, 3, 4, 5, 6,-1, 7, 8, 9,10,11, 1,12,13, 0,14,15,16,17,18,19,20};; ^",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/177:0,Release,Release,0,https://psicode.org,https://github.com/psi4/psi4/issues/177,1,['Release'],['Release']
Deployability,"Release 1.0, errors when running setup script",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:0,Release,Release,0,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Release'],['Release']
Deployability,Release tweaks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/412:0,Release,Release,0,https://psicode.org,https://github.com/psi4/psi4/pull/412,1,['Release'],['Release']
Deployability,Release v1.3 has been feature complete for a bit now and rc1/2 are now out. See #1406 for patch notes.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/972#issuecomment-466437484:0,Release,Release,0,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-466437484,2,"['Release', 'patch']","['Release', 'patch']"
Deployability,"Reminder: Feature freeze is in 4 days (May 1st)! At this point this means that currently open PR's are the only ones that can likely get in. If you have a new feature wanting to get into the Psi4 1.2 release, please contact us today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/960#issuecomment-384961023:200,release,release,200,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-384961023,1,['release'],['release']
Deployability,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/966#issuecomment-381827387:73,update,updated,73,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387,1,['update'],['updated']
Deployability,Replace the file in your installed `share/psi4/basis` with the one I linked.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/917#issuecomment-364864174:25,install,installed,25,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364864174,1,['install'],['installed']
Deployability,"Reproach well deserved, @jgonthier. Info has been in [CMakeLists.txt](https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L71), but that admittedly is an awful error message. I've figured out how to hit it locally (conda directory structure bypasses it all), and a fix will appear soon to a PR near you. Thanks for the report. @edeustua, `-DOpenMP_LIBRARY-DIRS` probably _is_ the intended solution. The usual case where this issue appears is you're building Psi with GCC compilers and MKL LAPACK. For a usual from-intel (as opposed to from-conda) MKL installation, libraries mkl_rt and iomp5 are in different locations. With GCC+MKL, Psi needs to explicitly use iomp5 to suppress the tenacious gomp. But unless the location of iomp5 is already known to CMake through another detection sequence, it can't find the library, hence the (poor) error message you got. `OpenMP_LIBRARY_DIRS` is the intended solution. If I'm misunderstanding your circumstance, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-410467976:555,install,installation,555,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-410467976,1,['install'],['installation']
Deployability,"Resolution: for the conda installation environment, so long as not overwriting distributed file (e.g., no renaming S22 database or cc-pvdz basis set), install into normal location on install tree. Reopen if further questions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/229#issuecomment-182542054:26,install,installation,26,https://psicode.org,https://github.com/psi4/psi4/issues/229#issuecomment-182542054,3,['install'],"['install', 'installation']"
Deployability,"Right @andysim, the 3c test was shuffled btwn PRs. The other had 3c but no pytest. This has pytest but no 3c. Either order would have been fine, as nothing's counting on the pytest to pass at this point (and it wouldn't even have run if you didn't have gcp installed), which is good b/c the threading test fails in the multi-pytest mode. So moot, but that's what was going on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627#issuecomment-283435151:257,install,installed,257,https://psicode.org,https://github.com/psi4/psi4/pull/627#issuecomment-283435151,1,['install'],['installed']
Deployability,Right now psi is still pulling libxc from our repo (from a 3 series tarball). Any dev/unstable warnings against pulling from gitlab branch to try this out? Timeframe of next release from GL?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/793#issuecomment-330903372:174,release,release,174,https://psicode.org,https://github.com/psi4/psi4/issues/793#issuecomment-330903372,1,['release'],['release']
Deployability,"Right, without more information, the most I'm expecting is to update the error message with something that makes clear whether this is something the user can fix by changing settings as well as what the problem is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1682#issuecomment-515464684:62,update,update,62,https://psicode.org,https://github.com/psi4/psi4/issues/1682#issuecomment-515464684,1,['update'],['update']
Deployability,SAPT output update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/37:12,update,update,12,https://psicode.org,https://github.com/psi4/psi4/issues/37,1,['update'],['update']
Deployability,SAPT(DFT) MO disk I/O optimization & Exchange-Dispersion scaling scheme update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481:72,update,update,72,https://psicode.org,https://github.com/psi4/psi4/pull/2481,1,['update'],['update']
Deployability,SCF checkpointing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190:18,update,update,18,https://psicode.org,https://github.com/psi4/psi4/pull/2190,1,['update'],['update']
Deployability,"SCF stability analysis with FOLLOW is currently only implemented for UHF. RHF and ROHF have stability analysis, but do not have the capability to follow the instability. This is not documented at all, as far as I can tell, and what is even worse is that if the user requests a FOLLOW with RHF, it ""fails"" silently.; That is, the SCF and the stability analysis is run, and even if there is an instability Psi4 just carries on. So I propose two short term solutions:; 1. Update the docs to make it clear that FOLLOW is currently an UHF only feature.; 2. Implement checks against the user requesting FOLLOW with RHF or ROHF. I think exiting with error is the reasonable action when the user requests an unavailable feature. Of course the long term solution would be to implement follow for R(O)HF, but that is probably more of a wishlist item, than anything else. I found these issues a while ago and planned to fix them myself, but never got around to actually do so, and will not have the time to work on them before the 1.2 release.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/973:469,Update,Update,469,https://psicode.org,https://github.com/psi4/psi4/issues/973,2,"['Update', 'release']","['Update', 'release']"
Deployability,SNS MP2 installation fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1425:8,install,installation,8,https://psicode.org,https://github.com/psi4/psi4/issues/1425,1,['install'],['installation']
Deployability,SOSCF: Now correctly throws an error for RKS/UKS SOSOCF updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/258:56,update,updates,56,https://psicode.org,https://github.com/psi4/psi4/pull/258,1,['update'],['updates']
Deployability,"Same situation, sadly. GCC builds are much slower than Clang builds, and uploading the cache (unrelated to Ninja or Makefiles) really hurts. We might want to move one Linux pipeline to Azure or Circle CI, at some point...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1748#issuecomment-549383231:173,pipeline,pipeline,173,https://psicode.org,https://github.com/psi4/psi4/pull/1748#issuecomment-549383231,1,['pipeline'],['pipeline']
Deployability,Samples update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1022:8,update,update,8,https://psicode.org,https://github.com/psi4/psi4/pull/1022,1,['update'],['update']
Deployability,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/216:1308,update,update,1308,https://psicode.org,https://github.com/psi4/psi4/issues/216,1,['update'],['update']
Deployability,"See conversation at https://github.com/psi4/psi4public/issues/214 . We need to copy the main psi4/include headers at install-time. Also, consider if all headers (incl. the `src/lib-bin/*/*.h` that _are_ currently getting installed) should properly be behind a `include/psi4` or `include/psi` namespace.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/215:117,install,install-time,117,https://psicode.org,https://github.com/psi4/psi4/issues/215,2,['install'],"['install-time', 'installed']"
Deployability,"See https://gitlab.com/libxc/libxc/issues/61 for background. This PR updates psi to use the !67 API that will be released in Libxc5. When that happens, revive this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-454926339:69,update,updates,69,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-454926339,2,"['release', 'update']","['released', 'updates']"
Deployability,See the tracker at http://sirius.chem.vt.edu/trac/ticket/270 for the proposed patch.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3#issuecomment-17311560:78,patch,patch,78,https://psicode.org,https://github.com/psi4/psi4/issues/3#issuecomment-17311560,1,['patch'],['patch']
Deployability,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/64:334,install,install,334,https://psicode.org,https://github.com/psi4/psi4/issues/64,1,['install'],['install']
Deployability,Segmentation fault after installation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792:25,install,installation,25,https://psicode.org,https://github.com/psi4/psi4/issues/1792,1,['install'],['installation']
Deployability,Set up integration with Danger.Systems,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/809:7,integrat,integration,7,https://psicode.org,https://github.com/psi4/psi4/pull/809,1,['integrat'],['integration']
Deployability,"Setting TargetLAPACK_DIR (as you suggested) didn't seem to help: it still couldn't find MathOpenMP. However, adding; `-DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}` to external/downstream/gpu_dfcc seems to do the trick and gpu_dfcc builds OK (within the psi4 tree). It does also need CMAKE_CUDA_COMPILER and CUDA_TOOLKIT_ROOT_DIR defining before it's happy (rather than having defaults). I added them to CMakeCache.txt but presumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:521,install,install,521,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,7,"['INSTALL', 'Install', 'Release', 'configurat', 'install']","['INSTALL', 'Install', 'Release', 'configuration', 'install']"
Deployability,"Setup line:; ```; cmake -H. -Bbuild ; -DCMAKE_CXX_COMPILER=clang++ ; -DCMAKE_CXX_FLAGS=""--gcc-toolchain=/global/hds/software/cpu/eb3/GCCcore/5.4.0""; -DCMAKE_Fortran_COMPILER=gfortran; -DCMAKE_C_COMPILER=clang; -DCMAKE_C_FLAGS=""--gcc-toolchain=/global/hds/software/cpu/eb3/GCCcore/5.4.0""; -DPYTHON_EXECUTABLE=`type -P python`; -DENABLE_dkh=ON; ```; Compiling with:; ```; cmake --build . -- -j20; ```; Results for `-GNinja`:; ```; real	41m37.081s; user	458m12.064s; sys	2m24.967s; ```; Results for `-G""Unix Makefiles""`:; ```; real	45m45.169s; user	458m39.363s; sys	2m28.485s; ```; I build Clang in debug mode, I guess that's why the builds are overall slower than with the Intel compilers. I am recompiling Clang in release mode to check that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794#issuecomment-336314324:714,release,release,714,https://psicode.org,https://github.com/psi4/psi4/pull/794#issuecomment-336314324,1,['release'],['release']
Deployability,"Setup: Install Psi4 rc1 for Linux with python 3.9 via the installer from https://psicode.org/installs/v14rc1/. Result: This installation appears to work fine for most molecules, but then has an issue with systems with linear dependencies, specifically when running the in-core DF algorithm. The provided file, `psi4_issue.py`, when run with sufficient memory to run in-core (~40 GB), gives an energy that is low by more than 2 Hartree (should be -1145.943, but gives -1148.711). With scf_type DF and less RAM (thus causing the disk algorithm to run), the energy is correct. Setting s_tolerance to 1e-4 also fixes the problem, at the cost of a little accuracy loss (5e-4 Hartree). I have reproduced this error on several computers, both CentOS and Ubuntu. The next version, psi4 rc2, does not show this problem. It would be nice to know whether this was deliberately fixed, or might still be around. `psi4_issue.py`: https://drive.google.com/file/d/1RTSVVfmXwJNpS4CHtvMYOTBU63J8Z85j/view?usp=sharing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211:7,Install,Install,7,https://psicode.org,https://github.com/psi4/psi4/issues/2211,4,"['Install', 'install']","['Install', 'installation', 'installer', 'installs']"
Deployability,"Shameless self-promotion: https://github.com/dev-cafe/cmake-cookbook/tree/master/chapter-10/recipe-04/cxx-example; This is how I went about installing the superbuild, while keeping the staging. I basically do (I guess) what conda does and touch up the `RPATH` upon installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411823579:140,install,installing,140,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411823579,2,['install'],"['installation', 'installing']"
Deployability,Shifting this to 1.4 release. @tomspur any thoughts on the current status here?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-449586775:21,release,release,21,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-449586775,1,['release'],['release']
Deployability,Shifting this to the 1.4 release at earliest. @tomspur @amjames @robertodr Should this remain open or is it superseded by other PR's?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-449586814:25,release,release,25,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-449586814,1,['release'],['release']
Deployability,"Simint Integration, Continued",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625:7,Integrat,Integration,7,https://psicode.org,https://github.com/psi4/psi4/pull/625,1,['Integrat'],['Integration']
Deployability,"Since 1.4 is released, I intend to close this after two days if there isn't an actionable item here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-900548333:13,release,released,13,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-900548333,1,['release'],['released']
Deployability,"Since Psi4:; * is primarily a shared library / Python module (to C++/Py folks, respectively) rather than an executable (`bin/psi4` is light script loading Python module);; * is not necessarily at the top of the call stack, and we've heard from projects who would like to import us;; * is benefiting from the non-attaching and permissive licenses of numerous external projects to supplement Psi4's capabilities, and we want to return the favor,. **we plan to change our license from GPL-2.0+ to LGPL-3.0+, effective by the the 1.1 release.**. EDIT: now targeting LGPL-3.0, not +, with PR psi4/psi4#690. The current and historical core developers have signed off on this. The historical peripheral developers are discussing this without any initial objections. We now want to get feedback from the GitHub contributor, user, and packaging community (or anyone not in e-mail communication with the core developers). So please reply with any concerns, constraints, preferences, etc. ##### Dependencies licensing situation; * required library dependencies (current & anticipated): PSFL, LGPL-3.0+, BSD-3-Clause-LBNL, BSD-3-Clause ; * optional library dependencies: BSD-2-Clause, BSD-3-Clause, GPL-2.0+, LGPL-3.0+; * optional executable dependencies: GPL-1.0+, Custom; * Psi4 plugins: GPL-2.0+, GPL-3.0+; * conda-wise, we'll build an alternate conda package that doesn't link any GPL libraries or plugins. ##### Queries; * Psi4 is a Python module and hence a dynamic library. I don't know right off how to even build a `psi4.a`. With that in mind, does anyone care about license terms for static linking?; * Any concrete problems that would be solved by a permissive license instead of LGPL?; * Anyone care about sublicensing?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/688:530,release,release,530,https://psicode.org,https://github.com/psi4/psi4/issues/688,1,['release'],['release']
Deployability,"Since `check_<lang>_compiler_flag` calls `check_<lang>_source_compiles` defining `CMAKE_REQUIRED_FLAGS` right before the former is called does the trick. I don't know why this isn't done automatically or why it isn't clearly documented, but it works. This is the full patch:; ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index ca7e20054..6cc4ee09e 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -77,10 +77,6 @@ option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); -option(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_UBSAN"" Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_MSAN"" Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF); # These options are relevant to pasture; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); @@ -114,6 +110,14 @@ option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); +option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=address -fno-omit-frame-pointer""); +option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); +option_with_flags(ENA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343290538:268,patch,patch,268,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343290538,1,['patch'],['patch']
Deployability,"Since it is a gradient job I do not simply grab integrals from SCF, but I compute both JKFIT and RI basis DF integrals. Hence, it does not matter to start with the conventional integrals the df-mp2 code proceeds. However, the gradient is not correct because the MO coefficients are from conventional SCF, but it should be from DF-SCF. I think in the case df-mp2 gradients, if user set the conventional SCF, then we should throw an error. Alternatively we may change the reference to DF-SCF and throw a warning for user to explain what we did. Both solutions are okay for me. DFOCC uses frozen cores properly in energy and gradients. I did not add the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients. However, OCC does not use frozen cores in the energy and gradients. In case of OCC the problem is that you need to define different MO class with libtrans, which is not obvious how to do it. I know it is possible now. Andy explained it for me. As a result, there is no plan for OCC module. However, frozen virtuals will be added to DFOCC. In fact, I am waiting for RC1 release, then I will implement add it to Psi4. For the final question, your reference gradient is wrong (mp2tot_vals). This is a very good example how 3-point numeric gradients are unreliable for challenging systems. I reproduce problem with your input. However, if I use ""points 5"", all numeric gradient computations give the same result with the analytic gradients. I also run the same job with gausssian 09 with analytic gradients, which gives the same result with our analytic gradient. Here is the G09 result:. ---. Center Atomic Forces (Hartrees/Bohr); Number Number X Y Z. ---. ```; 1 1 0.000000000 0.000000000 -0.002819339; 2 9 0.000000000 0.000000000 0.002819339; ```. ---. and our analytic gradients:. -Total gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.000000000000 0.000000000000 0.002819338251; 2 0.000000000000 0.000000000000 -0.002819338251. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192875912:1207,release,release,1207,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192875912,1,['release'],['release']
Deployability,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-874494530:99,update,update,99,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530,1,['update'],['update']
Deployability,Since there has been no action on this I'm going to take care of 1/2 above so that it makes the 1.2 release.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/973#issuecomment-386380973:100,release,release,100,https://psicode.org,https://github.com/psi4/psi4/issues/973#issuecomment-386380973,1,['release'],['release']
Deployability,"Since this has not been updated I added the clarification to the comments and opened a new PR #573 , this will be closed. . Thanks for bringing this up @matt-chan. If you have any questions about libdpd or the rest of psi4, I'm always watching our [forums](http://forum.psicode.org/) and would be happy to help!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/550#issuecomment-272717731:24,update,updated,24,https://psicode.org,https://github.com/psi4/psi4/pull/550#issuecomment-272717731,1,['update'],['updated']
Deployability,"Sir, I just noticed that my psi4 does not reflect the methods that comes with it. Because of this, I can't calculate the potential energy data for the first excited states of the CF molecule. How can I add different methods to the Psi4 I already have compiled and installed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280:264,install,installed,264,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280,1,['install'],['installed']
Deployability,Small PCM updates after scfitertopy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1327:10,update,updates,10,https://psicode.org,https://github.com/psi4/psi4/pull/1327,1,['update'],['updates']
Deployability,"Small adcc amendments (Use main channel, update fallback version)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1827:41,update,update,41,https://psicode.org,https://github.com/psi4/psi4/pull/1827,1,['update'],['update']
Deployability,Small update on this. Also moved `==> Pre-Iterations <==` to before the SCF guess:. ```; Minimum eigenvalue in the overlap matrix is 3.2955701764E-02.; Using Symmetric Orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. Note: current guess does not provide; initial orbital occupations. -------------------------; Irrep Nso Nmo ; -------------------------; A 48 48 ; -------------------------; Total 48 48; -------------------------. ==> Iterations <==; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713#issuecomment-528858486:6,update,update,6,https://psicode.org,https://github.com/psi4/psi4/pull/1713#issuecomment-528858486,1,['update'],['update']
Deployability,Small updates to adcc integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1892:6,update,updates,6,https://psicode.org,https://github.com/psi4/psi4/pull/1892,2,"['integrat', 'update']","['integration', 'updates']"
Deployability,"So I've been working on a mostly MPI things in my fork (Distributed CASSCF, Distributed DFJK). I have no idea how this workflow is going to be implemented in the future, so I am not not ready to merge this into the main branch before late October. Unfortunately, I also used quite a bit of the now defunct (I think) libparallel2, so I am not sure where this will go. If I have a fork of PSI4, will this fork be deleted in October? . I also am not ready to merge any of this into a steady branch as it requires quite a bit of finesse (and various libraries) to run, so I would not want to release this yet. . I realize that I will probably have to work with you all in order to merge these changes at some point in the later future. As long as my fork will not get deleted, I am perfectly fine waiting for this time to occur.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-248191155:588,release,release,588,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-248191155,1,['release'],['release']
Deployability,"So I've installed the intel distribution of Python, and now the numpy seems ok (no more openblas):. ```; bsenjean@MBP-de-Bruno:~/Documents/intelpython3/pkgs/numpy-base-1.17.5-py37_1/lib/python3.7/site-packages/numpy/linalg]$ otool -L lapack_lite.cpython-37m-darwin.so; lapack_lite.cpython-37m-darwin.so:; 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1281.0.0); 	@rpath/libimf.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libsvml.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libirng.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 800.7.0); 	@rpath/libintlc.dylib (compatibility version 1.0.0, current version 1.13.0); ```. However, after reinstalling psi4, it still has gomp:; ```; bsenjean@MBP-de-Bruno:~/Documents/Git_repositories/psi4/objdir]$ otool -L /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so:; 	@rpath/core.cpython-37m-darwin.so (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1); 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libiomp5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.25.0); 	/usr/local/lib/gcc/8/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); ```. As you said, it seems ```gcc``` tries to impose ```gomp```. How can I bypass it ?; Because I still have the error:; ```; E ImportError: dlopen(/Users/bsenjean/Documents/Git_rep",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:8,install,installed,8,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,1,['install'],['installed']
Deployability,So lack of compatibility with windows is the problem. Installing torsiondrive into my conda env on Linux lets me run the code shared above directly in python. closing this thread for now,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1487515986:54,Install,Installing,54,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1487515986,1,['Install'],['Installing']
Deployability,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/225:266,TOGGLE,TOGGLE,266,https://psicode.org,https://github.com/psi4/psi4/issues/225,2,['TOGGLE'],['TOGGLE']
Deployability,"So the dump file just contains the CI vector coefficients and bitstrings. The problem is that due to finite numerical precision the ordering of the vectors may change, as several configurations may have the same coefficient. I can probably write a check for that but it'll easily be O(N^2) so I'll have to restrict to rather small calculations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301224703:179,configurat,configurations,179,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301224703,1,['configurat'],['configurations']
Deployability,"So the fundamental basis sets cc-pvXz need updating for those elements b/c the definitions changed (for some AM) in a later paper? So long as the `cc-pwCVXZ = cc-pVXZ + w-core` and others arithmetic in the NOTES still holds, sounds good to me to update both sets of files. And thanks for checking consistency.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/727#issuecomment-305864188:246,update,update,246,https://psicode.org,https://github.com/psi4/psi4/issues/727#issuecomment-305864188,1,['update'],['update']
Deployability,So the patch I use in Fedora is; http://pkgs.fedoraproject.org/cgit/rpms/libint.git/tree/libint-1.1.5-maxnode.patch. which makes building with options; --with-libint-max-am=10 --with-libint-opt-am=6 \; --with-libderiv-max-am1=6 --with-libderiv-max-am2=5 \; --with-libr12-max-am=5 --with-libr12-opt-am=4; work. I guess I haven't tried playing with the libderiv max am's too much...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/695#issuecomment-300338800:7,patch,patch,7,https://psicode.org,https://github.com/psi4/psi4/pull/695#issuecomment-300338800,2,['patch'],['patch']
Deployability,"Some good news for building numpy using the Accelerate framework! From the numpy 1.21.0 release notes at https://numpy.org/doc/stable/release/1.21.0-notes.html :. ""With the release of macOS 11.3, several different issues that numpy was encountering when using Accelerate Framework’s implementation of BLAS and LAPACK should be resolved. This change enables the Accelerate Framework as an option on macOS. If additional issues are found, please file a bug report against Accelerate using the developer feedback assistant tool (https://developer.apple.com/bug-reporting/). We intend to address issues promptly and plan to continue supporting and updating our BLAS and LAPACK libraries."". It might very well be that this is what the conda-forge numpy builds are already using. It is difficult to say. If anyone knows how to build numpy from source explicitly using Accelerate, that would be very much appreciated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-961472062:88,release,release,88,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-961472062,3,['release'],['release']
Deployability,"Some things to add to the wishlist from my end:. - [ ] Update COSX to support arbitrary grids via modification of X-matrix handling (see https://github.com/psi4/psi4/issues/2890 for further details).; * Susi notes: I don’t think one needs a separate formulation, just propagating the sign to the A tensor would suffice since it carries a grid index; * Further update: this wish is now addressed in https://github.com/psi4/psi4/pull/2931.; - [ ] Add CFMM and/or DF-CFMM to Psi4 officially. These already exist in Psi4 development branches, but need to be updated to match modern Psi4 developments (e.g., current formulations of CompositeJK) and actually put into Psi4. The first PR for these methods already exists (https://github.com/psi4/psi4/pull/2665).; - [ ] Support for [J-Engine](https://doi.org/10.1063/1.470986). J-Engine is a nice algorithm by the Head-Gordon group to help reduce the prefactor of J-build calculations via reformulation of how integral intermediates are formed and contracted with the density matrix to form Coulomb matrix elements. As it deals with shuffling around how integral intermediates are formed and combined with the density, any J-Engine effort will likely require coordination with the Valeev group and development within Libint2 itself (although the Valeev group did seem interested in J-Engine from what discussions I had with their researchers). ; - [ ] Support for mixed basis sets in TwoBodyAOInt sieving.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-1509131763:55,Update,Update,55,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-1509131763,3,"['Update', 'update']","['Update', 'update', 'updated']"
Deployability,"Something that has been brought to my attention that I should clarify and haven't - the bells and whistles that DFJLinK used to have with its IncFock formalism are still there; this PR does not remove those. Rather, this PR updates DFJLinK's IncFock to be as close to DFJCOSK's IncFock as possible while keeping the bells and whistles. This is also where my first question comes from - would it be good to fully standardize the two by changing DFJCOSK's IncFock in this PR, as well?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792#issuecomment-1325322458:224,update,updates,224,https://psicode.org,https://github.com/psi4/psi4/pull/2792#issuecomment-1325322458,1,['update'],['updates']
Deployability,"Something's very peculiar with the setup if you're getting windows conflicts on a linux install. If it's windows you're targeting, the c-f channel is needed (Win;conda;3.8;stable from https://psicode.org/installs/v17/).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2894#issuecomment-1465255536:88,install,install,88,https://psicode.org,https://github.com/psi4/psi4/issues/2894#issuecomment-1465255536,2,['install'],"['install', 'installs']"
Deployability,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:65,update,update,65,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944,8,"['install', 'release', 'update']","['install', 'installing', 'release', 'update']"
Deployability,Sorry I could not make it for 1.9 release :-D,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3097#issuecomment-1845027994:34,release,release,34,https://psicode.org,https://github.com/psi4/psi4/pull/3097#issuecomment-1845027994,1,['release'],['release']
Deployability,"Sorry for the confusion. What you're doing with PCMSolver is working just fine. What broke down was me not realizing that the `1.1.2` tag had what I needed, and I didn't need `HEAD`. Below is what I wrote to someone recently. External projects for psi4 can choose one of the below (or propose a new scheme), and PCMSolver is doing (2). If the below seems clear, I'll explicitly add it to the wiki. ## External Project Versioning (choose one); 1. Tag a release “0.2”, “v0.2”, or whatever. Let me know and I’ll (i) build the conda package and (ii) bump the `Add_ExternalProject` tag (for non-plugins). Repeat in a few months with “0.3”, etc. This way is handy if you want to settle on stable commits while possibly breaking the repo in interim commits. You may be asked to bump the tag after resolving psi4+externalproj interface or build issues. If you move the tag to a later commit, you'll have to let me know so I rebuild the conda package with the same version but a later build number. This is what CheMPS2 and PCMSolver do.; 2. Tag a release “0.2”, and I’ll (i) tell psinet to do nightly builds that increment micro on each git commit so versions will be ""tag.micro"" (e.g., 0.2.43) and (ii) remove git tag from `Add_ExternalProject` )for non-plugins). When you’re ready for 0.3, just make the new tag, no communication with me necessary. Strongly recommended not to mix light and annotated tags; the latter are always preferred; the former are what you get if you go through the github website tag-making interface. If the repo breaks such that “make” or any “make tests” you devise break, then no package will get uploaded, but otherwise the most recent will always be available. This is what Psi4 itself does.; 3. hybrid– do 2. but have the version that ships with the psi4 binary be pinned to a certain stable build unless user deliberately installs another.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/409#issuecomment-225993854:452,release,release,452,https://psicode.org,https://github.com/psi4/psi4/pull/409#issuecomment-225993854,3,"['install', 'release']","['installs', 'release']"
Deployability,"Sorry for the feature creep, but due to the reorganization and the new default, I thought it'd be best to fix #1473 here as well. I think the last patch should make the C++ side correct also for ECPs, but it appears that the atomic basis sets passed to the code still lack the ECP information. Does anyone know why?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-453435994:147,patch,patch,147,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-453435994,1,['patch'],['patch']
Deployability,"Sorry, @hokru. I've been trying to build Francesco and Shuhe's [DSRG-PT2 gradient plugin](https://github.com/ustcwsh/Shuhe_Project) to test a theory. (In multiple senses of ""theory."") Shuhe's code was written for Python 2, so Psi rightly complains about invalid syntax. ```; Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 19, in <module>. File ""./../dsrgpt2_plug/__init__.py"", line 45; print ""imported so file: "", sofile; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""imported so file: "", sofile)?; ```. The error message that Holger's message extractor gives me is less readable. ```; !----------------------------------------------------------------------------------!; ! !; ! "", sofile !; ! , ^ !; ! ,SyntaxError: Missing parentheses in call to 'print'. Did you mean !; ! print(""imported so file: "", sofile)? !; ! !; !----------------------------------------------------------------------------------!; ```. The error extractor should be patched to just report the SyntaxError.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1920:1080,patch,patched,1080,https://psicode.org,https://github.com/psi4/psi4/issues/1920,1,['patch'],['patched']
Deployability,"Sorry, I missed your last question, @JonathonMisiewicz. Correct, there [is a bug in MKL](https://community.intel.com/t5/Intel-oneAPI-Math-Kernel-Library/Memory-data-race-problems-in-DGETRI/m-p/1313691) that is being fixed, so all `general_invert` calls are potentially vulnerable. I will note that many of the `general_invert` calls in the code give the correct answer still (including the one fixed in this PR, for many system sizes), as does the standalone code I used to report the issue. It looks like some kind of an uninitialized variable somewhere in Intel's kernels so it's likely to be context-dependent whether the right answer is returned. I'm pretty sure it's been present for at least the last few versions and we only just noticed it, so I suspect it's not that pervasive. Regardless, we need to update our MKL dependency as soon as the fix is published.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-926710761:810,update,update,810,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-926710761,1,['update'],['update']
Deployability,"Sorry, I only just saw this thread. I don't know if this is useful, but here's some code that computes a DFT wavefunction as a simple way to set up a DFT integration grid. It then uses that integration grid to integrate the electron density at the HF level in this example. Most of this was stolen from @dgasmith ; ``` python; import psi4; import numpy as np; np.set_printoptions(suppress=True, precision=4, linewidth=150). mol = psi4.geometry(""""""; O 0.000000000000 0.000000000000 -0.071143036192; H 0.000000000000 -0.758215806856 0.564545805801; H 0.000000000000 0.758215806856 0.564545805801; symmetry c1; """"""). psi4.set_options({""BASIS"": ""sto-3g"",; ""DFT_BLOCK_MAX_POINTS"": 2048,; ""DFT_BASIS_TOLERANCE"": 1.e-10}). method = ""HF""; e, wfn = psi4.energy(method, return_wfn=True); Da = np.array(wfn.Da()). # Vpot builder; _, wfn_V = psi4.energy(""SVWN"", return_wfn=True, molecule=mol); Vpot = wfn_V.V_potential(). points_func = Vpot.properties()[0]. # Loop over the blocks; nelectrons = 0.0; for b in range(Vpot.nblocks()):. # Metadata; block = Vpot.get_block(b); npoints = block.npoints(); lpos = np.array(block.functions_local_to_global()). # Obtain the grid weight; w = np.array(block.w()). # Compute phi!; points_func.compute_points(block); phi = np.array(points_func.basis_values()[""PHI""])[:npoints, :lpos.shape[0]]. # Build a local density; localDa = wfn.Da().np[(lpos[:, None], lpos)]. # Copmute rho; rho = 2.0 * np.einsum('pm,mn,pn->p', phi, localDa, phi, optimize=True); nelectrons += np.dot(w, rho); print(nelectrons); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-435946428:154,integrat,integration,154,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-435946428,3,['integrat'],"['integrate', 'integration']"
Deployability,"Sorry, I should have read your post more carefully. I didn't notice the 3.27.7 bit. I still don't actually understand it b/c [CMP0144](https://cmake.org/cmake/help/v3.27/policy/CMP0144.html) was introduced in 3.27.0 . Maybe Fedora patched it out b/c it could be disruptive? Anyway, I guess FAE's is the safer approach in #3089",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3092#issuecomment-1836312308:231,patch,patched,231,https://psicode.org,https://github.com/psi4/psi4/issues/3092#issuecomment-1836312308,1,['patch'],['patched']
Deployability,"Sorry, I wasn't paying attention; the error is earlier in the traceback. The compilation was picking my Psi4-installed non-conda copy, which is 2.0.0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1013#issuecomment-388478956:109,install,installed,109,https://psicode.org,https://github.com/psi4/psi4/issues/1013#issuecomment-388478956,1,['install'],['installed']
Deployability,"Sorry, I'll fix it in a couple days. For the moment, install an older version from before lastfriday. You can get a list of available versions on the anaconda.org/psi4 and directions for installing a particular version at the docs page.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/154#issuecomment-125036757:53,install,install,53,https://psicode.org,https://github.com/psi4/psi4/issues/154#issuecomment-125036757,2,['install'],"['install', 'installing']"
Deployability,"Sorry, I’m out of action due to serious illness so probably can’t be much help. I was working on derivatives but they were buggy. They should in theory be simple, but I don’t know when I’ll be in a position to get back to them. Sorry again :/. > On 7 Nov 2018, at 21:23, Andy Simmonett <notifications@github.com> wrote:; > ; > Description; > ; > This PR builds on the start that @PeterKraus made to get the libecpint library from @robashaw up and running as Psi4's ECP engine.; > ; > Todos; > ; > Notable points (developer or user-interest) that this PR has or will accomplish.; > ; > Improve the speed and stability of the ECP integrals.; > Questions; > ; > @robashaw are the derivative integrals ready to go in Libecpint yet? If not, do you have any idea how much work it will be to implement them?; > Checklist; > ; > Make libecpint play nicely with our CMake infrastructure; > Write wrappers for ECP integral code, making the new code path optional for now; > Tests added for any new features; > Status; > ; > Ready for review; > Ready for merge; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4/pull/1340; > ; > Commit Summary; > ; > Import libecpint via CMake; > File Changes; > ; > M CMakeLists.txt (3); > M external/upstream/CMakeLists.txt (1); > A external/upstream/libecpint/CMakeLists.txt (57); > M psi4/CMakeLists.txt (9); > M psi4/psi4Config.cmake.in (2) ; > Patch Links:; > ; > https://github.com/psi4/psi4/pull/1340.patch; > https://github.com/psi4/psi4/pull/1340.diff; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1340#issuecomment-439512371:1425,Patch,Patch,1425,https://psicode.org,https://github.com/psi4/psi4/pull/1340#issuecomment-439512371,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Sorry, I’m still not used to pulling updates to my fork. You are added. On Jun 9, 2016, at 5:21 PM, Lori A. Burns notifications@github.com wrote:. > Hi Eugene, you may have noticed the commit history for this PR has gone mad. I believe what's happened is that (1) this PR is coming from master of your fork rather than a branch of your fork and (2) you merged upstream into master of your fork but because there were the commits from this PR interleaved, the histories of upstream master and your fork master don't perfectly overlap so as to identify just your few commits as the entirely of this PR. Instead the PR includes most of the recent history of psi4.; > ; > It could be that you could just rebase wrt upstream master and this would all resolve. But I'm not a git expert so I just don't know. Could you make me a collaborator on your psi4 fork, and I'll experiment?; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/386#issuecomment-225031319:37,update,updates,37,https://psicode.org,https://github.com/psi4/psi4/pull/386#issuecomment-225031319,1,['update'],['updates']
Deployability,"Sorry, written hastily. Units in [molden format](http://www.cmbi.ru.nl/molden/molden_format.html) `The atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)` seem to indicate non-mass-weighted. And I thought we got this standardized in 64dc61a2bb4 to solve psi4/psi4#225. I'm not sure that analytic freq are adhering to the nmw print standard, but the freq by E and by G should be, for what's written to output. And there was a misspelling of ""frequencies"" introduced in last commit (though I can patch that up later). If you feel comfortable with it, please rebase.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/644#issuecomment-286525423:542,patch,patch,542,https://psicode.org,https://github.com/psi4/psi4/pull/644#issuecomment-286525423,1,['patch'],['patch']
Deployability,Sounds good. I think we had to patch 1.55 a few times.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-236274927:31,patch,patch,31,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-236274927,1,['patch'],['patch']
Deployability,"Sounds good. You've noticed that there _is_ as py3 conda package for Mac and Linux (https://github.com/psi4/psi4/issues/466#issuecomment-272589229)? It's stable, just not on the main channel until the 1.1 release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/608#issuecomment-278482121:205,release,release,205,https://psicode.org,https://github.com/psi4/psi4/issues/608#issuecomment-278482121,1,['release'],['release']
Deployability,Sounds great. Update the branch and I'll pull this in.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/432#issuecomment-230635317:14,Update,Update,14,https://psicode.org,https://github.com/psi4/psi4/pull/432#issuecomment-230635317,1,['Update'],['Update']
Deployability,"Sounds like some of these problems are hard to detect at compile time, but; perhaps they could be diagnosed by some simple little program that's; designed to look for these kinds of problems and prints out verbose output?. On Tue, Oct 11, 2016 at 10:24 AM, Lori A. Burns notifications@github.com; wrote:. > There's temporary build docs linked off README: ""Downloading and; > Installing"" on the main GH page.; > ; > It's not the specification of Python that's the problem– CMake detection; > and build are going just fine in these cases. CMake knows the exact,; > absolute path location to everything Psi4 or its build needs. The problem; > is conveying that info to the runtime environment. This is done by baking; > in all those absolute paths into the executable/library rpath. _But_,; > when a path (e.g., /usr/lib) has both a useful thing like libpython.so; > and a bad thing (for Psi4) like old gcc or hdf5, then CMake has no way of; > knowing that it needs to place /usr/lib into rpath _behind_ the path to; > new gcc or new hdf5. Thus, we end up with runtime path problems, solvable; > only by LD_LIBRARY_PATH or rpath adjustment and relinking.; > ; > This problem is controllable with conda, because it isolates just what; > Psi4 needs into its own namespaced path and stuffs that into rpath. For the; > general developers CMake build, there's no robust solution that I can see.; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/issues/468#issuecomment-252931820, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9Qdh_-XGbfJiWX_fQ9cwjC-YYTBSTtks5qy5wGgaJpZM4KA_tt; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252934079:375,Install,Installing,375,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252934079,1,['Install'],['Installing']
Deployability,Sounds promising! We'd be glad of a status update by Monday morning.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1081#issuecomment-586638524:43,update,update,43,https://psicode.org,https://github.com/psi4/psi4/pull/1081#issuecomment-586638524,1,['update'],['update']
Deployability,Source tarball with a release number,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580:22,release,release,22,https://psicode.org,https://github.com/psi4/psi4/issues/580,1,['release'],['release']
Deployability,Sphinx documentation installation overwrites files in source tree (samples/),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/14:21,install,installation,21,https://psicode.org,https://github.com/psi4/psi4/issues/14,1,['install'],['installation']
Deployability,Stability bugfix and SAPT output update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/248:33,update,update,33,https://psicode.org,https://github.com/psi4/psi4/pull/248,1,['update'],['update']
Deployability,Stage directory ends up having each file twice. For example:; ```; $ find work/stage/ -name 1_xk20_9E1; work/stage/usr/local/share/psi4/quadratures/1_x/1_xk20_9E1; work/stage/usr/ports/science/psi4/work/.build/stage/share/psi4/quadratures/1_x/1_xk20_9E1; ```. The second version shouldn't be installed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301:292,install,installed,292,https://psicode.org,https://github.com/psi4/psi4/issues/1301,1,['install'],['installed']
Deployability,"Status update for those who are watching this: my original attempt at the four-index TPDM elements using pre-existing `libdpd` capabilities proved slower than the existing `libiwl` algorithm, so I've had to write new `libdpd` algorithms. The new algorithm working on just the `VVVV` block is beating the `libiwl` algorithm for speed. I'll need to modify the algorithm to handle more general blocks, make sure the speed is still good, and then I can commit the next step. The current plan is to replace the libiwl and presorting steps, but leave the rest of the TPDM logic as-is. This may change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1745#issuecomment-561305402:7,update,update,7,https://psicode.org,https://github.com/psi4/psi4/pull/1745#issuecomment-561305402,1,['update'],['update']
Deployability,"Status update on this, including developments from half an hour ago. Numerical tests indicate the difference in reaction energies between the current DF scheme and the new one are negligible. The Excel file is attached if anybody wants to look over the numbers themselves. @ssh2 and I are agreed that between that and some additional theoretical points, we'll just switch the density fitting scheme to fix Point 2. In the new scheme, the cumulant gets contracted against RIFIT integrals as before, and the _entire_ rest of the 2RDM gets contracted against JKFIT integrals. [df_dcft_comparison.xlsx](https://github.com/psi4/psi4/files/3023032/df_dcft_comparison.xlsx). Point 1 is trickier. I've spoken with @jturney about DF gradients in Psi. Although `deriv.cc` does a check to see if the wavefunction is density fitted in the gradient code, it isn't for density fitted gradients but to check whether necessary tensors exist on disk or as member variables. As far as I know, every DF gradient in Psi runs through its own module. DF-MP2 gradients have `dfmp2`, DF-SCF has `scfgrad`, and Bozkaya has `dfocc`. This will require some attention, but likely won't get it until after ACS Orlando.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1579#issuecomment-478019331:7,update,update,7,https://psicode.org,https://github.com/psi4/psi4/issues/1579#issuecomment-478019331,1,['update'],['update']
Deployability,"Status update: I have coupled DIIS working for OCEPA. The OMP family should follow without _much_ additional effort. For `ocepa-grad2`, I'm seeing in 13 iterations what took 33 [before my meddling](https://github.com/psi4/psi4/blob/master/tests/ocepa-grad2/output.ref). I'm going to take some extra time before pushing anything to do a thorough convergence study.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1777#issuecomment-582943452:7,update,update,7,https://psicode.org,https://github.com/psi4/psi4/issues/1777#issuecomment-582943452,1,['update'],['update']
Deployability,Still having trouble getting the `density_tolerance_` variable in SuperFunctional updated when I set the cutoff value through the LibXCFunctional class.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-611009420:82,update,updated,82,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-611009420,1,['update'],['updated']
Deployability,"Still in the draft stage, but next round of edits is in. I need to give the tests another pass to make sure we have proper coverage. The other major issue is the docs. I'll need to update the section describing excite state psivars, but @loriab, how do you feel about grouping psivars together? See discussion [here](https://github.com/psi4/psi4/pull/2462#discussion_r822344906).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2569#issuecomment-1129504422:181,update,update,181,https://psicode.org,https://github.com/psi4/psi4/pull/2569#issuecomment-1129504422,1,['update'],['update']
Deployability,Stray .cmake files are installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/855:23,install,installed,23,https://psicode.org,https://github.com/psi4/psi4/issues/855,1,['install'],['installed']
Deployability,"Suppose we are performing an IRC starting from a transition state that is very tightly converged. An IRC will converge to that transition state, rather than the minima. ## Psi4 Internals Explanation. optking.cc::349 will call the irc_step function beginning opt_data.cc::98. Now proceed to line opt_data.cc::221. The lines below that will return true if the molecule is converged. Because the transition state was tightly converged, the function will return true. **Comparison with a non-bugged case shows this is unexpected behavior.**. converged is true and this is an IRC type optimization, so we enter optking.cc::392, the point_converged function. molecule_irc_step.cc::83 shows this causes an IRC step to be taken immediately - before the energy or the gradient have been updated from the last step. OPTKING then sees we are not at the first step but the gradient is zero and assumes we have truly converged. It terminates the IRC. ## Previous Fix Attempts. I attempted to fix this just by having the IRC return false for Step 0 of an IRC, but in some cases I found that it would converge on Step 1 instead. We'll need a smarter way to make sure we don't converge to a TS, possibly checking for negative Hessian eigenvalues. I would do this myself, but after some of the other Optking issues I've run into this, this is much less of a personal priority. Hopefully, PyOptKing will automatically take care of this. ## Minimal Demonstration Files. Demonstrated for four atoms at the SCF level. Even including the Hessian calculation, this took less than two minutes on our cluster. [input.txt](https://github.com/psi4/psi4/files/1471977/input.txt); [output.txt](https://github.com/psi4/psi4/files/1471978/output.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/859:778,update,updated,778,https://psicode.org,https://github.com/psi4/psi4/issues/859,1,['update'],['updated']
Deployability,"Sure thing, the link on this page [http://www.psicode.org/psi4manual/master/conda.html](url) points to 1.2, and the link here [http://www.psicode.org/psi4manual/master/build_obtaining.html#binary-installer](url) is also pointed at 1.2. (via a redirect from http://www.psicode.org/downloads.html)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475855914:196,install,installer,196,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475855914,1,['install'],['installer']
Deployability,"Sure, we get a NaN because an occupied and a virtual eigenvalue have the exact same energy. Its an unphysical reference that we didn't anticipate. We probably wont patch this as its an extreme edge case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/561#issuecomment-271457794:164,patch,patch,164,https://psicode.org,https://github.com/psi4/psi4/issues/561#issuecomment-271457794,1,['patch'],['patch']
Deployability,"Switched over Psi4 grid generation to `libgg`. Looks like about a 4x speedup in general for collocation generation. However, it spends ~65% of the time transposing the collocation matrices back to Psi4 order otherwise this would be killer (~12x faster). I can look at a few other transpose options in `libgg`, but it would be tough to spit them out correctly. Still helps dramatically for small molecules/bases and large grids. As a note I pinged TBLIS [here](https://github.com/devinamatthews/tblis/issues/13) seeing if they would implement the common grid operation `A_ij \epsilon_j B_jk -> C_ik`. Looks like they have thought about it, but not yet in. Could be a great use case to pull TBLIS in. I know @amjames or @schiebermc might need it soon. Updated the TODO.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/869#issuecomment-349436402:750,Update,Updated,750,https://psicode.org,https://github.com/psi4/psi4/pull/869#issuecomment-349436402,1,['Update'],['Updated']
Deployability,TDDFT Not Triplet Spin-Integrated,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2841:23,Integrat,Integrated,23,https://psicode.org,https://github.com/psi4/psi4/issues/2841,1,['Integrat'],['Integrated']
Deployability,"TRIC coordinate system. # First Time Contributors; - Peter Kraus (@PeterKraus) - #949, #937, #922, #904; - Holger Kruse (@hokru) - #877, #912, #914 ; - Shannon Houk(@shannonhouck) - #850, #876 ; - Johnathan Waldrop (@jwaldrop107) - #921; - Marvin Lechner (@mhlechner) - #698; - Jonathon Misiewicz (@JonathonMisiewicz) - #895, #882, #873, #849, #825 ; - Adam Abbott (@adabbott) - #761; - Thomas Sexton (@tsexton) - #780 ; - Tianyuan Zhang (@tyzhang1993) - #743 ; - Dom Sirianni (@dsirianni) - #776, #952; - Asim Alenaizan (@alenaizan) - #956 . # Performance Optimizations; - Density Fitted 3-index AO->MO transformation significantly improved.; - MemDFJK module up to 2x as fast as original DFJK for in-core operations.; - DFT XC kenels threaded with a more efficient vectorization.; - DFT collocation matrix generation vectorized and exploits cache-level localization.; - All matrix and vector operations threaded for MIC and large Xeon/EPYC nodes to avoid bottlenecks. # Psi Developer Upgrade Guide; * The driver method `property(...)` has moved to`properties(...)` to avoid python namespace conflicts.; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959:3015,Upgrade,Upgrade,3015,https://psicode.org,https://github.com/psi4/psi4/issues/959,1,['Upgrade'],['Upgrade']
Deployability,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/235:1502,update,update,1502,https://psicode.org,https://github.com/psi4/psi4/issues/235,1,['update'],['update']
Deployability,"Taking another look at this PR, the IncFock used here, uses a large number of matrix variables - separate matrices for the previous, current, and difference matrices for all of D, J, K, and wK. This particular IncFock formalism was replaced in the PR line of https://github.com/psi4/psi4/pull/2792, https://github.com/psi4/psi4/pull/2808, and https://github.com/psi4/psi4/pull/2816. So before this PR gets merged in, the IncFock formalism moved into the JK class in this PR needs to be updated to match.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1503230492:486,update,updated,486,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1503230492,1,['update'],['updated']
Deployability,"Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:14160,release,release,14160,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"Testing some calculations, I ran into very odd behavior in Psi4 1.3.2. The input; ```; molecule {; 0 2; Y; }. set basis seg-cc-pv5z-pp; set scf_type direct; set df_scf_guess false; set reference uhf; energy('scf'); ```; leads to the output; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; SOCC [ 0, 0, 0, 0, 0, 1, 0, 0 ]. @UHF iter 1: -33.78761858648352 -3.37876e+01 4.53671e-02 DIIS; Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 1, 0, 0, 0, 0, 1, 1, 1 ]; SOCC [ 1, 1, 0, 1, 0, 0, 0, 0 ]. @UHF iter 2: -36.39804695906182 -2.61043e+00 2.16710e-02 DIIS; ```. For some reason, the occupation update changes the spin state from a doublet (one unpaired electron) to hextet (3 unpaired electrons). Basis set is attached. [seg-cc-pv5z-pp.gbs.txt](https://github.com/psi4/psi4/files/8247541/seg-cc-pv5z-pp.gbs.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2476:703,update,update,703,https://psicode.org,https://github.com/psi4/psi4/issues/2476,1,['update'],['update']
Deployability,"Tests are passing, excellent!. Please update `output.ref` for `tdscf-7` and any of the other `tdscf` tests, so we can see how this PR changes the output printing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2605#issuecomment-1154396287:38,update,update,38,https://psicode.org,https://github.com/psi4/psi4/pull/2605#issuecomment-1154396287,1,['update'],['update']
Deployability,"Thank you for your help. I was using intel compiler but its license expired, hence I tried GCC. Now, I see that Intel provides free compilers for open-source developers. I will update my system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224869764:177,update,update,177,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224869764,1,['update'],['update']
Deployability,Thank you for your update.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1587#issuecomment-482311425:19,update,update,19,https://psicode.org,https://github.com/psi4/psi4/issues/1587#issuecomment-482311425,1,['update'],['update']
Deployability,Thank you loriab! I am mainly looking to install ambit so that I can compile forte. On the way I found CheMSP2 to be potentially useful. Is there a way I could independently install CheMSP2 in the same conda environment as Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3094#issuecomment-1837045236:41,install,install,41,https://psicode.org,https://github.com/psi4/psi4/issues/3094#issuecomment-1837045236,2,['install'],['install']
Deployability,"Thank you! I see the confusion. In plane wave methods and DFT textbooks, the DIIS (also known as density mixing) is performed on electron density for faster convergence. But it seems that in quantum chemistry the DIIS is performed on the Hamiltonian, and thus the density mixing (or update damping you mentioned) becomes optional?. In this case, my definition makes little sense, and I might need some reconsideration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3065#issuecomment-1783287520:283,update,update,283,https://psicode.org,https://github.com/psi4/psi4/issues/3065#issuecomment-1783287520,1,['update'],['update']
Deployability,Thank you!! That fixed it. The `<iterator>` modification was already patched in in June.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1300242009:69,patch,patched,69,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1300242009,1,['patch'],['patched']
Deployability,"Thank you, I am glad to hear that the issue is known and fixed. For the future, though, I am troubled that this issue exists without warning in a build that looks safe (marked ""Stable Release""). How can I be more confident in Psi4 results? Is there a test suite including issues like SCF instability (more exhaustive than `psi4 --test`), that I could use to verify a Psi4 build before running large workflows?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035:184,Release,Release,184,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035,1,['Release'],['Release']
Deployability,Thanks @andysim! The caching of conda is currently a bit idiotic: I am nuking `p4env` every time after a build succeeds. Probably we want to keep the conda environment in cache and just activate and update it. @loriab does that sound like a reasonable proposition? I'll tackle it in a subsequent PR.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444493550:199,update,update,199,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444493550,1,['update'],['update']
Deployability,"Thanks @loriab , I'll make a note to schedule that against our March release. We're using psi4 as part of a force-field parameteristion tool (see https://github.com/Acellera/htmd ). It's Python 3 only and distributed via conda so we have to do some nastry tricks to ship the py2 psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/608#issuecomment-278480471:69,release,release,69,https://psicode.org,https://github.com/psi4/psi4/issues/608#issuecomment-278480471,1,['release'],['release']
Deployability,Thanks @loriab. I have updated both PSI4 and Chemps2. Everything is working well.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-230110866:23,update,updated,23,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-230110866,1,['update'],['updated']
Deployability,"Thanks Lori, will check your PR ASAP and try to get a new release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-734703041:58,release,release,58,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-734703041,1,['release'],['release']
Deployability,"Thanks a lot for the detailed feedback, and input file to reproduce the problem. I'll look into this, and try to get a patch together,. cheers,. Andy. On Aug 6, 2013, at 10:21 AM, James Spencer notifications@github.com wrote:. > CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:; > ; > molecule f { ; > f 0.00 0.00 0.00; > }; > set basis cc-pVTZ; > set scf reference uhf ; > energy('ccsd'); > (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault).; > ; > Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem.; > ; > Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc.; > ; > Full backtrace from gdb:; > ; > (gdb) where; > #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; > #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; > #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); > at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; > #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); > at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; > #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; > #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; > #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; > #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22188141:119,patch,patch,119,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22188141,1,['patch'],['patch']
Deployability,Thanks for all the help. I will see if I can push the maintenance to install SL7.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792#issuecomment-607347442:69,install,install,69,https://psicode.org,https://github.com/psi4/psi4/issues/1792#issuecomment-607347442,1,['install'],['install']
Deployability,"Thanks for clarifying, updated my comment above 👍",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2414#issuecomment-1065111417:23,update,updated,23,https://psicode.org,https://github.com/psi4/psi4/issues/2414#issuecomment-1065111417,1,['update'],['updated']
Deployability,Thanks for finding this. I'll push a patch in shortly for it by removing the offending files.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/19#issuecomment-25369147:37,patch,patch,37,https://psicode.org,https://github.com/psi4/psi4/issues/19#issuecomment-25369147,1,['patch'],['patch']
Deployability,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:67,integrat,integration,67,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421,2,['integrat'],['integration']
Deployability,"Thanks for making this PR, everything looks great so far to me. I think the last two items are:; - Ensure a full install of Psi4 includes this plugin.; - Manage the tests issue. It looks like SNS-MP2 does not contain tests within the project directory so they cannot be run after installed. I think we can either add a few tests to psi4 with `@requires_sns_mp2` decorators and pytest or have the tests moved within the project folder so they can be run after installation. Any thoughts @rmcgibbo @loriab?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/850#issuecomment-345242566:113,install,install,113,https://psicode.org,https://github.com/psi4/psi4/pull/850#issuecomment-345242566,3,['install'],"['install', 'installation', 'installed']"
Deployability,"Thanks for making this into a written issue. This was discussed on Slack over a week ago, but not everyone may have seen it. All those test failures trace back to a ""delicate"" part of the OCC module. It has very slow orbital convergence. I [updated the default orbital convergence criteria in OCC to be the same as in DFOCC](https://github.com/psi4/psi4/pull/1772/commits/896a7c22be5c72542b8773ca2a1b9164dee1fc2a), and for all the failing test cases, OCC simply can't converge the orbitals that tightly. You can see the issue about the OCC problem [here](https://github.com/psi4/psi4/issues/1777). It traces back to OCC not coupling orbital and T2 amplitude DIIS, when in my experience, coupling them is crucial for good convergence. I'm in the process of fixing that, but it's slow. A lot of junk in the OCC module needed to be cleaned out to make the code less confusing before I can start making the actual fix. If you want to move that along, you can help by reviewing [the current cleanup PR](https://github.com/psi4/psi4/pull/1789). I wanted to wait to write the next and final PR in the series until that one was accepted, but I may need to start on that now. Until that final PR gets in, we don't have conda builds and certainly can't have the next release. As you're probably wondering about this, these changes are also necessary for a paper I want submitted before I leave CCQC. While I'm quite unhappy these changes needed to be done, that they are made is useful for me personally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793#issuecomment-581033462:241,update,updated,241,https://psicode.org,https://github.com/psi4/psi4/issues/1793#issuecomment-581033462,2,"['release', 'update']","['release', 'updated']"
Deployability,"Thanks for pointing me to the slack channel. I usually don't use slack, but I'll try to get something set up. > There are different levels of integration. An independent plugin, a deep C-layer integration and a; > python-level integration. Some of the questions depends on what you want to aim for (or need). Well, also depends a bit what you guys have in mind and how deep we want the integration to be. My thoughts:; - A **C-layer integration** is possible, but might be quite hard, since our iterative solvers are written in `python`. Given one falls back to solvers in C from psi4, in theory one can integrate adcc into the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code ba",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:142,integrat,integration,142,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,7,['integrat'],"['integrate', 'integration']"
Deployability,Thanks for reminding me.; Now freshly rebased and with a python-patch for DCT. UHF-CCSD re-enabled in pytest as well. ; Ready for review.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-658779083:64,patch,patch,64,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-658779083,1,['patch'],['patch']
Deployability,"Thanks for subscribing me to the thread -- I would have missed it otherwise. > I suggest a minimal patch-up rather than thorough update. Is your sense that this is something we could fix on the sns-mp2 side with a minimal patch up? Perhaps by adding the fields we need to `arrays()` or something? I confess that I haven't been following psi4 development closely enough recently to have much of a context here about what the relevant psi4 API changes are or what the simplest way forward is. Is there a ticket you can direct me towards describing the change in the API related to the npz format for file 180?. > In the meantime, snsmp2 is getting dropped from psi4-rt. Is this the plan only if we don't fix the incompatibility in the sns-plugin, or are you planning to drop snsmp2 from psi4-rt regardless of whether or not this gets fixed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1514#issuecomment-459591071:99,patch,patch-up,99,https://psicode.org,https://github.com/psi4/psi4/issues/1514#issuecomment-459591071,3,"['patch', 'update']","['patch', 'patch-up', 'update']"
Deployability,"Thanks for tackling these Python 2 vs. 3 issues. The python driver is the least computationally expensive portion of a given psi4 calculation, so I think we're ok with conversion to items and values and a uniform interface to 2 and 3. On your earlier question of patch format, the psi4/psi4release repo isn't so much a repo as a history-less presentation of the code. We can merge in your pull request, but the more important merge will be to the private psi4/psi4 repository. So, the answer is e-mail or pull request will do very well, especially for simple patches. If you should be interested in doing more, see http://psicode.org/developers.php .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20536164:263,patch,patch,263,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20536164,2,['patch'],"['patch', 'patches']"
Deployability,"Thanks for that; I saw the comments at the end of the build that staged the install and mistook them for an actual install. I sorted that out, and now it can't find numpy, for some strange reason. Will adjust my python path and all should be well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235121191:76,install,install,76,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235121191,2,['install'],['install']
Deployability,"Thanks for the detailed report. I can reproduce the segfault, though for the benefit of other developers, I'll point out that this can be reproduced with `scf` instead of `wb97m-d3bj`. Sophisticated DFT functionality is not the issue here. This looks like a missing option validation at runtime. I'll add that my advisor is _also_ unhappy with the way Psi4 assumes options for precisely situations like these, but I have a few other things to patch before I touch options passing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1182482578:443,patch,patch,443,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1182482578,1,['patch'],['patch']
Deployability,"Thanks for the feedback, @CDSherrill, I'll fix it tomorrow. One quick point:. There are two ways to fix the geometry optimization issue:; - we can toggle `return_total_data=True` if `ptype != 'energy'` (meaning total G/H are calculated and returned); - or we can add the monomers-in-monomers if `ptype != 'energy'` (meaning E/G/H are available, but interaction energies are returned).; I don't think either of those is consistent with 1.3.2's behaviour, though!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869894520:147,toggle,toggle,147,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869894520,1,['toggle'],['toggle']
Deployability,"Thanks for the help!. FYI, I am on windows, but will run this in a Linux terminal if I get it working. I am getting conflicts when I try to install the yml file to a fresh env (see below). Is there an easier work around than this? I was able to pip install torsiondrive, but I get an error message relating to geometric? uninstalling and reinstalling geometric does not solve this. ```; FailedOperation(error=ComputeError(error_type='unknown', error_message='TorsionDrive error at 100:\ngeomeTRIC run_json error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\run_json.py"", line 269, in geometric_run_json\n geometric.optimize.Optimize(coords, M, IC, engine, dirname, params, print_info = (ic==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:140,install,install,140,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,2,['install'],['install']
Deployability,"Thanks for the input, @hokru. It sounds like you're just the kind of user that we're trying to avoid tripping up. Which `dftd3` gets executed always depends on the contents of your environment variables, i.e., `$PSIPATH:$PATH`. So a hand-compiled one can always take precedence by manipulating those. Or for the miniconda binary case where `conda install psi4` installs `dftd3` alongside, you can always promptly `conda remove dftd3` to eliminate any potential interference from the generic exe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/383#issuecomment-220698751:347,install,install,347,https://psicode.org,https://github.com/psi4/psi4/pull/383#issuecomment-220698751,2,['install'],"['install', 'installs']"
Deployability,"Thanks for the inquiry. My impression has been that distributing a Py/C++ package through pypi was a bad idea b/c (1) if pip decided to compile rather than download, it'd take hours to build all the deps; (2) unless we vendor 1GB libraries, we'd have to maintain Libint2, gau2grid, Libxc all on pypi, all of which are C/C++; (3) no control of LAPACK implementations and no MKL, so unreliable performance. That said, I really haven't reassessed since the advent of wheels. Would your environment enable you to download the installer (an executable bash script like the Miniconda one)? Download, bash it, and psi4 is preinstalled. Or are docker or singularity images workable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3091#issuecomment-1834765035:522,install,installer,522,https://psicode.org,https://github.com/psi4/psi4/issues/3091#issuecomment-1834765035,1,['install'],['installer']
Deployability,"Thanks for the patch. The [Linux man page](https://man7.org/linux/man-pages/man2/gethostname.2.html) states that; > SUSv2 guarantees that ""Host names are limited to 255 bytes"". [On Windows the maximum length is 256 bytes](https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-gethostname). Also one can remove some of the hard-coding. I will file a PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043#issuecomment-1704340967:15,patch,patch,15,https://psicode.org,https://github.com/psi4/psi4/pull/3043#issuecomment-1704340967,1,['patch'],['patch']
Deployability,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:25,install,install,25,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079,5,"['install', 'release', 'update']","['install', 'release', 'updated']"
Deployability,"Thanks for the quick answer that is helpful. We recently switched all our internal codebase to conda-forge only since mixing default/anaconda and conda-forge were creating an infinite list of either dep solving issues or symbol errors. I still tried to add `anaconda::intel-openmp` or simply the `anaconda` channel to see if I could get it to work for this simple env at least but I got another dep issue: `package psi4-1.6+77475b5-py39hceaf722_0 requires libxc 5.1.5 h84b9e52_1, but none of the providers can be installed`. If you haven't built psi4 from conda-forge but with defaults I am not surprised I am having this kind of issues. Hopefully psi4 will hit conda forge soon xD. Thanks again (feel free to close)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1164884983:513,install,installed,513,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1164884983,1,['install'],['installed']
Deployability,"Thanks for the quick replies/bug fixes!. @susilehtola - we have indeed had our eye on integrating libxc, but it's coming down to manpower/tech debt issues right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291:86,integrat,integrating,86,https://psicode.org,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291,1,['integrat'],['integrating']
Deployability,"Thanks for the quick update! I did try a new conda environment and ran into the same problem, but I had a hunch conda might be using cached packages and I couldn't remember the command to clear them, so I tried using `python=3.7` and that works fine!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1984#issuecomment-678794270:21,update,update,21,https://psicode.org,https://github.com/psi4/psi4/issues/1984#issuecomment-678794270,1,['update'],['update']
Deployability,"Thanks for the reminder. I'll patch up the `cookbook`. I'm going to push to get this weekend's PRs in soon so that my other non-separable changes can get posted. All I really wanted to do was add in MP2-D, but there turned out to be a lot of opportunities to either work toward future plans or work to put in hacks to maintain existing plans, and I chose the former. Go ahead and post your PR as-is (or copy over formatting changes). I don't care how much I have to rebase, and if the two PRs merges are going to be close in time, I'll see that yours goes in first. Yeah, I `yapf`ed it, then made the minimal changes toward readability.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1394#issuecomment-443571406:30,patch,patch,30,https://psicode.org,https://github.com/psi4/psi4/pull/1394#issuecomment-443571406,1,['patch'],['patch']
Deployability,"Thanks for the report! We'll change it to `python3` since Psi is 3.6+ anyways. (Or feel free to submit a PR.). Longer term, we've gotten vexed that `ctest` requires the source and build directories and so one can't test an installed Psi4. Because of this, we're moving to `pytest` (currently, the other half of the test suite callable by `psi4 --test`) and will eventually drop that `ctest` machinery. I'll look around for other `bin/python` or `bin/env python` that might be vulnerable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1708#issuecomment-525852062:223,install,installed,223,https://psicode.org,https://github.com/psi4/psi4/issues/1708#issuecomment-525852062,1,['install'],['installed']
Deployability,"Thanks for the report!. I suspect you've been caught out by our rapidly changing DFT code. If you're using psi4conda, that's the last published release, so 1.1, which uses our home-grown DFT functionals before we switched out to Libxc (and added nifty things like `energy(..., dft_functional='b3lyp')`). You can check to confirm with `psi4 --version`. The 1.1 manual is at http://www.psicode.org/psi4manual/1.1/dft.html#advanced-functional-use-and-manipulation. See [here](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-into-an-ana-miniconda-distribution) for updating (still with conda) to the pre-1.2 development branch, for which your two commands should behave differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370153860:144,release,release,144,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370153860,2,"['install', 'release']","['install-a-', 'release']"
Deployability,"Thanks for the report, @GregorySchwing. Is there any chance you've got qcportal or qcfractal installed? I ask because psi4 itself should be pydantic v2-tolerant (that is, psi4 imports the v1 API from v2), while qcfractal won't be until the v0.52 release. But that's in theory. In practice, I haven't tested lately with v2, and pydantic is moving quickly and is widely used, so it might be safer to pin it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1826998338:93,install,installed,93,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1826998338,2,"['install', 'release']","['installed', 'release']"
Deployability,"Thanks for the report. I have been warned about a numpy version issue on Mac. If you haven't already, do try a `conda install numpy=1.22` in your environment and try Psi4 again. I'd have to rebuild the Psiv 1.6.1 packages or rewrite their metadata to fix this at `conda create -n p4env psi4 -c psi4` -time. Hopefully, SciPy and Numpy will have reconciled before I get around to that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2661#issuecomment-1207143526:118,install,install,118,https://psicode.org,https://github.com/psi4/psi4/issues/2661#issuecomment-1207143526,1,['install'],['install']
Deployability,"Thanks for the report. Just to be clear, the stable release psi v1.3.2 (`-c psi4`) isn't expected to be compatible with the latest v2rdm from `-c psi4/label/dev` which has build version (can see in `conda list`) that ends in `_11`. Instead, it should be compatible with the latest v2rdm installable from `-c psi4` which ends in `_6`. Could you be trying to mix conda channel labels?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1775#issuecomment-570012416:52,release,release,52,https://psicode.org,https://github.com/psi4/psi4/issues/1775#issuecomment-570012416,2,"['install', 'release']","['installable', 'release']"
Deployability,"Thanks for the report. We did some considerable infrastructure changes that show up in `0.4` (hence the tag, so it'd be easy to let people know how to avoid them if they went wrong). The nature of the errors you're getting indicates they're definitely infrastructure-related. Could you post the input file for the oeprop error?. In trying to revert, even the architecture independent files (the python driver) will be inconsistent between pre and post `0.4`. So maybe try installing a `0.3` afresh into a new conda environment. And make sure you don't have `PSIDATADIR` envvar defined anywhere, just in case you occasionally work from cloned/compiled copies.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182649776:472,install,installing,472,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182649776,1,['install'],['installing']
Deployability,"Thanks for the response. I will try out conda install again. . In the meantime, I want to explain why I turned to #2024. ; I encounter this issue while installing just normal psi4: (this is from mamba install); ```; package libgfortran4-7.5.0-h1a10cd1_23 has constraint libgfortran 4.0.0 *_23 conflicting with libgfortran-3.0.1-0; ```. How I get to this point: ; First I used `conda install psi4 -c psi4`, but it will throw me this errors. (nothing is conflicting?) So I turned to `mamba` to help me with the conflicts. ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions; ```. This is what mamba got back to me if I installed the normal build. `mamba install psi4=1.5+e9f4d6d=py38ha809fef_0 -c psi4`. ```; package psi4-1.5+e9f4d6d-py38ha809fef_0 requires chemps2 >=1.8.10,<1.8.11.0a0, but none of the providers can be installed; ```. So then I tried to install `chemps2`, this can be installed normally. . Then I tried mamba to install psi4 again. . `mamba install psi4=1.5+e9f4d6d=py38ha809fef_0 -c psi4`. ```; package psi4-1.5+e9f4d6d-py38ha809fef_0 requires libgfortran >=3.0.1,<4.0.0.a0, but none of the providers can be installed; ```. Lastly, I tried to install libgfortran, but resulted in the above message. ; ```; package libgfortran4-7.5.0-h1a10cd1_23 has constraint libgfortran 4.0.0 *_23 conflicting with libgfortran-3.0.1-0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578#issuecomment-1125640496:46,install,install,46,https://psicode.org,https://github.com/psi4/psi4/issues/2578#issuecomment-1125640496,13,['install'],"['install', 'installed', 'installing']"
Deployability,"Thanks for the reviews! @zachglick and I tested this fix on water with the custom basis set reported in the [forum post.](http://forum.psicode.org/t/calculations-with-custom-basis-sets-run-slower-with-multiple-threads/2461). Input file:; ```; memory 50 GB. molecule h2o {; 0 1 ; O; H 1 1.0 ; H 1 1.0 2 109.5; }. set basis custombasis. gradient(""pbe0""); ```; Wall time results:. | | 1 core | 18 cores |; |-- | ---------- | ----------|; | original code | 28.00 s | 2:45.96 s |; | updated code | 28.01 s | 25.96 s |. Let me know if more testing is needed!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2581#issuecomment-1129039670:478,update,updated,478,https://psicode.org,https://github.com/psi4/psi4/pull/2581#issuecomment-1129039670,1,['update'],['updated']
Deployability,"Thanks for the tip. But does it matter if it claims to already be in the; testing stage? I presumed that the test calculations might already be; running and that's why I closed it. On Wed, Jan 27, 2016 at 3:28 PM, Andy Simmonett notifications@github.com; wrote:. > Just a heads-up: you don't need to close the PR and reopen it to apply; > fixes. The request is automatically updated as you add features / fixes,; > until it gets merged.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/pull/224#issuecomment-175864194.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/224#issuecomment-175866345:375,update,updated,375,https://psicode.org,https://github.com/psi4/psi4/pull/224#issuecomment-175866345,1,['update'],['updated']
Deployability,Thanks for the update! It sounds to me like the `mrcc` module should move away from determining RHF/UHF/ROHF from the value of the global and read it off the wavefunction. The ROHF-B-CC wavefunction should have `same_a_b_orbs_ = False`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2308#issuecomment-1041551283:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/issues/2308#issuecomment-1041551283,1,['update'],['update']
Deployability,Thanks for the update! Looks good. @psi4/admins Can we get one more review here?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713#issuecomment-594742595:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/pull/1713#issuecomment-594742595,1,['update'],['update']
Deployability,"Thanks for the update!. I still can't reproduce this on either `6e67529` or the 1.3.2 release. What version are you using? I doubt the problem is a version issue, but we might as well check. Second, is the input file you posted actually the input file you ran and found a bug with? In the screenshot Lori posted, the problem is on line 56 of the Python file. The sample you gave doesn't even have that many lines.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524631541:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524631541,2,"['release', 'update']","['release', 'update']"
Deployability,"Thanks for the update, @loriab, I appreciate it. At the moment, I'm running outside of `jupyter` and that is fine for now (I didn't have a chance to try installing `psi4` and `jupyter` into separate environments and then adjusting the latter's path to include `psi4` modules). . At the risk of going off topic, I have a tangentially related question. I'm trying to do a torsion scan to derive a potential energy surface and I believe that `psi4` is running really slowly, although since I don't have experience running `psi4`, I don't have a good baseline. I externally created the structures, so `psi4` is really just doing a geometry optimization with `set optking fixed_dihedral = ...` and single point energy for each file, one at a time. Without going into all the details, I'm running at a pretty low level of theory (in my opinion) of B3LYP/3-21G, and for the structures that converge, I'm seeing ~8 hours per file, after allocating 12 cores and 8 GB of memory to `psi4`. So my question is whether there is any speed or efficiency difference of calling the `psi4` executable directly from bash versus through Python / Psithon. . (As a comparative data point, I did the ""same"" calculation with Gaussian 09 on 16 cores and it completed the scan overnight. I say ""same"" because I let Gaussian do the hard work of scanning the dihedral itself, beginning from the initial coordinates instead of using separate files, and I used HF/6-31G.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-347710296:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-347710296,2,"['install', 'update']","['installing', 'update']"
Deployability,"Thanks for the update. Feel free to reopen, but until then, PR closed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1821#issuecomment-951158154:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/pull/1821#issuecomment-951158154,1,['update'],['update']
Deployability,"Thanks for the update. I second what Susi said. In certain cases it is necessary to decontract the primary basis. Then the DF basis needs to be decontracted as well. We have not done extensive tests on this procedure and there is always the risk that linear dependency problems may arise, for which we do not yet have a good solution. On Oct 10, 2016, at 4:18 PM, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. @WDerricottehttps://github.com/WDerricotte , @fevangelistahttps://github.com/fevangelista. I'm reworking the decontract functionality since that only existed c-side, but all basis sets are now built py-side. Basically, BASIS_X2C (formerly REL_BASIS) will always default to the decontracted orbital basis, if not set outright (set basis_x2c my_gigantic_uncontracted_basis). Is there ever a reason, then, to set the primary/orbital basis to a decontracted one (set basis cc-pvdz-decon)? If so, what fitting basis should a cc-pvdz-decon use: cc-pvdz-jkfit, cc-pvdz-jkfit-decon, unknown so give up? All the X2C test cases are with scf_type pk, none with DF. Thanks for any hints. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHubhttps://github.com/psi4/psi4/issues/43#issuecomment-252771310, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ADgtWdzkkeobqEpzo11t0Vgbt5eRhvl-ks5qysfDgaJpZM4BpdBt. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-252802760:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-252802760,1,['update'],['update']
Deployability,"Thanks for the update. Since this isn't a bug with ECPs so much as _the code not expecting ECPs at all, and we need to decide whether to adopt a Python library for this_, re-tagged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1497#issuecomment-869222419:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/issues/1497#issuecomment-869222419,1,['update'],['update']
Deployability,"Thanks for this, this is a nice documentation update! I added a couple of comments for things that could be changed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3206#issuecomment-2302073336:46,update,update,46,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2302073336,1,['update'],['update']
Deployability,Thanks for those extra points - really good to know. On the second point there I was referring to the installer release - does that not create a new installation (hence the lines to alter the bashrc etc in the installation commands)? [I understand my original post was ambiguous/as clear as mud],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898#issuecomment-1468624824:102,install,installer,102,https://psicode.org,https://github.com/psi4/psi4/issues/2898#issuecomment-1468624824,4,"['install', 'release']","['installation', 'installer', 'release']"
Deployability,"Thanks for tip hokru, added the basis from ccrepo and now it is running. ; Are there any plans to update or should I just drop in a pull request?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1557#issuecomment-467166457:98,update,update,98,https://psicode.org,https://github.com/psi4/psi4/issues/1557#issuecomment-467166457,1,['update'],['update']
Deployability,"Thanks for trying out Psi4 and the Psi4/Cfour interface, @tobirolinew. I can probably fix your immediate problem, but please read on. :-). There's three ways of running a Cfour calc through a more flexible front-end right now:; * QCEngine (already present in a Psi4 installation. takes a dictionary as input. geometry must be in Cartesians.); * QCDB (extra install. depends on QCEngine. inputs look much like Psi4/Cfour only `psi4.` becomes `qcdb.`. can use Z-Matrices.); * Psi4/Cfour (the first in time of these three. what you're trying now.). I'm trying to deprecate this last one in favor of the better maintained first ones. Your job would look something like the below through QCEngine (code below not tested). ```; import psi4; import qcengine as qcng. h2o = psi4.geometry(""""""; O; H 1 R; H 1 R 2 A. R=0.958; A=104.5; """"""). atomicinput = {; ""driver"": ""energy"",; ""molecule"": h2o.to_schema(dtype=2),; ""model"": {; ""method"": ""ccsd(t)"",; ""basis"": ""aug-pvqz"",; },; ""keywords"": {; ""SCF_CONV"": 12,; ""CC_CONV"": 12,; },; }. atomicresult = qcng.compute(atomicinput, ""cfour""). import pprint; pprint.pprint(atomic_result.dict()); ```. What types of calcs are you ultimately looking to run? How would you like to proceed: the QCEngine or Psi4/Cfour route? Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155480883:266,install,installation,266,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155480883,2,['install'],"['install', 'installation']"
Deployability,"Thanks for trying out psi4! If you're on windows, your conda install line is just right. If you're on linux or mac, you don't actually need the `-c conda-forge`, though it's harmless. Since you're installing from conda, the `psi4 --psiapi` is unnecessary --- activating the environment suffices. I don't have much personal experience with tab help in jupyter, but `help(psi4.set_memory)` returns a sensible docstring for me in interactive python. What you describe does sound with `AttributeError` does sound wrong. If the in-jupyter help is giving you trouble, searching the generated API (https://psicode.org/psi4manual/master/psi4api.html) may work better. If you're new, perhaps check out the tutorials at https://psicode.org/psi4manual/master/index_tutorials.html .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2329#issuecomment-947224243:61,install,install,61,https://psicode.org,https://github.com/psi4/psi4/issues/2329#issuecomment-947224243,2,['install'],"['install', 'installing']"
Deployability,"Thanks for warning. Some updates:; * there _are_ conda packages now for `next` off `-c qcarchive` channel; * I still need to look into next+dask+queuing, so leaving psi4 as qcf-master-based for now still good. that is, no rush to polish up and merge this PR",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645#issuecomment-1230387732:25,update,updates,25,https://psicode.org,https://github.com/psi4/psi4/pull/2645#issuecomment-1230387732,1,['update'],['updates']
Deployability,"Thanks for your interest and the offer, @aizvorski. Looking back over this, the necessary QCEngine has now been released, so it looks like my first steps are updating that CI and limiting Libxc to v6 so the functional definitions can be simplified. Certainly intermolecular tests are desirable. There's some ref values here http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/functional/r2SCAN-3c.html but largely they need hunting down in either papers or an independent implementation. I like S22 but anything independent will do. Then Susi had some basis set comments that I haven't looked into yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1732492854:112,release,released,112,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1732492854,1,['release'],['released']
Deployability,"Thanks for your interest in Psi4+BrianQC. The second forum post you linked was a little too optimistic, so there isn't a way I know to use a binary download of Psi4 with BrianQC, even with a license. I don't know for sure, but I think BrianQC is Linux only. At one point the BrianQC ppl had an cloud instance of Psi4+BrianQC, but that doesn't look active now. From their website, their Dec 2023 release works with Psi4 v1.6. If you're not accustomed to compiling code, you might ask the BrianQC people about a cloud setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813:395,release,release,395,https://psicode.org,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813,1,['release'],['release']
Deployability,Thanks much!. * at first read-through functional integration parts look good; * we'll want to move the running of postg over to qcengine to imitate `dftd3` more than `gcp`. this'll integrate better with the hookup-disp-to-fctls machinery to avoid `## hack ##`. sound ok?; * is https://github.com/aoterodelaroza/postg the official repository home for `postg` where development occurs? PRs considered?; * we'll probably want to switch some logic so that XDM doesn't just turn on in the background when dft_xdm parameters change without the driver's knowledge as this could lead to wrongly labeled variables.; * any objection to a `postg` conda package distributed off the `psi4` or `conda-forge` channels? I have bullets if you're not familiar. Looking forward to getting this integrated. thanks again!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1699#issuecomment-521280759:49,integrat,integration,49,https://psicode.org,https://github.com/psi4/psi4/pull/1699#issuecomment-521280759,3,['integrat'],"['integrate', 'integrated', 'integration']"
Deployability,Thanks so much @loriab - I think the conda-forge over defaults must have been the root cause of the issues (I have tried the conda command from the link you sent and was reluctant to have a separate conda installation),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898#issuecomment-1468531129:205,install,installation,205,https://psicode.org,https://github.com/psi4/psi4/issues/2898#issuecomment-1468531129,1,['install'],['installation']
Deployability,"Thanks so much for the quick response, @philipmnel! This does indeed make the install work; however, `psi4` does not work, appearantly due to issues with pydantic v1 vs v2. Is there a fix for this? Does psi4 v1.8 support pydantic v2?. ```sh; ~ ❯ conda activate psi4-2  base; ~ ❯ psi4 --version  psi4-2; Valid config keys have changed in V2:; * 'allow_mutation' has been removed; Traceback (most recent call last):; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; ^^^^^^^^^^^; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/psi4/__init__.py"", line 90, in <module>; from .driver import endorsed_plugins; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/psi4/driver/__init__.py"", line 42, in <module>; from qcelemental import constants; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/qcelemental/__init__.py"", line 6, in <module>; from . import covalent_radii, models, molparse, molutil, periodic_table, physical_constants, util, vanderwaals_radii; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/qcelemental/models/__init__.py"", line 10, in <module>; from .align import AlignmentMill; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/qcelemental/models/align.py"", line 6, in <module>; from ..util import blockwise_contract, blockwise_expand; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/qcelemental/util/__init__.py"", line 1, in <module>; from .autodocs import auto_gen_docs_on_demand, get_base_docs; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11/site-packages/qcelemental/util/autodocs.py"", line 6, in <module>; from pydantic import BaseModel, BaseSettings; File ""/home/cbh/.pyenv/versions/miniconda3-4.7.12/envs/psi4-2/lib/python3.11",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1698251880:78,install,install,78,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1698251880,1,['install'],['install']
Deployability,Thanks to everyone for their feedback. I put all this on the 1.0 Release Notes.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367#issuecomment-232776501:65,Release,Release,65,https://psicode.org,https://github.com/psi4/psi4/issues/367#issuecomment-232776501,1,['Release'],['Release']
Deployability,"Thanks very much for the OpenBLAS patch. Do you want to submit it as a Pull Request so you show up as a contributor, or would you rather I just added it to the code?. That install error is bizarre. Make double sure of your permissions and disk space perhaps? We regularly build in parallel (up to `-j12`), so that shouldn't be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274822045:34,patch,patch,34,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274822045,2,"['install', 'patch']","['install', 'patch']"
Deployability,"Thanks very much for the report and problem localization. Were you able to test that editing those two lines led to a running psi4 (as opposed to revealing the next problem :-) )? I can understand if permissions on the hpc system don't allow editing. If those two lines are it, I can work on a v1.9.1 release. @coltonbh, I wonder if this is related to the psi4-in-docker error you were getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377:301,release,release,301,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377,1,['release'],['release']
Deployability,"Thanks very much, @amjames! @loriab did a ton of heavy lifting to get them able to be integrated into the docs, so many thanks to her as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/637#issuecomment-284583309:86,integrat,integrated,86,https://psicode.org,https://github.com/psi4/psi4/pull/637#issuecomment-284583309,1,['integrat'],['integrated']
Deployability,"Thanks! Could you instead just update the files tight-cc-pwcvXz.gbs and tight-cc-pwcvXz-ri.gbs that live [here](https://github.com/psi4/psi4/tree/master/psi4/share/psi4/basis/primitives)? Those are the ""w-core"" and ""w-core-ri"" that get composed (e.g., [here](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/NOTES#L336-L337) and [here](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/NOTES#L456-L457)) into the actual basis set files to keep everything consistent. I'll run the scripts afterward to do the composing, so don't feel you need to follow the README in primitives/ . Let me know if you've any questions – I wasn't an experienced scripter when I put this together. On Andy's comments, any comment that you add about the origin to the top of the primitives/*.gbs files will get carried through to the final basis set file. And you're not (I think) creating new basis sets, just adding elements to existing basis sets, so there shouldn't be any need to set fitting defaults for orbital bases. @susilehtola, I am exceedingly grateful for EMSL. But if I trusted their internal consistency on basis sets that should contain the same info, I wouldn't have the crazy basis file summing scheme in Psi4. Admittedly, I haven't reexamined EMSL in a few years.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/727#issuecomment-305643837:31,update,update,31,https://psicode.org,https://github.com/psi4/psi4/issues/727#issuecomment-305643837,1,['update'],['update']
Deployability,"Thanks! It all looks good at first look-through. I'll integrate it with Psi4's build system tonight and report back any issues. * By the way, I think if you remove the LICENSE file (naming it something else or putting the info elsewhere), GitHub will auto-detect the LGPL-3.0 license, as in [this skeleton repo](https://github.com/loriab/licensetestrepo); * Is `Libint` the official upper/lowercasing from the project? Or just the branding casing? I'm not particular, but CMake only allows one casing, so I have to ask when I notice it changing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/693#issuecomment-298452280:54,integrat,integrate,54,https://psicode.org,https://github.com/psi4/psi4/issues/693#issuecomment-298452280,1,['integrat'],['integrate']
Deployability,"Thanks! Updated the quadrupole, and I'll refer back here if I see other tensors in needs of a.u. labels.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2508#issuecomment-1080012512:8,Update,Updated,8,https://psicode.org,https://github.com/psi4/psi4/pull/2508#issuecomment-1080012512,1,['Update'],['Updated']
Deployability,"Thanks, @andysim, I hadn't noticed the adcc bit. I've copied over adcc 0.15.6 to psi4/label/dev, so it's all installable with one channel. And the pb11 was getting 2.6.0, not 2.6.1. But otherwise, I'm not sure why it worked three days ago, but not more recently. Ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2074#issuecomment-754230142:109,install,installable,109,https://psicode.org,https://github.com/psi4/psi4/pull/2074#issuecomment-754230142,1,['install'],['installable']
Deployability,"Thanks, @hadim, great to hear, and thanks for testing!. General update:; * I've downloaded one of the Linux packages and run full tests, and they all passed. Not much ecosystem activated, though.; * py311 packages are ready, but `osx_arm64` are not.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1528019765:64,update,update,64,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1528019765,1,['update'],['update']
Deployability,"Thanks, @j3mdamas, I had meant to cc mj-harvey and @susilehtola and forgot. Target release is probably our regional QC conference ~May 18. We're currently sending back responses to reviewers of the accompanying paper. Todo items are: building Mac plugins from conda distribution, updating some add-on integrations we promised in the paper, paper, relicensing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/688#issuecomment-297866382:83,release,release,83,https://psicode.org,https://github.com/psi4/psi4/issues/688#issuecomment-297866382,2,"['integrat', 'release']","['integrations', 'release']"
Deployability,"Thanks, @jturney . So add `lib` and `bin` under installed `include` rather than add `${PROJECT_SOURCE_DIR}/src/bin` & `${PROJECT_BINARY_DIR}/src/bin` to cmake includes_directories? If so, I'll patch that up tonight.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/376#issuecomment-218550316:48,install,installed,48,https://psicode.org,https://github.com/psi4/psi4/pull/376#issuecomment-218550316,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"Thanks, @loriab. I have tried a number of things, including ensuring that MKL and libiomp5 from the native compilers are used instead of conda versions of those libs, and nothing seems to change the outcome of the unpatched code with multiple threads. It's worth noting that running on an non-AVX platform removes the Valgrind errors, but doesn't change the answer so I think they're probably just coming from AVX memmove somehow confusing Valgrind. At this point, my only guess is that perhaps some weird nested thread issue is maybe causing diagonalization issues, but I have no idea why that would be a problem for the unpatched code and not for the patched code. In case anybody wants to check the results, [here's a standalone code](https://github.com/andysim/DiagonalizationTest) that diagonalizes the exact same matrix, using the exact same LAPACK calls as the unpatched code. So far it looks like things are working in Psi4 after the fix, but I just wanted to document all of the suspicious behavior on this PR, in case we see similar problems in future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-905701855:653,patch,patched,653,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-905701855,1,['patch'],['patched']
Deployability,"Thanks, @maxscheurer, centralized L2 initialize/finalize seems to work just fine. Now the orderings toggles only effect core.cc (L2 init), solidharmonics.cc (sh ordering), and points.cc (g2g ordering).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861#issuecomment-1445475438:100,toggle,toggles,100,https://psicode.org,https://github.com/psi4/psi4/pull/2861#issuecomment-1445475438,1,['toggle'],['toggles']
Deployability,"Thanks, @susilehtola, but I patched up master earlier in the week to get things working, as the retweaking and py interface stuff were wrt master.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-386621898:28,patch,patched,28,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-386621898,1,['patch'],['patched']
Deployability,"Thanks, I will update my input file writer.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182670019:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182670019,1,['update'],['update']
Deployability,"Thanks, I'll add that as it can ease detection. In this case it's not important as Libint2 only uses Python to process files for the Fortran interface and for some testing -- any Python will do there. https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2796#issuecomment-1326997805:281,INSTALL,INSTALL,281,https://psicode.org,https://github.com/psi4/psi4/issues/2796#issuecomment-1326997805,1,['INSTALL'],['INSTALL']
Deployability,"Thanks, just wanted to confirm! I switched to libint==2.8.2 in the meantime but look forward to a new release 👍 Feel free to close when you see fit. I'll update the title.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496:102,release,release,102,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496,2,"['release', 'update']","['release', 'update']"
Deployability,"Thanks, this would probably fix most of it (most important psi4 headers actually installed). I just worry that once psi4, add-ons, perhaps openbabel, etc. are all getting installed into one conda env that eventually there will be `molecule.h` collisions. Or `physconst.h`. Will accept PR but not syncing with private immediately.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/218#issuecomment-172794407:81,install,installed,81,https://psicode.org,https://github.com/psi4/psi4/pull/218#issuecomment-172794407,2,['install'],['installed']
Deployability,"Thanks. I mainly wanted to get the discussion going. Slack can be used also in the browser. psi4 is very modular and having `adcc` as a fully optional dependency, c-layer or python-layer, is fine. The `psi4 plugins` (see http://psicode.org/psi4manual/master/prog_newcode.html) are independent of the psi4 code base, though can still use psi4's libraries. Examples would be `sns-mp2` or `v2rdm_casscf`. There you can basically do whatever you want. With python-layer integrations I mean that you add to the proper psi4 python code base. This is what you already did. http://psicode.org/psi4manual/master/proc_py.html; Check the managed method section for how multiple implementations of the same method are usually handled. You only need the `wfn` object?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547399286:466,integrat,integrations,466,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547399286,1,['integrat'],['integrations']
Deployability,"Thanks. We're planning to work on synchronizing `dfocc` back with the rest of Psi after the 1.6 release later this month, so I'm hopeful we can get this moving again. Depending on what my schedule looks like, I may be able to split this PR up so that we can get the `occ` part in, while we're waiting on `dfocc`. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2354#issuecomment-1118547077:96,release,release,96,https://psicode.org,https://github.com/psi4/psi4/pull/2354#issuecomment-1118547077,1,['release'],['release']
Deployability,"That DFT interface hasn't changed in years, so I'm inclined to think it's a Boost version thing. A temporary workaround (if you don't need DFT) is to comment out in `driver.py`. ``` python; # Integrate DFT with driver routines; for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178857878:192,Integrat,Integrate,192,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178857878,1,['Integrat'],['Integrate']
Deployability,"That does make some sense. And by this, I don't mean that it's ideal, just that it appears consistent about what we know about the chips. The main differences in M1 Pro and Max are not the CPU itself (unless you count the 8-core binned M1 Pro), but other things like the GPU core count and media encoders. The CPU itself is the same for the two chips. It seems like the extra memory bandwidth advertised for the M1 Max is somehow reserved for other parts of the chip, with the CPU memory bandwidth being about the same as that of the Pro. I don't see whether the author of the linked article used the 24 or 32 core GPU M1 Max model. I wonder how the CPU memory bandwidth would differ between the two models. i.e. whether getting the 24 core model ""frees up"" more bandwidth for the CPU or whether the total shared bandwidth is just decreased. Who knows. That seems like it would be a very expensive experiment at the very least. Another interesting question would be whether the M1 Pro CPU can fully utilize all 200 GB/s, or whether that's slashed in half as well. It seems like the 400 GB/s marketing claim has to come with this asterisk. It's a real shame that executives and marketing teams at large companies sometimes get in the way of the innovations their engineering teams produce, to the detriment of consumers and developers. EDIT: I also wonder if the memory bandwidth bottleneck is something that is built into in the silicon, or if somehow the operating system is making decisions as how to allocate memory to different parts of the chip. I think it's now possible to install Linux on M1:https://asahilinux.org/2021/10/progress-report-september-2021/, so I wonder if that would result in memory being allocated to the CPU differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-956470448:1580,install,install,1580,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-956470448,1,['install'],['install']
Deployability,"That error triggers when psi is trying to run an input file. The plugin code isn't getting called. Can you confirm the correct psi is being called?. > On Nov 6, 2016, at 8:06 AM, T. Daniel Crawford notifications@github.com wrote:; > ; > [draco:~/src] crawdad% psi4 --new-plugin myplugin; > Traceback (most recent call last):; > File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; > raise KeyError(""The file %s does not exist."" % args[""input""]); > KeyError: 'The file input.dat does not exist.'; > ; > This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503#issuecomment-258681166:577,install,install,577,https://psicode.org,https://github.com/psi4/psi4/issues/503#issuecomment-258681166,1,['install'],['install']
Deployability,"That is a much better idea, I am re-working the regex the script uses to get the list of intermediate input files script right now and I will update the branch when I have this in place. . The new script would only require that you add the label in the CMakeLists.txt file to a test and reap.py would live in tests, does that sound good?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192#issuecomment-157603667:142,update,update,142,https://psicode.org,https://github.com/psi4/psi4/pull/192#issuecomment-157603667,1,['update'],['update']
Deployability,"That looks like a problem in OpenFF Recharge (unlike most of our other packages, that one is used a little bit less externally so it hasn't been updated for the Pydantic v1/v2 import guards). I'll fix it there",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1828415561:145,update,updated,145,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1828415561,1,['update'],['updated']
Deployability,"That sounds nice if I'm a sys admin of my own cluster (and hopefully; someday I will be, so I will definitely keep this in mind), but I suspect; our users who are running with these ancient compilers also won't be using; Easybuild. Or is Easybuild something we would distribute with Psi4, much; like we do Boost?. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 25, 2015 8:22 AM, ""wpoely86"" notifications@github.com wrote:. > Easybuild https://hpcugent.github.io/easybuild/ is not an alternative; > to CMake or autoconf. The idea is to have an easy way to make reproducible; > builds and modules. Everything in the stack should also be optimally build,; > meaning utilizing the hardware to its full extend (for example, if AVX2 or; > infiniband is available, we will use it). Easybuild will take care of all; > dependencies. It will avoid using the OS installed (old) versions of; > software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after; > building a compiler (GCC/intel/...) from scratch. We also patch out any; > problem. Psi4 for example hard codes it's build path for the generation of; > new plugins. This is not desirable on a HPC system. Some software is also; > not adjusted to be build by anything other than GCC. We make it work with; > intel too. Some software doesn't even have a real build system other than a; > list of makefiles that usually don't work out of the box. We fix that so; > the build is reproducible .; > ; > It's primarily meant for HPC sites. If somebody adds support for a piece; > of software, other people can reuse it with one command. I use it to build; > Psi4 in production. If you're developing, Easybuild is useful for building; > all up to date versions of dependencies.; > ; > On our systems, if I run: module load PSI, I get a psi4 (a git version; > from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and; > mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for; > example",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105251086:883,install,installed,883,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105251086,1,['install'],['installed']
Deployability,That timeline will work for us - hopefully we're properly on v2 but at very least I'd expect us to be in the v1/v2 compatible state. (I hope this doesn't take much more than a QCFractal release and us putting the import guards in a couple of our packages.) Thanks for the heads-up!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034#issuecomment-1810454801:186,release,release,186,https://psicode.org,https://github.com/psi4/psi4/pull/3034#issuecomment-1810454801,1,['release'],['release']
Deployability,"That was me playing around, trying to figure out when to use the different dertypes. The level of theory I will be using is w97X-D DFT perhaps in the future but with Hartree-Fock I wanted to test the code that I obtain something back. . I've always used the default before when calculating single point energy scans so when to apply to which different level of theory is a little lost on me. . ```python. dertype='energy'; dertype'gradient'. ```. How would I get around this issue? In my mind. **Option 1**. Give it more juice (like CPU). If i have nodes on a cluster how do I distribute the job between the nodes perhaps. . **Option 2**. Play around with option parameters and maybe obtain orbitals from previous geometry? Is that faster?. https://psicode.org/psi4manual/master/autodir_options_c/scf__guess.html. Should I be changing into the `guess` parameter?. **Update 1** . I was playing around a bit more:. ```; Module time:; 	user time = 221.38 seconds = 3.69 minutes; 	system time = 8.88 seconds = 0.15 minutes; 	total time = 38 seconds = 0.63 minutes; ```. The time decreased when I set the configurations to ` 'g_convergence': 'gau_loose'` I think from `gau_tight`? `dertype` is still `gradient`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936:866,Update,Update,866,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936,2,"['Update', 'configurat']","['Update', 'configurations']"
Deployability,That would be really great. Let us know when `libxc4` is released and we will switch over!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/793#issuecomment-330936414:57,release,released,57,https://psicode.org,https://github.com/psi4/psi4/issues/793#issuecomment-330936414,1,['release'],['released']
Deployability,"That would do it too :). -Daniel Smith; Sent from my iPhone. . > On Jun 6, 2018, at 10:43, Lori A. Burns <notifications@github.com> wrote:; > ; > @dgasmith, rolling back to 1.1 is fairly involved. Can commenting out the three pragma omps in superfunctional.cc test the same effect?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-395100179:157,rolling,rolling,157,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-395100179,1,['rolling'],['rolling']
Deployability,"That's a good point. I would really like to make it so that one can build a plugin off a conda installation (it's on one of my todo lists). We used to install all the libraries to `$PREFIX/lib`, but I stopped doing that because they weren't doing anything useful. If the mixed gnu-make (of plugins) and cmake and all the compiler/linker flags that must be in sync could be made to work with plugins, we can definitely make appropriate changes to install.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/162#issuecomment-130121457:95,install,installation,95,https://psicode.org,https://github.com/psi4/psi4/issues/162#issuecomment-130121457,3,['install'],"['install', 'installation']"
Deployability,"That's a lot of package managers you've mentioned. :-). Judging from [ubuntu packages](https://packages.ubuntu.com/search?keywords=psi4&searchon=names&suite=all&section=all), the latest version available through `apt-get` is `v1.2.1`. Conda has `v1.3.2`. Unless the Linux package managers have adapted to conda while I wasn't looking, ubuntu is going to be running your system python (probably `/usr/bin/python`) not the conda distribution python. Presuming your apt-get psi4 is using system python, you should be able to apt-get install pytest. You'll want to run something like `which python psi4 pytest` to see if everything's where you expect. You're definitely better off installing a conda psi4 (either ""installer"" or ""conda"" from [here](https://admiring-tesla-08529a.netlify.com/installs/v132/)) because it's newer, optimized for more architectures, and uses a decent BLAS (MKL, not generic). psi4 pulls from the `defaults` and `psi4` channels, not `conda-forge`, but in any case, install time is trivial compared to calculation time. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1705#issuecomment-524453814:530,install,install,530,https://psicode.org,https://github.com/psi4/psi4/issues/1705#issuecomment-524453814,5,['install'],"['install', 'installer', 'installing', 'installs']"
Deployability,"That's because there's no longer a py35 among the ""latest"" release. I'm retiring those docs. Please follow the commands at https://admiring-tesla-08529a.netlify.com/installs/v13/ (linked off ""Downloads"" from psicode.org). You'll want to select Linux/Installer/""Stable Release"". Thanks for pointing out ways we're leading people astray.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478010534:59,release,release,59,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478010534,4,"['Install', 'Release', 'install', 'release']","['Installer', 'Release', 'installs', 'release']"
Deployability,"That's curious. Both the source and final files show up as executable to me on Linux (see below), and Mac hasn't had a problem. Are they not showing up as executable to you?. Also note that the CMake-detected python gets baked in to the psi4 shell script as a shebang (see below). This is very handy for development environments where one generally wants to avoid the system python, but maybe you need that patched?. (from builddir); ```; > ls -l stage/bin/psi4 ; -rwxr-xr-x. 1 user user 14865 Jul 30 21:21 stage/bin/psi4; > ls -l ../psi4/run_psi4.py ; -rwxrwxr-x. 1 user user 14861 Jul 30 21:14 ../psi4/run_psi4.py; > head -1 stage/bin/psi4 ; #!/psi/toolchainconda/envs/py310/bin/python; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2685#issuecomment-1215181077:407,patch,patched,407,https://psicode.org,https://github.com/psi4/psi4/issues/2685#issuecomment-1215181077,1,['patch'],['patched']
Deployability,"That's great! I can see the log now, at least for the continuous-integration/Distelli link. Not the Disteli-CI link; that could just be the malformed URL causing a problem though. What's the difference between those hooks?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235419018:54,continuous,continuous-integration,54,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235419018,1,['continuous'],['continuous-integration']
Deployability,"That's impressive. If you're aiming for a working installation, maybe install ambit on its own and pass `-DAMBIT_DIR` to the psi4 build so psi4 detects it. Psi4 build development has moved over to #442, so I won't try to diagnose this eternal loop unless it appears in the new build scheme. Thanks for the report– I'll be on the lookout for it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460#issuecomment-238566031:50,install,installation,50,https://psicode.org,https://github.com/psi4/psi4/issues/460#issuecomment-238566031,2,['install'],"['install', 'installation']"
Deployability,"That's right. I made three different mistakes in the units (missed the section you pointed out, didn't realize you were converting _to_ not _from_ SI at the end, and mixed up the probability-from-mean-intensity definition vs. the probability-from-energy-density definition of the Einstein B.). Documentation updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2525#issuecomment-1084589177:308,update,updated,308,https://psicode.org,https://github.com/psi4/psi4/pull/2525#issuecomment-1084589177,1,['update'],['updated']
Deployability,"The ""nightly"" build `conda install psi4 -c psi4/label/dev` for Linux/WSL is published and should be compatible with numpy `1.16.3`. I looked in sns-mp2 and didn't see the `np.load` culprit, so should be fine, but please let me know if not. Yeah, the ""nightly"" build _is_ nightly (unless I forget to toggle it on), but it's also an extension of our CI system, so it's catching extra things (in this most recent halt -- the Hessian CPHF threshold) from more tests and ecosystem integration. So appears sporadic.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1611#issuecomment-487403610:27,install,install,27,https://psicode.org,https://github.com/psi4/psi4/issues/1611#issuecomment-487403610,3,"['install', 'integrat', 'toggle']","['install', 'integration', 'toggle']"
Deployability,"The ""stage"" directory looks reasonable. It doesn't have this problem.; But when it is installed into the real stage directory ```${DESTDIR}${PREFIX}``` the offending files appear.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325533017:86,install,installed,86,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325533017,1,['install'],['installed']
Deployability,"The -D_GLIBCXX_ASSERTIONS has been added to the standard Fedora build flags starting from Fedora 28. This turns on cheap range checks for C++ arrays, vectors, and strings, see; https://fedoraproject.org/wiki/Changes/HardeningFlags28. After a lot of work, I was able to get the Fedora package updated to psi4 1.2.1 and package its new dependencies. However, the new, stringent build flags reveal some broken code in psi4. Could you build the code with -D_GLIBCXX_ASSERTIONS and fix all the crashing code?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1255:292,update,updated,292,https://psicode.org,https://github.com/psi4/psi4/issues/1255,1,['update'],['updated']
Deployability,"The DFT section of the manual at http://www.psicode.org/psi4manual/master/dft.html as well as https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst contains references to RC1 in multiple places. Given that 1.0 has been released, I believe the manual should be updated in these parts..; ```; The spherical grids are rotated according to a common set of rules developed during the implementation of SG1. At the moment, the rules for tetrahedral, octohedral, and icosohedral systems are not complete, so there may be some ambiguity in the grid orientation for these systems. A complete grid orientation rule set will be available in RC1. Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which at the moment may be either TREUTLER or BECKE, while the number of radial points are controlled by the DFT_RADIAL_POINTS option, which is any positive integer (typically 50-100). The radial grids are “centered” on the Bragg-Slater radius of each atom, as described in Becke’s 1988 paper. If inaccurate integration is suspected in systems with anions or very diffuse basis functions, the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to force the radial grid to span a larger extent in space. The MultiExp, Mura, and EM radial grids will be available in RC1. The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann weighting scheme is under development, and will be available in RC1.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/564:235,release,released,235,https://psicode.org,https://github.com/psi4/psi4/issues/564,3,"['integrat', 'release', 'update']","['integration', 'released', 'updated']"
Deployability,"The DGEMM-killing Boost is a Continuum/default channel conda package 1.57 that had been serving me well for months. It can be found in the lib subdir of the metapackage-dir in the setup line below. (metapackage-dir specifies location of python, boost, chemps2, pcmsolver, zlib, hdf5, gsl.). ```; ../setup --cc icc --cxx icpc --fc ifort --type release --plugins on --prefix $INSTALL --max-am-eri 5 --metapackage-dir /theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv --cmake /theoryfs2/ds/cdsgroup/miniconda/bin/cmake -DSPHINX_ROOT=/theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv #-DENABLE_XHOST=OFF; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-199547946:343,release,release,343,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-199547946,2,"['INSTALL', 'release']","['INSTALL', 'release']"
Deployability,"The Debugging section was lacking anything useful, so here's a bit on how to debug Psi4 with gdb, since it may not be entirely obvious to all users. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3206:362,release,release,362,https://psicode.org,https://github.com/psi4/psi4/pull/3206,1,['release'],['release']
Deployability,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:1480,install,install,1480,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447,1,['install'],['install']
Deployability,"The OpenMP configuration for Linux looks convoluted and fragile. So for Windows, I just made conditional branch, not to break something.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1348#issuecomment-437586788:11,configurat,configuration,11,https://psicode.org,https://github.com/psi4/psi4/pull/1348#issuecomment-437586788,1,['configurat'],['configuration']
Deployability,"The PBE/STO-3G calculation on Ni(CO)3 does not converge.; ```; memory 8 gb. molecule {; Ni -0.593245 2.410696 -0.537392; C 0.947231 2.245835 0.358715; C -0.875896 1.446101 -2.018123; C -1.856239 3.533688 0.051349; O -1.061878 0.818754 -2.971879; O 1.943046 2.139891 0.937442; O -2.673940 4.257626 0.432247; }. set basis STO-3G; energy('pbe'); ```; DIIS apparently gets stuck alternating between two different configurations, which is shown in the oscillating energy. I think this should be a relatively simple system for DFT; still, the default accelerator is unable to handle it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2209:409,configurat,configurations,409,https://psicode.org,https://github.com/psi4/psi4/issues/2209,1,['configurat'],['configurations']
Deployability,"The Python_EXECUTABLE setting at the top level isn't being propagated down to the libint2 build.; libint2 finds a different Python version and uses it. Multiple Python versions can be installed concurrently, and it is important that the same Python version is used everywhere.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2796:184,install,installed,184,https://psicode.org,https://github.com/psi4/psi4/issues/2796,1,['install'],['installed']
Deployability,"The SAPT(DFT) module runs correctly using hybrid functionals like PBE0, but cannot be run with GGAs like PBE. I have used the commands:; _set {; scf_type df; sapt_dft_functional PBE; sapt_dft_do_dHF False; sapt_dft_grac_shift_a 0.12589; sapt_dft_grac_shift_b 0.12589; }_. to obtain PBE in this module, but this results in the error message:. _=> Auxiliary Basis Set <=; ; Basis Set: ANONYMOUS400E6A7D; Blend: AUG-CC-PVDZ-JKFIT + MB-SET-RI; Number of shells: 478; Number of basis function: 1452; Number of Cartesian functions: 1697; Spherical Harmonics?: true; Max angular momentum: 4; ; ; Traceback (most recent call last):; File ""/home/alston/Psi4/install/1.2-gcc/bin/psi4"", line 259, in <module>; exec(content); File ""<string>"", line 71, in <module>; File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 234, in run_sapt_dft; cache = sapt_jk_terms.build_sapt_jk_cache(wfn_A, wfn_B, sapt_jk, True); File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/procrouting/sapt/sapt_jk_terms.py"", line 108, in build_sapt_jk_cache; cache[""K_A""] = jk.K()[0].clone(); ; IndexError: list index out of range; ; *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4._. **Perhaps jk.K() is not filled for a GGA?** While GGAs are not expected to yield accurate SAPT(DFT) interaction energies it will be useful to have the ability to use them, if only for testing and benchmarking purposes.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/911:649,install,install,649,https://psicode.org,https://github.com/psi4/psi4/issues/911,4,['install'],['install']
Deployability,"The SOSCF procedure appears to use a too small default value for `SOSCF_MAX_STEPS` that controls the number of microiterations (Davidson procedure) in computing the second-order step. Attached is a test case, which in Psi4 1.3.2 gives the following convergence pattern:. | SOSCF_MAX_STEPS | Number of SCF iterations to convergence |; |--|---|; |5 (**current default**)|>100|; |6|13|; |7|9|; |8|66|; |9|19|; |10|14|; |11|53|. I'm not sure I understand how the behavior can be so random; the update should converge pretty monotonically to the exact solution. Anyway, this test case fails to converge with default SCF and SOSCF, but the latter case can be fixed by increasing the maximum number of SOSCF updates to 6, saving ~90% in SCF iterations only at the cost of 6/5=1.2x=20% more effort in a single SOSCF step. [testcase.zip](https://github.com/psi4/psi4/files/6497888/testcase.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2183:490,update,update,490,https://psicode.org,https://github.com/psi4/psi4/issues/2183,2,['update'],"['update', 'updates']"
Deployability,"The `--new-plugin` and `--new-plugin-makefile` generators are a really awesome idea. Unfortunately, they don't quite work properly with the latest conda binaries from `conda install -c psi4 psi4`, because the `Makefile` is generated with absolute paths to the build machine. For example, I get something like this setting the compiler and include directories in the generated makefile. I assume this works great on your cluster, but no to much on mine:. ```; # Flags that were used to compile Psi4.; CXX = /theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -O3 -no-prec-div -DNDEBUG; LDFLAGS = -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel -L/theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/usr/lib64 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libpthread.so.0 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libc.so.6; INCLUDES = -I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/home/rmcgibbo/miniconda/envs/2.7/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include; OBJDIR = /scratch/cdsgroup/conda-builds/work/build; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214:174,install,install,174,https://psicode.org,https://github.com/psi4/psi4/issues/214,1,['install'],['install']
Deployability,"The `/usr/lib/libSystem.B.dylib` is ok because we indeed want to link to the Sys lib on each computer, not anything installed by conda. Similarly `/usr/lib/libblas` or lapack if they ocurred b/c after much link following, they end up at Accelerate. The `libgcc_s.1.dylib` is bizarre – will investigate.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/749#issuecomment-311747130:116,install,installed,116,https://psicode.org,https://github.com/psi4/psi4/issues/749#issuecomment-311747130,1,['install'],['installed']
Deployability,"The `809f363` is the commit hash, which is the latest commit ""Merge pull request 743"" on the main GH page. The `dev419` just means 419 commits beyond the latest tag, which you probably saw is ""v1.1"". The conda dev package version is computed from a [git describe](https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L105) command so that there's always a sortable version for every commit but it can also be linked back to the git record via the hash. Last set of release notes will be for 1.1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/763#issuecomment-314960521:471,release,release,471,https://psicode.org,https://github.com/psi4/psi4/issues/763#issuecomment-314960521,1,['release'],['release']
Deployability,"The `core` file is compiled, so the extension is likely ok. . A few background questions-- ; * do other conda packages like NumPy work for you? ; * can/did you do the Windows equivalent of log out then log back in? ; * what exactly was your ""added the directory to my path"" command? ; * what does `psi4 --version` say?. I know these seem basic, but no one here actually uses Windows (the installers are built on CI), so we have to feel around on debugging Windows installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483:388,install,installers,388,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483,2,['install'],"['installation', 'installers']"
Deployability,"The `dmrg/caspt2-n2` is quite large compared to the quicktests. I am no expert in DMRG, but maybe scaling down the active space to 6 orbitals would be ok for code-coverage?. I use the following patch in Debian:. ```; --- ./tests/dmrg/caspt2-n2/input.dat.orig 2016-09-23 21:52:13.874684018 +0200; +++ ./tests/dmrg/caspt2-n2/input.dat 2016-09-23 21:58:45.226670772 +0200; @@ -13,8 +13,8 @@. set dmrg_irrep 0; set dmrg_multiplicity 1; -set restricted_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; -set active [ 4 , 0 , 1 , 1 , 0 , 4 , 1 , 1 ]; +set restricted_docc [ 3 , 0 , 0 , 0 , 0 , 3 , 0 , 0 ]; +set active [ 1 , 0 , 1 , 1 , 0 , 1 , 1 , 1 ]. set dmrg_sweep_states [ 500, 1000]; set dmrg_sweep_energy_conv [ 1e-10, 1e-10]; @@ -41,6 +41,6 @@. energy(""dmrg-caspt2""). -compare_values(-109.15104350802, get_variable(""DMRG-SCF ENERGY""), 6, ""DMRG-SCF Energy"") #TEST; -compare_values(-109.2680229921, get_variable(""CURRENT ENERGY""), 6, ""DMRG-CASPT2 Energy"") #TEST; +compare_values(-107.2576689206, get_variable(""DMRG-SCF ENERGY""), 6, ""DMRG-SCF Energy"") #TEST; +compare_values(-107.5036855148, get_variable(""CURRENT ENERGY""), 6, ""DMRG-CASPT2 Energy"") #TEST; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474:194,patch,patch,194,https://psicode.org,https://github.com/psi4/psi4/issues/474,1,['patch'],['patch']
Deployability,"The `documents_tests` script prints out a list of missing tests. So when I actually look at the output annually (since docs are built by CI), it's not hard to patch up the strays.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1022#issuecomment-388986690:159,patch,patch,159,https://psicode.org,https://github.com/psi4/psi4/pull/1022#issuecomment-388986690,1,['patch'],['patch']
Deployability,"The `psi4-dev` pkg is generally preferred (though probably need to update qcel and qcng separately these days), but `--clang` is valid for Mac only and `--gcc` for Linux only. For single-core, I wouldn't be surprised if you're pretty close, since the psithon tests overwhelmingly worked. I'd try Andy's library manip, but I'm also a little suspicious of `/usr/local/bin/python` unless that's truly your everyday python and you install (or build) numpy w/MKL to that installation's site-packages.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614786340:67,update,update,67,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614786340,3,"['install', 'update']","['install', 'installation', 'update']"
Deployability,"The `psi::PsiOutStream` class provides high-level logic that cannot be enforced via/imposed on a `std::streambuf` object and hence `std::cout` can not be redirected to it. The point of `psi::PsiOutStream` is to micro-manage Psi4's output file in all environments. This simply cannot be done if we allow access to the `std::streambuf` instance within `psi::outfile`, doing so would circumvent the entire point of the `psi::PsiOutStream` class and pave the way for very hard to detect bugs. If you want to print continuously you will have to redirect your printing via a wrapper or simply pass your printing to `psi::outfile`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/77#issuecomment-83124188:510,continuous,continuously,510,https://psicode.org,https://github.com/psi4/psi4/issues/77#issuecomment-83124188,1,['continuous'],['continuously']
Deployability,"The `wfn.Da()` will not hold the ccsd density and in fact in this calculation it will not be computed. . To get the density would require a property calculation, and then to request the natural orbitals be printed to file. . ```; set { ; uhf_noons all; write_nos true ; } . property(""ccsd"", properties=['dipole']); ```. The `ccdensity` module does not update the wavefunction after it has computed the density. The `wfn.Da()` method will get you the AO/SO basis SCF density even after the coupled cluster density has been constructed. . I hope this is helpful",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/504#issuecomment-258840834:352,update,update,352,https://psicode.org,https://github.com/psi4/psi4/issues/504#issuecomment-258840834,1,['update'],['update']
Deployability,"The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046:191,install,installed,191,https://psicode.org,https://github.com/psi4/psi4/issues/2046,2,"['install', 'update']","['installed', 'updated']"
Deployability,"The attached input uses basis_guess to specify a basis set for the initial guess: [sapt.zip](https://github.com/psi4/psi4/files/557209/sapt.zip). This worked with a previous PSI4 release. I guess that was 4.0b6 back then. With a recent development version of PSI4 (commit 7e4ecf968ec7920ab404cb357de827cf3785a254, Wed Oct 19 16:52:24 2016 -0400), I get the following error:. ```; toon@molmod49 ~/sapt> psi4 sapt.in . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT among:; Shell Entries: [u'N']; Basis Sets: [(u'1', u'1', None)]; File Path: /home/toon/sapt, /home/toon/sapt, /home/toon/.local/share/psi4/basis; Input Blocks: . Traceback (most recent call last):; File ""/home/toon/.local/bin/psi4"", line 161, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/home/toon/.local/bin/../lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 3133, in run_sapt; dimer_wfn = scf_helper('RHF', molecule=sapt_dimer, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1199, in scf_helper; ref_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1028, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/.local/lib/psi4/driver/p4util/python_helpers.py"", line 60, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 631, in pyconstruct; return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 805, in construct; (at + 1, role, text2)); psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/484:179,release,release,179,https://psicode.org,https://github.com/psi4/psi4/issues/484,1,['release'],['release']
Deployability,The backtrace was wrong; the conda installation was corrupt and even `xc-info` failed to run. The real issue turned out to be fixed by #3194.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3214#issuecomment-2326478048:35,install,installation,35,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326478048,1,['install'],['installation']
Deployability,"The big difference between AO and plane wave methods is that plane-wave bases are **verbose**. The reason why plane-wave methods don't accelerate convergence using the Fock matrix is that **it is typically never built** since it could not be stored. Instead, it is always contracted right away with trial vectors, as in traditional configuration interaction approaches, for example. The acceleration based on Fock matrix extrapolation is much more efficient than one based on the electron density.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3065#issuecomment-1784887073:332,configurat,configuration,332,https://psicode.org,https://github.com/psi4/psi4/issues/3065#issuecomment-1784887073,1,['configurat'],['configuration']
Deployability,The biggest complication is that dfocc is at code freeze while we absorb some upstream changes. So the upgrade warning will have to do for now. Thanks for opening the issue so we don't lose track of deleting that code.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2256#issuecomment-883860694:103,upgrade,upgrade,103,https://psicode.org,https://github.com/psi4/psi4/issues/2256#issuecomment-883860694,1,['upgrade'],['upgrade']
Deployability,"The bug was introduced in #2839, which parallelized UKS gradients. I _assumed_ the feature was ready to go, somebody had just forgotten to enable it, but apparently not. I'll fix this before the release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2941#issuecomment-1529849644:195,release,release,195,https://psicode.org,https://github.com/psi4/psi4/issues/2941#issuecomment-1529849644,1,['release'],['release']
Deployability,"The build installs these files:; ```; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5Config.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5ConfigVersion.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5Targets.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetLAPACK/TargetLAPACKTargets.cmake; ```. Each one is already installed into the proper location, ex. ```; /usr/local/share/cmake/TargetHDF5/TargetHDF5Config.cmake```. For some reason, it installs duplicates copies into locations derived from the build directory path (?). @loriab Maybe you know how to fix it?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/855:10,install,installs,10,https://psicode.org,https://github.com/psi4/psi4/issues/855,3,['install'],"['installed', 'installs']"
Deployability,"The code has been merged in, QCElemental-side. It won't be included until we have Psi use a version of QCElemental including that code, but we don't need any reminders to update Psi's QCElemental when they mint a new release, and there is nothing else we can do. Do you have any objections to closing the issue now?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2287#issuecomment-912474194:171,update,update,171,https://psicode.org,https://github.com/psi4/psi4/issues/2287#issuecomment-912474194,2,"['release', 'update']","['release', 'update']"
Deployability,"The compilation of Psi4 wants to install qcengine, but it's trying to do it in the wrong target directory; ```; running install_scripts; Installing qcengine script to /usr/local/bin; error: [Errno 13] Permission denied: '/usr/local/bin/qcengine'; make[2]: *** [external/upstream/qcengine/CMakeFiles/qcengine_external.dir/build.make:74: external/upstream/qcengine/qcengine_external-prefix/src/qcengine_external-stamp/qcengine_external-install] Error 1; make[2]: Leaving directory '/home/work/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:1440: external/upstream/qcengine/CMakeFiles/qcengine_external.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1582:33,install,install,33,https://psicode.org,https://github.com/psi4/psi4/issues/1582,3,"['Install', 'install']","['Installing', 'install']"
Deployability,The does-your-PR-break-the-docs and archive-a-tarball-of-your-PRs-docs-for-you-to-check-offline aspects of this PR are long fulfilled. The let-netlify-build-you-a-website-preview-of-your-PRs-docs and have-bot-push-updates-of-samples-to-your-PR aspects are complicated by security and by people having to understand why they can't simple (not force) push to their own PR branches. I don't think these latter aspects are worth the hassle.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2364#issuecomment-1809178568:214,update,updates-of-samples-to-your-PR,214,https://psicode.org,https://github.com/psi4/psi4/pull/2364#issuecomment-1809178568,1,['update'],['updates-of-samples-to-your-PR']
Deployability,"The environment that I am working on had `mpmath`, and installing `mpmath` is successful. When running `conda list`, `mpmath` shows up. How would I be able to make sure cmake is properly detecting? I have created a new environment for this installation, and only used this environment during the duration of the build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-382185804:55,install,installing,55,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382185804,2,['install'],"['installation', 'installing']"
Deployability,"The error I get is; ```; ==> Starting MCSCF iterations <==. Iter Total Energy Delta E Orb RMS CI RMS NCI NORB. Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procedures/proc.py"", line 4025, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procedures/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /home/work/psi4/psi4/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read_entry(unsigned int, char const*, char*, unsigned long); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/588#issuecomment-275790678:169,install,install,169,https://psicode.org,https://github.com/psi4/psi4/pull/588#issuecomment-275790678,4,['install'],['install']
Deployability,"The following example taking from @blazerygy data set indicates the `wcombine` algorithm is responsible, hence the recommendation to disable it.; Plans are to disable the options in the next release. This option affects the efficiency of the range-separated DFT calculations to a moderate degree. ```; molecule mol {; S -1.843692634757 0.011818668014 -1.930850360417 ; N -0.090392634757 0.011818668014 -1.930850360417 ; C 0.380407365243 0.011818668014 -0.711250360417 ; N -0.598892634757 0.005218668014 0.343749639583 ; C -1.918692634757 0.001718668014 -0.128850360417 ; N -2.920292634757 -0.021381331986 0.692349639583 ; C -4.267092634757 -0.022581331986 0.274749639583 ; O -4.572492634757 -0.014581331986 -0.897450360417 ; C -5.238992634757 -0.031881331986 1.408749639583 ; C -0.276592634757 0.147418668014 1.729149639583 ; C 0.475607365243 1.248918668014 2.154149639583 ; C 0.801207365243 1.363418668014 3.501949639583 ; C 0.368607365243 0.401118668014 4.413949639583 ; C -0.397892634757 -0.680381331986 3.982449639583 ; C -0.725892634757 -0.816981331986 2.636249639583 ; N 1.714507365243 0.032718668014 -0.333650360417 ; C 2.783407365243 -0.139581331986 -1.254650360417 ; C 2.720707365243 0.307318668014 -2.578350360417 ; C 3.838007365243 0.163518668014 -3.395850360417 ; C 5.008507365243 -0.412181331986 -2.905450360417 ; C 5.065807365243 -0.847981331986 -1.582450360417 ; C 3.960507365243 -0.717181331986 -0.749250360417 ; H -5.042492634757 -0.867781331986 2.098449639583 ; H -6.272792634757 -0.114281331986 1.044849639583 ; H -5.154492634757 0.890718668014 2.005349639583 ; H 0.788407365243 2.013318668014 1.442549639583 ; H 1.389307365243 2.214918668014 3.843749639583 ; H 0.623207365243 0.499418668014 5.467849639583 ; H -0.748492634757 -1.422181331986 4.699449639583 ; H -1.343692634757 -1.647681331986 2.292449639583 ; H 1.920307365243 -0.204681331986 0.639249639583 ; H 1.809107365243 0.759418668014 -2.978250360417 ; H 3.792107365243 0.505518668014 -4.429450360417 ; H 5.874807365243 -0.5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-975326494:191,release,release,191,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-975326494,1,['release'],['release']
Deployability,"The following input file crashes; ```; molecule {; F; F 1 1.4613; }. set freeze_core true; set basis cc-pvdz; set detci ex_level 5 . energy('ci'); ```. Traceback:; ```; Traceback (most recent call last):; File ""/opt/psi/4/master/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/opt/psi/4/master/lib/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/opt/psi/4/master/lib/psi4/driver/procrouting/proc.py"", line 3600, in run_detci; level = kwargs['level']. KeyError: 'level'; ```. If this isn't intended usage, we need to update docs.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2282:646,update,update,646,https://psicode.org,https://github.com/psi4/psi4/issues/2282,1,['update'],['update']
Deployability,"The following input file demonstrates errors in the second decimal place:; ```; molecule {; La 1 -0.5 0; La 1 0.5 0; O 0 -1 0; O 0 0 0; O 0 1 0; }. set {; basis def2-svp; scf_type df; df_basis_sad def2-universal-jkfit; df_basis_scf def2-universal-jkfit; points 5; }. func = 'hf'; anal = gradient('scf', dft_functional=func, dertype=1); fndf = gradient('scf', dft_functional=func, dertype=0); anal.print_out(); fndf.print_out(); ```. The counterpart where La is replaced with B agrees to six decimal places. This is _strongly_ suggestive of an error in ECPs. Let's keep all discussion on this issue focused on this error. DFT integration is irrelevant.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066#issuecomment-1784370672:625,integrat,integration,625,https://psicode.org,https://github.com/psi4/psi4/issues/3066#issuecomment-1784370672,1,['integrat'],['integration']
Deployability,"The following input; ```; molecule {; 0 1; Li; Li 1 1.63; }. basis {; spherical; ****; Li 1; S 1 1.0; 20.0 1.0; S 1 1.0; 2.0 1.0; ****; Li 2; S 1 1.0; 10.0 1.0; S 1 1.0; 1.0 1.0; ****; }. energy('scf'); ```; should give me the first basis set on atom 1 and the second basis set on atom 2. What I get instead is. ```; $ psi4 . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/crc, /tmp/crc, /home/work/psi4/install/share/psi4/basis; Input Blocks: anonymous8452ca2a. Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 48, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 493, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1266, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 115, in pybuild_wavefunction; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 77, in pybuild_basis; return_atomlist=return_atomlist); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 683, in pyconstruct; verbose=verbose); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 902, in construct; (at + 1, key, text2)). BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/cr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1270:573,install,install,573,https://psicode.org,https://github.com/psi4/psi4/issues/1270,4,['install'],['install']
Deployability,"The following should do the trick already, no?; ```; set(CMAKE_CXX_STANDARD 11); set(CMAKE_CXX_STANDARD_REQUIRED TRUE); set(CMAKE_CXX_EXTENSIONS FALSE); ```; You basically require C++11 _without_ GNU extensions from the compiler. Configuration should abort if the compiler doesn't have the relevant flag. These three lines would possibly eliminate the need for checking for compiler versions in [cmake_cxxstandard.cmake#L3-L11](https://github.com/psi4/psi4/blob/master/cmake/custom_cxxstandard.cmake#L3-L11). But, yes, I agree, is too large of a leap right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281118096:230,Configurat,Configuration,230,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281118096,1,['Configurat'],['Configuration']
Deployability,The gmda interface seems pretty straightforward. I could look into this since I'm using it daily. . Is there any documentation on how to keep an isolated installation of psi4 for development? Any tips would be appreciated!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2706#issuecomment-1228698239:154,install,installation,154,https://psicode.org,https://github.com/psi4/psi4/issues/2706#issuecomment-1228698239,1,['install'],['installation']
Deployability,"The input; ```; molecule {; H; H 1 0.60; }. set basis cc-pVDZ; set docc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; # STO-3G active space; set active [1, 0, 0, 0, 0, 1, 0, 0 ]; energy('casscf'); ```; fails with the up-to-date master branch with the error message; ```; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 5483, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: DSYEV diagonalizer failed in DETCI SEM!; Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""cc-pVDZ""); core.set_global_option(""DOCC"", [ 1, 0, 0, 0, 0, 0, 0, 0 ]); core.set_global_option(""ACTIVE"", [1, 0, 0, 0, 0, 1, 0, 0 ]); --> energy('casscf'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: DSYEV diagonalizer failed in DETCI SEM! !; ! Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3096:311,install,install,311,https://psicode.org,https://github.com/psi4/psi4/issues/3096,4,['install'],['install']
Deployability,"The integration runs some checks on PRs, notably that C++ code style conforms to `.clang-format`. ## Description; [Danger.Systems](http://danger.systems/ruby/) provides a DSL to perform checks on PRs. It's a Ruby gem that runs on Travis, reads the `Dangerfile` and comments on a PR through a bot.; The current version of the `Dangerfile`:; 1. **Fails PR** if C++ code style does not comply with `.clang-format`; 1. **Fails PR** if Python code style does not comply with `.style.yapf`; 2. **Warns** if PR is classed as work in progress, _i.e._ contains `[WIP]` in the title; 3. **Warns** if PR is classed as trivial, _i.e._ contains `#trivial` in the title; 4. **Fails PR** if there are merge commits in the history; 5. **Warns** if PR introduced code changes (in subdirectories `psi4`, `external`, `cmake`) without adding tests and/or docs. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Integrate with Danger.Systems; - [x] Danger checks that C++ code style complies with `.clang-format`; - [x] Clean up `.travis.yml` from now useless PPA; - [x] Ignore `build*` directories; - [x] Danger checks that Python code style complies with `.style.yapf`; - [x] Enabled caching of some dependencies on Travis. ## Questions; 1. I think it's better to pull this in once `clang-format` has been run over the whole code base.; 2. Where is a good place to document the behavior of the bot?; 3. Are the commented sections in `.travis.yml` supposed to be there for future use?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/809:4,integrat,integration,4,https://psicode.org,https://github.com/psi4/psi4/pull/809,2,"['Integrat', 'integrat']","['Integrate', 'integration']"
Deployability,"The job did not have enough memory and failed due to a TOCLEN error. I shot you a gchat about this awhile back, but did not receive a response and consequently forgot about it. > On Apr 4, 2016, at 10:03 AM, T. Daniel Crawford notifications@github.com wrote:; > ; > What was the bug in cc5?; > ; > ## ; > ; > Prof. T. Daniel Crawford; > crawdad@vt.edu; > ; > On Mon, Apr 4, 2016 at 9:32 AM, Daniel Smith notifications@github.com; > wrote:; > ; > > @lothian https://github.com/lothian I fixed cc5 in this branch. cc5 now; > > runs, passes, and the output.ref is updated.; > > ; > > —; > > You are receiving this because you were mentioned.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/pull/315#issuecomment-205297042; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/pull/315#issuecomment-205307609",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205318258:561,update,updated,561,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205318258,1,['update'],['updated']
Deployability,"The laboratory server cannot be connected to the network, so I downloaded Psi4conda-1.3.2-py36-Linux-x86_64.sh from the pis4 official website to install it:; ```; [chenh@Pauling programs]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:145,install,install,145,https://psicode.org,https://github.com/psi4/psi4/issues/1788,13,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"The large number of digits was introduced to eliminate round-off errors completely. There are a few reasons:. - When testing software that post-processes the wavefunction, it is desirable to be able to validate the numerical algorithms in such codes. For example, this can be done by checking the total number of electrons on very fine integration grids in such post-processing codes. When doing so, all other sources of errors should be eliminated to avoid confusion. We noticed that this was especially problematic before #1510 with fractionally occupied natural orbitals.; - When deriving approximate electrostatic models from a wavefunction, satisfying charge neutrality is quite important for long-range interactions. I know you can always ""fix"" this *a posteriori* (e.g. by shifting partial charges to match the net charge), but avoiding the need for a fix is still preferable, just to rule out sources of error. So why 17? The number of significant digits from a double precision number varies between 15 and 17. See https://en.wikipedia.org/wiki/Double-precision_floating-point_format (For some numbers, digits 16 and/or 17 may be insignificant, but not always.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1973#issuecomment-747650817:336,integrat,integration,336,https://psicode.org,https://github.com/psi4/psi4/issues/1973#issuecomment-747650817,1,['integrat'],['integration']
Deployability,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:84,integrat,integration,84,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976,2,"['install', 'integrat']","['install', 'integration']"
Deployability,The libint package needed is in a dev label of conda-forge. You can install psi4 1.8 with; ```; conda install psi4 -c conda-forge/label/libint_dev -c conda-forge ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1606566187:68,install,install,68,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1606566187,2,['install'],['install']
Deployability,"The libscf_solver code has a ""Copyright 2008 by Justin M. Turney, Ph.D.. All rights reserved."" copyright line below the GPL2+ boilerplate. I suggest to remove at least the ""All rights reserved."" if possible, as this makes it unclear which license is really considered applicable. The attic/libsmartptr files have no license information, if they are not used (as hinted at by the attic location) I suggest to remove them for the next public release.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/16:440,release,release,440,https://psicode.org,https://github.com/psi4/psi4/issues/16,1,['release'],['release']
Deployability,"The loop limits are the same in the basic recursion for the nuclear attraction integrals. The call to the Obara-Saika recursion in the 0th order integrals is (from potential.cc): . ``` C++; potential_recur_->compute(PA, PB, PC, gamma, am1, am2);; ```. whereas the call in the derivative code is:. ``` C++; potential_recur_->compute(PA, PB, PC, gamma, am1+1, am2+1);; ```. The code was adapted from PSI3's cints package and we know that code works. We also know the code as it is in PSI4 works as we have working derivative codes. The patch certainly looks like it cleans up the recursion. I'll commit it if the tests pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3#issuecomment-17312112:534,patch,patch,534,https://psicode.org,https://github.com/psi4/psi4/issues/3#issuecomment-17312112,1,['patch'],['patch']
Deployability,The manual mentioned `ENABLE_CheMPS2` instead of `ENABLE_PCMSolver`. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Fix error in the manual. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/819:172,Release,Release,172,https://psicode.org,https://github.com/psi4/psi4/pull/819,1,['Release'],['Release']
Deployability,"The manuals for older versions are online:-; http://sirius.chem.vt.edu/psi4manual/4.0b4/index.html; http://sirius.chem.vt.edu/psi4manual/4.0b3/index.html; etc…. http://sirius.chem.vt.edu/psi4manual/latest/index.html; will always point to the latest release. On Aug 20, 2013, at 7:19 PM, Lori Burns notifications@github.com wrote:. > I do think that the dcft/pywrap-alias changed sample files are just due to my sloppiness in changing the tests before packing up the tarball. SUMMARY should not be changing its contents for a given set of psi4/tests. It may, though, change its ordering of the contents and trigger your changed-source-alert. Thus, I think it's best to drop tracking it and see that it gets cleaned up when distclean runs. That directory doesn't need an ascii index when a formatted html index exists.; > ; > Our original plan was to web-host docs for each public release of the code, but admittedly, even I can't find the address of the older versions just now. If you want to package up a thousand html files, we'll try to remove the minor obstacles.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/14#issuecomment-22985486:249,release,release,249,https://psicode.org,https://github.com/psi4/psi4/issues/14#issuecomment-22985486,2,['release'],['release']
Deployability,"The new CMake system documentation is primarily in the comments within the top level CMakeLists.txt. I have noticed an inconsistency that should either be fixed in the build system or removed from the documentation. . The comment section [here](https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L47) seems to imply that you can download libefp/libint, build them, and then provide the directory containing the appropriate directory containing libintConfig.cmake/libefpConfig.cmake to CMake in the following way. ```shell; cmake -H. -Bobjdir … -Dlibint_DIR=/path/to/libint/share/cmake/libint -Dlibefp_DIR=/path/to/libefp/share/cmake/libefp; ```. Then cmake will detect the previously installed libint/libefp and skip their building. . However, this does not completely work. The initial cmake will indicate `found libint`, then when you go to the build directory and run `make` the `libint_DIR `and `libefp_DIR` argurments are not passed on to cmake for psi4_core and the build errors out with the following message:. ```shell; Performing configure step for 'psi4_core'; loading initial cache file /home/amjames2/newriver/psi4-builds/new-debug/psi4_core-prefix/tmp/psi4_core-cache.cmake; -- The C compiler identification is GNU 5.2.0; -- The CXX compiler identification is GNU 5.2.0; -- Check for working C compiler: /home/amjames2/.conda/envs/py3/bin/gcc; -- Check for working C compiler: /home/amjames2/.conda/envs/py3/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /hom",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:689,install,installed,689,https://psicode.org,https://github.com/psi4/psi4/issues/516,1,['install'],['installed']
Deployability,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:29,Update,Updates,29,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016,1,['Update'],['Updates']
Deployability,"The newest release of ADF implements something called ""MESA"", which has been developed in http://dx.doi.org/10.14288/1.0372885 (pdf available at https://www.scm.com/wp-content/uploads/Thesis-MiguelGarciaChavez.pdf). It's basically a combination of several individual acceleration methods (in ADF: ADIIS, fDIIS, LISTb, LISTf, LISTi, and SDIIS), and the way it works is simply by forming trials of all the methods, and picking the one for which the extrapolated Fock matrix results in the least change of the density from the input.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-565805641:11,release,release,11,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-565805641,1,['release'],['release']
Deployability,The old citation for PBE0 was the same as the one given for PBE. I have updated it and submitted a pull request.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/713#issuecomment-309066051:72,update,updated,72,https://psicode.org,https://github.com/psi4/psi4/issues/713#issuecomment-309066051,1,['update'],['updated']
Deployability,"The only question I have is about the use of DIIS in e.g. coupled-cluster. There, one typically does bare updates combined with some DIIS iterations in-between. Is this completely unrelated to `DIIS_MIN_VECS`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010202395:106,update,updates,106,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010202395,1,['update'],['updates']
Deployability,"The patch I just pushed allows it to compile. The tests all fail instantly on my laptop, so I still have some more work to do, but that's almost certainly user error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235119557:4,patch,patch,4,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235119557,1,['patch'],['patch']
Deployability,"The primary problem with PCMSolver is that I was only partially through its CMake refresh. I went ahead and [opened a PR](https://github.com/PCMSolver/pcmsolver/pull/31) with the changes thus far. The two primary items are (1) pcm_placeholder lost its configuration step, so you have to manage the PATHs yourself and (2) I'd like to do an inversion of the PCMSolver install so that it becomes a more natural python module to import (installed to site-packages) rather than the involved bin/configure/write-to-source-dir business. It is runable at the moment, though, if you're determined (I included an outline of steps at the PR).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249122702:252,configurat,configuration,252,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249122702,3,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"The problem arises when build directory is not under $PREFIX (=/usr/local). Did you try building in some directory not under ```$PREFIX``` (for example in /tmp), and then installing into an external stage directory?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1214426101:171,install,installing,171,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1214426101,1,['install'],['installing']
Deployability,"The problem is that the reference (UHF) is set only for the SCF reference wave function and not the CCSD wave function. If you change the input to use. set reference uhf. the code runs fine. . ## -TDC. Prof. T. Daniel Crawford; crawdad@vt.edu; 540-231-7760. On Aug 6, 2013, at 11:34 AM, andysim notifications@github.com wrote:. > Thanks a lot for the detailed feedback, and input file to reproduce the problem. I'll look into this, and try to get a patch together, ; > ; > cheers, ; > ; > Andy. ; > ; > On Aug 6, 2013, at 10:21 AM, James Spencer notifications@github.com wrote: ; > ; > > CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file: ; > > ; > > molecule f { ; > > f 0.00 0.00 0.00 ; > > } ; > > set basis cc-pVTZ ; > > set scf reference uhf ; > > energy('ccsd') ; > > (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). ; > > ; > > Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. ; > > ; > > Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. ; > > ; > > Full backtrace from gdb: ; > > ; > > (gdb) where ; > > #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6 ; > > #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134 ; > > #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630) ; > > at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50 ; > > #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0) ; > > at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99 ; > > #4 0x000000000086b797 in psi::ccenergy::c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22192736:449,patch,patch,449,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22192736,1,['patch'],['patch']
Deployability,"The problems are unrelated to this PR. Rebase and push, and the problems will be fixed. (Psi's ""grab the latest pydantic"" will use an updated pydantic, which won't raise the error.). I'll review this PR later today, since I know the TDSCF code the best, nowadays.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2967#issuecomment-1560976633:134,update,updated,134,https://psicode.org,https://github.com/psi4/psi4/pull/2967#issuecomment-1560976633,1,['update'],['updated']
Deployability,"The quality of OpenBLAS (https://github.com/xianyi/OpenBLAS) should be fine. It is based on GotoBLAS that used to outperform ATLAS and in some cases even MKL. Kazushige Goto, the developer of GotoBLAS was then hired by Intel. . Thank you for the hint about MathLibs.cmake. Based on https://github.com/coderefinery/autocmake/blob/master/modules/math_libs.cmake (lines 127-141) I have added support for detecting OpenBLAS (with the changes it is detected even without setting MATH_ROOT). ```; [sfux@develop01 psi4]$ cat CMakeAddOpenBLAS.patch ; diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; *** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; --- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; ***************; *** 14,20 ****; if(ENABLE_64BIT_INTEGERS); set(MATH_LIB_SEARCH_ORDER MKL ACML); else(); ! set(MATH_LIB_SEARCH_ORDER MKL ESSL ATLAS ACML SYSTEM_NATIVE); endif(). if(NOT DEFINED MKL_FLAG); --- 14,20 ----; if(ENABLE_64BIT_INTEGERS); set(MATH_LIB_SEARCH_ORDER MKL ACML); else(); ! set(MATH_LIB_SEARCH_ORDER MKL OPENBLAS ESSL ATLAS ACML SYSTEM_NATIVE); endif(). if(NOT DEFINED MKL_FLAG); diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; *** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; --- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; ***************; *** 73,78 ****; --- 73,93 ----; set(ATLAS_LAPACK_LIBS atlas lapack); ; #-------------------------------------------------------------------------------; + # OPENBLAS; + ; + set(OPENBLAS_BLAS_INCLUDE_PATH_SUFFIXES); + set(OPENBLAS_LAPACK_INCLUDE_PATH_SUFFIXES); + ; + set(OPENBLAS_BLAS_HEADERS cblas.h openblas_config.h f77blas.h); + set(OPENBLAS_LAPACK_HEADERS lapacke.h lapacke_config.h lapacke_mangling.h lapacke_utils.h); + ; + set(OPENBLAS_BLAS_LIBRARY_PATH_SUFFIXES openblas); + set(OPENBLAS_LAPACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:535,patch,patch,535,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['patch'],['patch']
Deployability,"The relevant computer is switched on again, so installers downloadable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898:47,install,installers,47,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898,1,['install'],['installers']
Deployability,"The some-subtype-values-not-applicable-to-some-scftype-values doesn't bother me too much -- after all, direct, cd, etc. can't take any subtype value besides auto. So long as the read_options docstring is clear and the code rejects non-meaningful subtype choices, I don't think users are led astray. All the same, I'm not hearty on my suggestion because it seems a little indistinct between algorithm choice (usually scftype) and memory transition choice (usually subtype). Maybe, if designed from scratch, there'd be `YOSHIMINE_PK`, `REORDERED_PK`, and `PK` as `scftype`s and then PK `subtype`s `OUT_OF_CORE` and `INCORE` would fit the DF pattern nicely. That might well be considered too much reengineering at this point in the release cycle. So minimum change, unless others chime in, is leave as-is and add the `PK_NO_INCORE` to the deprecation messages here https://github.com/psi4/psi4/blob/master/psi4/src/core.cc#L553",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2926#issuecomment-1520592511:729,release,release,729,https://psicode.org,https://github.com/psi4/psi4/pull/2926#issuecomment-1520592511,1,['release'],['release']
Deployability,"The switch to 2022 CMake fork of Libint2 in #2413 should have healed this issue, as it has better dependency handling and demands fewer dependencies. Try it out when you get a chance, please. You may find this dependency table helpful: https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md#prerequisites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064:316,INSTALL,INSTALL,316,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064,1,['INSTALL'],['INSTALL']
Deployability,"The test that is currently failing is a test in `gcp/pbeh3c/`. This is due to an optking side issue where the `CustomHelper` class being used by optking is not accepting a `psi4.core.Molecule` the type checking was looking for `qcdb.Molecule`. As a backup optking defaulted to psi4's active molecule. This is the call.; `E = optimize('pbeh3c/def2-msvp', molecule=unopethene)`. optking takes the molecule here in the driver and uses a default fallback instead: ; ` opt_object = optking.opt_helper.CustomHelper(molecule, params=optimizer_params)`. The type check will get changed in optking to include `core.Molecule`. An alternative question this raises for me is whether the active_molecule should get updated at some point in the optimization. Updating the active molecule patches the issue but is that desired?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1259849511:702,update,updated,702,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1259849511,2,"['patch', 'update']","['patches', 'updated']"
Deployability,"The test writing documentation is disorganized. I've been developing with Psi for years, and _I_ have a hard time reading it. I propose that the documentation be restructured along the following lines:. - Overview; - Why do we have tests; - When do I have to make a test for my PR; - When to use Psithon when to use PsiAPI; - Writing Tests; - Structure of a Test; - Do the necessary electronic structure; - Have compare functions; - What makes a good test?; - Quick; - Terse; - Spell out the point of the test; - Psithon Specific; - Create directory w/ CMake File; - Labels; - Update master Cmake; - PsiAPI Specific; - Templates; - How to test error handling; - Common Marks. The current version doesn't separate out the test writing from the details of Psithon test formatting.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2396:577,Update,Update,577,https://psicode.org,https://github.com/psi4/psi4/issues/2396,1,['Update'],['Update']
Deployability,"The two installs are https://github.com/psi4/psi4/blob/master/psi4/CMakeLists.txt#L354-L355 and https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L315-L316 . The former copies the quadrature files into `<objdir>/stage/share/` and the latter copies the whole `<objdir>/stage/` into `CMAKE_INSTALL_PREFIX`. From the `find` output you posted and an earlier issue, I think your CMake build setup or the FreeBSD layout is doing something unexpected at the install. Short of understanding where that's happening, adapting your recipe to remove the extra dirs may be your best bet. ```; >>> objdir_py310_gcc: (sdftd3) find . -name ""1_xk01_1E1""; ./stage/share/psi4/quadratures/1_x/1_xk01_1E1; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325502085:8,install,installs,8,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325502085,2,['install'],"['install', 'installs']"
Deployability,"The unfortunate answer is Psi4's support for atoms past krypton (perhaps a bit optimistic) is very limited. In short this stems from our inability to handle effective core potentials. We are currently discussing how to better address this for the next major release of Psi4, which is likely a long ways away; however, in the meantime I think what you want to do is not possible with Psi4. My recommendation is to consider the Q-Chem package, which is also capable of performing SAPT (energy decomposition) and does have support for atoms past krypton.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/76#issuecomment-78986839:258,release,release,258,https://psicode.org,https://github.com/psi4/psi4/issues/76#issuecomment-78986839,1,['release'],['release']
Deployability,"The user facing error message for PSIO could be improved. A general advice after an PSIO error of sth like: 'check your scratch directory location and how much space you got', could go a long way. Starting of discussion in #1959 (comments copied over). > @JonathonMisiewicz commented 41 minutes ago; @hokru, correct me if I'm wrong, but isn't it fairly formulaic at this point to ask people to check how much memory they gave Psi and then check their scratch directory in the face of a PSIO read error? If it is, I have half a mind to update the error message with this advice. I'd need to check, but I think this is doable, and it would save us a lot of questions. > hokru commented 23 minutes ago; Perhaps a good idea. PSIO should mainly be disk issues IMO. And only memory issues if the C code made bad estimates, right? Unless there are there virtual files that are written to RAM.; PSIO_ERROR: 12 (error writing to file) should in most cases be a disk space issue. > @TiborGY commented 6 minutes ago; Well, I have seen some systems where /tmp is a ramdisk. But usually, if that is the case, the maximum size of /tmp is quite limited. ramdisks or not is the same, I think. Disk is full and the PSI4 memory option has no influence.; But a trend of having `/tmp` as ramdisk questions PSI4's choice of default scratch directory, because ramdisk space does not take away the OS max ram, right? There could be unexpected memory allocation errors for users.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1965:535,update,update,535,https://psicode.org,https://github.com/psi4/psi4/issues/1965,1,['update'],['update']
Deployability,"The value should be a float `1e-3` or an int `3` not a string, `'1e-3'`. It's fine to just set the option globally as well,; ```; psi4.set_options({'e_convergence': 1e-3}); ```; unless you need different modules to have different options set. This part of the tutorial should be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2990#issuecomment-1606556298:279,update,updated,279,https://psicode.org,https://github.com/psi4/psi4/issues/2990#issuecomment-1606556298,1,['update'],['updated']
Deployability,"The warning is fine -- http://forum.psicode.org/t/numpy-ufunc-size-change-warning/1305?u=loriab . The dftd3 error is curious. May be related to https://github.com/MolSSI/QCEngine/issues/45 . Can probe later (most everyone Psi4 is away at a conference next week). Unless DFT-D3 was your target, you're installed, passing, and ready to run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478034387:301,install,installed,301,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478034387,1,['install'],['installed']
Deployability,"There are multiple issues here, and the first one is to make sure that we're using the same definitions. Your vocabulary makes me suspect that you're more used to plane wave methods. In Psi4, SCF works by having an initial density matrix, constructing a Fock matrix, modifying the Fock matrix using optional DIIS (default, and we also blend this with ADIIS and EDIIS methods) and level shift (not default), solving the generalized eigenvalue problem to get new orbitals, constructing a new density matrix from those orbitals (normally aufbau), and then mixing that with the previous density (optional, called update damping). None of this applies to our second-order algorithms, which I assume are irrelevant in your context. How _exactly_ do you want to define `D_in` and `D_out`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3065#issuecomment-1782890955:609,update,update,609,https://psicode.org,https://github.com/psi4/psi4/issues/3065#issuecomment-1782890955,1,['update'],['update']
Deployability,"There have been many buildsystem updates to Libint1 since 1.2.0, and it's always an option to build it through libtool _or_ cmake. Psi4 will only detect a CMake build. Libint takes a while to compile, and I definitely agree one would wish to detect a pre-built. I've added the `.pc` file to Libint1 here (https://github.com/evaleev/libint/pull/120) so that a CMake build of Libint is detectable by both downstream CMake or libtool. Normally what packagers do when they've got a libtool-built Libint already packaged and want Psi to detect it is to patch the build so CMake sees it https://src.fedoraproject.org/rpms/psi4/blob/master/f/psi4-b167f473-fedora.patch . Yes, Libint2 is known to us. As it requires extra dependencies and isn't expected to to be faster, we won't be updating.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589#issuecomment-480458202:33,update,updates,33,https://psicode.org,https://github.com/psi4/psi4/issues/1589#issuecomment-480458202,3,"['patch', 'update']","['patch', 'updates']"
Deployability,"There needs to be a way to avoid pushing certain parts though, otherwise it; undermines the scooping philosophy and we might as well not even have the; private repo. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 3, 2015 10:59 AM, ""Lori A. Burns"" notifications@github.com wrote:. > Well, the branches of the hidden repo are so developers can store code; > that's vulnerable to scientific scooping. And the master of the hidden repo; > is so we can integrate without being overly concerned about breaking things; > for people outside email's reach.; > ; > That said, you're right that we don't have the synching procedure; > automated so that public is often a couple weeks behind. After the May; > round of conferences, we're going to set up a continuous integration box so; > that we can do a nightly or weekly push to public if safe.; > ; > Sent from my iPhone; > ; > > On May 3, 2015, at 10:34 AM, wpoely86 notifications@github.com wrote:; > > ; > > @loriab why do you actually work with a hidden repo? It's quite annoying; > > that all kinds of stuff is fixed/changed but not visible to us.; > > ; > > —; > > Reply to this email directly or view it on GitHub.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/88#issuecomment-98490617.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98491250:480,integrat,integrate,480,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98491250,3,"['continuous', 'integrat']","['continuous', 'integrate', 'integration']"
Deployability,There seems to be an eternal loop in the ambit install. Trying to install the current HEAD with ambit enabled results in. -- Up-to-date: /home/work/psi4/psi4/include/psi4/FCMangle.h; -- Up-to-date: /home/work/psi4/psi4/include/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:47,install,install,47,https://psicode.org,https://github.com/psi4/psi4/issues/460,12,"['Install', 'install']","['Installing', 'install']"
Deployability,There should not be any issue with this. We can just tar up an install and make sure to tell people to set PSIDATADIR/PSI4DATADIR to the correct location. Macs in the wild have a standard set of libraries. At one point I was working on getting Psi4 to automatically determine the value of PSIDATADIR based on the location of the psi4 binary but I can't seem to find it in the code. Maybe we should get someone to work on it and then we don't need to require end users to set this variable if we just distribute binaries.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/49#issuecomment-37945473:63,install,install,63,https://psicode.org,https://github.com/psi4/psi4/issues/49#issuecomment-37945473,1,['install'],['install']
Deployability,There will be an update to beta 4 next week that will contain the GPL2 license text where needed.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2#issuecomment-17312261:17,update,update,17,https://psicode.org,https://github.com/psi4/psi4/issues/2#issuecomment-17312261,1,['update'],['update']
Deployability,"There's a lot of steps in the grand Libint2 project, so here's a place to organize and update progress. Also, this is a place to see if there's a conda package configured to test each step. Table at the top includes steps that need new requirements of L2 library. List below has more intermediate steps. | step | status | libint ver & branch | Psi4 | tarball[^1] | order | component style | linux-64[^8] | osx-64[^8] | win-64[^8] |; | ---- | ------ | ------- | ---- | -------- | ---- | ------ | ----- | ------ | -------- |; | 1[^3] | longstanding L1 | L1 [evaleev:5c89451](https://github.com/evaleev/libint/tree/5c89451) | v1.3 | — | gss | `5` | L1 `_6` | L1 `_2` | — |; | 2[^4] | TEI L2 | [loriab:l2cmake](https://github.com/loriab/libint/tree/l2cmake) https://github.com/evaleev/libint/pull/148 | 20Nov20, after #1721, v1.4, 1.5 | L: `7-7-4-7-7-5_1`, MW: `5-4-3-6-5-4_1` | gss | `g5` | `_9` | `_3` | `_1` |; | 3[^5] | OEI L2 | ditto step 2 | 11Mar22, after #2388 | L: `5-4-3-6-5-4_mm25f12ob2`, MW: `5-4-3-6-5-4_mm4ob2` | gss | `g5` | rm `_13` | ~`_4`~ rm `_6` | ~`_3`~ rm `_5` |; | B[^7] | upstream L2 cmake | [loriab:new-cmake-harness-lab-rb1](https://github.com/loriab/libint/tree/new-cmake-harness-lab-rb1) https://github.com/evaleev/libint/pull/233 | 23Mar22, after #2413, v1.6, v1.7 | `5-4-3-6-5-4_mm4f12ob2.tgz` | gss | `eri_c4_d1_l5` | `_15` | `_7` | `_4` |; | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:87,update,update,87,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['update'],['update']
Deployability,"There's currently a build documentation rewrite underway (to reflect the; cmake build system). I suspect that a section on using Psi4 with Easybuild; could be added as well, particularly since it sounds like no code work on; our end. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 25, 2015 11:34 AM, ""wpoely86"" notifications@github.com wrote:. > No, Easybuild has support for Psi4. Maybe mentioning it in the; > documentation would be nice? Next to the manual install?; > ; > The point I'm trying to make here is that users should use (or tell their; > sysadmins to) a module system. It's no problem than to use old and new; > compilers and to support C++11/14/17.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/pull/97#issuecomment-105252795.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105262783:492,install,install,492,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105262783,1,['install'],['install']
Deployability,"There's no particular reason your environment shouldn't work. I think I'd fire up a fresh colab and then add packages one-by-one, checking with `conda list` (or `mamba list`) that they installed as expected. that is, something like:. ```; conda install psi4 -c conda-forge/label/libint_dev -c conda-forge; conda list; import psi4; conda install ase nglview -c conda-forge; conda list; conda install psi4::resp; conda list; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3109#issuecomment-1856857465:185,install,installed,185,https://psicode.org,https://github.com/psi4/psi4/issues/3109#issuecomment-1856857465,4,['install'],"['install', 'installed']"
Deployability,"There's some `xrange` that py3 wants converted to `range`. They don't look to be over big lists, so shouldn't hurt py2 performance. Py2 problem is . ```. Transforming MOs to the semicanonical basis; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/proc.py"", line 4340, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 409, in mcscf_solver; build_semicanonical_mos(ciwfn); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 91, in build_semicanonical_mos; Cnew = core.Matrix.doublet(ciwfn.Ca(), U, False, False); RuntimeError: ; Fatal Error: Matrix::doublet: Dimension mismatch; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304462078:310,Install,Install,310,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304462078,5,['Install'],['Install']
Deployability,"There's temporary build docs linked off README: ""Downloading and Installing"" on the main GH page. It's not the specification of Python that's the problem– CMake detection and build are going just fine in these cases. CMake knows the exact, absolute path location to everything Psi4 or its build needs. The problem is conveying that info to the runtime environment. This is done by baking in all those absolute paths into the executable/library rpath. _But_, when a path (e.g., `/usr/lib`) has both a useful thing like `libpython.so` and a bad thing (for Psi4) like old gcc or hdf5, then CMake has no way of knowing that it needs to place /usr/lib into rpath _behind_ the path to new gcc or new hdf5. Thus, we end up with runtime path problems, solvable only by `LD_LIBRARY_PATH` or rpath adjustment and relinking. This problem is controllable with conda, because it isolates just what Psi4 needs into its own namespaced path and stuffs that into rpath. For the general developers CMake build, there's no robust solution that I can see.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252931820:65,Install,Installing,65,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252931820,1,['Install'],['Installing']
Deployability,These are not in the core Hamiltonian as they are updated at each SCF iteration. Maybe the name of the data member is misleading.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1430#issuecomment-447682538:50,update,updated,50,https://psicode.org,https://github.com/psi4/psi4/issues/1430#issuecomment-447682538,1,['update'],['updated']
Deployability,These are the lowest eigenvalues of the electronic Hessian showing you that you are not in a minimum. ; You can either search for a SCF guess that works or run it as a UHF calculation and use the `follow` keyword. Compiling on mac is fine but multi-threading might not work well. I also use a mac. You might want do this: http://psicode.org/psi4manual/master/conda.html?highlight=advisor#how-to-use-conda-to-compile-psi4-faster-and-easier; The `psi4-dev` package can be installed to your existing psi4 dev version from psi4/label/dev. It installs compilers and needed libraries.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1878#issuecomment-623964793:470,install,installed,470,https://psicode.org,https://github.com/psi4/psi4/issues/1878#issuecomment-623964793,2,['install'],"['installed', 'installs']"
Deployability,"These commits allow (almost) all tests to pass under python 2 and python 3. I ran the tests under Arch Linux (gcc 4.8.1, python 2.7.5 and 3.3.2, netlib LAPACK+BLAS, boost 1.53.0). Outstanding issues:; - fd-freq-energy seg faults after printing out the 'Thermodynamic Analysis' banner under python 2 and 3. Is this a known issue?; - pywrap-db2, pywrap-opt-sowreap and pywrap-freq-e-sowreap fail to run under python 3 (maybe 3.3?). This is due to the pickle.dump in format_kwargs_for_input: under python 3, pickle.dump must write to a binary file (a restriction not present in python 2) and format_kwargs_for_input is always passed an open text file to write to. I haven't come up with a clean fix to this yet. I also haven't tested the plugins (I forgot to compile with support for them), dftd3 interface (the PSI4 documentation links to a required patch in the psi4 private repository) nor the mrcc interface (no license).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20545979:848,patch,patch,848,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20545979,1,['patch'],['patch']
Deployability,"They should be removed, but as discussed in #2693 the entire `Matrix` class is `PSI_API` and Forte is for sure using these diagonalization functions. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. Call sites within Psi4 are however converted to use non-deprecated overloads, so after 1.7 is out, completing the removal should just be a simple deletion of the deprecated overloads. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, int nMatz = 1)` is now using the `diagonalize_order` enum, like the other overloads: `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)`. But since `ascending = 1`, this should not cause disruptions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `PSI_DEPRECATED` has been added to the three functions mentioned _vide supra_.; - [x] Both `Matrix::diagonalize(Matrix&, Vector&, int)` and `Matrix::diagonaliz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2738:1225,release,release,1225,https://psicode.org,https://github.com/psi4/psi4/pull/2738,1,['release'],['release']
Deployability,"This PR continued and updated in #1335, so closing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1120#issuecomment-444908342:22,update,updated,22,https://psicode.org,https://github.com/psi4/psi4/pull/1120#issuecomment-444908342,1,['update'],['updated']
Deployability,"This PR has largely become obsolete, sq_rsp and rsp has been deprecated, and should end up deleted **after** 1.7 is released.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2637#issuecomment-1332534709:116,release,released,116,https://psicode.org,https://github.com/psi4/psi4/pull/2637#issuecomment-1332534709,1,['release'],['released']
Deployability,"This PR is a good idea, but we just use python in so many different ways that it's risky w/o having OSes to test it on. OS packagers may just need to patch in python3. Leaving PR open for guidance.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1709#issuecomment-758434711:150,patch,patch,150,https://psicode.org,https://github.com/psi4/psi4/pull/1709#issuecomment-758434711,1,['patch'],['patch']
Deployability,"This PR is absolutely not getting merged in until _after_ the Psi4 1.4 release, and I would much prefer that exposing anything non-essential to the Python layer be relegated to a separate PR. This one will need a very careful review as it is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2093#issuecomment-863473343:71,release,release,71,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863473343,1,['release'],['release']
Deployability,"This PR is good to go, in my opinion. I rolled back the removal of libpython linking because that got tangled up in a pybind11 update, which broke us sometime between nov 15 & 16. Working on that. But the PR that's remaining is uncontroversial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/519#issuecomment-261632977:127,update,update,127,https://psicode.org,https://github.com/psi4/psi4/pull/519#issuecomment-261632977,1,['update'],['update']
Deployability,This adds a CMAke patch to lower the optimization flags for a particular file to work around a compiler crash icc 18.0.1 discussed in #923.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/925:18,patch,patch,18,https://psicode.org,https://github.com/psi4/psi4/pull/925,1,['patch'],['patch']
Deployability,"This could be tidied up and merged for v1.9, but that would constrict pydantic to only v2. From https://github.com/MolSSI/QCElemental/issues/323, releases of qcfractal are only imminently even v2-tolerant. So I think it'd be safer to postpone and update the whole qca stack together. So not targeting v1.9. Any thoughts? @mattwthompson",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034#issuecomment-1809285602:146,release,releases,146,https://psicode.org,https://github.com/psi4/psi4/pull/3034#issuecomment-1809285602,2,"['release', 'update']","['releases', 'update']"
Deployability,"This diff should do the trick for that database-making script. You're right about failing to update for py3. I'm guilty on from_string docs, too. They exist [here](https://qcelemental.readthedocs.io/en/latest/api/qcelemental.molparse.from_string.html#qcelemental.molparse.from_string). Please note that the database tech is quite old and the distributed (sow/reap) parallelism only works for py2. Replacement is underway. ```; (p4dev37) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir37/asdf: (mp2d) git diff ../../psi4/share/psi4/scripts/ixyz2database.py; diff --git a/psi4/share/psi4/scripts/ixyz2database.py b/psi4/share/psi4/scripts/ixyz2database.py; index 15f5f41..d31a387 100755; --- a/psi4/share/psi4/scripts/ixyz2database.py; +++ b/psi4/share/psi4/scripts/ixyz2database.py; @@ -33,8 +33,8 @@ import re; import os; import glob; ; -sys.path.append(os.path.dirname(__file__) + '/../python'); -sys.path.append(os.environ.get('PSIDATADIR')+'/python'); +sys.path.append(os.path.dirname(__file__) + '/../../../driver'); +#sys.path.append(os.environ.get('PSIDATADIR')+'/driver'); try:; import qcdb; except ImportError:; @@ -72,7 +72,7 @@ print(""""""; """"""); user_obedient = False; while not user_obedient:; - dbse = raw_input(' dbse = ').strip(); + dbse = input(' dbse = ').strip(); if dbse.isalnum():; user_obedient = True; ; @@ -82,7 +82,7 @@ print(""""""; All files with this extension in the current directory will be processed; Additionally, all files with extension p4m in the current dir will be processed as psi4 mol format; """"""); -fext = raw_input(' fext = [xyz] ').strip(); +fext = input(' fext = [xyz] ').strip(); if fext == """":; fext = 'xyz'; ; @@ -95,7 +95,7 @@ print(""""""; """"""); user_obedient = False; while not user_obedient:; - line2 = raw_input(' line2 = [cgmp] ').strip().lower(); + line2 = input(' line2 = [cgmp] ').strip().lower(); if line2 == """":; line2 = 'cgmp'; if line2 == 'comment' or line2 == 'cgmp' or line2 == 'trash':; @@ -121,7 +121,7 @@ print(""""""; """"""); use",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1367#issuecomment-441157772:93,update,update,93,https://psicode.org,https://github.com/psi4/psi4/issues/1367#issuecomment-441157772,2,"['release', 'update']","['release', 'update']"
Deployability,"This grew a bit to encompass a few more issues, its still a general bug fix patch. ## Description; Fixes and adds test for two issues that were identified:; - Fixes #586 where the SAD basis was not being set when READ failed.; - Fixes #556 as the NO option was not tracked to the new MCSCF driver.; - CI OPDM/TPDM now correctly closes files when complete.; - MCSCF Rotate matrices are now built continuously to avoid difficult cases to exponentiate.; - Patched up Dvec reading between successive CI calls (especially for MCSCF).; - PK Non-symmetric density matrices should now always be detected correction.; - Makes CI printing to be more canonical.; - Prints occupation number for CI, fixes #590. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/588:76,patch,patch,76,https://psicode.org,https://github.com/psi4/psi4/pull/588,3,"['Patch', 'continuous', 'patch']","['Patched', 'continuously', 'patch']"
Deployability,"This has a record number of approvals, so just need to get over the Windows block. May be time to add it as a Spot test again to see output (`-o stdout` like below is my latest refinement to Windows debugging). ```; # Spot Test; - script: |; set PATH=$(Build.BinariesDirectory)\install\bin;%PATH%; psi4 -o stdout $(Build.SourcesDirectory)\tests\pywrap-cbs1\input.dat; displayName: 'MP5 Spot Test'; workingDirectory: $(Build.BinariesDirectory)/build; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-568071614:278,install,install,278,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-568071614,1,['install'],['install']
Deployability,"This has been force updated, and includes #1257",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1206#issuecomment-424371674:20,update,updated,20,https://psicode.org,https://github.com/psi4/psi4/pull/1206#issuecomment-424371674,1,['update'],['updated']
Deployability,This has been identified and will be fixed in the Psi4 1.2 release. This happens in custom build scripts and no changes are required on GitHub.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-381024713:59,release,release,59,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-381024713,1,['release'],['release']
Deployability,"This has been rebased and updated for qcschema compatibility. It goes with https://github.com/MolSSI/QCElemental/pull/12 (and won't work without it). All quicktests pass, but I wouldn't say it's been closely looked at. Particularly uncertain of how to deepcopy these structures in c++. @dgasmith",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1316#issuecomment-446075393:26,update,updated,26,https://psicode.org,https://github.com/psi4/psi4/pull/1316#issuecomment-446075393,1,['update'],['updated']
Deployability,"This has had favorable reports and no problems. And I just tried it with gcc/g++/gfortran+MKL and it gave the below, no problems. So I'm offering this as ready-to-go. Will rebase when its turn comes. ```; >>> ldd -v stage/path/to/hrw-temp/install-psi4/lib/psi4/core.so ; 	linux-vdso.so.1 => (0x00007ffd40bdd000); 	libpcm.so.1 => /path/to/hrw-temp/objdir29/stage//path/to/hrw-temp/install-psi4/lib/libpcm.so.1 (0x00007f84bb67f000); 	libgdma.so => /path/to/miniconda/envs/texternals/lib/libgdma.so (0x00007f84bb2c1000); 	libderiv.so => /path/to/miniconda/envs/texternals/lib/libderiv.so (0x00007f84b4f3a000); 	libint.so => /path/to/miniconda/envs/texternals/lib/libint.so (0x00007f84b35b4000); 	libdkh.so => /path/to/hrw-temp/objdir29/stage//path/to/hrw-temp/install-psi4/lib/libdkh.so (0x00007f84b33a2000); 	libefp.so => /path/to/miniconda/envs/texternals/lib/libefp.so (0x00007f84b2847000); 	libmkl_rt.so => /path/to/miniconda/envs/texternals/lib/libmkl_rt.so (0x00007f84b221f000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f84b1fdd000); 	libm.so.6 => /path/to/miniconda/lib/libm.so.6 (0x00007f84b1d59000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f84b1b55000); 	libstdc++.so.6 => /path/to/miniconda/envs/texternals/lib/libstdc++.so.6 (0x00007f84b17c8000); 	libgomp.so.1 => /path/to/miniconda/envs/texternals/lib/libgomp.so.1 (0x00007f84b15a6000); 	libgcc_s.so.1 => /path/to/miniconda/envs/texternals/lib/libgcc_s.so.1 (0x00007f84b1390000); 	libc.so.6 => /lib64/libc.so.6 (0x00007f84b0fcf000); 	libz.so.1 => /path/to/miniconda/envs/texternals/lib/libz.so.1 (0x00007f84b0db8000); 	libgfortran.so.3 => /path/to/miniconda/envs/texternals/lib/libgfortran.so.3 (0x00007f84b0a98000); 	libquadmath.so.0 => /path/to/miniconda/envs/texternals/lib/libquadmath.so.0 (0x00007f84b085a000); 	/lib64/ld-linux-x86-64.so.2 (0x00007f84c3771000); 	librt.so.1 => /lib64/librt.so.1 (0x00007f84b0651000); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/591#issuecomment-276864921:239,install,install-,239,https://psicode.org,https://github.com/psi4/psi4/pull/591#issuecomment-276864921,3,['install'],['install-']
Deployability,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:295,install,install,295,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988,1,['install'],['install']
Deployability,"This is a great upgrade in current and future use and robustness! My only suggestion is to moderate the requirement of an initial gradient before a frequency computation. I grant that the additional cost of a gradient is likely to be moderate-to-negligible (though if one were computing, e.g., only one irrep of displacements it could be significant). However, the workflow of ""opt + freq"" is so very common, that it's worth it to at least provide an easy way to avoid this extra computation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834#issuecomment-380206803:16,upgrade,upgrade,16,https://psicode.org,https://github.com/psi4/psi4/pull/834#issuecomment-380206803,1,['upgrade'],['upgrade']
Deployability,"This is a quick script exported from Jupyter to animate vibrational modes from Psi4. It uses py3Dmol and takes in dressed xyz files. The script shows how to turn psi4's exported results into the dressed xyz files. I should write something so the format is available directly. Or this’d be a nice opportunity for a jupyter widget, which @armcdona might try. And @fevangelista has a widget for vib vector arrows that could probably be animated. ```; #!/usr/bin/env python; # coding: utf-8; ​; # In[ ]:; ​; ​; # note the capital ""D"". obtain by `conda install py3dmol -c conda-forge`; import py3Dmol; print(py3Dmol.__version__); ​; ​; # In[ ]:; ​; ​; # run an optfreq calc and write the vibrational analysis to disk in a "".vibrec"" file; ​; # molecule h2odim {; # O -1.551007 -0.114520 0.000000; # H -1.934259 0.762503 0.000000; # H -0.599677 0.040712 0.000000; # --; # 0 1; # O 1.350625 0.111469 0.000000; # H 1.680398 -0.373741 -0.758561; # H 1.680398 -0.373741 0.758561; # units angstrom; # }; ​; # set basis sto-3g; # set e_convergence 9; # set g_convergence gau_verytight; ​; # optimize('mp2', molecule=h2odim); ​; ​; # e, wfn = freq('mp2', molecule=h2odim, return_wfn=True); ​; # set hessian_write on; # vibanal_wfn(wfn, molecule=h2odim); ​; # # A. print all the vib-related info from original `e, wfn = freq()` call; # for k, v in wfn.frequency_analysis.items():; # print(v); ​; # # B. `set hessian_write on` above wrote all the vib- & thermo-related info from last analysis.; # # now, print all the vib- & thermo-related info from that file; # with open(core.get_writer_file_prefix(h2odim.name()) + "".vibrec"") as handle:; # import json; # jsondata = json.load(handle); # jsondata = {k: (v if k in ['molecule', 'hessian'] else json.loads(v)) for k, v in jsondata.items()}; ​; # for k, v in jsondata.items():; # print(k, v); ​; ​; # In[ ]:; ​; ​; import json; with open(""freq_demo.h2odim.6436.vibrec"") as fp:; vibs = json.load(fp); ​; ​; # In[ ]:; ​; ​; # See all the vibrational analysis contents; v",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2920#issuecomment-1509020131:548,install,install,548,https://psicode.org,https://github.com/psi4/psi4/issues/2920#issuecomment-1509020131,1,['install'],['install']
Deployability,"This is a short summary on how to get started with PSI4 and Apple Silicon; ---. Overview:. - Python/Package management options:; - osx-arm64 conda-forge environment: https://github.com/conda-forge/miniforge (untested, limited packages); - homebrew . - BLAS/LAPACK options: ; - Apple's Accelerate: very fast, no inherent threading. But thread-safe.; - OpenBLAS: available on conda-forge and homebrew. _No optimized kernels for M1_. Much slower than Accelerate Framework. (see https://github.com/xianyi/OpenBLAS/issues/2814); - ???; ---. ## homebrew:; requirred brew packages: `cmake eigen numpy`; for OpenMP: `libomp`; optional: `doxygen jupyterlab pytest gcc` (gcc to get a Fortran compiler); Note: numpy will come with a non-threading OpenBLAS library. ### psi4 python packages:; - `pip3 install pydantic pint py-cpuinfo psutil`. ### docs:; - pip3 install Sphinx nbsphinx python-graphviz sphinx-autodoc-typehints sphinx-automodapi ; - custom theme from `git clone https://github.com/psi4/sphinx-psi-theme.git` (`pip3 install .`); - dont get `sphinx-doc` from brew, it has python3.10 dependency. ### basic build with Accelerate Framework and homebrew python:; - `cmake -H. -Bobjdir -DPython_EXECUTABLE=/opt/homebrew/bin/python3 -DCMAKE_INSTALL_PREFIX=<custom>`; - `export CPLUS_INCLUDE_PATH=/opt/homebrew/include` (for libint2 to find a header); - If `libomp` is found correctly, OpenMP is enabled but only explicit C-side openmp sections are threaded AFAIK, not blas.; - builds everything from scratch and _wow it's fast!_. ### caveats; - Mismatch between numpy(=openblas) and psi4(=Accelerate) libraries.; ---; I may have missed a detail.. These notes will be updated over time.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333:789,install,install,789,https://psicode.org,https://github.com/psi4/psi4/issues/2333,4,"['install', 'update']","['install', 'updated']"
Deployability,"This is diatomic subroutine is a neat feature to have, especially for; pedagogical purposes. On Fri, Nov 11, 2016 at 5:54 PM, Andy Simmonett notifications@github.com; wrote:. > Description; > ; > Completely changes the algorithm used for fitting diatomic potentials from; > Lagrange interpolations (was tens of thousands of lines of Python) to using weighted; > least squares http://dx.doi.org/10.1063/1.4862157, which can be; > implemented with a couple of lines of Python.; > Todos; > ; > Notable points that this PR has either accomplished or will accomplish.; > - Remove the old interpolation code.; > - Add weighted least squares routine.; > - Add exception to handle non-convergent cases.; > - Document changes.; > - New function to plot the fit to screen/file using matplotlib.; > ; > Status; > - Ready to go; > ; > ---; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4/pull/515; > Commit Summary; > - Completely overhauls the diatomic code to use weighted least squares; > fitting, instead of Lagrange interpolation. Optionally generates plots of; > the results.; > ; > File Changes; > - _M_ doc/sphinxman/source/diatomic.rst; > https://github.com/psi4/psi4/pull/515/files#diff-0 (2); > - _M_ psi4/driver/diatomic.py; > https://github.com/psi4/psi4/pull/515/files#diff-1 (170); > - _D_ psi4/driver/diatomic_fits.py; > https://github.com/psi4/psi4/pull/515/files#diff-2 (49060); > - _M_ psi4/driver/p4util/exceptions.py; > https://github.com/psi4/psi4/pull/515/files#diff-3 (12); > ; > Patch Links:; > - https://github.com/psi4/psi4/pull/515.patch; > - https://github.com/psi4/psi4/pull/515.diff; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/515, or mute the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdkAhbXRujKqYMI0ebQRkBB4FdOHOks5q9PILgaJpZM4KwN-5; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/515#issuecomment-260078097:1550,Patch,Patch,1550,https://psicode.org,https://github.com/psi4/psi4/pull/515#issuecomment-260078097,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"This is fantastic, Ashutosh. I think you may have forgotten to activate the test, which can be done by adding cc13d to [this line](https://github.com/psi4/psi4/blob/master/tests/CMakeLists.txt#L40) in CMakeLists.txt of the tests. Apart from that, I think removing the 3pt finite difference test would be a good idea (there's nothing the 3pt test would catch that the 5pt finite difference test below wouldn't, unless I'm missing something). After that, if you could follow [these directions](http://www.psicode.org/psi4manual/master/build_obtaining.html#what-is-the-suggested-github-workflow) to update your branch, I suggest to @loriab , @jturney and @dgasmith that we pull this one in next (sorry for leapfrogging the Simint PR, Lori).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/670#issuecomment-290936022:596,update,update,596,https://psicode.org,https://github.com/psi4/psi4/pull/670#issuecomment-290936022,1,['update'],['update']
Deployability,"This is great. All of my plugin compilation stuff is working now with the latest conda release, so I'm going to close this. Thanks for all the hard work!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-176947331:87,release,release,87,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-176947331,1,['release'],['release']
Deployability,"This is just about as far as this PR is going to go. Fully removing memory_manager would require a way to store how much memory has been ""spent."" Keeping track of that without globals requires a wavefunction. Once the wavefunction is in place to track memory, the MemoryManager can be removed from psimrcc without much hassle. Two issues before potentially merging this:; 1. I want to do some profiling to make sure that none of my pointer -> std::vector replacements hit performance. `.data()` and passing const refs is enough, according to my very preliminary tests, but I'll do some more in-depth ones once I figure out how to use VTune.; 2. Do we want this as a 1.4 target? We really don't need more PR dependencies before 1.4, given that the 1.4 paper is already published, but 1.4 is still not release-ready. If we don't, then let's hold off on the merge until after 1.4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-634141409:800,release,release-ready,800,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-634141409,1,['release'],['release-ready']
Deployability,"This is more of a discussion than an issue, but posting here in case this is considered a bug. Issue: Running `psi4` from the command line results in dramatically different performance than calling it from the command line with `qcengine`. Why is that? Is this intended?. `psi4` was installed via `conda`, note the results below. They suggest that `psi4` runs on a single core when called from the command line, yet multiple cores when called from `qcengine`. Is this intended? A bug? The `qcengine` call is ~3.5x faster. ```sh; time qcengine run psi4 caffeine.json > qcng_out.json; qcengine run psi4 caffeine.json > qcng_out.json 44.65s user 1.51s system 574% cpu 8.041 total; time psi4 --qcschema -i caffeine.json -o psi4_out.json ; psi4 --qcschema -i caffeine.json -o psi4_out.json 29.30s user 0.63s system 99% cpu 29.952 total; ```. The outfiles are attached in case helpful. They are .json files, but had to name them .txt so GitHub would allow an upload. [qcng_out.txt](https://github.com/psi4/psi4/files/8880533/qcng_out.txt); [psi4_out.txt](https://github.com/psi4/psi4/files/8880534/psi4_out.txt). Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2600:283,install,installed,283,https://psicode.org,https://github.com/psi4/psi4/issues/2600,1,['install'],['installed']
Deployability,"This is not ok. The SCF class header `hf.h` states; ```; /// List of external potentials to add to Fock matrix and updated at every iteration; /// e.g. PCM potential; std::vector<SharedMatrix> external_potentials_;; ```. Indeed, if you look at the SCF driver, this array gets populated at every iteration; ```; if core.get_option('SCF', 'PCM'):; calc_type = core.PCM.CalcType.Total; if core.get_option(""PCM"", ""PCM_SCF_TYPE"") == ""SEPARATE"":; calc_type = core.PCM.CalcType.NucAndEle; Dt = self.Da().clone(); Dt.add(self.Db()); upcm, Vpcm = self.get_PCM().compute_PCM_terms(Dt, calc_type); SCFE += upcm; self.push_back_external_potential(Vpcm); ```; which is why it is cleared at every iteration. The right way to do this is to add a definition of a persistent external potential, which gets summed in at every iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558:115,update,updated,115,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558,1,['update'],['updated']
Deployability,This is now implemented with the wavefunction_pass update. Please post any issues that you may have with SOSCF in a new issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/155#issuecomment-184815478:51,update,update,51,https://psicode.org,https://github.com/psi4/psi4/issues/155#issuecomment-184815478,1,['update'],['update']
Deployability,"This is pretty early days on this PR. The short is that a `Computer` can be `CBS/FindIf/N-Body/Single/etc` (?) so that you can nest them and where a `Single` is the only object that calls quantum chemistry. For example, a `N-Body` can be made up of `Single` computations or `CBS` computations where a CBS computation will be made up for two or more `Single` computations. In this case, calling `compute` on `N-Body` will call `compute` on all of its children which if is a `Single` will call a quantum chemistry computation or if `CBS` will call 2 or more single computations (or FindIf!) and then construct that data into an extrapolated energy which will be given to `N-Body`. The key here is that the `Single` can have three modes 1) a continuous computation on a single node 2) a sow/reap mode using files and 3) a sow/reap mode using [QCFractal](https://qcfractal.readthedocs.io/en/latest/). There will assuredly be many more docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-437624744:739,continuous,continuous,739,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-437624744,1,['continuous'],['continuous']
Deployability,"This is probably the strangest issue I've seen yet. When numpy is imported _after_ psi4 in a Python script, the numpy SVD functions breaks (and becomes nondeterministic). This can be salvaged, strangely, by `import`ing `numpy` before importing `psi4`. I see this issue on an OS X 10.12.3 laptop, with Python 3.5 (installed through conda), with psi4 installed via `conda install psi4 psi4-rt -c psi4/label/dev -c psi4`. Numpy was also installed through conda (default channel). It's at version 1.11.3. I _do not_ see this issue on the other platform I've tested so far (Python 2.7, CentOS 7, psi4 installed from source). The specific version of psi4, according to `conda list`, is ; ```; psi4 1.2a1.dev249+623ad64 py35_0 psi4/label/dev; ```. Here's the script to reproduce:; ```; import psi4 # flipping the order of these two imports ""fixes"" the problem; import numpy as np. def main():; 	random = np.random.RandomState(0); 	N = 50; 	A = random.randn(N, N). 	U, s, VT = np.linalg.svd(A, full_matrices=True); 	A_reconstructed = U.dot(np.diag(s)).dot(VT); 	if not np.allclose(A, A_reconstructed):; 		raise ValueError(""SVD reconstruction failed. difference: %.3f"" % np.linalg.norm(A - A_reconstructed)). if __name__ == '__main__':; 	main(); ```. Example output:; ```; $ python simple-test.py; /Users/mcgibbon/miniconda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; Traceback (most recent call last):; File ""simple-test.py"", line 16, in <module>; main(); File ""simple-test.py"", line 13, in main; raise ValueError(""SVD reconstruction failed. difference: %.3f"" % np.linalg.norm(A - A_reconstructed)); ValueError: SVD reconstruction failed. difference: 51031.324. $ python simple-test.py; /Users/mcgibbon/miniconda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; Traceback (most recent call last):; File ""simple-test.py"", line 16, in <module>; main(); File ""simple-test.py"", line 13, in main; raise ValueError(""SVD reconstruction failed. difference: %.3f"" % np.linalg.nor",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748:313,install,installed,313,https://psicode.org,https://github.com/psi4/psi4/issues/748,5,['install'],"['install', 'installed']"
Deployability,"This is quite important to have before the next release. If you will not have a chance to work on this, please let us know and we can open a general issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-359270820:48,release,release,48,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-359270820,1,['release'],['release']
Deployability,"This is ready for consideration again. See ""April 2018 updates"" at top for status.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-382988041:55,update,updates,55,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-382988041,1,['update'],['updates']
Deployability,"This is ready for final consideration. It's not very urgent but MolSSI/QCEngine#46 is waiting on it. Read the new notes at the top. Windows looks like it's failing but it just needs an missing `@using_mp2d`. I'll patch that up as comments come in. Nominally this is Dom's, but later parts are all mine, so I won't self-review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1491#issuecomment-471375420:213,patch,patch,213,https://psicode.org,https://github.com/psi4/psi4/pull/1491#issuecomment-471375420,1,['patch'],['patch']
Deployability,This is ready for review. Mind the updated OP. I want to wait with the merge until I get a DOI for the paper describing the revTPSS-NL parameters.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1320#issuecomment-441206579:35,update,updated,35,https://psicode.org,https://github.com/psi4/psi4/pull/1320#issuecomment-441206579,1,['update'],['updated']
Deployability,This is ready to be merged and after the pipeline has to be configured: https://dev.azure.com/psi4/psi4/_build,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1368#issuecomment-441602062:41,pipeline,pipeline,41,https://psicode.org,https://github.com/psi4/psi4/pull/1368#issuecomment-441602062,1,['pipeline'],['pipeline']
Deployability,"This is the first DFJKGrad after the first SCF. I just updated my branch to master, and still see the same error arising from line 461 in `jk_grad.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086:55,update,updated,55,https://psicode.org,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086,1,['update'],['updated']
Deployability,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246:62,update,update,62,https://psicode.org,https://github.com/psi4/psi4/pull/246,1,['update'],['update']
Deployability,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/259:96,release,release,96,https://psicode.org,https://github.com/psi4/psi4/issues/259,1,['release'],['release']
Deployability,"This is the output and pydantic has version 1.3. How can it be that ""conda update --all"", or a fresh install for that matter, would not give me the up-to-date version?; ```; # Name Version Build Channel; atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge; attrs 21.4.0 pyhd8ed1ab_0 conda-forge; bzip2 1.0.8 h8ffe710_4 conda-forge; ca-certificates 2022.6.15 h5b45459_0 conda-forge; certifi 2022.6.15 py38haa244fe_0 conda-forge; colorama 0.4.4 pyh9f0ad1d_0 conda-forge; dftd3 3.2.1 1 psi4; gau2grid 2.0.7 hcb41399_1 conda-forge; gcp 2.0.2 0 psi4; importlib-metadata 4.11.4 py38haa244fe_0 conda-forge; importlib_metadata 4.11.4 hd8ed1ab_0 conda-forge; importlib_resources 5.8.0 pyhd8ed1ab_0 conda-forge; iniconfig 1.1.1 pyh9f0ad1d_0 conda-forge; intel-openmp 2019.1 144; libblas 3.8.0 8_mkl conda-forge; libcblas 3.8.0 8_mkl conda-forge; libffi 3.4.2 h8ffe710_5 conda-forge; libint2 2.6.0 h2e52968_4 psi4; liblapack 3.8.0 8_mkl conda-forge; libxc 5.2.3 py38h294d835_1 conda-forge; libzlib 1.2.12 h8ffe710_1 conda-forge; m2w64-gcc-libgfortran 5.3.0 6 conda-forge; m2w64-gcc-libs 5.3.0 7 conda-forge; m2w64-gcc-libs-core 5.3.0 7 conda-forge; m2w64-gmp 6.1.0 2 conda-forge; m2w64-libwinpthread-git 5.0.0.4634.697f757 2 conda-forge; mkl 2019.1 144; msgpack-python 1.0.4 py38hbd9d945_0 conda-forge; msys2-conda-epoch 20160418 1 conda-forge; networkx 2.8.4 pyhd8ed1ab_0 conda-forge; numpy 1.22.4 py38h1d2777f_0 conda-forge; openssl 3.0.3 h8ffe710_0 conda-forge; packaging 21.3 pyhd8ed1ab_0 conda-forge; pint 0.17 pyhd8ed1ab_0 psi4; pip 21.2.2 py38haa95532_0; pluggy 1.0.0 py38haa244fe_3 conda-forge; psi4 1.6+77475b5 py38_0 psi4; psutil 5.9.1 py38h294d835_0 conda-forge; py 1.11.0 pyh6c4a22f_0 conda-forge; py-cpuinfo 8.0.0 pyhd8ed1ab_0 conda-forge; pydantic 1.3 py38hfa6e2cd_0 psi4; pyparsing 3.0.9 pyhd8ed1ab_0 conda-forge; pytest 7.1.2 py38haa244fe_0 conda-forge; python 3.8.13 hcf16a7b_0_cpython conda-forge; python_abi 3.8 2_cp38 conda-forge; pyyaml 6.0 py38h294d835_4 conda-forge; qcelemental 0.17.0 py_0 psi4; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:75,update,update,75,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,2,"['install', 'update']","['install', 'update']"
Deployability,"This is valuable, thank you. As you might suppose, we did one Python 3 compatibility pass some time ago, but none of the core developers regularly works in 3, to my knowledge.; - The fd-freq-energy segfault is because there was an exit() command in the input file. It's clean for me when I comment it out, and I've referred the test case to the appropriate developer.; - Thanks for the reckoning on what remains to be tested. The plugins don't have much exotic python, though I should probably check them for print(...), and for dftd3 and mrcc, one should work if the other does. Perhaps you were using the developers' documentation (http://sirius.chem.vt.edu/psi4manual/master/index.html) instead of users' (http://sirius.chem.vt.edu/psi4manual/latest/index.html)? The former links to the private repo and the latter to the public one. The patch is here (https://raw.github.com/psi4/psi4release/master/lib/scripts/patch_grimme_dftd3) and should be universally readable, if you ever want it.; - Those pywrap test cases fall within my purview. I've been considering re-doing the sow/reap routines that use format_*_for_input functions for a while. Python 3 compatibility will provide another impetus/constraint for that. I don't see a clean solution to it either.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20548249:841,patch,patch,841,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20548249,1,['patch'],['patch']
Deployability,"This is what I do for my Catalina build with gcc9/mkl against conda python+libraries. . a) get `psi4-dev psi4-rt psi4 -c psi4/label/dev` from conda (conda psi4 binaries plus dependencies to build from source); (`conda remove -f v2rdm_casscf` because it gives symbol errors); b) `export PATH=/Users/kruse/homebrew/bin:$PATH` for my homebrew gcc-9; c) run the below script (This is what `psi4-path-advisor` gave me plus making sure the correct compilers are used, plus a custom installation dir. Since recently I also have to turn of 2 default plugins because of symbol problems `-DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF`, might not be necessary for everyone). ```; #!/bin/bash; export MKLROOT=/Users/kruse/qc/miniconda3; rm -rif objdir; /Users/kruse/qc/miniconda3/bin/cmake -H. -C/Users/kruse/qc/miniconda3/share/cmake/psi4/psi4DepsCache.cmake -C/Users/kruse/qc/miniconda3/share/cmake/psi4/psi4DepsMKLCache.cmake -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9 -DCMAKE_Fortran_COMPILER=gfortran-9 -Bobjdir -DCMAKE_INSTALL_PREFIX=/Users/kruse/qc/psi4.bin -DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615249317:476,install,installation,476,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615249317,1,['install'],['installation']
Deployability,"This is with release 2, mkl 11.3 update 2.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198597715:13,release,release,13,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198597715,2,"['release', 'update']","['release', 'update']"
Deployability,"This issue is similar to #3084. For psi4 installed via conda/mamba (both 4.18.2 and 4.19) on an hpc system that has a symlink for the /home directory (the same hpc system in the prior issue), psi4 has trouble resolving paths that don't call `.resolve()`. while the changes made in response to #3084 mostly fix the issue, there appears to be two other places `.resolve()` should be added:. https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/__init__.py#L47-L48. The full error is below:; ```; [2024-01-25 07:17:41 EST] INFO: qcfractalcompute.config: Reading configuration data from configs/config.3049902-1.yaml; Traceback (most recent call last):; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <module>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <dictcomp>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/lila/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/psi4/__init__.py"", line 64, in <module>; raise KeyError(f""Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is {str(data_dir)}""); KeyError: 'Unable to read the Psi4 Python folder - check the PSIDATADIR environmental va",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126:41,install,installed,41,https://psicode.org,https://github.com/psi4/psi4/issues/3126,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"This looks good to me - great work figuring this stuff out. I think the long-term plan will be to get all of the external perturbations into `MintsHelper` to avoid this kind of problem. However that's beyond the scope of this pull request. It would be nice to have a test case to prevent any regressions of this behavior: could you add a small molecule test (like the details you put on the forum post), by doing the following, please?. 1) Make a copy of an existing test folder, such as [this](https://github.com/psi4/psi4/tree/master/tests/fsapt1) and call it something like `fisapt-ext`. 2) In the CMakeLists.txt in the newly created `fisapt-ext`, edit the name `fsapt1` to read `fsapt-ext` in the two locations where it is present. 3) Modify the `input.dat` to represent a small system with a small basis set and populate the `Eref` dictionary with values from running that system with your updated, working psi4 version: these will be checked against the computed values when the test is run. 4) If the test takes less that about 30 seconds (I doubt it will, but that depends on the size of system) then please add `quicktests` to the list of labels on the third line of `CMakeLists.txt` and remove the `PROPERTIES COST 400` from the following line: this will allow the test to be run every pull request. If not, it's too expensive to run every time so it'll just be run during our nightly tests instead. 5) When you have a working test case, please run it and generate the output file as `output.ref`, so that we have something to look at if any changes break this feature in the future. 6) Add the new `fsapt-ext` test name [here](https://github.com/psi4/psi4/blob/master/tests/CMakeLists.txt#L60) so that our testing framework knows about it. I don't think you need the README or the `fsapt-ref` folder that are in that test directory, but I'm happy to be correct by other devs who know more about SAPT than I do. Thanks again for this change - it's a very important addition.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-489109576:895,update,updated,895,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-489109576,1,['update'],['updated']
Deployability,"This might be something dumb on my part, but I cannot get this build to run on our Linux system:; ```; >>> import psi4; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/mmfs1/home/kjp0013/psi4_erika/psi4/objdir_p4d19/stage/lib/psi4/__init__.py"", line 71, in <module>; from . import core; ImportError: /mmfs1/home/kjp0013/psi4_erika/psi4/objdir_p4d19/stage/lib/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZN3psi6mp2f126mp2f12ESt10shared_ptrINS_12WavefunctionEERNS_7OptionsE; ```. I installed einsums from conda-forge. What else do I need to do?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110#issuecomment-1865207636:530,install,installed,530,https://psicode.org,https://github.com/psi4/psi4/pull/3110#issuecomment-1865207636,1,['install'],['installed']
Deployability,This pull request **fixes 24 alerts** when merging e5a14899eabffc69e4d5d6936e899c47d3481815 into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-45f5575234c16e273f606813c2184f52d81cfdff). **fixed alerts:**. * 24 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1755#issuecomment-557313549:288,release,released,288,https://psicode.org,https://github.com/psi4/psi4/pull/1755#issuecomment-557313549,1,['release'],['released']
Deployability,This pull request **fixes 3 alerts** when merging 243f0e3764fcb774adf59ebcf663c642091b9de9 into c871e6cc2bff3e4252a19a82c5b49b6e6c6e05de - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-05ff4a152e1bbfc4cc4f76756181321b72126d42). **fixed alerts:**. * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783#issuecomment-575663398:286,release,released,286,https://psicode.org,https://github.com/psi4/psi4/pull/1783#issuecomment-575663398,1,['release'],['released']
Deployability,This pull request **introduces 1 alert** and **fixes 3** when merging d09ba6e426967fec0428f906a12765be177024b2 into c871e6cc2bff3e4252a19a82c5b49b6e6c6e05de - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-6d50e515572122ac6209caa6ed7ad750b20ebbb7). **new alerts:**. * 1 for Resource not released in destructor. **fixed alerts:**. * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783#issuecomment-575460073:304,release,released,304,https://psicode.org,https://github.com/psi4/psi4/pull/1783#issuecomment-575460073,2,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 2c4ec5b6cb0c617c8130b03e375d8525c4134eb0 into 766c1e760db0de3b1e685fa0313cb2f2d6d9b146 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d46382fbc2f5d7f6061716623d9462a311d08688). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Unused local variable; * 1 for Multiplication result converted to larger type,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2039#issuecomment-731606599:289,release,released,289,https://psicode.org,https://github.com/psi4/psi4/pull/2039#issuecomment-731606599,1,['release'],['released']
Deployability,This seems a little silly that we can't do this at present (after a recent upgrade).,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/39:75,upgrade,upgrade,75,https://psicode.org,https://github.com/psi4/psi4/issues/39,1,['upgrade'],['upgrade']
Deployability,"This sounds very strange. When an internal build of a dep is triggered, it installs into a dirtree in objdir/stage/ . I know this is working in general because libxc and qcelemental have build internally for me lately. Admittedly I don’t think I’ve done an internal pb11 build since a couple minor versions ago, so maybe something has changed for them (header only libs are great for consumers but a pain to get serving correctly for all the software arrangements). I’ll look into that. In the meantime you can install pb11 via “conda install pybind11 -c psi4” (or -c conda-forge). If unaware, can also get all does from conda. See tweet for link and select “source” (sorry, we’re migrating websites at present).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-465575204:75,install,installs,75,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-465575204,3,['install'],"['install', 'installs']"
Deployability,"This typically indicates that either (A) the scratch file directory does; not exist or (B) the user does not have permissions to write to the scratch; file directory. To diagnose (A), echo the PSI_SCRATCH environment variable,; and make sure it points to a reasonable (non-NFS) path. To diagnose (B) ls; -l the base scratch directory and check that write permissions are enables; for the user. See the following notes from the INSTALL.rst file:; - Step 7: User Configuration; ; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location `/usr/local/psi`, then in C; shell,; the user should add something like the following to their `.cshrc`; file::; ; setenv PSI /usr/local/psi; set path = ($path $PSI/bin); ; Next, the user needs to tell the PSI4 I/O manager how to handle scratch; files.; Identify the path to a fast scratch disk for which the user has write; access.; If the local `/tmp` volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended.; ; .. warning:: Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the; network; and negatively impact other users.; ; Specify scratch location by editing the `.cshrc` file to set the scratch; environment variable :envvar:`PSI_SCRATCH`. If the selected location is; `/scratch/user`, add something like the following::; ; setenv PSI_SCRATCH /scratch/user; ; In a bash shell, the corresponding commands to be added to `.bashrc` is; the following::; ; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user; ; More advanced control of scratch files and is handled through a; `.psi4rc` file, which is discussed at section :ref:`sec:psirc`.; ; .. note:: For developers: during compilation and testing, PSI4 finds its; basis sets,; grids, etc., in ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56#issuecomment-40206429:427,INSTALL,INSTALL,427,https://psicode.org,https://github.com/psi4/psi4/issues/56#issuecomment-40206429,5,"['Configurat', 'INSTALL', 'install']","['Configuration', 'INSTALL', 'installation', 'installed']"
Deployability,"This was already shortly discussed on the forum http://forum.psicode.org/t/libxc-density-functionals/589, possibly caused by libxc. No idea if this can be hot-fixed without upgrade to libxc4, but SCAN-D3(BJ) gave excellent results for the GMTKN55 so it would be really nice to have it. Here is a test than runs scan and scan0: [scan.txt](https://github.com/psi4/psi4/files/1481932/scan.txt). also tagging @dgasmith because he did already some checks on this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863:173,upgrade,upgrade,173,https://psicode.org,https://github.com/psi4/psi4/issues/863,1,['upgrade'],['upgrade']
Deployability,"This was on a i7-4790 Haswell-DT. And it's an architecture we've seen some anomalies on. I'll try a 3930 and toggling xHost next. Good to know you've been building psi4 w/2016 compilers w/o disaster, @bennybp. release 1 or 2? This is with 16.0.2 20160204 .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198596617:210,release,release,210,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198596617,1,['release'],['release']
Deployability,"This whole thread was very useful. I was able to create a conda environment with the latest psi4, openff-toolkit, and openff-recharge using this yml. The only thing not really mentioned in this thread, or the psicode latest installation is pinning pydantic version 1.x. I was getting this error ; ```; `; __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__) TypeError: Array.validate_type() takes 2 positional arguments but 3 were given`; ```. from this line of code in my example ( i believe it, recharge may need to pin pydantic 1.x). ```; from openff.recharge.esp.storage import MoleculeESPRecord; qc_data_record = MoleculeESPRecord.from_molecule(; openff_mol_3D, conformer=conformer, grid_coordinates=grid, esp=esp, electric_field=None, esp_settings=qc_data_settings; ); ```. ```. name: psi4; channels:; - conda-forge; - conda-forge/label/libint_dev; dependencies:; - conda-forge::psi4>=1.8.2; - conda-forge::openff-toolkit; - conda-forge::openff-recharge; - conda-forge::pydantic<2. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1826950752:224,install,installation,224,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1826950752,1,['install'],['installation']
Deployability,"This will be imminently unblocked by https://github.com/evaleev/libint/pull/279 (thanks, @JonathonMisiewicz)! But I don't think we want to rush that merge and this merge in time for v1.9, so I'm moving to v1.10. Hopefully 279 will be in the next official L2 release which we _will_ require for v1.9, so the ints will be ready for pseudospectral w/o another L2 shift.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2473#issuecomment-1809232656:258,release,release,258,https://psicode.org,https://github.com/psi4/psi4/pull/2473#issuecomment-1809232656,1,['release'],['release']
Deployability,"This won't be a comprehensive reply, just a getting-started one. In the beginning, there were lots o' blockers:; * no mkl; * no c++11; * no intel compiler capability for multiarch packages; * psi4 has dependencies that aren't quite vanilla upstream; * psi4 likes to provide addons from projects that aren't released cleanly; * psi4 users have grown accustomed to `-c psi4` and `-c psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:307,release,released,307,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['released']
Deployability,"This would be wonderful addition! Make sure to join also the slack channel (see README for link) for more immediate help and questions. There are different levels of integration. An independent plugin, a deep C-layer integration and a python-level integration. Some of the questions depends on what you want to aim for (or need). . Should `adcc` be distributed/build with psi4 in the end? (conda, cmake, etc.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547338492:166,integrat,integration,166,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547338492,3,['integrat'],['integration']
Deployability,"Those comments aren't always 1:1 with the contents. But what's happening for 6-311+G* in particular is that 3 partial basis sets are getting merged: the 6-311 defined through Kr, the polarization defined through Kr, and the diffuse only defined through Ca. Only elements with partial basis sets available for all three pieces show up in the full basis file, so Kr, etc. are missing. Looking at 6-311+G* at https://www.basissetexchange.org/, that ends at Ca, too, so nothing to update. Does this clear up what's going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422:477,update,update,477,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422,1,['update'],['update']
Deployability,"Thought I had, as this was the compilation including chemps2 and pcmsolver that I had working on Friday, but you're right, `git submodule update --init --recursive` changed the compilation. Now have the below:. ``` bash; [100%] Built target pcm-base; Scanning dependencies of target pcm-shared; Scanning dependencies of target pcm-static; Linking CXX static library ../lib/libpcm.a; Linking CXX shared library ../lib/libpcm.so; [100%] Built target pcm-static; ld: cannot find -lstdc++; make[5]: *** [lib/libpcm.so.1] Error 1; make[4]: *** [src/CMakeFiles/pcm-shared.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-build] Error 2; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I know @robertodr has been working on building both `.a`/`.so` so the missing library is probably a result of those changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/207#issuecomment-170794065:138,update,update,138,https://psicode.org,https://github.com/psi4/psi4/issues/207#issuecomment-170794065,1,['update'],['update']
Deployability,"Three hours and nine minutes, according to the timestamps I have for relevant events. I _believe_ the build ran on a 32-thread (16-core) intel broadwell (with ample memory to avoid paging, for however much that helps), and the build was the only event happening on the machine at that time. (I am a little unsure, though, as it's a build-server, and I don't have any way of telling who else might've submitted a build job to the machine at that time. It was ~1AM on a Saturday, though, so probably just me). Also, the .so file generated was 925MB, if that's of any interest. Should I worry at all that the tarball represents a WIP in terms of the actual integral files? Or does the trial status only regard the configuration?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2586#issuecomment-1133800433:711,configurat,configuration,711,https://psicode.org,https://github.com/psi4/psi4/issues/2586#issuecomment-1133800433,1,['configurat'],['configuration']
Deployability,"Time to start the release notes once more. As always please note that these start off as incomplete and gradually fill in over time as they are quite lengthy. If I missed anything or an item is incorrect please comment below. Certainly some items need to be highlighted more and categorical division can be improved. ##. # Major Points of Interest. - The DFT kernels were migrated to use LibXC, Psi4 now has 400+ functionals including modern functionals such as wB97M-V.; - The DFT code was optimized leading up to a 4x speed enhancement on 6 cores.; - A new Density-Fitted JK backend was written, DF-SCF is now up to 2x as fast.; - Dozens of additional methods, bug fixes, and performance enhancements. # Obtaining; - Binary installers: ; - Python Anaconda: `conda install psi4 -c psi4`.; - If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, do not update. Instead, create a new environment for a new Psi4. You may need to conda update conda beforehand. ##. # New Methods; - SNS-MP2; - Hundreds of new DFT Functionals; - VV10 non-local dispersion; - Dispersion Corrected Spin-Component Scaled Double Hybrid (DSD) Functionals; - Second-Order SCF Convergence of Density Functional Theory; - Coupled Perturbed Self-Consistent Field (HF and DFT); - Second-Order Electron Propagator Theory (EP2); - SAPT0 with S^Infinity Induction and Induction Exchange; - DF Gradients for range-separated and CAM functionals; - Support for the [MolSSI](molssi.org) QC Schema [interface](http://molssi-qc-schema.readthedocs.io/en/latest/index.html#) v1. # New Methods (beta); - SAPT(DFT); - Effective Core Potenitals (ECP's). # New External Libraries; - [Gau2Grid](https://github.com/dgasmith/gau2grid) - Very fast gaussian to grid collocation matrices; - [OpenFermion-Psi4](https://github.com/quantumlib/OpenFermion-Psi4) - Quantum computer interface; - [SNS-MP2](https://github.com/DEShawResearch/sns-mp2) - Spin-Network-Scaled MP2 theory; - [GeomeTRIC](https://github.com/leeping/geomeTRIC) - Ge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959:18,release,release,18,https://psicode.org,https://github.com/psi4/psi4/issues/959,5,"['install', 'release', 'update']","['install', 'installers', 'release', 'update']"
Deployability,"Time to start the release notes once more. As always please note that these start off as incomplete and gradually fill in over time as they are quite lengthy. If I missed anything or an item is incorrect please comment below. Certainly some items need to be highlighted more and categorical division can be improved. Note: Psi4 1.3 starts around PR #1065. TODO: Document #1393, . ##. # Major Points of Interest. - Added native Windows compatibility without the WSL requirement.; - DFT collocation grids can now be cache in-memory to avoid extra computation and lowering the total cost of DFT by up to a factor of two (#1233).; - Wavefunctions can now be serialized to disk and back using `Wavefunction.to_file/from_file` (#1304).; - Psi4 is now Python 3.5+ only, Psi4 1.4 will be Python 3.6+ only. Potential:; - A smart SCF solver that can intelligently make a variety of choices depending on local conditions (#1135).; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349). . # Obtaining; - Binary installers: ; - Python Anaconda: `conda install psi4 -c psi4`. ##. # New Methods; - Improved support for the [MolSSI](molssi.org) QC Schema [interface](http://molssi-qc-schema.readthedocs.io/en/latest/index.html#) v1; - VV10 dispersion is now available for UKS references.; - Cubeprop can now compute the `FRONTIER_ORBITALS` and `DUAL_DESCRIPTOR` quantities.; - nZaPa-NR basis sets have been added.; - The recursive driver can now compute N-body gradients and Hessians. # New External Libraries; - [QCElemental](https://github.com/MolSSI/QCElemental) - A library for CODATA, molecule manipulation routines, and periodic table information.; - [HelPME](https://github.com/andysim/helpme) - A particle-mesh Ewald library for long-range electrostatics.; - [pyoptking](https://github.com/psi-rking/optking) - A python-based implementation of the OptKing geometry optimization and IRC program. # First Time Contributors; - @raimis - #1399, #1185, #1183, +70 more!; - @obrien951 #1359, #1222, #1130, #1140, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:18,release,release,18,https://psicode.org,https://github.com/psi4/psi4/issues/1406,1,['release'],['release']
Deployability,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:38,release,release,38,https://psicode.org,https://github.com/psi4/psi4/issues/367,4,"['release', 'update']","['release', 'update']"
Deployability,"To avoid the complications forecasted by my last comment, we're going to update this repo to the current development head. This probably still breaks the items mentioned in https://github.com/psi4/psi4/pull/442#issuecomment-241027531, but I know Ryan's already shifted to some of my commits, so I think the trouble of Pulsar maybe having to tie their externalproject psi4 to e705b88 is less than the trouble if the development head gets lost or nonlinear. So FYI, particularly @bennybp .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-241819043:73,update,update,73,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-241819043,1,['update'],['update']
Deployability,"To confirm this explicitly:; * With the changes to method names, the energy docstring needs to be updated, as does the occ/dfocc manual page, which needed to be updated anyways. That is shifting to your responsibility in a future, but pre-1.4 PR.; * In another future PR of yours, QCDB will handle all spin-component quantities. At that time, we'll save singles contributions and spin components to `variables_`. For now, it's enough to remove the spin component globals in preparation for that and as part of the war on globals. We're losing many spin-component-related Psivars in the interim, but this is an acceptable loss. Also, will the future migration of spin-component treatment to QCDB mean `occ` no longer prints spin-component quantities? You implied that it would (""Going that far would necessitate rewriting the occ printing""). If so, then the correct solution to [the spin-redundancy problem](https://github.com/psi4/psi4/pull/1789#discussion_r373811576) is to eliminate the spin-component variables from `occ`. At that time, `occ`'s only use for spin-component scaled quantities is if spin scaling is being used in orbital optimization, which shouldn't require those variables anyways. We might as well get rid of them now, since the repeat typing will be gone before long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789#issuecomment-581142412:98,update,updated,98,https://psicode.org,https://github.com/psi4/psi4/pull/1789#issuecomment-581142412,2,['update'],['updated']
Deployability,To do the above you just need to copy [these lines.](https://github.com/fevangelista/psi4/blob/aac087f1c604787c1dd85d42bf2fcdc366ae858e/psi4/driver/procrouting/mcscf/mcscf_solver.py#L201-L210). Looking at the loops im not entirely sure that we can avoid another CI iteration/density build. . For better or worse the `SOSCF` module by and large does not handle frozen spaces. When you call `update` you can probably just set the `Cocc` and `Cvir` spaces to span the full space. The only catch is that you would need to turn off the tech that tries to save the frozen Fock and inactive Fock matrix when it is formed in other places. This would be the functions `set_AO_IFock` and `set_frozen_orbitals` and the booleans that they set. Maybe you want an option like `clean_focks` or some-such that will reset these booleans. The code will compute these quantities itself and the `Cocc` expansion to also include frozen orbitals should just work.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304539496:390,update,update,390,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304539496,1,['update'],['update']
Deployability,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:48,install,installation,48,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998,4,['install'],"['installation', 'installer', 'installing']"
Deployability,"To my surprise, consensus at the psi conf call was to release 1.3 sooner rather than later. This is part of an effort to make releases not a 2 month production but a more frequent and non-intensive and non-manic-sprint-to-get-your-feature-in-this-year occurrence. **To that end, we're planning on Feature Freeze on Monday, 10 December 2018. Considerable apologies for the short notice.**. * Naturally, bug fixes allowed after FF; * We're not averse to 1.3.1, etc.; * v1.4 anticipated May–July 2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/972#issuecomment-444682893:54,release,release,54,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-444682893,2,['release'],"['release', 'releases']"
Deployability,Totally makes sense to me and works well. Thank you for your helpful comments! I'll make a PR with a docu update.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1638#issuecomment-489100885:106,update,update,106,https://psicode.org,https://github.com/psi4/psi4/issues/1638#issuecomment-489100885,1,['update'],['update']
Deployability,"Tracked this down: `IMPORT` keyword is very specific to an export CI vector in an old format that is no longer supported, what you wanted was `DFILE` here so that it will read in the old D (or ""the"" current) CIVector. The `IMPORT` option and all associated content has been removed in an upcoming patch. The `DFILE` and `OPDM` options will now work as RSP will now write out CIVectors. Not entirely what was being read in, but it wasn't a real CIVector. Now, running this conventionally we still get an energy thats reasonable, but too high by about 5mH. This is apparently caused caused by the `EVANGELISTI` Hamiltonian diagonal approximation for some reason. We usually use this over the exact diagonal to avoid spin contamination, will try to look into this some. For now simply setting `HD_AVG HD_EXACT` will solve the above problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/175#issuecomment-217275131:297,patch,patch,297,https://psicode.org,https://github.com/psi4/psi4/issues/175#issuecomment-217275131,1,['patch'],['patch']
Deployability,"Transferred from the [forums](http://forum.psicode.org/t/sapt-dft-issues/1444). A user reports an SCF convergence failure during a SAPT(DFT) computation. While this _could_ be an example of a routine SCF convergence failure, the fact that it appears during SAPT(DFT) combined with how spectacular the convergence failure _is_ have me suspecting it's something more. When I run the user's input file on 1.3.2 release (see forum post), the failing SCF has iterations like this:; ```; @DF-RKS iter SAD: -2.88905500214392 -2.88906e+00 0.00000e+00 ; @DF-RKS iter 1: 0.79355642730661 3.68261e+00 8.89827e-02 DIIS ; @DF-RKS iter 2: -2.69913194172793 -3.49269e+00 1.70278e-02 DIIS ; @DF-RKS iter 3: 0.05174993763519 2.75088e+00 1.04154e-02 DIIS ; @DF-RKS iter 4: 4.56710002468099 4.51535e+00 8.67682e-02 DIIS ; @DF-RKS iter 5: 4.56708994805846 -1.00766e-05 8.67628e-02 DIIS ; @DF-RKS iter 6: 4.56706596773139 -2.39803e-05 8.67500e-02 DIIS; ```. The usual convergence tricks - playing with DIIS settings and damping - still leave a problem. Notice that iterations 1, 3, and 4 are terrible, going up in energy by _multiple Hartrees_ even after what should be a decent guess. The user reports that they are observing such problems for more complicated systems, but can reduce the problem to this two atom problem. You'd need to ask them to get the original systems, but this seems like a good starting point.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1684:408,release,release,408,https://psicode.org,https://github.com/psi4/psi4/issues/1684,1,['release'],['release']
Deployability,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237:271,release,release,271,https://psicode.org,https://github.com/psi4/psi4/pull/237,2,['release'],['release']
Deployability,Trouble with installation of Psi4 on Ubuntu,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188:13,install,installation,13,https://psicode.org,https://github.com/psi4/psi4/issues/3188,1,['install'],['installation']
Deployability,"True, due to a recently noticed oddity of the cmake build system, I can't build dkh w/o also building pcmsolver and that's not quite ready for public use. If you'd like dkh, I can see about including it. . Lori. Sent from my iPhone. > On Jul 26, 2015, at 2:40 AM, Hassenky notifications@github.com wrote:; > ; > I installed psi4 from miniconda.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-124981398:314,install,installed,314,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-124981398,1,['install'],['installed']
Deployability,"Trying @pavankum's code. File ""C:/Users/vike/PycharmProjects/pythonProject/test.py"", line 28, in return_td_result; energies = list(result.final_energies.values()); AttributeError: 'FailedOperation' object has no attribute 'final_energies'. printing result ... FailedOperation(error=ComputeError(error_type='resource_error', error_message='QCEngine Resource Error: Procedure torsiondrive is registered with QCEngine, but cannot be found.')). do I need to do a special install to use this properly?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486045729:467,install,install,467,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486045729,1,['install'],['install']
Deployability,"Trying `psi4 -t` gave this error:. ```; Git: Rev {master} b04cdf9 dirty; ...; Psi4 started on: Wed Feb 24 14:56:44 2016. Process ID: 2767; PSI4DATADIR: /home/eric/data/opt/apps/python/anaconda2/share/psi4; Memory level set to 256.000 MB; Traceback (most recent call last):; File ""/home/eric/data/opt/apps/python/anaconda2/share/psi4/python/interactive.py"", line 3, in <module>; import readline # optional, will allow Up/Down/History in the console; ImportError: libncursesw.so.5: cannot open shared object file: No such file or directory; ```. which was fixed by installing the latest ncurses package.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/289:563,install,installing,563,https://psicode.org,https://github.com/psi4/psi4/issues/289,1,['install'],['installing']
Deployability,"Trying out the SCF plugin with the current master branch I get the error; ```; $ psi4 h2o.in; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/openorbital/openorbital/psi4/scf/myplugin/pymodule.py"", line 60, in run_myplugin; psi4.set_scalar_variable('CURRENT ENERGY', myplugin_wfn.energy()). AttributeError: module 'psi4' has no attribute 'set_scalar_variable'. Printing out the relevant lines from the Psithon --> Python processed input file:; H 0.866811766153153 0.601435735686679 0.000000000000000; H -0.866811766153153 0.601435735686679 0.000000000000000; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""pcseg-1""); --> energy('myplugin'). !-------------------------------------------------------!; ! !; ! module 'psi4' has no attribute 'set_scalar_variable' !; ! !; !-------------------------------------------------------!. Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3093:152,install,install,152,https://psicode.org,https://github.com/psi4/psi4/issues/3093,2,['install'],['install']
Deployability,Trying to compile current trunk with. ```; ./setup --max-am-eri 7 --cc gcc --cxx g++ --fc gfortran --prefix /global/home/groups-sw/mhg/psi4/install --plugins --gdma on --pcmsolver on --chemps2 on --ambit on objdir -DPYTHON_INTERPRETER=${PYTHON_DIR}/bin/python -DENABLE_XHOST=OFF; ```. fails with an OpenMP linking error in CheMPS2. ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function `_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.29':; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5457: undefined reference to`omp_get_num_threads'; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5457: undefined reference to `omp_get_thread_num'; ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function`_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.30':; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5473: undefined reference to `omp_get_num_threads'; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5473: undefined reference to`omp_get_thread_num'; ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function `_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.31':. and a bunch of other missing OpenMP symbol errors from libchemps2.a.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/452:140,install,install,140,https://psicode.org,https://github.com/psi4/psi4/issues/452,4,['install'],['install']
Deployability,"Trying to install psi4 on MacOS. . I looked at this issue as a starting point #2024. I used the following procedure to install psi4. `conda create -n psi4env python=3.7`; `mamba install ambit=0.5.1=h7778601_3 -c psi4`; `mamba install chemps2=1.8.9 -c psi4`; `mamba install libint=1.2.1 -c psi4`; `mamba install libxc=4.3.4 -c psi4`; `mamba install simint=0.7 -c psi4`; `mamba install psi4=1.4a2.dev1084+9b60184=py37h55c4972_2 -c psi4/label/nofortran`. Then, I tried to test the installation using `psi4 --test`; It gave me this error:. ```; Traceback (most recent call last):; File ""/Users/kianpu/miniconda3/envs/psi4env_37/lib//python3.7/site-packages/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/kianpu/miniconda3/envs/psi4env_37/lib//python3.7/site-packages/psi4/core.cpython-37m-darwin.so, 0x0002): Library not loaded: @rpath/libgg.1.dylib; Referenced from: /Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/core.cpython-37m-darwin.so; Reason: tried: '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/../../../libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/../../../libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/bin/../lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/bin/../lib/libgg.1.dylib' (no such file), '/usr/local/lib/libgg.1.dylib' (no such file), '/usr/lib/libgg.1.dylib' (no such file). During handling of the above ex",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578:10,install,install,10,https://psicode.org,https://github.com/psi4/psi4/issues/2578,9,['install'],"['install', 'installation']"
Deployability,"Turns out this is also required on some Linux platforms, at least Psi4 1.2.1 on Debian unstable (g++-8.2.0) also crashes in DFHelper::identify_order, see #1457 . So this should also be cherry-picked to the 1.2 branch for a possible 1.2.2 point release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-451647177:244,release,release,244,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-451647177,1,['release'],['release']
Deployability,"Two comments:; - `dlDF` is based off M05, you might want to try TPSS or SCAN.; - I am not really sure this clears our derivative code from problems. All meta functionals use the same integration code and could still be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962#issuecomment-382383114:183,integrat,integration,183,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382383114,1,['integrat'],['integration']
Deployability,"Two of the versions of Psi4 dependencies on your machine are incompatible with each other. For us to have any idea _why_ they are incompatible, we need to know how you got these dependencies in the first place. Did you try to build Psi from source? Did you try to install Psi4 with conda?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510#issuecomment-1080979081:264,install,install,264,https://psicode.org,https://github.com/psi4/psi4/issues/2510#issuecomment-1080979081,1,['install'],['install']
Deployability,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:0,UPDATE,UPDATE,0,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750,2,"['UPDATE', 'install']","['UPDATE', 'installs']"
Deployability,"Uff, I don't think I will manage to patch up the writer to treat the symptoms from how various modules set the wavefunction data when running `gradient`. One way forward would be to disallow certain module/method combinations or print warnings, which is tricky as `QC_MODULE` is not rigorously set either.; Currently I went with some warnings since users will want DF-MP2 densities from `dfmp2`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-626378160:36,patch,patch,36,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-626378160,1,['patch'],['patch']
Deployability,Unable to install psi4 using conda/mamba,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898:10,install,install,10,https://psicode.org,https://github.com/psi4/psi4/issues/2898,1,['install'],['install']
Deployability,"Unfortunately for diagnosis, everything looks pretty much as it ought. I might need to bump min glibc from 2.7-->2.11, but you should still be ok with 2.12. I just tried out the installer on a RHEL 6.7 system (6.6 == rocks 6.2 on my chart) with glibc 2.12, and it worked fine. Not sure how to go about debugging this remotely. Psi4 folks, if any of you have a Rocks sys I can log into, please let me know. I'll be back in Atlanta Monday. In the meantime, please (1) try `conda remove v2rdm_casscf` and (2) (from your miniconda3 dir). ```; >>> which conda python psi4; >>> gdb --args python psi4 share/psi4/samples/tu1-h2o-energy/test.in; (gdb) run; ...; SegFault; (gdb) bt; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-404386592:178,install,installer,178,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-404386592,1,['install'],['installer']
Deployability,Update .codecov.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/553:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/553,1,['Update'],['Update']
Deployability,Update .travis.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1198:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1198,1,['Update'],['Update']
Deployability,Update CI and MCSCF sections of manual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/616:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/616,1,['Update'],['Update']
Deployability,"Update CMake fork of Libint2, c. 2019 -> c. 2022",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2413:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2413,1,['Update'],['Update']
Deployability,Update CPPE,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1922:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1922,1,['Update'],['Update']
Deployability,Update Ca/Cb_subset docs; Add get_opdm/get_tpdm docs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1894:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1894,1,['Update'],['Update']
Deployability,Update Ca_subset/Cb_subset docs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1882:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1882,1,['Update'],['Update']
Deployability,Update Cholesky manual references,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1842:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1842,1,['Update'],['Update']
Deployability,Update DCFT info in user manual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/143:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/143,1,['Update'],['Update']
Deployability,Update DFT docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/831:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/831,1,['Update'],['Update']
Deployability,Update GCC version for third Travis build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1517:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1517,1,['Update'],['Update']
Deployability,Update LICENSE to permit newer GPL,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/684:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/684,1,['Update'],['Update']
Deployability,Update MDI Support,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2161:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2161,1,['Update'],['Update']
Deployability,Update MDI support to version 1.2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2160:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2160,2,['Update'],['Update']
Deployability,Update MKL and fix building,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1571:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1571,1,['Update'],['Update']
Deployability,Update PCMSolver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/988:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/988,1,['Update'],['Update']
Deployability,Update PCMSolver to its v1.1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/440:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/440,1,['Update'],['Update']
Deployability,Update PCMSolver to its version 1.1.3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/434:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/434,1,['Update'],['Update']
Deployability,Update PCMSolver to v1.1.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/338:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/338,1,['Update'],['Update']
Deployability,Update README.md,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1563:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1563,1,['Update'],['Update']
Deployability,Update README.md for v1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2268:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2268,1,['Update'],['Update']
Deployability,Update Windows tests on Azure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1399:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1399,1,['Update'],['Update']
Deployability,Update WmnieSD.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/499:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/499,1,['Update'],['Update']
Deployability,Update appveyor.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1216:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1216,1,['Update'],['Update']
Deployability,Update azure-pipelines-windows.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2415:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2415,2,"['Update', 'pipeline']","['Update', 'pipelines-windows']"
Deployability,Update badges and binder,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2966:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2966,1,['Update'],['Update']
Deployability,Update base compiler version detection with Intel compiler and clang.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/579:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/579,1,['Update'],['Update']
Deployability,Update basissets.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1739:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1739,1,['Update'],['Update']
Deployability,"Update cc-pVXZ and add cc-pwCVXZ for Li, Be, Na, Mg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/728:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/728,1,['Update'],['Update']
Deployability,Update contributors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/320:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/320,1,['Update'],['Update']
Deployability,Update def2-qzvpp.gbs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1743:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1743,1,['Update'],['Update']
Deployability,Update dependencies for Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1124,1,['Update'],['Update']
Deployability,Update deriv.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2426:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2426,1,['Update'],['Update']
Deployability,Update detci.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1689:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1689,2,['Update'],['Update']
Deployability,Update dfmp2.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1513:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1513,1,['Update'],['Update']
Deployability,Update dftd3.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1085:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1085,1,['Update'],['Update']
Deployability,Update dftensor.h,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2420:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2420,1,['Update'],['Update']
Deployability,Update diis.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2574:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2574,1,['Update'],['Update']
Deployability,Update diismanager.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2441:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2441,1,['Update'],['Update']
Deployability,"Update docstrings in driver.py, fix psi4/#249",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/360:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/360,1,['Update'],['Update']
Deployability,Update documentation in response to issue #2075. ## Description; Add a paragraph of DETCI documentation about spin multiplicities of higher roots in response to issue. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Documentation is updated. Lori should check my formatting and keyword references. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2098:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2098,2,"['Update', 'update']","['Update', 'updated']"
Deployability,Update driver.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2358:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2358,2,['Update'],['Update']
Deployability,Update export_mints.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2876:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2876,1,['Update'],['Update']
Deployability,Update export_oeprop.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3195:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3195,1,['Update'],['Update']
Deployability,Update extras.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3180:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3180,1,['Update'],['Update']
Deployability,"Update from @psi-rking:; > When the dynamic level gets changed, the binary (file 1) file is; > supposed to be deleted. I guess that it is not. The function that; > removes it does check:; > `if (! psi::_default_psio_manager_->get_specific_retention(1))`; > In your .psi4rc, are you perhaps setting retention of file 1? This; > could be happening in the psi4 driver somewhere too.; > If this is the problem, and you need to set the specific retention for; > some reason, then we will have to add another check to indicate; > deletion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789#issuecomment-327607047:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/789#issuecomment-327607047,1,['Update'],['Update']
Deployability,Update gdma to v2.3; convert to runtime,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2968:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2968,1,['Update'],['Update']
Deployability,Update git repository for libxc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1519:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1519,1,['Update'],['Update']
Deployability,Update input.dat,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3212:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3212,1,['Update'],['Update']
Deployability,Update liboptions.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3176:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3176,1,['Update'],['Update']
Deployability,Update libxc to version 7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3231:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3231,1,['Update'],['Update']
Deployability,Update location of the FCHKWriter to core,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1050:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1050,1,['Update'],['Update']
Deployability,Update memory docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/891:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/891,1,['Update'],['Update']
Deployability,Update mpl.py for py3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1690:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1690,1,['Update'],['Update']
Deployability,Update numpy_helper.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/750:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/750,1,['Update'],['Update']
Deployability,Update oeprop.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1217:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1217,1,['Update'],['Update']
Deployability,Update oeprop.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2995:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2995,1,['Update'],['Update']
Deployability,Update pcmsolver.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/819:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/819,1,['Update'],['Update']
Deployability,Update proc.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2620:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2620,1,['Update'],['Update']
Deployability,Update prog_style_c.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1263:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1263,1,['Update'],['Update']
Deployability,Update psithonmol.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2852:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2852,1,['Update'],['Update']
Deployability,Update psivardefs.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3017:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3017,1,['Update'],['Update']
Deployability,Update pyversions in conda install docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1416:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1416,2,"['Update', 'install']","['Update', 'install']"
Deployability,Update qcengine keywords,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2755:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2755,1,['Update'],['Update']
Deployability,Update read_options.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3230:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3230,1,['Update'],['Update']
Deployability,"Update samples, force py27+",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/766:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/766,1,['Update'],['Update']
Deployability,Update scf-dipder test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1549:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1549,1,['Update'],['Update']
Deployability,Update scf-guess reference output for MODHUCKEL,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3011:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3011,1,['Update'],['Update']
Deployability,Update scf_iterator.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2327:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2327,1,['Update'],['Update']
Deployability,Update schema_wrapper.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1730:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1730,1,['Update'],['Update']
Deployability,Update syntax for PsiPEP002,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1402:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1402,1,['Update'],['Update']
Deployability,"Update that I've got the interface modernized to named tweaks, and I'm working on the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-763229656:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-763229656,1,['Update'],['Update']
Deployability,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987,2,"['Update', 'install']","['Update', 'installers']"
Deployability,"Update the SAPT output to conform with the recommendations of our systematic study in ``Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M. Parrish, A. G. Ryno, and C. D. Sherrill, J. Chem. Phys. 140, 094106 (2014) [doi: 10.1063/1.4867135 ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/37:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/37,1,['Update'],['Update']
Deployability,Update timer.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1294:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1294,1,['Update'],['Update']
Deployability,"Update to ""Interface to Numpy""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2089:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2089,1,['Update'],['Update']
Deployability,Update to adcc 0.15.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1914:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1914,1,['Update'],['Update']
Deployability,Update to include an auxiliary basis for def2-mSVP,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1558:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1558,1,['Update'],['Update']
Deployability,Update to libxc 5.1.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2057:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2057,1,['Update'],['Update']
Deployability,Update to libxc-6.2.2 is pending maintainer's approval in FreeBSD. As for formatting - should formatting tests really be part of the test suite?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3099#issuecomment-1848505594:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/3099#issuecomment-1848505594,1,['Update'],['Update']
Deployability,Update writer.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2616:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2616,1,['Update'],['Update']
Deployability,"Update your PR description. Behavior changes are not ""minor cleanup"", even if that behavior is as simple as raising an error where there wasn't one before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998,1,['Update'],['Update']
Deployability,"Update, MVS error is coming from occupation guess. Ref on the left. ```; -------------------------------------------------------				 -------------------------------------------------------. ==> Integral Setup <==								 ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==						 ==> DFJK: Density-Fitted J/K Matrices <==. J tasked: Yes							 J tasked: Yes; K tasked: No							 K tasked: No; wK tasked: No							 wK tasked: No; OpenMP threads: 1							 OpenMP threads: 1; Integrals threads: 1							 Integrals threads: 1; Memory (MB): 375							 Memory (MB): 375; Algorithm: Core							 Algorithm: Core; Integral Cache: NONE							 Integral Cache: NONE; Schwarz Cutoff: 1E-12							 Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12							 Fitting Condition: 1E-12. => Auxiliary Basis Set <=								 => Auxiliary Basis Set <=. Basis Set: (6-31G AUX)								 Basis Set: (6-31G AUX); Blend: CC-PVDZ-JKFIT								 Blend: CC-PVDZ-JKFIT; Number of shells: 42								 Number of shells: 42; Number of basis function: 131							 Number of basis function: 131; Number of Cartesian functions: 131							 Number of Cartesian functions: 131; Spherical Harmonics?: false								 Spherical Harmonics?: false; Max angular momentum: 3								 Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.				 Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.; Using Symmetric Orthogonalization.							 Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.		 SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ==> Iterations <==									 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|			 Total Energy Delta E RMS |[F,P]|. @DF-UKS iter 0: -71.60680989524471 -7.16068e+01 1.41427e-01 		 |	 @DF-UKS iter 0: -71.93847658446015 -7.19385e+01 1.43012e-01 ; @DF-UKS iter 1: -75.52774517284402 -3.92094e+00 8.33781e-02 		 |	 Occupation by irrep:; @DF-UKS iter 2: -75.47183403287708 5.59111e-02 8.91",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383210085:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383210085,1,['Update'],['Update']
Deployability,"Update: I have also tried; - downgrading to the latest stable psi4 release, following the instructions [here](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary) (just `conda update psi4 -c psi4`), which pulled `1.1+add49b9-py35_0 psi4`, and the issue persists.; - switching to conda Python 2.7 (mkl: 2017.0.1-0, numpy: 1.13.0-py27_0, psi4: 1.1+add49b9-py27_0 psi4). Same issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311448519:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311448519,4,"['Update', 'release', 'update']","['Update', 'release', 'update', 'update-a-']"
Deployability,"Update: Installing a version of numpy that doesn't link against MKL ""fixes"" the problem in the short term, but there's still something deeply fishy going on. (`1.13.0 py27_nomkl_0 [nomkl]`)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311487436:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311487436,2,"['Install', 'Update']","['Installing', 'Update']"
Deployability,Update: The calculation crashed in the same way when using Psi4 1.4 (Git: Rev {master} 9485035). . Thanks for the suggestions! Is it possible to request RI-J plus exact exchange in Psi4? I was not able to find it in the manual.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2288#issuecomment-912333542:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2288#issuecomment-912333542,1,['Update'],['Update']
Deployability,"Update: This performance issue was fixed by #2413, which upgraded libint2 from 2.6.0 to 2.7.1. For completeness, here are the timings on the above test case:. | Cores | Psi4 OS<br/>Wall Time (s) | Psi4 OS<br/>Parallel Speedup | Libint 2.6.0<br/>Wall Time (s) | Libint 2.6.0<br/>Parallel Speedup | Libint 2.7.1<br/>Wall Time (s) | Libint 2.7.1<br/>Parallel Speedup |; | :--- | :--- | :--- | :--- | :--- | :--- | :--- |; | 1 | 191.7 | --- | 105.3 | --- | 99.4 | --- |; | 2 | 96.1 | x2.00 | 72.6 | x1.45 | 49.9 | x1.99 |; | 4 | 48.4 | x3.96 | 71.5 | x1.47 | 25.2 | x3.94 |; | 8 | 24.3 | x7.88 | 74.5 | x1.41 | 13.0 | x7.66 |; | 18 | 11.5 | x16.62 | 72.8 | x1.45 | 6.4 | x15.45 |",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2491#issuecomment-1077047578:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2491#issuecomment-1077047578,2,"['Update', 'upgrade']","['Update', 'upgraded']"
Deployability,Update: `-fvisibility=hidden` is indeed active in 2.2.1 and quite breaking plugins. Shelving this PR and recommending that symbols/c-layer-/py-layer-plugin-interfacing be a topic at WWDC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/814#issuecomment-333604954:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/814#issuecomment-333604954,1,['Update'],['Update']
Deployability,"Update: fixed some of the py Molecule class issues (no more infinite recursion, yay!). Also gave the sow/reap pickles a serious stab, but was bested by unicode. So this issue will persist.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/833#issuecomment-356769175:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/issues/833#issuecomment-356769175,1,['Update'],['Update']
Deployability,"Update: testing is currently made very difficult by an issue with exception messages not propagating out of the threaded neighborhood of https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/aio_handler.cc ; But it was a good idea to actually try it, because I have found another corner case _even beyond this issue_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304827495:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304827495,1,['Update'],['Update']
Deployability,"Update: this is rebased and fit to review. @behnle, thanks for the comments on eqn numbers. I've added doi to the lines locally, but now they're all entangled with separate WIP.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2670#issuecomment-1220869733:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2670#issuecomment-1220869733,1,['Update'],['Update']
Deployability,"Update:; * There'll be another commit to this to fix some docs. Today, there's 1.2 libint in the conda channels, so we'll be able to look at travis/distelli built on that rather than the internal builds that the above reflects.; * Thanks for the config params, @susilehtola. The CMake ties libderiv AM to libint AM, so you may not have hit some of the problems. What I'm seeing now is that psi4/libint allows an AM=8 build (libderiv AM = libint AM - 1), but evaleev/libint/v1 segfaults in the libderiv generator execution. So I'm investigating the differences.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/695#issuecomment-300573061:0,Update,Update,0,https://psicode.org,https://github.com/psi4/psi4/pull/695#issuecomment-300573061,1,['Update'],['Update']
Deployability,Updated ChemPS2 to v1.7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/388,1,['Update'],['Updated']
Deployability,"Updated according to suggestions. ; ```; => Pre-Iterations <==. Minimum eigenvalue in the overlap matrix is 3.9724095377E-02.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation info). -------------------------; Irrep Nso Nmo; -------------------------; A' 18 18; A"" 6 6; -------------------------; Total 24 24; -------------------------. ==> 2e-Integral Setup <==. DFHelper Memory: AOs need 0.001 GiB; user supplied 0.321 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713#issuecomment-533802390:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/1713#issuecomment-533802390,1,['Update'],['Updated']
Deployability,Updated citation and description for PBE0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/745:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/745,1,['Update'],['Updated']
Deployability,Updated list of other contributors,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-199429851:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-199429851,1,['Update'],['Updated']
Deployability,"Updated log after applying the fix in #2245. Fixes the observed print discrepancy, but the bug persists. I suspect the culprit is line 619: on Susi's file, the C residual is ever so slightly not-zero. Not so in mine.; [output_post_2245.log](https://github.com/psi4/psi4/files/6811503/output_post_2245.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2243#issuecomment-879351036:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/issues/2243#issuecomment-879351036,1,['Update'],['Updated']
Deployability,Updated manual and keyword section in private repo.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/143#issuecomment-121821246:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/issues/143#issuecomment-121821246,1,['Update'],['Updated']
Deployability,"Updated the docs, please proceed with review @loriab @zachglick @davpoolechem",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2543#issuecomment-1096292699:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2543#issuecomment-1096292699,1,['Update'],['Updated']
Deployability,"Updated this a bit after talking with @bennybp. I think he's going to do the following, then it'll be about ready:; * tarball with higher (h) AM; * also, could you throw an error in libmints if try to access out of bounds AM through simint? or switch to libint?; * absorb the config6 branch into upstream.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281710846:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281710846,1,['Update'],['Updated']
Deployability,"Updated!. Tbh, for large elements the use starts to get real clunky, but I don't understand the codebase well enough to instead provide a dict vs an array. Someone savvier than me should probably eventually update that (so that a user doesn't need to set 0's for a bunch of elements they Just Don't Care About), but I didn't see a mapping type available in the relevant context (just an int vector) so I went with what was there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924,2,"['Update', 'update']","['Updated', 'update']"
Deployability,"Updated. Had some rebase issues to solve. A vimdiff of the old and new output below. ---; vimdiff of the output between 1.4a2.dev215 (left) and this PR (right); <img width=""1606"" alt=""Screenshot 2020-03-03 at 23 18 02"" src=""https://user-images.githubusercontent.com/1648640/75825522-d69fb800-5da5-11ea-8c2d-8db2b8a723d5.png"">",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713#issuecomment-594204058:0,Update,Updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/1713#issuecomment-594204058,1,['Update'],['Updated']
Deployability,Updates Ambit version and Psi4's configuration of it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/275:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/275,2,"['Update', 'configurat']","['Updates', 'configuration']"
Deployability,Updates CodeCov YAML.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/636:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/636,1,['Update'],['Updates']
Deployability,Updates MRCC interface to allow perturbative methods with ROHF reference.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/634:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/634,1,['Update'],['Updates']
Deployability,Updates README.md with corrected Travis CI URL.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/250:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/250,1,['Update'],['Updates']
Deployability,Updates license copyright end year 2017 -> 2018,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/984:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/984,1,['Update'],['Updates']
Deployability,Updates vmd_cube.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/601:0,Update,Updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/601,1,['Update'],['Updates']
Deployability,"Upgrade your version of Psi4. If you want TD-DFT, I suggest you use the [nightly build here](https://psicode.org/installs/v132/). TD-DFT calculations are being added in version 1.4. You can see a guide on how to perform TD-DFT [here](https://www.youtube.com/watch?v=MmG-g3SEFbk).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773:0,Upgrade,Upgrade,0,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773,2,"['Upgrade', 'install']","['Upgrade', 'installs']"
Deployability,"Used the builtin 'Update branch' button just now, thinking it'd rebase automagically, but that doesn't appear to be the case. Anyways, I just added a first pass at what we were discussing above. The reference values came from this Molpro input:. ```; ***,h2o properties; noorient; geometry = {; ang; O ,, 0.250254404867, 0.126248114412, 0.000000000000; H ,, 0.428893090449, 1.055731838795, 0.000000000000; H ,, 1.104987458381, -0.280303532167, 0.000000000000; }. basis=cc-pvdz; df-hf;; property; density,2100.2; pot,, -3.779451977, -3.779451977, 1.889725989; pot,, -3.779451977, 0.000000000, 1.889725989; pot,, -3.779451977, 3.779451977, 1.889725989; pot,, 0.000000000, -3.779451977, 1.889725989; pot,, 0.000000000, 0.000000000, 1.889725989; pot,, 0.000000000, 3.779451977, 1.889725989; pot,, 3.779451977, -3.779451977, 1.889725989; pot,, 3.779451977, 0.000000000, 1.889725989; pot,, 3.779451977, 3.779451977, 1.889725989; ef,, -3.779451977, -3.779451977, 1.889725989; ef,, -3.779451977, 0.000000000, 1.889725989; ef,, -3.779451977, 3.779451977, 1.889725989; ef,, 0.000000000, -3.779451977, 1.889725989; ef,, 0.000000000, 0.000000000, 1.889725989; ef,, 0.000000000, 3.779451977, 1.889725989; ef,, 3.779451977, -3.779451977, 1.889725989; ef,, 3.779451977, 0.000000000, 1.889725989; ef,, 3.779451977, 3.779451977, 1.889725989; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/447#issuecomment-234683850:18,Update,Update,18,https://psicode.org,https://github.com/psi4/psi4/pull/447#issuecomment-234683850,1,['Update'],['Update']
Deployability,"Using `psrecord` with `psrecord ${PID} --interval 1 --plot plot1.png`. Can install via pip. There are better ones out there, but that one is simple. It might be good to use the `--log` feature as well so we can see some actual numbers as those charts are getting a bit jumbled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-481747147:75,install,install,75,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-481747147,1,['install'],['install']
Deployability,"Very sorry, I hit submit before I finished typing the issue. I will update this issue with details about the problem. Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916#issuecomment-1495233931:68,update,update,68,https://psicode.org,https://github.com/psi4/psi4/issues/2916#issuecomment-1495233931,1,['update'],['update']
Deployability,WIP: Simint integration in Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/533:12,integrat,integration,12,https://psicode.org,https://github.com/psi4/psi4/pull/533,1,['integrat'],['integration']
Deployability,"Warning that orbital energies then become ambiguous as well. Do you want the ""orbital energies"" at the correlated level of theory or the reference?. If there's no standard either way, then it may be best to let the user toggle which one they want in this corner case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-670534363:220,toggle,toggle,220,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-670534363,1,['toggle'],['toggle']
Deployability,"Was able to build locally, pipeline (up to `ctest`) ran successfully. There were issues on `pytest`, but it seems like these issues have to do with missing packages, so I'm not sure how to address them. See https://dev.azure.com/psi4/psi4/_build/results?buildId=5535&view=logs&j=f237aa60-f90a-5f4e-46d5-6f838a77d991&t=4577f1f3-bc89-5040-5cf1-0f1c10ea6889&l=4843 for more details. Any advice would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2980#issuecomment-1583040315:27,pipeline,pipeline,27,https://psicode.org,https://github.com/psi4/psi4/pull/2980#issuecomment-1583040315,1,['pipeline'],['pipeline']
Deployability,Wavefunction pass issues for 1.0 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/259:33,release,release,33,https://psicode.org,https://github.com/psi4/psi4/issues/259,1,['release'],['release']
Deployability,Wavefunction passing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246:21,update,update,21,https://psicode.org,https://github.com/psi4/psi4/pull/246,1,['update'],['update']
Deployability,We are currently doing an upgrade to how information is passed around in Psi4. This may make it easier in the future if we decide to add restart capabilities to SAPT.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/226#issuecomment-175175264:26,upgrade,upgrade,26,https://psicode.org,https://github.com/psi4/psi4/issues/226#issuecomment-175175264,1,['upgrade'],['upgrade']
Deployability,"We are one step closer: *Psi4* compiles and runs on Appveyor (https://ci.appveyor.com/project/loriab/psi4/build/1.0.15). Remaining tasks/issues:; - Fix threading; - MSVC supports only OpenMP 2.0, but *Psi4* needs higher at some parts. So some conditional compilation needed.; - `cctriples` and `libdpd` use `pthread` directly, but its port to Windows (`pthread-win32`) is a bit questionable quality. So need to change to use OpenMP.; - Debug 30+ failing tests; - Build `conda` packages; - Start initial deployment on *GPUGrid* (@tonigi, @stefdoerr)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-417611281:503,deploy,deployment,503,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-417611281,1,['deploy'],['deployment']
Deployability,"We can argue about whether the `dfmp2-ecp` test was or wasn't broken before PR #1350 was made, but the following point remains:. - the original part of the test is not touched by this PR, and by looking at `git blame` for the `input.dat` file, hasn't been touched in quite some time.; - as part of this PR, i have added a completely new section of tests, that are Kr--Kr interaction energies with DF-MP2/3-21G (no ECP's).; - a previous version of this PR, from around 2019-01-04, passed both the new and the old test.; - a later version of this PR, from until and excluding 2019-01-09, did not pass the new part of the test, but still passed the old test; - the current version of this PR has modified the new part of the test, after rebasing from master; it passes both the old test and the new test to 7 DP (I need to tighten convergence on the energy to pass it to 8 DP). A good diff to look at the issue is here:; https://github.com/psi4/psi4/pull/1350/commits/9e6329abb493ed79dbb6913ac4c1df957e9839ae#diff-32d6050d16bb770a64f7f94a67f26101; which compares the `output.ref` of the test for the version that passed on 2019-01-04 when the test was originally written, and passes the test now (locally) on 2019-01-09 with updated values. The puzzling thing is: what caused the change of the Kr--Kr interaction energies (and Kr MP2/3-21G energies converged to 1e-9)? What change would cause that, but not affect the first part of the test?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-452682935:1222,update,updated,1222,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-452682935,1,['update'],['updated']
Deployability,"We could, perhaps, give it as a _candidate_ for deprecation and deprecate it two releases from now, if nobody objects?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1353502599:81,release,releases,81,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1353502599,1,['release'],['releases']
Deployability,We don't mean `0.4.0` as the new stable release. That will be `1.0.0`. The `0.4` tag (only on private at the moment) indicates some considerable data-passing changes. The sole public face of `0.4` at the moment is at https://anaconda.org/psi4/psi4/files .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182759327:40,release,release,40,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182759327,1,['release'],['release']
Deployability,"We have [discussed](http://forum.psicode.org/t/c-11-is-it-time/43/3) C++11 support in the past without really finding a resolution. A couple quick points about C++11 support:. Pros (from best to least):; - We already use some C++11 (nullptr, range for, inline class init, etc) ; - Clang/GCC/ICC have fully supported C++11 for a few years; - Initializer lists make quite a few things easier and are heavily featured in Ambit/Tiled Array; - With effort we can remove some of boost (`boost::shared_ptr` -> `std::shared_ptr`); - Some new std containers like `std::tuple` and `std::array`; - Defaulted constructors and destructors; - _Some_ people use veridic templates; - Remove some custom macros to be a bit more standard (`ULI` -> `uint32_t`). Cons:; - Not everyone has upgraded their ICC recently; - We might find `auto` everywhere. ---. The biggest issue I can see is the older ICC versions will no longer compile Psi4. To mitigate this, there are several options:; - Use Clang/GCC; - Use a pre-compiled Psi4 (we offer ICC/MKL versions); - If you are a Psi4 contributor you can obtain the Intel Studio suite (linux) for [free](https://software.intel.com/en-us/qualify-for-free-software/opensourcecontributor).; - If you are a student you can obtain the Intel Composer suite for [free](https://software.intel.com/en-us/qualify-for-free-software/student). ---. Feel free to add to the pro/con list as you see fit.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/238:769,upgrade,upgraded,769,https://psicode.org,https://github.com/psi4/psi4/issues/238,1,['upgrade'],['upgraded']
Deployability,We have a bit of a chicken and egg problem here with regard to getting this. This is likely waiting on EFP/PCM Python side stuff which is waiting on getting this in as some of the issues overlap. We can either merge the EFP/PCM/Python SCF iterations into this single PR or merge in the SCF iterations in *now* and patch up EFP/PCM later. Waiting on this however is likely a bad idea however as SCF is so fundamental to Psi and frequently is changed. While we have stated that psi4/psi4:master is only required to pass quick tests and only full releases require the full test suite to pass we have often stayed in the realm of having the full test suite pass all of the time. This has led users to pick up the current HEAD and using that as their main to get up to date features. This goes a bit into a larger discussion that we likely should mint more frequent minor updates so that we can feel free to break psi4/psi4:master as needed. That being said as long as we properly fence PCM/EFP being broken with large flashing warning lights a temporary break should be fine as long as its resolved in a timely manner. @robertodr @loriab @psi4/admins,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/847#issuecomment-347012315:314,patch,patch,314,https://psicode.org,https://github.com/psi4/psi4/pull/847#issuecomment-347012315,3,"['patch', 'release', 'update']","['patch', 'releases', 'updates']"
Deployability,"We may add RHF DF-CCSD(T) analytic gradients to the list of New Methods. Further, we may also include that FNOCC energies for the DFOCC module if pull request #824 is merged before the new release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-381039200:189,release,release,189,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381039200,1,['release'],['release']
Deployability,"We need a hardcoded list for documentation purposes. In addition, we use those mechanics under the hood. I suppose we could allow a pass through to check if a give functional/primitives exists from a libxc call, but this is not too much a priority since its pretty easy to copy over the header when libxc is updated. Feel free to make a PR if you want this feature.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/793#issuecomment-325682360:308,update,updated,308,https://psicode.org,https://github.com/psi4/psi4/issues/793#issuecomment-325682360,1,['update'],['updated']
Deployability,"We recently had a user confused by the [threading documentation](https://psicode.org/psi4manual/master/external.html#threading), so that needs an overhaul as well:. - In (3), change the sample code to only set the number of threads once. That's a more common use case, and those who _need_ to change the number of threads are more likely to read the supporting details.; - Either remove (1) or relegate it to a sidebar.; - The introduction to the threading section is overly technical. The first paragraph can be simplified to ""Psi4 threading uses both OpenMP and MKL, so it is important that your installation is linked against both if you want to use threading. If you have a conda install, this is already taken care of.""; - Replace ""certain circumstances"" in (4) with a more specific statement.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2407:598,install,installation,598,https://psicode.org,https://github.com/psi4/psi4/issues/2407,2,['install'],"['install', 'installation']"
Deployability,"We recently overhauled large tracks of Psi4, this test should fail at the moment as we have not yet updated it to align with the new changes. Glad everything compiles now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312#issuecomment-196388183:100,update,updated,100,https://psicode.org,https://github.com/psi4/psi4/issues/312#issuecomment-196388183,1,['update'],['updated']
Deployability,"We should not have to explicitly state the usage of the Accelerate; framework. The test for the system BLAS is sufficient as libblas.\* and; liblapack.\* both reference Accelerate. This has been the case for the last; several versions of Mac OS X. Is this not the case of other people's Macs?. ls -l /usr/lib/libblas\* /usr/lib/liblapack*; /usr/lib/libblas.dylib ->; ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib; /usr/lib/liblapack.dylib ->; ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib. -Jet. Justin Turney, Ph.D.; Senior Research Scientist; CCQC/UGA. On Thu, Jul 16, 2015 at 6:18 PM, Lori A. Burns notifications@github.com; wrote:. > Actually, you still do have to pass --accelerate to setup, as it's not on; > by default. @robertodr https://github.com/robertodr , is there a reason; > accelerate shouldn't be on by default for release builds?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/36#issuecomment-122120131.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/36#issuecomment-122123072:976,release,release,976,https://psicode.org,https://github.com/psi4/psi4/issues/36#issuecomment-122123072,1,['release'],['release']
Deployability,We strongly recommend that you follow the [official download instructions](https://psicode.org/installs/v15/).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539:95,install,installs,95,https://psicode.org,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539,1,['install'],['installs']
Deployability,"We updated to a new nuclear signature so the two are getting out of sync. Not completely sure this is fixable as you are pulling addons and Psi4 from different locations. . -Daniel Smith; Sent from my iPhone. . > On Nov 29, 2017, at 11:17, shannonhouck <notifications@github.com> wrote:; > ; > When trying to compile Psi4 with Miniconda3 using the keywords generated by psi4-path-advisor in the development environment, the following error is produced:; > ; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc: In function ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; > double Econstant = wfn->molecule()->nuclear_repulsion_energy();; > ^; > In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; > double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; > ^; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; > make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; > make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; > make[3]: *** [all] Error 2; > make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; > make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; > make: *** [all] Error 2; > The output generated by psi4-path-advisor --gcc is; > ; > /home/shouck/miniconda3/envs/p4dev/bin/cmake \; > -H. \; > -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; > -Bobjdir; > @ashutoshvt and ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347970165:3,update,updated,3,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347970165,1,['update'],['updated']
Deployability,"We'll be wrapping up libxc 5.1.0 in December, which means it could be pulled in Psi4 1.4. The update is strongly recommended, since it solves a huge list of issues in 5.0.0, see https://gitlab.com/libxc/libxc/-/issues/186, as well as introduces new functionals that users may be interested in, especially r2SCAN by Furness et al. The update should be very easy, since 5.1.0 will be API compatible with 5.0.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2057:94,update,update,94,https://psicode.org,https://github.com/psi4/psi4/issues/2057,2,['update'],['update']
Deployability,"We're being a little more explicit about information-passing, and that influences oeprop. Change your ending lines to the below and all should be well. I'd say look at the installed samples, but I just remembered those didn't get updated until `0.4.3` or so, and our conda build machine is kaput so I can't update them for you. Sorry about that. I'll look into that SAPT install problem. ```; Eqm, wfn = energy('PBE0', return_wfn=True); print('Energy: '+`Eqm`); oeprop(wfn, 'MULLIKEN_CHARGES'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182667180:172,install,installed,172,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182667180,4,"['install', 'update']","['install', 'installed', 'update', 'updated']"
Deployability,WebMO can do nice coordinate scans but PSI4 can't parse the corresponding output. Matt said he could look at this and that JR might have put in an update to WebMO to make it easier for us to handle.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/42:147,update,update,147,https://psicode.org,https://github.com/psi4/psi4/issues/42,1,['update'],['update']
Deployability,"Well since the argument came up again: I'm all for removal, because with `adcc`, we can guarantee a) correct results (several test cases!) b) all sorts of properties and c) up-to-date documentation. The step to go from requesting a psi-internal ADC calc to having the same job running with `adcc` is a simple `conda install`. IMHO there should not be a ""deprecation phase"" for a feature which is obviously broken and a full replacement is already there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2419#issuecomment-1029233827:316,install,install,316,https://psicode.org,https://github.com/psi4/psi4/pull/2419#issuecomment-1029233827,1,['install'],['install']
Deployability,"Well, I updated to the newest git which includes the patch that switches from -std=gnu++11 to -std=c++11 but the build still fails with the same error about `std::bind`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631#issuecomment-283681875:8,update,updated,8,https://psicode.org,https://github.com/psi4/psi4/issues/631#issuecomment-283681875,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"Well, I was really hoping to keep the build matrix fairly simple to prevent build # explosions. What if we do the following:; - clang 3.5, 3.7 (release); - gcc 4.8, 5.2 (release); - gcc 5.2 (debug). I don think building intermediate compiler releases is as important and we manage to stay at the 5 concurrent build number.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182887045:144,release,release,144,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182887045,3,['release'],"['release', 'releases']"
Deployability,"Well, an easy way is to download the patch; https://github.com/psi4/psi4/pull/1475.patch; and apply it on top of master. The alternative would be to git pull from my branch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273:37,patch,patch,37,https://psicode.org,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273,2,['patch'],['patch']
Deployability,"Well, as we already have 4.0b5 installed on our systems, we stuck to this version scheme (we suffixed with a date for git builds). So, suddenly going to 1.0 will not work with our version ordering schemes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-182959247:31,install,installed,31,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-182959247,1,['install'],['installed']
Deployability,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-379332937:562,toggle,toggle,562,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937,1,['toggle'],['toggle']
Deployability,"Well, that sounds really like an overkill, since you end up doing more work than necessary to get the target integrals. Using my patch computing up to (am1,am2) is enough. A similar fix would then also be necessary for the second derivatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3#issuecomment-17313687:129,patch,patch,129,https://psicode.org,https://github.com/psi4/psi4/issues/3#issuecomment-17313687,1,['patch'],['patch']
Deployability,"Well, the branches of the hidden repo are so developers can store code that's vulnerable to scientific scooping. And the master of the hidden repo is so we can integrate without being overly concerned about breaking things for people outside email's reach. . That said, you're right that we don't have the synching procedure automated so that public is often a couple weeks behind. After the May round of conferences, we're going to set up a continuous integration box so that we can do a nightly or weekly push to public if safe. . Sent from my iPhone. > On May 3, 2015, at 10:34 AM, wpoely86 notifications@github.com wrote:; > ; > @loriab why do you actually work with a hidden repo? It's quite annoying that all kinds of stuff is fixed/changed but not visible to us.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98490617:160,integrat,integrate,160,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98490617,3,"['continuous', 'integrat']","['continuous', 'integrate', 'integration']"
Deployability,"Well, this is a boost issue. I don't think anyone is actually going to hunt down why this particular pre-compiled boost is killing DGEMM. Probably something very strange. Anyhow, we can change our build strategy for now and link to an updated boost in the future. Let this be a warning when using pre-compiled boost.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-202602008:235,update,updated,235,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-202602008,1,['update'],['updated']
Deployability,"Wfn irrep logic for socc not correct... (Around line 91). Need to take; direct product of each socc orbital irrep. Can do this by XOR of each; irrep in the socc list. On Wed, Jan 2, 2019, 6:18 PM zachglick <notifications@github.com wrote:. > Description; >; > Addresses #1431 <https://github.com/psi4/psi4/issues/1431>; > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - Changes ORBSYM (the symmetry of each orbital) from Psi4's internal; > convention of ordering irreps to the traditional FCIDUMP ordering; > - Adds ISYM (the symmetry of the overall wavefunction); > - Updates the fcidump test to match new ordering; >; > Questions; >; > - Does this change in convention break anything in Psi4? (Or anything; > that uses Psi4?); > - Since I altered the tests to match the output, how to verify; > correctness of this change?; >; > Checklist; >; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1453; > Commit Summary; >; > - added helper function, correct ORBSYM output; > - added isym to fcidump, updated tests; >; > File Changes; >; > - *M* psi4/driver/p4util/fcidump.py; > <https://github.com/psi4/psi4/pull/1453/files#diff-0> (29); > - *M* tests/fcidump/Ne.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-1> (3); > - *M* tests/fcidump/Ne.C1.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-2> (1); > - *M* tests/fcidump/Ne.C1.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-3> (1); > - *M* tests/fcidump/Ne.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-4> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1453.patch; > - htt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754:625,Update,Updates,625,https://psicode.org,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754,1,['Update'],['Updates']
Deployability,What exactly did you install?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-961475439:21,install,install,21,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-961475439,1,['install'],['install']
Deployability,"What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's `compute_gradient` method?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-867773626:43,toggle,toggles,43,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-867773626,1,['toggle'],['toggles']
Deployability,What happens if you use a tighter integration grid?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725:34,integrat,integration,34,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725,1,['integrat'],['integration']
Deployability,What is left for this PR and what level of integration are you shooting for in this first pass?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-552262003:43,integrat,integration,43,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-552262003,1,['integrat'],['integration']
Deployability,"What is the difference between building from source or using the conda installer, but choosing the nightly build ? Because the conda installation seems to work on my laptop compare to the source one. As I just need the developer version, i.e. the last one on the master branch of Github, I wonder if the conda installation is sufficient or not ?. ```; conda install psi4 psi4-rt python=3.7 -c psi4/label/dev; conda activate p4dev; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615225584:71,install,installer,71,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615225584,4,['install'],"['install', 'installation', 'installer']"
Deployability,"What is the option even meant to do? Only do DIIS if you have `N` vectors? This sounds like an idiotic strategy IMNSHO, since doing a bare Roothaan update will be way worse... I guess the only reasonable option is to mark it as deprecated for the next release and remove it in the subsequent one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010171000:148,update,update,148,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010171000,2,"['release', 'update']","['release', 'update']"
Deployability,"What single function in psi4 would you wish compiler optimization not to break? At first testing, it seems that the latest (release 2, Feb 2016) Intel compilers break `C_DGEMM`. The code compiles fine, but not much runs. Below are three dgemm calls that break. Not all dgemm calls break. Possibly 'N'/'T' are fine but 'N'/'N' break. If anyone wants to investigate, you can start with my ""dftfix"" branch (https://github.com/loriab/psi4/tree/dftfix). By commenting out Mulliken analysis and File 180 printing, I've gotten the jk & out_of_core algorithms in test case scf5 working on that branch. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-e30bd7727a15aa5a70e322a84a385291R2903. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-ada70c1f1cf0a80abbdbacbfb7716abbR690. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-be25444186a5073fb47c3ac4667533baR473",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321:124,release,release,124,https://psicode.org,https://github.com/psi4/psi4/issues/321,1,['release'],['release']
Deployability,"What version are you using? I'm running on commit dd6b45b (updated May 7), and I can't reproduce this. Two geometry iterations finish successfully before SCF convergence fails. The SCF convergence failure appears to the fault of my old ""friend"", orbital guesses not correcting for changes in the overlap matrix when reading in orbitals for the initial guess... The initial guess from orbital read is terrible, and I see a large change in geometry for the update where the failure happened. The previous geometry, which also reads orbitals but from a much more similar geometry, seems to work fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957:59,update,updated,59,https://psicode.org,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957,2,['update'],"['update', 'updated']"
Deployability,What version of Psi4 are you using? I _suspect_ this was fixed in [a previous PR of mine](https://github.com/psi4/psi4/pull/2857) that hasn't yet been included in any conda releases. I'll confirm when I get to the office.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916#issuecomment-1495847906:173,release,releases,173,https://psicode.org,https://github.com/psi4/psi4/issues/2916#issuecomment-1495847906,1,['release'],['releases']
Deployability,"What was the bug in cc5?. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Mon, Apr 4, 2016 at 9:32 AM, Daniel Smith notifications@github.com; wrote:. > @lothian https://github.com/lothian I fixed cc5 in this branch. cc5 now; > runs, passes, and the output.ref is updated.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/pull/315#issuecomment-205297042",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205307609:265,update,updated,265,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205307609,1,['update'],['updated']
Deployability,What's the output of `conda list`? You probably need to update your version of libint2.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572#issuecomment-1121151090:56,update,update,56,https://psicode.org,https://github.com/psi4/psi4/issues/2572#issuecomment-1121151090,1,['update'],['update']
Deployability,"What's your `conda info` and `~/.condarc`? I suspect strict channel priority and/or picking from conda-forge are causing the trouble. In particular, c-f has a 5.1.7 libxc while psi4 has a 5.1.5 . If this lead is correct, you can either temporarily remove c-f from your channels list or add `psi4::libxc` to your `conda create`/`conda install` command. By the way, it's much cleaner for solving if you create a new conda env with psi rather than installing into an existing env with unknown history.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2390#issuecomment-1004870655:334,install,install,334,https://psicode.org,https://github.com/psi4/psi4/issues/2390#issuecomment-1004870655,2,['install'],"['install', 'installing']"
Deployability,"When I compile psi4 in the conda environment according to the manual, I always get an error saying that libint2 cannot be found. I installed it with the same steps before, but there was no problem. I would like to ask what the reason is.; ![微信图片_20230221110410](https://user-images.githubusercontent.com/99332231/220237125-70fa333f-b28d-414d-b3a5-cb4d613fef01.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2879:131,install,installed,131,https://psicode.org,https://github.com/psi4/psi4/issues/2879,1,['install'],['installed']
Deployability,"When I preview it wants a new line after each indent:. ```; * Edit recipe https://github.com/psi4/psi4meta/blob/master/installers/construct.yaml. - Edit the top matter for Configuration. See snapshots in directory for examples.; ; - Edit ``release`` fields. (Windows is often ``dev1`` unless separate steps.); - Edit ``ltrtver`` field. This matches the current setting in ``conda_build_config.yaml``; - For prereleases, ``""channel_tag"": ""/label/dev""``, while for (post)releases, it should be the empty string; - Edit the packages and channels info if necessary. Probably long-term stable. ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2274#issuecomment-897712139:119,install,installers,119,https://psicode.org,https://github.com/psi4/psi4/pull/2274#issuecomment-897712139,4,"['Configurat', 'install', 'release']","['Configuration', 'installers', 'release', 'releases']"
Deployability,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/191:10,update,updates,10,https://psicode.org,https://github.com/psi4/psi4/pull/191,2,['update'],"['updated', 'updates']"
Deployability,"When following the suggested path for installation on Windows using conda and Python 3.8, even setting up a new environment on version 3.8, I cannot get it to run, as the ""psi4 --test"" command gives an error. On WSL using either conda or the installer I also cannot get it to work.; I create a new environment with: ; ```; conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge; psi4 --test; ```. This error was encountered on two separate machines running up to date Windows 10 Pro. Running the test gives me the following error: ; Traceback (most recent call last):; File ""Path\psi4conda\envs\psi16\Scripts\psi4-script.py"", line 187, in <module>; import psi4 # isort:skip; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\__init__.py"", line 76, in <module>; from .driver import endorsed_plugins; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\__init__.py"", line 46, in <module>; from psi4.driver.molutil import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\molutil.py"", line 36, in <module>; from psi4.driver.p4util import temp_circular_import_blocker; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\__init__.py"", line 32, in <module>; from .util import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\util.py"", line 37, in <module>; from psi4.driver.procrouting import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods, integrated_basis_methods; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\proc_table.py"", line 32, in <module>; from . import sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\sapt\__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft, sapt_dft, run_sf_sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driv",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614:38,install,installation,38,https://psicode.org,https://github.com/psi4/psi4/issues/2614,4,"['install', 'update']","['install', 'installation', 'installer', 'update']"
Deployability,"When importing psi4 in python3.6 I get . ```; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); /usr/local/psi4/lib/psi4/__init__.py in <module>(); 54 try:; ---> 55 from . import core; 56 except ImportError as err:. ImportError: dlopen(/usr/local/psi4/lib/psi4/core.so, 2): Symbol not found: __Py_ZeroStruct; Referenced from: /usr/local/psi4/lib/psi4/core.so; Expected in: flat namespace; in /usr/local/psi4/lib/psi4/core.so. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); <ipython-input-3-becb93fbd2ca> in <module>(); ----> 1 import psi4. /usr/local/psi4/lib/psi4/__init__.py in <module>(); 58 raise ImportError(""{0}\nLikely cause: GCC >= 4.9 not in [DY]LD_LIBRARY_PATH"".format(err)); 59 else:; ---> 60 raise ImportError(""{0}"".format(err)); 61 ; 62 from psi4.core import set_output_file, get_variable, set_variable, get_num_threads, set_num_threads. ImportError: dlopen(/usr/local/psi4/lib/psi4/core.so, 2): Symbol not found: __Py_ZeroStruct; Referenced from: /usr/local/psi4/lib/psi4/core.so; Expected in: flat namespace; in /usr/local/psi4/lib/psi4/core.so; ```. Note that: ; 1. importing in python2.7 seem to work; 2. my installation tests all came back failed but I made anyway. Not sure why the tests failed. Cloned git and installed as per http://psicode.org/psi4manual/master/build_planning.html#faq-cmakeviasetup . I am working in OSX.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768:1268,install,installation,1268,https://psicode.org,https://github.com/psi4/psi4/issues/768,2,['install'],"['installation', 'installed']"
Deployability,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/11:199,patch,patch,199,https://psicode.org,https://github.com/psi4/psi4/issues/11,8,['patch'],['patch']
Deployability,"When passing the -DCMAKE_INSTALL_PREFIX=/home/user/directory at the top-level build this flag does not get passed on to cmake processes that are called by the main, like in my case pybind11. As a result cmake tries to install that package in /usr/local. Is there any way around it other than manually installing all the dependencies?; ; ```; [100%] Built target pybind11_tests; Install the project...; -- Install configuration: ""MinSizeRel""; -- Installing: /usr/local/include/pybind11; CMake Error at cmake_install.cmake:41 (file):; file INSTALL cannot make directory ""/usr/local/include/pybind11"":; Permission denied; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548:218,install,install,218,https://psicode.org,https://github.com/psi4/psi4/issues/1548,7,"['INSTALL', 'Install', 'configurat', 'install']","['INSTALL', 'Install', 'Installing', 'configuration', 'install', 'installing']"
Deployability,"When running psi4 under windows (version 1.4rc3.dev1, installed via conda) from within qiskit, the following error occurs:. ```; File ""C:\Users\user\Anaconda3\envs\qiskit-0-27-psi4-jupyter\Scripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\groun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:54,install,installed,54,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['install'],['installed']
Deployability,"When trying to run Psi4 1.2 I get a straight segmentation fault (instantly). This is on a Rocks 6.1.1 based system using both the installer or conda methods from the download site. The conda install reported the Psi4 version as. > psi4: 1.2+9d4a61c-py36hf231b52_1. I realise this is going to be incredibly tricky to debug. I did try launching the version of python that conda installed (3.6.6-hc3d631a_0), and it seems to work fine. psi4 -v and psi4 -V both also give instant seg faults and no further info.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088:130,install,installer,130,https://psicode.org,https://github.com/psi4/psi4/issues/1088,3,['install'],"['install', 'installed', 'installer']"
Deployability,"When using conda install in Linux, it cannot install the linux version, and the following error occurs:; '''; conda install psi4 python=3.8 -c psi4; Collecting package metadata (current_repodata.json): done; Solving environment: /; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:. -<unknown>/win-64::psi4==1.8a1.dev32+663453e=py38_0 ; ; '''",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2894:17,install,install,17,https://psicode.org,https://github.com/psi4/psi4/issues/2894,3,['install'],['install']
Deployability,"Where did you get your current Psi4 / dftd3 from? Is it from the installer, via conda, or compiled from source?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1724#issuecomment-534710889:65,install,installer,65,https://psicode.org,https://github.com/psi4/psi4/issues/1724#issuecomment-534710889,1,['install'],['installer']
Deployability,"Whew, I'd be alarmed if the hint variable wasn't doing its job. The cmake isn't set up to use $MKLROOT (I might have tried but that mkl and iomp5 aren't in the same place in a typical intel installation, as you noted). The complication is that this has to work even for `ExternalProject`s or across different computers and the purpose of TargetLAPACK is to provide a single entity to hand to subprojects without duplicating all the math detection machinery and all the cmake and envvars that influence it. I'm not sure current reworking is optimized, but I can live with one cmake hint var. The iomp5 detection works with GNU in conda b/c all the libs are gathered together so the second `find_library()` w/o `NO_DEFAULT_PATH` catches it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-396753319:190,install,installation,190,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-396753319,1,['install'],['installation']
Deployability,"While I appreciate that tests are now passing, I still request changes.; * Comments that refer to methods that no longer exist need to be removed.; * The comment on dfhelper's release_AO is vague. What does it mean to ""release AO""? Are you clearing memory used to store some AO-basis quantity?; * Naming a method ""release_AO"" that does not actually release AO is confusing. You need to change this.; * The title of this PR is misleading. This PR is not just optimizing I/O. This PR is _changing the values that Psi gives for SAPT(DFT)_ due to the options edits. Are these edits supposed to be part of the PR or not? That's going to determine how the rest of this review process goes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1106499269:219,release,release,219,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1106499269,2,['release'],['release']
Deployability,"While I love the fact that you can output cube files and display the density and ESP in tandem in tools like paraview or VMD, I'm at a bit at a loss to understand the units of the density and ESP values that I am getting back. From my preliminary analysis, it seems the ESP has units of MJ/mol, and the electron density is in electrons/au^3. We should document this and not leave it up to guesswork. I would propose that we:; a) Update the documentation for the cubeprop page with the units of the things that you can get back; b) Update the cube files that are generated with the units of the things that are in the cube file; the first two lines in the cube file spec are for metadata, and we could certainly for instance have a second line that reads like:; ```; Property: Dt [electrons/au^3]; ```; instead of ; ```; Property: Dt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/815:429,Update,Update,429,https://psicode.org,https://github.com/psi4/psi4/issues/815,2,['Update'],['Update']
Deployability,"While trying to optimize the geometry for conformers of the ligand in the 2vx0 pdb structure I am also running into memory issues. Our cluster is running with cgroups and I ask for 10GB, but tell psi4 to use only 8gb. In that case most of the calculations fail >374 out of 500 conformers. To make it work I have to ask for 20GB and use only 4GB in psi4. The strange thing is these 500 runs have the same number of atoms and the same basis set, just different atomic positions. But some fail during the first SCF, some complete a few optimization cycles and a few complete. I have seen this behavior with the wB97x and the B3LYP functionals.; I have seen this with the conda installed 1.3rc2 and with a hand compiled version of 1.3rc2.; I have attached my input file and one of the smallest failed output files. I hope this helps pinning this down.; Thanks for working on Psi4, I love it!. [singlePsi4_rec290_pid12029.log](https://github.com/psi4/psi4/files/2911797/singlePsi4_rec290_pid12029.log); [singlePsi4_rec290_pid12029.txt](https://github.com/psi4/psi4/files/2911798/singlePsi4_rec290_pid12029.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525:674,install,installed,674,https://psicode.org,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525,1,['install'],['installed']
Deployability,"Whoops,. ``` python; # Integrate DFT with driver routines; for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft. for ssuper in superfunctional_list():; if ((not ssuper.is_c_hybrid()) and (not ssuper.is_c_lrc()) and (not ssuper.is_x_lrc())):; procedures['gradient'][ssuper.name().lower()] = run_dft_gradient; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178858441:23,Integrat,Integrate,23,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178858441,1,['Integrat'],['Integrate']
Deployability,"With @loriab's help, I managed to deploy `adcc` to conda.; There is a dev/temporary version available via; ```conda install -c adcc/label/dev_mkl adcc```; for testing purposes. Don't rely on it, though, it may disappear... :smile:; Make sure to install it in an existing `psi4` conda environment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071:34,deploy,deploy,34,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071,3,"['deploy', 'install']","['deploy', 'install']"
Deployability,"With `ENABLE_bse`, BSE tries to install in the wrong place; ```; [ 11%] Installing Psi4-detected BLAS/LAPACK; [ 11%] Performing build step for 'bse_external'; -- Install configuration: ""Release""; [ 11%] Built target lapack_external; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; [ 17%] Performing install step for 'bse_external'; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running install; /usr/lib/python3.11/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; running install_lib; copying build/lib/basis_set_exchange/_version.py -> /home/work/psi4/objdir/stage/lib/basis_set_exchange; byte-compiling /home/work/psi4/objdir/stage/lib/basis_set_exchange/_version.py to _version.cpython-311.pyc; running install_data; copying LICENSE -> /usr/local/; error: could not create '/usr/local/LICENSE': Permission denied; make[2]: *** [external/upstream/bse/CMakeFiles/bse_external.dir/build.make:105: external/upstream/bse/bse_external-prefix/src/bse_external-stamp/bse_external-install] Error 1; make[1]: *** [CMakeFiles/Makefile2:11190: external/upstream/bse/CMakeFiles/bse_external.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; (p4env) [susi@lenovo objdir]$ ccmake . ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3067:32,install,install,32,https://psicode.org,https://github.com/psi4/psi4/issues/3067,10,"['Install', 'Release', 'configurat', 'install']","['Install', 'Installing', 'Release', 'configuration', 'install']"
Deployability,"With that patch, the conda build works very nicely w/o forcing `-DPYTHON_LIBRARY`. Thank you. I'd like to absorb 0e7d3c9 into the repository, but I confess I can't find it. It's not a commit to master, a branch, a pull request, or a fork, just a lone commit on a tree. I'll accept the commit if I can find it, otherwise will push re-created commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-134831094:10,patch,patch,10,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-134831094,1,['patch'],['patch']
Deployability,"With the coming 1.2 release, I decided to test master instead of tags/v1.1 that I use as stable. all ctests fail with what I believe is python2 related.; ```. 315/399 Test: sapt1; Command: ""/usr/bin/python2.7"" ""/media/BIGdisk/psi4/tests/runtest.py"" ""/media/BIGdisk/psi4/tests/sapt1/input.dat"" ""/home/termo/psibuild/testresults.log$; Directory: /home/termo/psibuild/tests/sapt1; ""sapt1"" start time: May 02 20:52 UTC; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""/home/termo/psibuild/stage/mnt/batch/tasks/shared/BIGdisk/psi4-12/bin/psi4"", line 160, in <module>; import psi4; File ""/home/termo/psibuild/stage/mnt/batch/tasks/shared/BIGdisk/psi4-12/lib//psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/home/termo/psibuild/stage/mnt/batch/tasks/shared/BIGdisk/psi4-12/lib//psi4/driver/endorsed_plugins.py"", line 44, in <module>; if 'scipy' in e.msg:; AttributeError: 'exceptions.ImportError' object has no attribute 'msg'; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>. ```. I use the same setup for cmake as for tags/v1.1, which pass fine ctest. Something I have overseen to pass to cmake in master?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1000:20,release,release,20,https://psicode.org,https://github.com/psi4/psi4/issues/1000,1,['release'],['release']
Deployability,"With this update, dfocc.rst should also be removed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/147#issuecomment-122058381:10,update,update,10,https://psicode.org,https://github.com/psi4/psi4/pull/147#issuecomment-122058381,1,['update'],['update']
Deployability,"With wB97X-D3BJ/6-31G* on the same system, the non-MKL install gives -1964.4305 Hartree for the same system, and the MKL version blows up, not converging within 100 SCF iterations (the non-converged energies are around **66325650** Hartree). So it looks like you don't need a big basis to observe this instability, which is good for testing. But, this is more evidence that the MKL install has a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-900709116:55,install,install,55,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-900709116,2,['install'],['install']
Deployability,"Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:. # (a) for HF. energy(‘scf’). # (b) for unrestricted HF. set reference uhf; energy(‘scf’). # (c) for B3LYP. set dft_functional b3lyp; set reference rks; energy(‘scf’). # (d) also for B3LYP. energy(‘b3lyp’). # but this gets you HF (b/c ks reference is the hf/dft toggle control). set dft_functional b3lyp; energy(‘scf'). # (e) for unrestricted B3LYP. set dft_functional b3lyp; set reference uks; energy(‘scf’). # (f) also for unrestricted B3LYP. set reference uks; energy(‘b3lyp’). # (g) also for unrestricted B3LYP (since energy command trumps options, uhf gets translated to uks). set reference uhf; energy(‘b3lyp’). But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap reference into the energy() call for HF or DFT (though for the latter you’d have to use dft_functional keyword. Francesco brings up a related and overdue point. If you specify an open-shell molecule and no reference, it complains at you b/c rhf (the default) is unsuitable. I couldn’t say concretely, but some other programs will switch to an appropriate reference for open-shell. For psi4, it would have to be rhf/rks because we don’t have roks. This would be convenient at times, for instance, running databases of mixed closed/open shell. Propositions to be considered:. (i) Keeping reference in one place, that is, as a keyword. Consequences: retire rhf/uhf/rohf & rscf/uscf/roscf. (ii) If molecule is open-shell _and_ no reference has been specified, switch to uhf. This could be tricky b/c we’re not set up to do this driver-side. Also, there’d still be no way to use r/ro, as appropriate, in a series of molecules w/o explicitly setting reference. Lori. > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com wrote:; > ; > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > That sounds ok to me (then reference just has to be",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110183382:323,toggle,toggle,323,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110183382,1,['toggle'],['toggle']
Deployability,"Without looking at ATLAS but extrapolating from OpenBLAS, unless the LAPACK is built with cmake components (or something similar), we can't even tell at psi-build+lapack-detection -time if the LAPACK has any chance of working. In OpenBLAS, of their 3 build modes (single, pthread, omp), the most commonly found, pthread, has no chance of working with psi, but one can't tell that from the blas installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461#issuecomment-455813717:394,install,installation,394,https://psicode.org,https://github.com/psi4/psi4/issues/1461#issuecomment-455813717,1,['install'],['installation']
Deployability,"Without nocom, the first time the energy is computed, the center of mass is shifted to the origin, and all of the stored coordinates are updated. If change beh2.z to a new value, I might be expecting all of the other coordinates to still be where I specified them, not at their com-shifted values.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/59#issuecomment-43509699:137,update,updated,137,https://psicode.org,https://github.com/psi4/psi4/issues/59#issuecomment-43509699,1,['update'],['updated']
Deployability,"Wonder if it matters to this behavior what gcc is installed. On Friday, March 18, 2016, Ben Pritchard notifications@github.com wrote:. > This is with release 2, mkl 11.3 update 2.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/321#issuecomment-198597715",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198619829:50,install,installed,50,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198619829,3,"['install', 'release', 'update']","['installed', 'release', 'update']"
Deployability,"Wondering what's the status of 1.4 - AFAIK there was a paper out describing it, yet the latest (only) alpha release is over a year old. Do you have timeframe for 1.4? For Debian, I think I would need to package a couple more new dependencies which takes a while, so if it won't ship in 2020 anyway, it might not need to be rushed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-683409888:108,release,release,108,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-683409888,1,['release'],['release']
Deployability,"Wording this another way: what JK features is CompositeJK replacing, and what is it leaving be? Are there J-K combinations that we're leaving be because integrating them with CompositeJK would make things worse?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762#issuecomment-1302490589:153,integrat,integrating,153,https://psicode.org,https://github.com/psi4/psi4/pull/2762#issuecomment-1302490589,1,['integrat'],['integrating']
Deployability,"Would it be possible to decouple amplitude and orbital DIIS, i.e. so that the amplitudes get solved at fixed orbitals, and then the orbitals are updated? This would be useful for cases that are hard to converge, as well as active space calculations in large basis sets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783#issuecomment-575730343:145,update,updated,145,https://psicode.org,https://github.com/psi4/psi4/pull/1783#issuecomment-575730343,1,['update'],['updated']
Deployability,"Would y'all like this PR to include updated output.ref files for the tests or would a separate test updating PR be better? I don't see anything in the"" adding tests documentation"" about reference log files. I can include those as well if desired. It will just greatly increase the number of lines changed in this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262515081:36,update,updated,36,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262515081,1,['update'],['updated']
Deployability,"Wow, looks like @hokru solved this 4 years ago in #1334. I've merged the PR to psi4/gdma but will need to rebuild the stack before you see any improvement. > Is there any documentation on how to keep an isolated installation of psi4 for development? Any tips would be appreciated!. It doesn't look like you need to do any investigation for this problem, but I'm glad to help on this in general. I'm not sure what you mean by ""isolated installation of psi4 for development"". I manage everything with conda envs. One might have an env with a psi4 conda package installed to use at runtime and another env with psi4-dev conda package installed to supply deps for a psi4 source repository with a compile directory.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2706#issuecomment-1228746448:212,install,installation,212,https://psicode.org,https://github.com/psi4/psi4/issues/2706#issuecomment-1228746448,4,['install'],"['installation', 'installed']"
Deployability,"XC contains an implementation of the sn-LinK algorithm, a seminumerical method very similar to COSX for computing the exact exchange term (i.e., the K matrix). Like the XC components of GauXC, sn-LinK also has support for GPU execution. At PsiCon 2023, it was noted that GauXC's sn-LinK algorithm could be interfaced to Psi4 through the `CompositeJK` framework. This would give Psi4 its first-ever instance of noncommercial GPU support for the JK construction process. And that is the goal of this PR - interfacing Psi4 to GauXC's sn-LinK code via `CompositeJK`. This interface is implemented primarily via a new `SplitJK` derived class, `snLinK`, which contains the guts of the interface to GauXC. The `snLinK` constructor parameterizes and constructs the `GauXC::XCIntegrator` object and all related objects (e.g., load balancer, molecular weights partitioner), as well as other auxiliary work such as defining the GauXC execution space. `snLinK::build_G_component` constructs the K matrix from the input density via the GauXC integrator's `eval_exx` function. `build_G_component` also handles fundamental pre- and post-processing required for the involved matrices - Spherical Harmonic integral reordering permutations if `psi4_SHGAUSS_ORDERING` is set to the default option of gaussian , and Spherical-to-Cartesian transforms, if required, to enable GPU support (also forcible via the `SNLINK_FORCE_CARTESIAN` keyword). As a `SplitJK` instance, sn-LinK can be called within Psi4 via `SCF_TYPE = J_ALGO+SNLINK`, with `J_ALGO` being the J construction algorithm of choice (currently only `DFDIRJ`). If GPU support is enabled, the `SNLINK_USE_GPU` keyword can be turned on to run the sn-LinK algorithm using GPUs. Construction of the GauXC interface is specified at compile-time, using the `ENABLE_gauxc` flag. Psi4 can either build an internal instance of GauXC, or hook up to an external GauXC install specified by `gauxc_DIR`. If `ENABLE_gauxc` is turned off, the `snLinK` class will instead throw",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:1341,integrat,integrator,1341,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['integrat'],['integrator']
Deployability,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:103,install,installed,103,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393,2,['install'],['installed']
Deployability,"Yay, so building Psi4 w/ gcc/g++5.2 against a pre-built conda chemps2 is what's working?. HDF5 is persnickety in that chemps2 will complain if the HDF5 library it finds at runtime isn't the same one it was compiled against down to the patch level. That is, 1.8.16 and 1.8.17 aren't friendly. So unless you're lucky, you really must use the one that comes with the conda package. Does setting `-DCMAKE_PREFIX_PATH` to the conda env help to overcome the system hdf5? or `HDF5_ROOT`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288577924:235,patch,patch,235,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288577924,1,['patch'],['patch']
Deployability,"Yay. If that was the only lib --> share I missed, I'll be pleased. . > On Feb 14, 2016, at 12:59 AM, Andy Simmonett notifications@github.com wrote:; > ; > Your suggestion fixed the problem on my machine, @loriab. Great detective work. I just pushed the update, so we'll see if that fixes it. The non-PCM thing needs to be figured out some time, but I think it can wait until the rest of the merge issues are resolved.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183827620:253,update,update,253,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183827620,1,['update'],['update']
Deployability,"Yea, Psi4's SOSCF is an exact Newton update if you let the equations fully converge; however, it makes implementing SOSCF for KS a bit rough since we need to compute all possible KS Hessian vector products (which is actually on a todo list somewhere!). If it is a desired feature we can add an approximate SOSCF update. Either through BFGS or just some kind of clever diagonal approximation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256#issuecomment-184844335:37,update,update,37,https://psicode.org,https://github.com/psi4/psi4/issues/256#issuecomment-184844335,2,['update'],['update']
Deployability,"Yeah sylabs would definitely work but only allows for storing .sif images. We could consider only offering `docker` containers and having `apptainer` users pull from `dockerhub`. See https://apptainer.org/docs/user/main/docker_and_oci.html#docker-hub. I know Jet loves using docker dev containers and I'm guessing others on the dev team do too. . As an explicit example from apptainers docs: ; pull tensorflow and run with the host's amd gpu libraries loaded into the container. MPI is essentially the same.; ```; $ apptainer pull docker://rocm/tensorflow:latest; $ apptainer run --rocm tensorflow_latest.sif; ```. As described in the link I referenced there are a few peculiarities that we would have to work through so that our docker containers will run properly with `apptainer`. Off the top of my head the two main things would be:. * making sure nothing is being installed in `/root` or `/home` by default (easy); * making sure that a writable filesystem is being mounted (The user would ultimately need to ensure that a scratch directory is available or that they're running from a directory/volume with disk space available). If we wanted, it might be nice to convert the docker containers explicitly to apptainer format and upload to sylabs? A new user at a super-computing institute probably wouldn't check dockerhub. For building apptainer containers, I normally start by pulling base images from dockerhub to work with. I haven't tried pulling and running docker containers directly though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682:869,install,installed,869,https://psicode.org,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682,1,['install'],['installed']
Deployability,"Yeah, CheMPS2 and Psi4 have to use gnu on the same side of 5.1 b/c GCC changed their std::string compatibility. The conda CheMPS2 is def. built against the gcc5.2 in that faq. Usually you have to have the gcc5.2 environment active during configuration and build _or_ pass extra args to the compilers, as below. Doesn't hurt to do both. But you're getting past the compiler checks. I've heard of problems with 2016.1 Intel compiler set. 2016.3 is known good. Actually, @amjames, was this the error you were seeing with early 2016 compilers?. ```; PFXC=/theoryfs2/ds/cdsgroup/miniconda/envs/text35; ; ${PFXC}/bin/cmake -H. -Bobjdir53 \; -DCMAKE_C_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icc \; -DCMAKE_CXX_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icpc \; -DCMAKE_Fortran_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/ifort \; -DCMAKE_C_FLAGS=""-gcc-name=${PFXC}/bin/gcc"" \; -DCMAKE_CXX_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; -DCMAKE_Fortran_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288535859:238,configurat,configuration,238,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288535859,1,['configurat'],['configuration']
Deployability,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905#issuecomment-361802078:235,update,updates,235,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078,1,['update'],['updates']
Deployability,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:276,pipeline,pipelines,276,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657,3,"['install', 'pipeline']","['install', 'pipelines', 'pipelines-linux']"
Deployability,"Yeah, if we're going to allow C++17 we should upgrade the minimum [GCC to version 7](https://en.cppreference.com/w/cpp/compiler_support) in our CI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2483#issuecomment-1069347742:46,upgrade,upgrade,46,https://psicode.org,https://github.com/psi4/psi4/pull/2483#issuecomment-1069347742,1,['upgrade'],['upgrade']
Deployability,"Yeah, that code isn't efficient to use. That's probably why it wasn't exported. Could we help you to update the code instead?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2239#issuecomment-876585963:101,update,update,101,https://psicode.org,https://github.com/psi4/psi4/issues/2239#issuecomment-876585963,1,['update'],['update']
Deployability,"Yeah, that would be the reason - 1.3 was the first release with that `cubeprop` keyword. The easiest way to install is probably using the pre-built binaries for 1.3.2:. https://admiring-tesla-08529a.netlify.com/installs/v132/. If you need further help, give us a shout.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1722#issuecomment-534511091:51,release,release,51,https://psicode.org,https://github.com/psi4/psi4/issues/1722#issuecomment-534511091,3,"['install', 'release']","['install', 'installs', 'release']"
Deployability,"Yeah, the BLAS+OpenMP detection in Psi4 much predates the CMake FindBLAS, OneAPI, and Intel MKLConfig.cmake reforms. I'm not keen on any immediate changes before the upcoming release, but I agree that it's worth revisiting to see if some of the new tools streamline the build or solve more situations w/o intervention. (Though I personally don't like having environment variables influence CMake. :-) ). Btw iirc, OpenMP doesn't like to be statically linked, so you might favor `libiomp5.so`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2806#issuecomment-1329482160:175,release,release,175,https://psicode.org,https://github.com/psi4/psi4/issues/2806#issuecomment-1329482160,1,['release'],['release']
Deployability,"Yeah, this is just too big a problem for DETCI's poor CISD capabilities. I answered this in the forums. Basically, if you optimize the code to do full CI very efficiently, you can wind up with an algorithm that creates intermediate data that is small enough to work fine for full CI, but blows up for CISD and makes the code run out of memory. And indeed, that's how I wrote the code, because we didn't care about CISD when we wrote it. I'm pretty sure the molecule reported here is big enough to run into this problem. I issued a PR to update the documentation to warn users away from DETCI CISD unless it's a tiny molecule (with a small basis).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1685#issuecomment-515615749:537,update,update,537,https://psicode.org,https://github.com/psi4/psi4/issues/1685#issuecomment-515615749,1,['update'],['update']
Deployability,"Yeah, we should put a catch in the code to not allow frequency() on an atom. On Thu, Mar 31, 2016 at 10:15 PM, Ryan Richard notifications@github.com; wrote:. > Admittedly the error message should be updated to be more informative, but; > the short answer is a single atom doesn't have a vibrational frequency.; > ; > More generally any molecular system has 3 times the number of atoms, total; > degrees of freedom; the difference between that and the number of external; > degrees of freedom is the internal degrees of freedom, i.e. the; > vibrations. An atom has three external degrees of freedom and thus in turn; > has 0 internal degrees of freedom.; > ; > Hope that helps.; > On Mar 31, 2016 8:07 PM, ""drhaney"" notifications@github.com wrote:; > ; > > Attempting frequency() on atomic species fails irrespective of charge,; > > multiplicity, and reference type.; > > ; > > Typical error message:; > > ; > > 1 displacements needed.; > > 1; > > ; > > An error has occurred. Traceback:; > > : basic_string::replace: File """", line 26, in; > > ; > > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in; > > frequency; > > psi4.thermo(wfn, wfn.frequencies()); > > ; > > Thanks,; > > -drhaney, -- that's ""D. R."", not Doctor.; > > ; > > Typical input file attached (C atom, neutral triplet).; > > C.txt https://github.com/psi4/psi4/files/198782/C.txt; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/332; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332#issuecomment-204210196",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204212411:199,update,updated,199,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204212411,1,['update'],['updated']
Deployability,"Yeah, we’re using a released libxc4. But that contains an unfavored (by them) fix that has to be hand applied to each release. Their favored fix is in their master but can’t be released because it breaks ABI so has to wait until libxc5. This PR has the interface to the libxc5 fix. Peculiar story but yes, still relevant.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-529103526:20,release,released,20,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-529103526,3,['release'],"['release', 'released']"
Deployability,Yes psicode.org is outdated and will be replaced soon. Maybe @loriab could update the download link until then. The latest releases are also linked on the github release page: https://github.com/psi4/psi4/releases,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900:75,update,update,75,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900,4,"['release', 'update']","['release', 'releases', 'update']"
Deployability,Yes sorry about that ... in the build it downloads an old adcc version from github instead of recognising the installed version from conda it seems. I'll take a look.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466:110,install,installed,110,https://psicode.org,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466,1,['install'],['installed']
Deployability,"Yes, I agree that details instructions and more demonstrations could be; added in separate PR, and not a reason to stall Alex's integration efforts. On Fri, Dec 2, 2022 at 2:04 PM Lori A. Burns ***@***.***>; wrote:. > /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:346:; > ERROR: Undefined substitution referenced: ""optking_frag_mode"".; >; > docs error above. probably needs double underscore after optking.; >; > Do we have a figure in there yet illustrating the inter-fragment; > definitions? I have no time to work on it today, but could tomorrow; > (Saturday).; >; > interfrag figure would be great. but if we get to the point where; > everything else is ready, I think that could be a separate PR.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TB764VCREPSYNXVVTTWLJI3HANCNFSM6AAAAAAQWELJAU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146:128,integrat,integration,128,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146,1,['integrat'],['integration']
Deployability,"Yes, I believe that I am indeed mixing them. How do I specify a specific Python distribution in the installation process?. Also, the otool -L ...core.so output reads. ```; objdir/stage/usr/local/psi4/lib/psi4/core.so:; 	@rpath/core.so (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib (compatibility versio; 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib (compatibility version ; 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768#issuecomment-316419197:100,install,installation,100,https://psicode.org,https://github.com/psi4/psi4/issues/768#issuecomment-316419197,1,['install'],['installation']
Deployability,"Yes, I left libdpd alone, since FAE had needed a function that psi4 didn't embed because unused. For the libraries, ""clearing out"" means simply not compiling. If any function is found to be needed, it's a `#` toggle in the CMakeLists.txt away. (Except possibly for ccsort and transqt2, for which there's another scheme afoot.) Could keep the ""unneeded"" lib files toggled off for months and then reevaluate, to be cautious.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525#issuecomment-262321324:209,toggle,toggle,209,https://psicode.org,https://github.com/psi4/psi4/issues/525#issuecomment-262321324,2,['toggle'],"['toggle', 'toggled']"
Deployability,"Yes, I updated this to do monomer-basis calculations. They are needed for correct counterpoise-corrected total energies. Maybe we should not compute them when the user requests interaction quantities with the option `return_total_data=False`. A new Psi4 driver is coming. It should have better control over which terms of the expansion are computed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-518705808:7,update,updated,7,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-518705808,1,['update'],['updated']
Deployability,"Yes, I've been updating them as I notice them, and 2845 is the most recent. afaik, there aren't any outstanding expired types. Sorry about the poor commit message - it was part of a big docs update. If you're still working from v1.3, https://github.com/psi4/psi4/issues/2656#issuecomment-1299120848 may be useful patches, too. Thanks for working on keeping this old version going. On the moving-past-v1.3 front, I now have a version of Libint2 that has solid harmonic ordering runtime-switchable, so a single build could work for all open-source consumers, finally including psi. But that'll require upstream acceptance into L2 and new versions (maybe could get away with rebuild?) of the quantum chem packages. So nothing imminent, but some progress.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2865#issuecomment-1407770502:191,update,update,191,https://psicode.org,https://github.com/psi4/psi4/issues/2865#issuecomment-1407770502,2,"['patch', 'update']","['patches', 'update']"
Deployability,"Yes, IIRC we need to make sure that `CCEnergyWavefunction`'s vars is updated *not* `ref_wfn`'s ? but just in energy modules, lambda/density/eom/response do not have proper wfns so they need to update whatever wfn they were passed [*Warning: It might not have the same name in all of those modules*]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943#issuecomment-376675608:69,update,updated,69,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376675608,2,['update'],"['update', 'updated']"
Deployability,"Yes, if you were pulling from Conda everything would be fine. Conda is only updated periodically on the /dev channel, so its natural that psi4/psi4:master will get ahead of those built binaries. I usually recommend going sans addons while dev’ing unless you need them. > On Nov 29, 2017, at 12:05 PM, shannonhouck <notifications@github.com> wrote:; > ; > Ok, that makes sense. I got Psi4 by cloning the repo as usual, and it seems like I'm pulling CheMPS2 from the Miniconda p4dev (Psi4 development) environment. Using conda update chemps2 doesn't show any available updates; the button on the CheMPS2 page says the most recent version is 1.8.4, but the Conda site says it's 1.8.3.; > ; > I'll try pulling from GitHub and see if that fixes anything. Thanks for the help!; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/871#issuecomment-347979916>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABsBcS5FvbqgbVG1GK3u1ZsrwtiI714aks5s7bjvgaJpZM4QvfAl>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347988321:76,update,updated,76,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347988321,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Yes, it seems elaborate just to keep metadata with the quadratures. And the quadratures themselves are not in the best state, considering we regex process them. And having thousands of them is a blot upon the `install` step. They're downloaded from a website (see [README](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/quadratures/1_x/README)), so ideally both quadratures and metadata would be pulled into a json or similar library, then read into cpp. But this seemed a quick fix. Will tag the PR for v1.2.2 backport. Ok to let those accumulate until all errors found and solved or do you need it sooner?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163:210,install,install,210,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163,1,['install'],['install']
Deployability,"Yes, please aim for typing_extensions=4.5 https://github.com/pydantic/pydantic/issues/5821 . Or update pydantic; iirc they did an extra v1 release to resolve this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3062#issuecomment-1767169966:96,update,update,96,https://psicode.org,https://github.com/psi4/psi4/issues/3062#issuecomment-1767169966,2,"['release', 'update']","['release', 'update']"
Deployability,"Yes, read my comment above as if I was thinking there was a v1.3.2 py38 build. I was misremembering -- there isn't. . * v1.3 was py36/37.; * Since then, psi4 is py36/37/38.; * v1.4 release may well be py37/38/39.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1979#issuecomment-671666352:181,release,release,181,https://psicode.org,https://github.com/psi4/psi4/issues/1979#issuecomment-671666352,1,['release'],['release']
Deployability,"Yes, that foreach is overkill. I'll remove it if it looks like there's nothing more to add. You're welcome to take any of this back to autocmake. @robertodr's already mentioned putting together a backport. I wouldn't call this a thorough overhaul of the mkl detection, just a patch of some known deficiencies (mkl_rt, iomp5). And with all the `-Wl,`s mkl requires, I highly recommend ConfigMath/autocmake use targets, if it isn't already.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/591#issuecomment-276091624:276,patch,patch,276,https://psicode.org,https://github.com/psi4/psi4/pull/591#issuecomment-276091624,1,['patch'],['patch']
Deployability,"Yes, that is exactly the contents of the above location. This plugin is just the basic psi4 plugins. All of them fail to compile/install. If I search for @CXX, this shows up in every CMakeLists.txt in the Build/psi4 plugins directory. . No, I have never used `--inplace`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565#issuecomment-271956386:129,install,install,129,https://psicode.org,https://github.com/psi4/psi4/issues/565#issuecomment-271956386,1,['install'],['install']
Deployability,"Yes, that would be nice. I try to use psi4 for sort of production use, so stay on these tag-releases in a hope that they have less of these kind of development bugs :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-410427728:92,release,releases,92,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-410427728,1,['release'],['releases']
Deployability,"Yes, the plugin scheme as currently implemented expects that you're generating a new plugin from a locally compiled psi4. The binary clearly doesn't satisfy that and indeed the excerpt you posted is both machine- and build-specific since it contains various oddities for making the binary as static and backwards-compatible as possible. I'm actually in the middle of trying to get the psi4 binary and all its subsidiaries in shape for both users and developers. May as well try to get plugins going, too. If you know of any conventions for handling plugins/libgcc dependencies within conda, I'd be interested to read of them. Where is `libplugin` called for? In the build, it's just a static library that gets linked into the psi4 exe. I can certainly install it, but it may need to be a `.so` to be useful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172147949:752,install,install,752,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172147949,1,['install'],['install']
Deployability,"Yes, there's now py27, py35, py36 for Linux and Mac. I've been getting the build and packaging automated again these past few days. There's a few more external projects that need final integration (simint, ambit, a slight dkh fix). I'm aiming for RC1 by mid next week because I'll be away for a bit after that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-289781613:185,integrat,integration,185,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-289781613,1,['integrat'],['integration']
Deployability,"Yes, these tests fail if I run them. As far as I understand they should be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465:75,update,updated,75,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465,1,['update'],['updated']
Deployability,"Yes, this is an embarrassing but rare known issue. It's not unalike the problem mentioned in #782 where geometry updates were interpreted in a different frame from internal representation leading to surprise results. Only in this case it's a units problem. There isn't a ready solution, so it's simply in mind to be fixed at next Mol spec iteration (in progress). If you hit it in the meantime, just toggle [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsmolecule.py#L1165) with `if True:` (and re-make to copy the file); it's harmless so long as your input geometry doesn't actually have overlapping atoms. The class was designed better than this; there was a later decision that leads to this error popping up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/804#issuecomment-333541702:113,update,updates,113,https://psicode.org,https://github.com/psi4/psi4/issues/804#issuecomment-333541702,2,"['toggle', 'update']","['toggle', 'updates']"
Deployability,"Yes, this is from my fork generated and built yesterday. All old versions, including the old installations were removed. TDC. Sent from my iPhone. > On Nov 6, 2016, at 8:34 AM, Justin Turney notifications@github.com wrote:; > ; > That error triggers when psi is trying to run an input file. The plugin code isn't getting called. Can you confirm the correct psi is being called?; > ; > > On Nov 6, 2016, at 8:06 AM, T. Daniel Crawford notifications@github.com wrote:; > > ; > > [draco:~/src] crawdad% psi4 --new-plugin myplugin; > > Traceback (most recent call last):; > > File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; > > raise KeyError(""The file %s does not exist."" % args[""input""]); > > KeyError: 'The file input.dat does not exist.'; > > ; > > This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503#issuecomment-258681365:93,install,installations,93,https://psicode.org,https://github.com/psi4/psi4/issues/503#issuecomment-258681365,2,['install'],"['install', 'installations']"
Deployability,"Yes, we have recently pushed a very large update to how data handling is passed in Psi4. Please change your input to the following:. ``` python; scf_e, scf_wfn = energy('scf', return_wfn=True); oeprop(scf_wfn, ""MULLIKEN_CHARGES""); ```. Effectively, there is no longer a global wavefunction and you must explicitly pass wavefunctions around. Sowreap should fail at the moment (has not had a wavefunction_pass update yet). Can you please post the sapt4 error and the git reference hash?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184837562:42,update,update,42,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184837562,2,['update'],['update']
Deployability,"Yes, we're in a bad situation wrt pybind11. We use 2.0 (c. Jan 2017) that allows the resulting python `.so` to also be used as an ordinary Linux library for symbols for our plugins. Unfortunately, at 2.0 the pybind11 installations via `setup.py` and CMake had different directory structures, with the former being more common in packaging. So most detected pybind11 2.0's would be useless to psi. On the other hand, pybind11 2.2 restricts symbol usage, so can't be used with our plugin system. But the install directory structures have been reconciled, I believe. Until we reform our symbol handling and plugin system and allow pybind11 updating, I think the current situation is best. You're welcome to delete the final offending pybind11 files; it will only break the psi4 plugin system, not psi4 itself. It would be [here](https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L234-L237) to change. I may be not quite following the INSIST_FIND_PACKAGE reasoning. What you're after is readily achieved by `ENABLE_PkgName=ON`/`OFF` and inspecting the ""Found""/""Building"" labels of the initial CMake config. Is it because you want the CMake config to _fail_ when the desired Found/Build pattern is not achieved, rather than the run-successfully/inspect/delete/run process currently in place? I can see how in an automated workflow situation that would be preferable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-343777115:217,install,installations,217,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-343777115,2,['install'],"['install', 'installations']"
Deployability,"Yes, we're planning on a series of release candidates after the necessary features are in wherein only bug fixes permitted. For the most part, we work on a nightly build release schedule, but yes, we do want 1.0.0 to be durable. Thanks for the new term, ""brown-paperbag"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-178167204:35,release,release,35,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-178167204,2,['release'],['release']
Deployability,"Yes, you're quite right that the installer release (essentially miniconda with psi4 pre-installed) is a new conda installation. Sorry, for the people willing to type `conda install`, I forget they may have considered the installer. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898#issuecomment-1468638876:33,install,installer,33,https://psicode.org,https://github.com/psi4/psi4/issues/2898#issuecomment-1468638876,6,"['install', 'release']","['install', 'installation', 'installed', 'installer', 'release']"
Deployability,"Yes. For py-side development, can probably get away setting PSIDATADIR and running driver on source. But, on the whole, I'm resigned. We did have cases, e.g., plugins, where psi4 was supporting running from source in preference to running from installed; it'll be simpler supporting just the latter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235905609:244,install,installed,244,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235905609,1,['install'],['installed']
Deployability,"Yes. The forums have been down since Thursday of last week. @lothian is working on getting it restored, but that involves a rather time-consuming backup and an operating system update. In the meantime, ask questions as issues (as you just did) or [on Slack](https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Q).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740:177,update,update,177,https://psicode.org,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740,1,['update'],['update']
Deployability,You can `PYTHONPATH=./stage/${TRAVIS_BUILD_DIR}/Install/lib python python-fcidump` if you want to keep hammering at it. But fine by me if you want to pull the psiapi. Thanks for adding the tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-356134730:48,Install,Install,48,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356134730,1,['Install'],['Install']
Deployability,"You can fix the `MKL FATAL ERROR` by `LD_PRELOAD=/path/to/libmkl_rt.so psi4`. Yes, #563 or a near relative will fix that properly w/o the preload. When you run the `bin/psi4` ""executable"", it hunts down its `lib/psi4/__init__.py` to load psi4 as a python module. I wouldn't have expected it to be confused by a symlink, but I suppose it's possible. I'll have to try it out. Glad the python detection seems to be working consistently now. Your CMake logs look good (the unnerving ""detached HEAD"" is just because we pin to tags or commits for dependencies). The odd python3.4 detection in the pybind11 CMake config is to be expected, since none of the environment was passed over to pybind11 because it doesn't matter at that stage. On the now-healed compilation, I was just warned today (@bennybp) that CMake _does_ search your install (not stage, install) dir for dependencies, so perhaps your hunch was right.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273738266:827,install,install,827,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273738266,2,['install'],['install']
Deployability,"You can update the operating system, though :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792#issuecomment-580240271:8,update,update,8,https://psicode.org,https://github.com/psi4/psi4/issues/1792#issuecomment-580240271,1,['update'],['update']
Deployability,"You could call it a soft release thats still not quite official. The code base has been tagged 1.0 and frozen; however, the accompanying distribution networks (binaries and conda channels) have not quite caught up. The release notes are among the very last things on the check list. Cheers,; Daniel Smith. > On Jul 14, 2016, at 3:47 PM, Michael Banck notifications@github.com wrote:; > ; > By the way, and I realize that this is quickly getting off-topic, but I am baffled that the 1.0 release wasn't tweeted from @psi_code...; > ; > I'm following the commit feed, but there was no obvious ""release 1.0"" or ""bump version to 1.1devel"" commits, so I totally missed it until now.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub https://github.com/psi4/psi4/issues/367#issuecomment-232787398, or mute the thread https://github.com/notifications/unsubscribe/ABsBcehgmOltfNKwWYvW1L8pGmD3ttWGks5qVqBIgaJpZM4INszQ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367#issuecomment-232790462:25,release,release,25,https://psicode.org,https://github.com/psi4/psi4/issues/367#issuecomment-232790462,4,['release'],['release']
Deployability,"You have to do some substitution yourself based on your install locations. ""<conda-env-prefix-with-psi4>"" is ""/home/emkal/psi4conda/"" and ""same"" is ""/home/emkal/psi4conda/lib/python3.10/site-packages/"". The former is what would be done in bash _outside_ jupyter, and the latter is the equiv in python (inside jupyter).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188#issuecomment-2195361850:56,install,install,56,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195361850,1,['install'],['install']
Deployability,"You're going to need to constrain psi4 to get meaningful dep resolution info. something like `psi4=1.4a2.dev1058 -c psi4/label/dev` right now. From the above, you're pulling an ancient version of psi4, pre v1.2, from before conda upgraded its compilers late 2017, hence the `gcc-5-mp`, which was a local (psi4) copy of a c++11 capable gcc so that psi4 could build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024#issuecomment-718079355:230,upgrade,upgraded,230,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718079355,1,['upgrade'],['upgraded']
Deployability,"You're right, the handling of simint vec type is unsophisticated. The mention of `SIMINT_VECTOR` in psi4's cmake is as indication that if you set the var for psi4, then it'll be passed on to the simint build, should simint be built from source. In that way, something like the below should do what you want. (The second is a standard CMake variable that means don't-look-for-prebuilt.). ```; -D SIMINT_VECTOR=avx; -D CMAKE_DISABLE_FIND_PACKAGE_simint=ON; ```. simint itself doesn't offer any handles for choosing an installation of a particular vectorization, nor does it provide any is-this-installation-compatible-with-given-vec handles. also, it's hard to know what the user wants: on an AVX computer (cmake can't quickly say that a computer is AVX, btw), a user getting a sse simint might be quite content b/c it'll run or discontent b/c it's unoptimized. Between the uncertainty and lack of tools, I went with the dumb handling you observed. For background, the conda package is sse so that it runs everywhere. And the cmake vector variable default is AVX since that's a likely minimum, and a wrong choice produces only local trouble. I can see that the top-level CMakeList.txt text needs to be clearer so the vector status isn't surprising. But I'm not sure if more logic is worth it. What do you think?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2480#issuecomment-1068437887:516,install,installation,516,https://psicode.org,https://github.com/psi4/psi4/issues/2480#issuecomment-1068437887,2,['install'],"['installation', 'installation-compatible-with-given-vec']"
Deployability,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-362954523:403,update,updated,403,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523,1,['update'],['updated']
Deployability,"Your right, this should be patched up in #918. As a note you will need to add a `set guess read` in your input file for this to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/918#issuecomment-370243678:27,patch,patched,27,https://psicode.org,https://github.com/psi4/psi4/issues/918#issuecomment-370243678,1,['patch'],['patched']
Deployability,"Your suggestion fixed the problem on my machine, @loriab. Great detective work. I just pushed the update, so we'll see if that fixes it. The non-PCM thing needs to be figured out some time, but I think it can wait until the rest of the merge issues are resolved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183827154:98,update,update,98,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183827154,1,['update'],['update']
Deployability,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370161881:95,install,install,95,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881,2,"['install', 'update']","['install', 'update']"
Deployability,"[Easybuild](https://hpcugent.github.io/easybuild/) is not an alternative to CMake or autoconf. The idea is to have an easy way to make reproducible builds and modules. Everything in the stack should also be optimally build, meaning utilizing the hardware to its full extend (for example, if AVX2 or infiniband is available, we will use it). Easybuild will take care of all dependencies. It will avoid using the OS installed (old) versions of software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after building a compiler (GCC/intel/...) from scratch. We also patch out any problem. Psi4 for example hard codes it's build path for the generation of new plugins. This is not desirable on a HPC system. Some software is also not adjusted to be build by anything other than GCC. We make it work with intel too. Some software doesn't even have a real build system other than a list of makefiles that usually don't work out of the box. We fix that so the build is reproducible. . It's primarily meant for HPC sites. If somebody adds support for a piece of software, other people can reuse it with one command. I use it to build Psi4 in production. If you're developing, Easybuild is useful for building all up to date versions of dependencies. On our systems, if I run: module load PSI, I get a psi4 (a git version from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for example GCC-5.1, it takes one command. Adding a GCC subproject to Psi sounds like a bad idea. Building GCC is not a trivial task.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105224328:414,install,installed,414,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105224328,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"[Some users who are using `clone` to change the number of orbitals report that `nmo_` doesn't update and request a way to change `nmo_`.](https://forum.psicode.org/t/reallocation-of-matrix-object-ca-with-new-matrix-of-different-dimension/2720/3?u=jmisiewicz) Ideally, `nmo()` should be `nmopi_.sum()`, and the `nmo_` variable no longer stored. This eliminates a possible internal inconsistency, and on the scale of other operations, the store/compute time savings are negligible.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2875:94,update,update,94,https://psicode.org,https://github.com/psi4/psi4/issues/2875,1,['update'],['update']
Deployability,"[draco:~/src] crawdad% psi4 --new-plugin myplugin; Traceback (most recent call last):; File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; raise KeyError(""The file %s does not exist."" % args[""input""]); KeyError: 'The file input.dat does not exist.'. This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503:326,install,install,326,https://psicode.org,https://github.com/psi4/psi4/issues/503,1,['install'],['install']
Deployability,"] read [.github/workflows/README.md](https://github.com/psi4/psi4/pull/2454/files#diff-636942e0afa55e1aea027fb857aa2c6046858fb317c0b9a4f12ff3ca17e64ffb); - [x] current readings are below (fail/pass/skip/uncollected/xfail/xpass/warnings) for `pytest -m ""addon and not long""`; - L: -/244/ 10/3229/4/4/303; - M: -/229/ 25/3229/6/2/304; - W: -/144/112/3229/2/4/303; - skipped on Linux are things like gpu_dfcc (needs gpus), mrcc (proprietary), cct3 (no package), fock-ci (apparently I packaged the wrong thing); - [ ] there's an unresolved issue on macOS where with Py39 adcc shows pulled from pypi but it tests fine. with Py310, adcc and others pulled from pypi and it doesn't get found for testing. leaving at Py39 for now, but mysterious; - [ ] I haven't removed all the addons from the Azure pipelines yet but I can if everyone comfortable. - Testing Strategy; - [x] `ctest` is familiar, easy to read, and doesn't require configuration. on the other hand, it can't test installations, it can't do parameterizations, and by passing through TestingMacros and runtest.py, you can't always pass environment info into it. Don't worry, it's staying exactly as it is. I've added a single short file to several ctest directories ...; - [x] moved `setup.cfg` to `pytest.ini` and install it. only pytest was using the setup.cfg file anyways. all labels (things you can `pytest -m quick` akin to `ctest -L quick`) are stored here instead of duplicated btwn setup.cfg and conftest.py. The GHA will complain if you hit unregistered label.; - [x] changed the pytest import_mode from default to ""importlib"". this means (1) we don't need to have empty `__init__.py` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:2574,install,installations,2574,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['installations']
Deployability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz'], 'dashlevel': 'd3bj', 'dashparams': {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}, 'dashparams_citation': False, ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; ------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:14061,update,updates,14061,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['update'],['updates']
Deployability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'gradient', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'gradient', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz', '-grad'], 'dashlevel': 'd2', 'dashparams': {'alpha6': 20.0, 's6': 1.05, 'sr6': 1.1}, 'dashparams_citation': '', ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; --------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:5226,update,updates,5226,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['update'],['updates']
Deployability,"_, here's my proposal for how to make the code more readable.; > ; > First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate.; > ; > The code is now divided into the following => level chunks:; > ; > => Prep Auxiliary Quantities <=; > ; > * Zeroing, Sizing, Atom Blocking all go here; > ; > => Prep Atom Pairs <=; > ; > * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it.; > ; > => Prep Bra-Bra Shell Pairs <=; > ; > * What is currently, ""Store shell pairs that are significant by Schwarz estimate""; > ; > => Prep Bra-Ket Shell Pairs <=; > ; > * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets.; > ; > => Integral Formation Loop <=; > ; > * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning.; > ; > How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look.; > ; > And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes. Made the changes. Please take another look.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248:2098,update,update,2098,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248,1,['update'],['update']
Deployability,_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2749,install,installing,2749,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2252,install,installable,2252,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installable']
Deployability,"_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/pa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3825,install,installing,3825,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"_This is a meta-issue and will be updated as needed._. - [ ] open issues:; - [ ] #2105 (Molecule reading); - [ ] #1769 (document linear response features); - [ ] #1678 (orbital guess); - [ ] #1341 (outdated, but maybe similar for libint2); - [ ] #2108 (td-dft example); - [x] #2125 (obtaining psi4); - [ ] #2138 (misc. suggestions); - [ ] cross-check with (final) release notes if all features are documented/mentioned.; - [ ] Run every example input in the manual once a release candidate is ready.; ; Please add `documentation` as label for relevant new or old issues so they can be easily found.; https://github.com/psi4/psi4/issues?q=is%3Aissue+is%3Aopen+label%3Adocumentation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2109:34,update,updated,34,https://psicode.org,https://github.com/psi4/psi4/issues/2109,3,"['release', 'update']","['release', 'updated']"
Deployability,"_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3491,Release,Release,3491,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,_license_ headers are what still need patching up.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/405#issuecomment-225907973:38,patch,patching,38,https://psicode.org,https://github.com/psi4/psi4/pull/405#issuecomment-225907973,1,['patch'],['patching']
Deployability,"_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:14452,release,release,14452,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246:1937,update,update,1937,https://psicode.org,https://github.com/psi4/psi4/pull/246,1,['update'],['update']
Deployability,"`-d3zero2b`, which can now be given explicitly disallow 3-body as a tweakable parameter (internally, `s9:=0.0`). When `s-dftd3` is the engine, another set of new extensions, e.g., `-d3atm` alias of `-d3zeroatm` turns on 3-body (`s9=1.0`) and allows user tweaks. This latter is the same behavior as -D4, which turns on 3-body by default. If this seems confusing, state what calc you want — e.g., `energy(""b3lyp-d3atm"")` — and Psi4 will figure out if you have the right engine to do the job.; - [x] Previous to QCEngine v0.26.0 (required by this Psi4 PR), the pairwise dispersion analysis returned by executable/classic/psi4-channel `dftd3` was scaled differently from that by `s-dftd3` and `dftd4` (any channel). This has been fixed. However, one must be consistent about QCEngine/Psi4/fsapt.py versions. A consistent set are QCEngine >=0.26.0 and `Empirical_Disp.dat` file generated in the course of `energy(""fisapt0-d"")` by this PR or later Psi4 (approx. v1.7.0 Psi4) and script `fsapt.py` released with Psi4 v1.7.0 or later. This is semi-enforced since v1.7 requires v0.26 (`fsapt.py` is a free agent). Another consistent set is QCEngine <0.26.0 and Psi4 and `fsapt.py` <v1.7. Mixing old Psi4 or fsapt.py with new QCEngine and classic dftd3 can yield wrong fisapt analysis, and this isn't trapped.; - [x] `psi4.core.Molecule.run_dftd3` and `qcdb.Molecule.run_dftd3` don't work with `s-dftd3`. Please file an issue if you really want this capability. `run_gcp` will use classic `gcp` or `mctc-gcp` interchangeably, whichever you have available. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] first look at `_engine_can_do` and observe that compared to good ol' dftd3, s-dftd3 (aka simple-dftd3) _can't_ do d2 and by default does d3 variants with ATM dispersion built in (s9=1.0); - [x] in contrast, mctc-gc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2791:2437,release,released,2437,https://psicode.org,https://github.com/psi4/psi4/pull/2791,1,['release'],['released']
Deployability,"`DESTDIR` hasn't been part of Psi4 cmake for a few years since it was updated for Windows compatibility. Looking through some docs, I see it can have influence if set as an environment variable. That (and basically any envvar) is untested; in my opinion, CMake has too many input routes already :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325646186:70,update,updated,70,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325646186,1,['update'],['updated']
Deployability,"`Lib/site-packages/psi4/core.cp38-win_amd64.pyd` is indeed the name for the fat compiled file. The `site-packages\psi4\__init__.py` has the `from . import core`. The dot is ""here"", so it's seeking the `site-packages\psi4\core.*pyd` file, so all's well there, I think. For adding to PATH, I think it'd be `psi4conda\Scripts` to add, not the parent directory. But I wonder if you could be using the ordinary Windows prompt instead of the Anaconda command prompt. Worth trying the left-side ""Recommended Approach"" in step 6 of https://www.datacamp.com/community/tutorials/installing-anaconda-windows rather than the right-side setup, if you aren't already.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875197239:569,install,installing-anaconda-windows,569,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875197239,1,['install'],['installing-anaconda-windows']
Deployability,`MEM_JK` and `DISK_JK` need docs. Mentioned [here](http://forum.psicode.org/t/manual-update-dfocc-requires-scf-type-disk-df/904/2).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/960#issuecomment-387813447:85,update,update-dfocc-requires-scf-type-disk-df,85,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-387813447,1,['update'],['update-dfocc-requires-scf-type-disk-df']
Deployability,```; !pip install -q condacolab; import condacolab; condacolab.install(). %%capture; !conda config --add channels http://conda.anaconda.org/psi4; !mamba install psi4 resp -c conda-forge/label/libint_dev -c conda-forge; !mamba install nglview ase -c conda-forge. from google.colab import output; output.enable_custom_widget_manager(). import psi4; ```. returns: ModuleNotFoundError: No module named 'psi4',MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3109:10,install,install,10,https://psicode.org,https://github.com/psi4/psi4/issues/3109,4,['install'],['install']
Deployability,"```; ## User-Facing Notes; <!-- A bullet-point format description of how this PR affects the user. This will be copy-pasted into the release notes. May be empty. -->; - [ ] Note 1; - [ ] Note 2. ## Dev-Facing Notes; <!-- A bullet-point format description of what this PR does ""at a glance."" Target audience is code reviewers and other devs skimming PRs. Should be more technical than user notes. Should never be empty. -->; - [ ] Note 1; - [ ] Note 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2718#issuecomment-1244232466:133,release,release,133,https://psicode.org,https://github.com/psi4/psi4/pull/2718#issuecomment-1244232466,1,['release'],['release']
Deployability,"```; $ ctest -R cubeprop-esp -V; UpdateCTestConfiguration from :/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; UpdateCTestConfiguration from :/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Test project /home/raimis/psi4.git/linux_build; Constructing a list of tests; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 360; Start 360: cubeprop-esp. 360: Test command: /shared/raimis/opt/miniconda/envs/psi4/bin/python ""/home/raimis/psi4.git/tests/runtest.py"" ""/home/raimis/psi4.git/tests/cubeprop-esp/input.dat"" ""/home/raimis/psi4.git/linux_build/testresults.log"" ""false"" ""/home/raimis/psi4.git"" ""false"" ""/home/raimis/psi4.git/linux_build/tests/cubeprop-esp/output.dat"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/""; 360: Test timeout computed to be: 1500; 360: 	Comparing Dt......................................................PASSED; 360: Traceback (most recent call last):; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"", line 264, in <module>; 360: exec(content); 360: File ""<string>"", line 37, in <module>; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/psi4/driver/p4util/util.py"", line 387, in compare_cubes; 360: raise TestComparisonError(message); 360: ; 360: TestComparisonError: 	Comparing ESP: computed cube file does not match expected cube file.; 360: Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); 1/1 Test #360: cubeprop-esp ...................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937:33,Update,UpdateCTestConfiguration,33,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937,2,['Update'],['UpdateCTestConfiguration']
Deployability,"```; $ ctest -R json-schema_0_properties -V; UpdateCTestConfiguration from :/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; UpdateCTestConfiguration from :/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Test project /home/raimis/psi4.git/linux_build; Constructing a list of tests; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 401; Start 401: json-schema_0_properties. 401: Test command: /shared/raimis/opt/miniconda/envs/psi4/bin/python ""/home/raimis/psi4.git/tests/runtest.py"" ""/home/raimis/psi4.git/tests/json/schema_0_properties/input.dat"" ""/home/raimis/psi4.git/linux_build/testresults.log"" ""false"" ""/home/raimis/psi4.git"" ""false"" ""/home/raimis/psi4.git/linux_build/tests/json/json-schema_0_properties/output.dat"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/""; 401: Test timeout computed to be: 1500; 401: ; 401: *** tstart() called on computer06; 401: *** at Mon Jul 9 14:44:29 2018; 401: ; 401: => Loading Basis Set <=; 401: ; 401: Name: 6-31G; 401: Role: ORBITAL; 401: Keyword: BASIS; 401: atoms 1 entry O line 117 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/6-31g.gbs ; 401: atoms 2-3 entry H line 26 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/6-31g.gbs ; 401: ; 401: ; 401: ---------------------------------------------------------; 401: SCF; 401: by Justin Turney, Rob Parrish, Andy Simmonett; 401: and Daniel Smith; 401: RHF Reference; 401: 1 Threads, 500 MiB Co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:45,Update,UpdateCTestConfiguration,45,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,2,['Update'],['UpdateCTestConfiguration']
Deployability,"```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:5104,install,install,5104,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"```; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; ```. libint2-2.7.2 is installed. It installs the pkgconfig file: /usr/local/libdata/pkgconfig/libint2.pc. Also this line isn't correct:; > Could NOT find Libint2 (missing: Libint2_DIR). ```-DLibint2_DIR=/usr/local``` was supplied.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2675:158,install,installed,158,https://psicode.org,https://github.com/psi4/psi4/issues/2675,2,['install'],"['installed', 'installs']"
Deployability,"```; 100% tests passed, 0 tests failed out of 520; ```. > The original coder probably added it _anticipating_ it would be useful, but it seems to have never been used. I'm happy to see unused code burn. Burn, baby, burn. Patch incoming...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2736#issuecomment-1268675957:221,Patch,Patch,221,https://psicode.org,https://github.com/psi4/psi4/pull/2736#issuecomment-1268675957,1,['Patch'],['Patch']
Deployability,"```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=lib;-DCMAKE_INSTALL_INCLUDEDIR=include;-DBUILD_SHARED_LIBS=OFF;-DCMAKE_POSITION_INDEPENDENT_CODE=ON;-DSIMINT_STANDALONE=OFF;-DENABLE_TESTS=OFF;-DSIMINT_VECTOR=sse;-DSIMINT_MAXAM=6;-C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-$<CONFIG>.cmake;-GUnix Makefiles;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external'; ./stage/usr/local/psi4/share/cmake/simint/simintConfig.cmake:set(simint_VECTOR sse); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356840364:2238,Release,Release,2238,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364,1,['Release'],['Release']
Deployability,"```; The following tests FAILED:; 	132 - dfmp2-ecp (Failed); 	368 - dft-bench-interaction (Timeout); 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The 132 is not surprising, as with this patch up to `[Kr]` is frozen for Xe, without it only up to `[Ar] + 3d` from the ECP. I guess this is a question of what we want as default behaviour for `freeze_core` - always freeze up to the previous Rg (as done here and in other codes), or ignore further freezing for ECP's (as is done in `master`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/978#issuecomment-383831824:213,patch,patch,213,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-383831824,1,['patch'],['patch']
Deployability,"```; [ 22%] Performing configure step for 'psi4-core'; cd /usr/ports/science/psi4/work/.build/psi4-core-prefix/src/psi4-core-build && /usr/local/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/ports/science/psi4/work/.build/stage -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=/usr/bin/c++ ""-DCMAKE_CXX_FLAGS=-O2 -pipe -fno-omit-frame-pointer -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -fno-omit-frame-pointer -isystem /usr/local/include -march=native"" -DCMAKE_C_COMPILER=/usr/bin/cc ""-DCMAKE_C_FLAGS=-O2 -pipe -fno-omit-frame-pointer -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -march=native"" -DCMAKE_CXX_STANDARD=14 -DCMAKE_CXX_STANDARD_REQUIRED=ON -DCMAKE_CXX_EXTENSIONS=OFF -DCMAKE_Fortran_COMPILER= -DCMAKE_Fortran_FLAGS= -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_BINDIR=bin -DCMAKE_INSTALL_DATADIR=share -DCMAKE_INSTALL_INCLUDEDIR=include -DCMAKE_INSTALL_MESSAGE=LAZY -DPYMOD_INSTALL_LIBDIR=/ -DMAX_AM_ERI=5 -DPYTHON_EXECUTABLE=/usr/local/bin/python3.6 -DPYTHON_INCLUDE_DIR=/usr/local/include/python3.6m -DPYTHON_LIBRARY=/usr/local/lib/libpython3.6m.so -DPSI4_ROOT=/usr/ports/science/psi4/work/psi4-1.3-60-ga5d3586e9 -DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF -DENABLE_dkh=OFF -DENABLE_libefp=OFF -DENABLE_erd=OFF -DENABLE_simint=OFF -DENABLE_gdma=OFF -DENABLE_PCMSolver=OFF -DENABLE_OPENMP=ON -DTargetLAPACK_DIR=/usr/ports/science/psi4/work/.build/stage/share/cmake/TargetLAPACK -DTargetHDF5_DIR= -Dambit_DIR= -DCheMPS2_DIR= -Ddkh_DIR= -Dlibefp_DIR= -Derd_DIR= -Dgau2grid_DIR=/usr/local/share/cmake/gau2grid -Dgdma_DIR= -DLibint_DIR= -DPCMSolver_DIR= -Dpybind11_DIR=/usr/local/share/cmake/pybind11 -Dpylibefp_DIR= -Dsimint_DIR= -DLibxc_DIR= -DFortran_ENABLED= -DLIBC_INTERJECT= -DRESTRICT_KEYWORD= -DFC_SYMBOL=2 -DOpenMP_LIBRARY_DIRS= -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -C/usr/ports/science/psi4/work/.build/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake ""-GUnix Makefiles"" /usr/ports/science/psi4/work/psi4-1.3-60-ga5d3586e9/psi4; loading initial cache ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1588:239,Release,Release,239,https://psicode.org,https://github.com/psi4/psi4/issues/1588,1,['Release'],['Release']
Deployability,```; pip install yapf; yapf -i script.py; ```. Done! Best way to do this is use some sort of editor like Sublime and grab PyYapf so it will only format your selection.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/753#issuecomment-312351821:9,install,install,9,https://psicode.org,https://github.com/psi4/psi4/pull/753#issuecomment-312351821,1,['install'],['install']
Deployability,"```DESTDIR``` is **always** set during build and install. It contains the real stage directory path that cmake uses to determine where files are installed. psi4 build adds ```DESTDIR``` to its inner stage directory which causes this problem. > That (and basically any envvar) is untested; in my opinion, CMake has too many input routes already :-). What does this mean?; Every port uses DESTDIR to supply stage directory. It is super well tested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325649105:49,install,install,49,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325649105,2,['install'],"['install', 'installed']"
Deployability,"```console; $ cmake --version; cmake version 3.18.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; $ ls /path/to/eigen3/share/eigen3/cmake; Eigen3Config.cmake Eigen3ConfigVersion.cmake Eigen3Targets.cmake UseEigen3.cmake; ```. Here Eigen 3.3.7 is manually installed. ```console; $ git describe --always; v1.5-178-gd725195826a1; $ cmake -G Ninja -B build -S . -D BOOST_ROOT:PATH=/path/to/boost -D Eigen3_DIR:PATH=/path/to/eigen3/share/eigen3/cmake; $ cmake --build build -- external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:280,install,installed,280,https://psicode.org,https://github.com/psi4/psi4/issues/2606,3,['install'],"['install', 'installed']"
Deployability,"```external/upstream/libint/CMakeLists.txt``` has this line:; ```; find_package(Libint 1.2.0 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```. I have the latest version of libint installed: libint-1.2.1_1 (also see here https://repology.org/project/libint/versions). I changed this line to the latest version:; ```; find_package(Libint 1.2.1 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```; but it fails to find it:; ```; -- Suitable Libint could not be located, Building Libint instead.; ```. libint-1.2.1_1 doesn't provide .pc or .cmake files, so I am not sure how can it even ever be able to find it through a cmake script like this?. It's undesirable to download and rebuild libint when the package is available. Please also note that the latest generation of libint is libint2, which does provide ```libint2.pc``` .",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589:174,install,installed,174,https://psicode.org,https://github.com/psi4/psi4/issues/1589,1,['install'],['installed']
Deployability,"`dfocc` was better off. `dfocc` doesn't have problems 1, 2, or 4. Not sure about 5 because I'm rusty on converting DF integrals to conventional, but if it did have that problem, it would show up in the gradients. 3 is a problem in `dfocc`. I can deal with it if you'd like, but I assumed nobody would use that algorithm for orbital optimization, and it wasn't worth adding to the #1390 nightmare. Good catch on the comment. I'll update that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829#issuecomment-594647283:429,update,update,429,https://psicode.org,https://github.com/psi4/psi4/pull/1829#issuecomment-594647283,1,['update'],['update']
Deployability,`guess` Not Updated After Failed Job,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2458:12,Update,Updated,12,https://psicode.org,https://github.com/psi4/psi4/issues/2458,1,['Update'],['Updated']
Deployability,"`libdiis` needs more changes to get it talking with [A/E]DIIS, so it'll be a while before further updates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2320#issuecomment-943364464:98,update,updates,98,https://psicode.org,https://github.com/psi4/psi4/pull/2320#issuecomment-943364464,1,['update'],['updates']
Deployability,"`libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:2064,upgrade,upgrade,2064,https://psicode.org,https://github.com/psi4/psi4/issues/1533,2,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"`psi4 --version` gives:. ```; (gdb) r; Starting program: /home/ward/tmp/psi4release/build2/bin/psi4 --version; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; 51 if (__os.tie() && __os.good()); Missing separate debuginfos, use: debuginfo-install python-libs-2.7.8-9.fc21.x86_64; (gdb) bt; #0 std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; #1 0x000000390e699869 in std::__ostream_insert<char, std::char_traits<char> > (__out=..., __s=__s@entry=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __n=76); at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream_insert.h:82; #2 0x0000000001e6bd18 in operator<< <std::char_traits<char> > (__s=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __out=...) at /usr/include/c++/4.9.2/ostream:535; #3 Write2Buffer<char*> (Input=<synthetic pointer>, this=0x0) at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.h:157; #4 psi::PsiOutStream::Printf (this=0x0, format=format@entry=0x204e9c0 "" "", '-' <repeats 71 times>, ""\n"") at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.cc:82; #5 0x00000000008a79bf in psi::print_version () at /home/ward/tmp/psi4release/build2/src/bin/psi4/version.cc:38; #6 0x00000000008e2d57 in psi::psi_start (argc=argc@entry=2, argv=argv@entry=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi_start.cc:187; #7 0x0000000000780f3c in main (argc=2, argv=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi4.cc:100; ```. Done on Fedora 21 with gcc-4.9.2 using 93a5e8d84afd652e6226. `psi4 --help` works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88:535,install,install,535,https://psicode.org,https://github.com/psi4/psi4/issues/88,1,['install'],['install']
Deployability,`psi4` installed via `conda` fails to run when installed in symlinked directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3084:7,install,installed,7,https://psicode.org,https://github.com/psi4/psi4/issues/3084,2,['install'],['installed']
Deployability,"`samples/SUMMARY` which was the major offender was removed some time ago. If someone's added a test to `tests`, the attendant `samples` file doesn't get updated automatically. Perhaps a post-commit hook is in order to make that happen. Basically, we want samples to never be out of date so that a make, make docs doesn't add anything outside the objdir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/14#issuecomment-121321984:153,update,updated,153,https://psicode.org,https://github.com/psi4/psi4/issues/14#issuecomment-121321984,1,['update'],['updated']
Deployability,"`src` is pretty common in a source tree, but I don't think I've ever seen it in an installed `include` tree. I could live with separate `lib` and `bin` underneath `include` if that's the consensus instead of adding `includes/bin` to the includes path.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/376#issuecomment-218530852:83,install,installed,83,https://psicode.org,https://github.com/psi4/psi4/pull/376#issuecomment-218530852,1,['install'],['installed']
Deployability,"`uusing` for nested decorator marks and `using` for list marks.; - [x] to avoid FutureWarning, changed three `distutils.dir_util.copy_tree` into `shutil.copytree`. this is a py38 language feature, the first actual breaking of py37+ compatibility.; - [x] added the openfermion demo as test; - [x] apparently 3body in dftd3 fails on Mac. near-term goal is replacing, so skip for now; - [x] newly install pytest.ini and install any test_input.py, input.dat, and input.py from tests/ . sensibly, input.dat/py would only get installed if test_input.py present, but I can't teach cmake that logic, so it's either this or have to register each pytest-prepared psithon test. aux files from tests/ are also installed but these have to be registered with cmake.; - [x] moved `compare_moldenfiles()` from testing code to driver alongside `compare_fchkfiles()` so that it can be documented.; - [x] ""psi"" and ""api"" marks added to all tests/pytests/ files for reasons explained in docs. - Docs; - [x] Updated the add_tests documentation, esp. wrt pytest; - [x] Might have done enough of the outline to close #2396 ; - [x] Straightened out docstring inheritance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for developers/users who prefer those to psi4-dev conda package. they were generated from the ecosystem GHA but not autoupdated -- that may happen in a future GHA from master; - [x] added passing `CMAKE_OSX_DEPLOYMENT_TARGET` and `CMAKE_OSX_SYSROOT` cmakevars to internal builds. this is how the macOS SDK gets passed through, apparently, for C/C++. it happens through `CMAKE_Fortran_FLAGS` for Fortran. proven necessary for v2rdm_casscf, so I rolled it out to all the compiled external",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:4814,Update,Updated,4814,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['Update'],['Updated']
Deployability,`v1.3.2` is available for Windows via `conda install psi4 -c raimis`. Please report back if you give it a try. We'll copy it to `-c psi4` (I think) after a few positive reports from the wild.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-494087443:45,install,install,45,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494087443,1,['install'],['install']
Deployability,"a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:4206,install,installable,4206,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installable']
Deployability,"a debug statement in the `AO_core()` routine; ```; // a fraction of memory to use, do we want it as an option? ; if (memory_ < required_core_size_) {; outfile->Printf(""memory = %lu < required_core_size = %lu, turning core off\n"",(long unsigned) memory_,(long unsigned) required_core_size_);; AO_core_ = false;; }; ```; and I see the following in the log file; ```; ==> Primary Basis <==. Basis Set: PCSEG-0; Blend: PCSEG-0; Number of shells: 313; Number of basis function: 489; Number of Cartesian functions: 489; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (PCSEG-0 AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry SI line 742 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 3 entry F line 383 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 4 entry O line 323 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 5-8 entry N line 263 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 9-43 entry C line 203 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 44-90 entry H line 23 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs . memory = 256000000 < required_core_size = 671520055, turning core off; memory = 256000000 < required_core_size = 671520055, turning core off; ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 489 489 0 0 0 0; -------------------------------------------------------; Total 489 489 165 165 165 0; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 5.003 GiB; user supplied 27.940 GiB. Turning off in-core AOs.; ```. That is, the routine gets called twice in the basis set up phase with the default memory 256 MB. This is why the initialization is screwed up. Someone else's job to fix that ;)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503720160:1088,install,install,1088,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503720160,2,['install'],['install']
Deployability,a-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1679,install,installing,1679,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), flags=<optimized out>, arena=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1147; #51 0x00007faabd6ddffd in PyRun_StringFlags (str=<optimized out>, start=257, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab0338",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:20140,install,install,20140,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['install'],['install']
Deployability,"a3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0xD22771B: __kmp_launch_thread (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0xD26630A: _INTERNAL_26_______src_z_Linux_util_cpp_20354e55::__kmp_launch_worker(void*) (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0x4E3EEA4: start_thread (in /usr/lib64/libpthread-2.17.so); ==2802== by 0x51519FC: clone (in /usr/lib64/libc-2.17.so); ==2802== Address 0x2866b120 is 0 bytes after a block of size 73,440 alloc'd; ==2802== at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344); ==2802== by 0x1CA85F62: allocate (new_allocator.h:104); ==2802== by 0x1CA85F62: allocate (alloc_traits.h:491); ==2802== by 0x1CA85F62: _M_allocate (stl_vector.h:170); ==2802== by 0x1CA85F62: _M_fill_insert (vector.tcc:491); ==2802== by 0x1CA85F62: std::vector<long, std::allocator<long> >::insert(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, unsigned long, long const&) (stl_vector.h:1054); ==2802== by 0x1CA7E37F: resize (stl_vector.h:696); ==2802== by 0x1CA7E37F: psi::TwoBodyAOInt::create_sieve_pair_info(std::shared_ptr<psi::BasisSet>, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >&, bool) (twobody.cc:244); ```; This is a harmless copy construction of a vector that is well defined. I tried to remove the AVX2 code path using the [MKL options](https://software.intel.com/content/www/us/en/develop/documentation/onemkl-developer-reference-c/top/support-functions/miscellaneous/mkl-enable-instructions.html) but the problem persisted. Finding an old pre-AVX box and running on there did the trick, and Valgrind came back clean. It was clean for the GCC build also. Therefore it appears that there is a memory problem, but it's likely either an Intel compiler bug (I think OneAPI is still in beta technically) or a problem with me mixing `libiomp5` from Conda with the native OneAPI installed compiler suite. I'll try the commercial Intel compilers next...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-904787207:4074,install,installed,4074,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-904787207,1,['install'],['installed']
Deployability,able tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16314,Install,Install,16314,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,acke_config.h lapacke_mangling.h lapacke_utils.h); + ; + set(OPENBLAS_BLAS_LIBRARY_PATH_SUFFIXES openblas); + set(OPENBLAS_LAPACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAPACK_LIBS openblas); + ; + #-------------------------------------------------------------------------------; # MKL; ; set(MKL_BLAS_INCLUDE_PATH_SUFFIXES); [sfux@develop01 psi4]$ ls; cdash CMakeAddOpenBLAS.patch _conda_vers.py doc LICENSE plugins README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:2785,Patch,Patching,2785,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Patch'],['Patching']
Deployability,"ad of `DFJK` for the initial SCF convergence process. To support `SCF_COSX_GUESS`, some keyword functionality has been expanded. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` can be used to control the `COSX` grid size for the `SCF_COSX_GUESS`, with the grid in this context defaulting to (20/50). `COSX_MAXITER_FINAL` can be used to control the number of `DIRECT`/`DFDIRJ+LINK` iterations to run after the `COSX` guess, defaulting to 2 in this context. Note that the grid for `SCF_COSX_GUESS` uses different defaults compared to the usual initial grid for `DFDIRJ+COSX` runs. This PR also adds a fair bit of cleanup/QoL changes, as follows:; - The `early_screening` variable in `scf_iterator.py`, and all related quantities, have been renamed for clarity.; - `DFDIRJ+LINK` can now be used in conjunction with `DF_SCF_GUESS`.; - Tests have been expanded. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`. The grid used by the COSX guess can be controlled by the `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` keywords.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3158:2157,release,release,2157,https://psicode.org,https://github.com/psi4/psi4/pull/3158,1,['release'],['release']
Deployability,add a HOWTO Make Release page in docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496:17,Release,Release,17,https://psicode.org,https://github.com/psi4/psi4/issues/1496,1,['Release'],['Release']
Deployability,add integratorxx to buildsys,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3041:4,integrat,integratorxx,4,https://psicode.org,https://github.com/psi4/psi4/pull/3041,1,['integrat'],['integratorxx']
Deployability,"added. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Includes all commits of #533 ; - [x] Temporarily based off private repo https://github.com/loriab/simint branch config6 until the integration settles down, and we can return to tarballs. Note that if you want to test this branch, you may need to supply your GH credentials during the build to clone simint.; - [x] Adds all the pre-built detection, target referencing, docs, standardized variable names, tests that we expect from an addon to simint; - [x] Continued general documentation on addons.; - [x] Modestly tested- static and dynamic on Linux, dynamic on Mac; * **User-Facing for Release Notes**; - [x] New integral library available with `-DENABLE_simint`. ## Questions for @bennybp ; - [ ] There's some questions in external/upstream/simint/CMakeLists.txt; - [ ] I've made the simint on my acct private and just added you and some core developers who may want to test it. If you don't mind it being public, as a temp repo, that'd be a little easier.; - [ ] There are spots where I supply at most separate home, docs, and source links for addons. I've got your website, http://www.bennyp.org/research/simint/, for all three at the moment, so let me know if there are more specifics.; - [ ] I filled in the installing and configuring sections of simint.rst according to the template. Other addons (http://psicode.org/psi4manual/master/interfacing.html) often have middle sections about interacting with the code. Fill in anything you like.; - [ ] Got the following unexpected failing test cases on Linux and partially confirmed on Mac, all segfaulted. Could you take a look? None are in quicktests.; ```; The following tests FAILED:; 	 16 - cbs-xtpl-wrapper (Failed); 	144 - dft-b2plyp (Failed); 	269 - pywrap-checkrun-rhf (Failed); 	270 - pywrap-checkrun-rohf (Failed); 	271 - pywrap-checkrun-uhf (Failed); 	319 - cubeprop-esp (Failed); ```. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625:1408,install,installing,1408,https://psicode.org,https://github.com/psi4/psi4/pull/625,1,['install'],['installing']
Deployability,additional reminders:. - `dict_xc_funcs.py` is the place to add functional name aliases. Does not seem update to libxc4.0.1 yet.; - BHHLYP == BHLYP ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/996#issuecomment-385868187:103,update,update,103,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385868187,1,['update'],['update']
Deployability,ags; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms.......; ```; ```; >>> cat /proc/version ; Linux version 2.6.32-431.el6.x86_64 (mockbuild@x86-023.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Nov 10 22:19:54 EST 2013; ```; ```; >>> lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.5 (Santiago); Release:	6.5; Codename:	Santiago; ```; ```; >>> ldd -v lib/python3.6/site-packages/psi4/core.so ; 	linux-vdso.so.1 => (0x00007fffe3ffd000); 	libambit.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libambit.so (0x00002b78f3dff000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b78f4118000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b78f4335000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b78f45b9000); 	libpcm.so.1 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00002b78f47be000); 	libxc.so.5 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libxc.so.5 (0x00002b78fb817000); 	libgg.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgg.so (0x00002b78fc8e1000); 	libgdma.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgdma.so (0x00002b78fcf28000); 	libderiv.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690:3348,Release,Release,3348,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690,1,['Release'],['Release']
Deployability,"ah ok, I remember that cfour needs an environmental variable to figure out the number of mpi threads. At the configure step of the source code one sets something like:; `configure [...] --with-mpirun=mpirun -np ${CFOUR_NUM_CORES}`. Not sure if this is just our configuration or if `CFOUR_NUM_CORES` is the default name described in some installation documentation. I see that `OMP_NUM_THREADS` is handled correctly with `env=lenv`, though I don't see it is being added to `lenv`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/661#issuecomment-288652354:261,configurat,configuration,261,https://psicode.org,https://github.com/psi4/psi4/issues/661#issuecomment-288652354,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"ah, you can fix Linux CI by adding `=4` to https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85 . I forgot that regular `conda install psi4` has constrained libxc, but CI doesn't. Is that what you meant by ""bash test""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959:91,pipeline,pipelines,91,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959,3,"['install', 'pipeline']","['install', 'pipelines', 'pipelines-linux']"
Deployability,"aha, I hit this, too! You need a current master psi4 (the patch to let v2rdm build was merged this week), and you need to build off this v2rdm branch https://github.com/edeprince3/v2rdm_casscf/pull/33 . That will get you a v2rdm and psi that build, work together, and pass v2rdm tests 1–4. still working on the rest. This is what happens when I let nightly builds stumble. Problems pile up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426#issuecomment-451598912:58,patch,patch,58,https://psicode.org,https://github.com/psi4/psi4/issues/1426#issuecomment-451598912,1,['patch'],['patch']
Deployability,"ails and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10669,release,release,10669,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['release'],['release']
Deployability,ake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/st,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3590,Install,Installing,3590,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"algorithms. ## User API & Changelog headlines; - [x] The DO_LINK option has been removed.; - [x] The SCF_TYPE option ""LINK"" has been added, enabling use of the integral-direct density-fitted J + Linear Exchange K algorithm combination for JK computations. ## Dev notes & details; - [x] The new JK subclass ""DFJLinK"" has been added to Psi4. DFJLinK combines the integral-direct density fitted formation of J with the linear-scaling formation of the exact K through the LinK algorithm. DFJLinK supports both density screening and incremental Fock construction, using machinery similar to the DirectJK class to do so.; - [x] The computation of LinK, and all references thereof, have been removed from DirectJK. This includes, e.g., removal of the build_linK() function from DirectJK entirely.; - [x] All relevant tests, samples, and documentation (particularly those pertaining to LinK) have been updated to reflect the two previous changes. ## Questions; - [ ] How do we feel about having the integral-direct DF-J implementation in two separate JK subclasses? The plan is to remove this in the second CompositeJK PR, when DFJLinK and DFJCOSK are combined, but is the dual implementation of DF-J something people would take issue with?; - [ ] Do we want to the update the definition of num_computed_shells() for DFJLinK? For now, I have this set to the default JK definition for DFJLinK, and the issue is that, since there are shell triplet counts from DFJ and shell quartet counts from LinK, there would have to be a slightly more expansive change to how num_computed_shells() works in the JK class hierarchy to support DFJLinK. I'm thinking updating this will be a problem for the second CompositeJK PR, but I'm curious to see what others have to say. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:4978,update,update,4978,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['update'],['update']
Deployability,"all are with mkl 11.3 update 2; all tests run in serial; all with gcc (GCC) 4.8.5 20150623; - i7-3930K, Sandy Bridge-E; - xhost on (default), release: **Good**; - i7-4790K, Haswell-DT; - xhost on (default), release: **Bad**; - xhost off, release: **Bad**; - xhost on (default), debug: **Bad**",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198621819:22,update,update,22,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198621819,4,"['release', 'update']","['release', 'update']"
Deployability,"alled;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /███████████████████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5532,install,installed,5532,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,alling: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:1685,Install,Installing,1685,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability,"alpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186 [mEh/K] (mol. weight = 18.0106, P = 101325.00 [Pa]); Rotational S 10.673 [cal/(mol K)] 44.654 [J/(mol K)] 0.01700786 [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/345:1639,update,update,1639,https://psicode.org,https://github.com/psi4/psi4/issues/345,2,['update'],['update']
Deployability,"also, `conda install yapf -c conda-forge`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/753#issuecomment-312352303:13,install,install,13,https://psicode.org,https://github.com/psi4/psi4/pull/753#issuecomment-312352303,1,['install'],['install']
Deployability,"ance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for developers/users who prefer those to psi4-dev conda package. they were generated from the ecosystem GHA but not autoupdated -- that may happen in a future GHA from master; - [x] added passing `CMAKE_OSX_DEPLOYMENT_TARGET` and `CMAKE_OSX_SYSROOT` cmakevars to internal builds. this is how the macOS SDK gets passed through, apparently, for C/C++. it happens through `CMAKE_Fortran_FLAGS` for Fortran. proven necessary for v2rdm_casscf, so I rolled it out to all the compiled externals.; - [x] for ambit, added Python and pb11 cmakevars that are proper for the new de-boosted and new-python-searched version. left old (capital PYTHON) for now. ## Questions; - [ ] PR is mostly CI, so non-user-facing, and testing supplements, so non-user-changing. But it requires cutting-edge pytest 7 (released Dec 2021) available from conda c-f and pypi, not from conda defaults yet. ok to demand of users? most aren't running pytests I would guess.; - [ ] In documenting psi4 compare functions, have to autodoc qcel compare fn, and that shows up a circular import in forward declaration of types (bet you didn't think that would be a sentence applied to Python 5 years ago) that produces a Sphinx warning. I've figured out how to edit qcel to avoid this, but until that makes its way into a release, we may have to turn off warnings-as-errors in psi4 docs build. ok?. close #1708. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge !SQUASH!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:6130,release,released,6130,https://psicode.org,https://github.com/psi4/psi4/pull/2454,2,['release'],"['release', 'released']"
Deployability,"anch and API updates (see #2442), the specific requirements of psi (see https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L26), and the quirk that I can't yet myself get past a symbol limit with larger AM and the Intel linker to build a big-AM L2 conda package, building bigger Libint2's hasn't been something we recommend casually. As far as I know, it can be done with gcc, though. Any generation or build step will take hours in parallel. I don't suggest you do this, esp. if you're most accustomed to single-line builds. Nevertheless, a strategy is:; * clone and switch branches to https://github.com/loriab/libint/tree/new-cmake-harness-lab-rb1; * collect deps as described https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md . You'll need C++ compiler, CMake, Ninja, Boost headers, GMPXX, and Eigen3; * configure something like Exhibit A below. `CMAKE_PREFIX_PATH` is where you hint your boost, gmp, eigen, etc. install locations. You might have to comment out traps in int_am.cmake that stop you setting the AM too high.; * I suggest only doing the generation step by building as `cmake --build <build_dir> --target export`. when this finishes (several hours, so you might want to test run with lower AM), there'll be a `libint-*.tgz` file produced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmak",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:1153,install,install,1153,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['install'],['install']
Deployability,"and not recommended. For an easier time, wait a month, re-clone and re-fork all of your Psi4 repos, move all your development to those repos, and go back to normal development cycles. Longer version:; 1. I wrote an extensive list of changes at the top of this PR. Read them– they affect you.; 2. To build Psi4 you now will need to do something along the lines of (in the top-level of the cloned source code):; ; ``` .sh; cmake -H. -Bbuild ; cd build && make; make install; ```; - In the configure step (the first line) there are a large number of CMake variables you can set to fine tune the build. See the top-level `CMakeLists.txt` for the more common ones. For example to change the C++ compiler add: `-DCMAKE_CXX_COMPILER=/path/to/compiler` after `-Bbuild`; - Anything not part of Psi4 proper is now in external and is expected to have its own build files. Paths where CMake should look for dependencies should now be passed to these external projects via `CMAKE_PREFIX_PATH`. ; - Installing is now a thing for Psi4. In theory you can run Psi4 from the build directory, but you'll quickly find it annoying (I'll leave it to you to learn why). Tests should still work from the build directory and can be performed from there before installing. They should be performed using `ctest` as normal. ; 3. Within the next week anyone who compiles Psi4 regularly (as opposed to just using the Conda package) should clone this branch and try it out. Please do it sooner rather than later because of the following points.; 4. Once this PR is merged, git operations on forks and clones of the current master repo will likely cease to work without a ton of effort. This is because of the size and amount of changes in this PR. Instead of fighting to rebase on top of it, there are two options:; 1. If you have some small changes you want to make in the near future [fork my fork](https://github.com/ryanmrichard/psi4), add your changes, submit a PR to me; 2. Wait until after my PR is merged into Psi4's maste",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-236723542:1183,Install,Installing,1183,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-236723542,1,['Install'],['Installing']
Deployability,"and passed into C side by the `Wavefunction` `get_basisset` and `set_basisset` calls.; - The `Wavefunction` class now has internal `variables_` and `arrays_` std::maps for double and SharedMatrix types, respectively. These should be used inside a computation to enable greater localization of variables.; - Numpy integration has been expanded to allow Matrices and Vector to be converted to NumPy arrays and back. Please see `tests/numpy-array-interface` for a full suite of examples.; - The GitHub history has been rewritten. All forks built prior to 10/19/2016 are no longer valid. Please refork before working on Psi4. ; - Plugins are now based off a cmake system and the interface has received a substantial renovation. ; - Python API should not be considered stable. # Miscellaneous; - The sto-3g and 6-31G fitting basis sets used to default to cc-pVDZ-RI for both JKFIT and RI fit roles. For these basis sets the default is now def2-SVP-JKFIT and def2-SVP-RI for JKFIT and RI fit roles, respectively. ; - The MCSCF module now accepts the `MCSCF_ROTATE` command to rotate orbitals from the `SCF` guess.; - Environment variable `PSI4DATADIR` is now defunct. `PSIDATADIR`, to point to useful text files in `/share/psi4/`, remains but should not need to be used unless you want to specify one _not_ adjacent to the built `psi4/core.so` library. For running psi4 from both staged and installed locations, it should default just fine and not need `PSIDATADIR=/path/to/share/psi4` or `psi4 -l /path/to/share/psi4`.; - wB97X-based functionals were using the 0.3 instead of 0.4. This makes no appreciable difference at the cross-database hundredths of a kcal/mol level but in a little wrong.; - `print` in Psithon (input file syntax) no longer processed into `print_out` commands that redirect to output file. Now it means whatever your python print means. ## Suggest adopting conda/conda RN categories:. ### New Features. ### Deprecations/Breaking Changes. ### Improvements. ### Non-User-Facing Changes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/485:3346,install,installed,3346,https://psicode.org,https://github.com/psi4/psi4/issues/485,1,['install'],['installed']
Deployability,"and possibly another `-std=c++11` if cmake detects that your compiler supports.; - [x] Put docs in order wrt threading; - [x] Make `psi4/__init__.py` pay attention to `PSI_SCRATCH`. Otherwise scratch is non-adjustible in PsiAPI mode.; - [x] Default to serial execution in `psi4/__init__.py`. Can be overruled in Psithon mode through `-nN` or `set_num_threads(N)`. Can be overruled in PsiAPI mode through `set_num_threads(N)`.; - [x] Fix `atexit` deregistering in Py3; - [x] Removed get_/set_num_threads driver wrappers. Still looks the same to users. Prints ""Threads set to %d by Python driver"" in output file so there's a record of the change.; - [x] `psi4.compare_values()` and friends adapted to work with pytest upon success. Recommended pattern: `ans = psi4.compare_values(normal test args here); assert ans`.; - [x] Set up pytest so can test installed psi4 free of cmake/ctest. For the moment, you need to be in `${top-level-psi4-dir}/tests/pytest`, have pytest installed (`conda install pytest`), have psi4 importable (`psi4 --psiapi-path`), and run `python -m pytest` or for more info, `python -m pytest -vs`.; - [x] Revive a ccsd(t) sp and an mp2 opt in the cfour interface. Add a pysmoke test.; - [x] Vital tweaks so that psiapi can handle more than vanilla calcs. Includes initializing efp in psi4.geometry, moving pcmsolver path detect to __init__, and the options clearing mentioned above.; - [x] Fix TargetHDF5 detection for detect pre-built case (i.e., conda case). * **User-Facing for Release Notes**; - [x] CMake 3.3 now required; - [x] Using `OMP_NUM_THREADS` and/or `MKL_NUM_THREADS` to guide parallelism in Psi4 is _now deprecated_. Psi4 won't pay the least attention to these variables.; - [x] Added `psi4 --psiapi-path` command-line argument. This prints the bash commands you need to execute to set up python interp and pythonpath in your shell to `python -c ""import psi4""`; - [x] Psi4 molecule strings passed to `psi4.geometry()` no longer balk at python-style comments, as th",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627:1333,install,installed,1333,https://psicode.org,https://github.com/psi4/psi4/pull/627,2,['install'],"['install', 'installed']"
Deployability,"ant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'gradient', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz', '-grad'], 'dashlevel': 'd2', 'dashparams': {'alpha6': 20.0, 's6': 1.05, 'sr6': 1.1}, 'dashparams_citation': '', ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; ----------; jobrec : dict; Nested dictionary with input specifications for DFTD3 in generic; QC terms.; dftd3rec : dict; Nested dictionary with input specification and output",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:5397,update,updates,5397,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['update'],['updates']
Deployability,"any non-VV10 DFT functional currently (release v1.2.1) crashes already if one sets `DFT_VV10_POSTSCF true`, simply because VV10 is turned on without any checks. . And while writing about the problem with the modified libxc functionals, I figured i need to switch two lines of code!; What got me stuck, was that using `set_vv10_b` in `dict_builder.py` re-activated VV10, and I need to use it before turning off VV10. Now waiting on the reference outputs from Lars to make a test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1320#issuecomment-439212034:39,release,release,39,https://psicode.org,https://github.com/psi4/psi4/pull/1320#issuecomment-439212034,1,['release'],['release']
Deployability,"ar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anacond",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:4254,install,install,4254,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['install'],['install']
Deployability,"arch 2022 — #2413; * post B — 23 March 2022 — #2494 ; * step C — 25 March 2022 — #2386; * step C — 25 March 2022 — #2496; * step C — 30 March 2022 — #2504; * step C — 31 March 2022 — #2517; * step C — 31 March 2022 — #2414; * step C — #2503; * step C — #2502; * step A — 8 May 2023 — #2537; * step A' — 8 May 2023 — #2861; * step C — #2473 (depends on https://github.com/evaleev/libint/pull/242); * step B — WIP sidestepping; * step B — WIP — https://github.com/evaleev/libint/pull/259; * step B — WIP — https://github.com/evaleev/libint/pull/233; * step B — WIP — https://github.com/evaleev/libint/pull/205; * step B' — WIP runtime changes from step B, no buildtime changes; * step B' — WIP — https://github.com/evaleev/libint/pull/271; * step B' — WIP — #3047 ; * step B' — WIP — https://github.com/conda-forge/libint-feedstock/pull/22; * coordinate with packagers and other QC programs for a AM and integrals types l2 config options set that is adequate for all. #### Added; * 15 Feb: `_15` pkg for step B; * 18 Feb: `_4` pkg for step B (thanks, Jet!); * 22 Feb: add OS->MD step in. convert unordered steps to letters; * 16/17 Mar: switch out good conda packages for step 3 (M: 4->6; W: 3->5); * 23 Mar: add more PRs and items to list from 2414; * 23 Mar: added `_7` pkg for mac for step B; * 23 Mar: clarified M-D multipole integral notes (@maxscheurer); * 25 Mar: reordered some bullets for merged PRs; * 5 Apr: add more M-D/OS removal PRs to step C (@maxscheurer); * 5 Apr: switch to new linux pkg for step A (L: 12->16); * 9 Apr: add new mac pkg for step A (M: 8) and edited step A; * 21 May: updated table for v1.6; * 10 Feb 2023: updated table for v1.7 and A' replacing step A. deleted A packages and posted A' Linux one; * 17 Feb 2023: added A' Mac; * 16 May 2023: finish out A' row for v1.8; * 4 Dec 2023: finish out A'' row (incomplete B' strategy) for v1.9. note L2 shift is _not required_ -- psi4 can work with A' or A'' -- the difference is in the generation, not the library contents.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:8369,update,updated,8369,https://psicode.org,https://github.com/psi4/psi4/issues/2442,2,['update'],['updated']
Deployability,are all the test plugins building ok upon first compilation? What does your (staged or installed) [plugin cache](https://github.com/psi4/psi4/blob/master/psi4/psi4PluginCache.cmake.in) look like?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565#issuecomment-271921477:87,install,installed,87,https://psicode.org,https://github.com/psi4/psi4/issues/565#issuecomment-271921477,1,['install'],['installed']
Deployability,"as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3210,install,installed,3210,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"as written assuming that one wants to find a; wavefunction of a definite irreducible representation. So, within D2H, or; C2H, your 3 determinants have different symmetries. I think the only; subgroup in which they will have the same irrep is if it is run in C1. So, I tried setting it up in C1. It runs, but it just gives the HF energy; back. Why? Well, even if we tell the program ""C1"", the system still has; the underlying atomic symmetry (D2H being the highest Abelian subgroup).; Under D2H symmetry, those 3 determinants won't mix, and they don't. Of course, the *true* symmetry of the molecule is atomic symmetry, higher; than D2H. But unfortunately we only have Abelian subgroups in Psi. I am not sure offhand if one could force a mixing by deliberately breaking; the symmetry of the orbitals, or by using a different guess CI vector. I'd; have to think about that a little more. It might be that to do what you; are trying to do and get a fully-spin-adapted multi-configurational; wavefunction, one would need to use actual spherical harmonic atomic; orbitals, not the Cartesian representations p_x, p_y, p_z. On Wed, Jan 8, 2020 at 1:52 PM David Sherrill <prof.david.sherrill@gmail.com>; wrote:. > Hm, nope, that doesn't get around the problem. I'll see if I can take a; > look if I get a minute free later.; >; > On Wed, Jan 8, 2020 at 1:46 PM David Sherrill <; > prof.david.sherrill@gmail.com> wrote:; >; >> This is one of those rare cases where the HF reference actually has some; >> influence. (Usually, we say that the HF is ""irrelevant"" in a CASSCF; >> computation). The issue is that the code can't determine what irrep; >> your target wavefunction is supposed to be, because you haven't given it; >> information about the orbital occupancy of the reference HF wavefunction.; >> I think if you specified docc [] and socc [] arrays for the reference; >> high-spin triplet, the code would have a much better chance to figure out; >> what you want.; >>; >> On Wed, Jan 8, 2020 at 7:10 AM S",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1778#issuecomment-572253043:1031,configurat,configurational,1031,https://psicode.org,https://github.com/psi4/psi4/issues/1778#issuecomment-572253043,1,['configurat'],['configurational']
Deployability,"as.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; blas.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapk:; lapk.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; lapk.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapk.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapk.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapack:; lapack.INTERFACE_COMPILE_DEFINITIONS = ""USING_LAPACK_MKL""; lapack.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapack.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapack.INTERFACE_LINK_LIBRARIES = ""lapk;blas;tgt::MathOpenMP"". -- Found LAPACK MKL: /opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so;...; ```. If I try to build, it eventually bails out with:; ```; Scanning dependencies of target psi4-core; [ 78%] Creating directories for 'psi4-core'; [ 81%] No download step for 'psi4-core'; [ 84%] No update step for 'psi4-core'; [ 87%] No patch step for 'psi4-core'; [ 90%] Performing configure step for 'psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:2261,update,update,2261,https://psicode.org,https://github.com/psi4/psi4/issues/1041,3,"['Release', 'patch', 'update']","['Release', 'patch', 'update']"
Deployability,"asis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -0.15577370 xtpl_highest_1; total CBS -1011.27544804; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.g",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:1697,install,install,1697,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability,"asscf.so', ref_wfn); E RuntimeError:; E Fatal Error: v2RDM did not converge.; E Error occurred in file: /scratch/psilocaluser/conda-builds/v2rdm_casscf_1491348825317/work/v2rdm_solver.cc on line: 1799; E The most recent 5 function calls were:; E; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::v2rdm_casscf::v2RDMSolver::compute_energy(); E py_psi_plugin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<psi::Wavefunction>). /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/pymodule.py:66: RuntimeError; ---------------------------------------------- Captured stdout call -----------------------------------------------; N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A; =========================== 1 failed, 15 passed, 2 skipped, 1 xfailed in 201.46 seconds ===========================; ```. </details>; Also here is the current status of the conda installation:; <details>. ```bash; je714@guanine:~$ conda list; # packages in environment at /home/je714/psi4conda:; #; alabaster 0.7.10 py35_0; babel 2.4.0 py35_0; bzip2 1.0.6 3; cffi 1.9.1 py35_0; chemps2 1.8.3 5; cloog 0.18.0 0; cmake 3.6.3 0; conda 4.3.16 py35_0; conda-env 2.6.0 0; cryptography 1.7.1 py35_0; curl 7.52.1 0; dftd3 3.2.0 7; erd 3.0.6 0; expat 2.1.0 0; gcc-5 5.2.0 1; gcc-5-mp 5.2.0 0; gcp 2.0.1 0; gdma 2.2.6 2; gmp 6.1.0 0; hdf5 1.8.17 1; idna 2.2 py35_0; imagesize 0.7.1 py35_0; isl 0.12.2 0; jinja2 2.9.5 py35_0; libefp 1.4.1 3; libffi 3.2.1 1; libint 1.1.6 0; markupsafe 0.23 py35_2; mkl 2017.0.1 0; mpc 1.0.1 0; mpfr 3.1.2 0; ncurses 5.9 10; numpy 1.12.1 py35_0; openssl 1.0.2k 1; pcmsolver 1.1.10 py35_0; psi4 1.1rc1+6db9b1f py35_0 psi4/label/devel; psi4-deps 1.0 py35_1; py 1.4.33 py35_0; pyasn1 0.2.3 py35_0; pycosat 0.6.2 py35_0; pycparser 2.17 py35_0; pygments 2.2.0 py35_0; pyopenssl 16.2.0 py35_0; pytest 3.0.7 py35_0; python 3.5.3 1; pytz 2017.2 py35_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:6490,install,installation,6490,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['install'],['installation']
Deployability,"assed, 0 tests failed out of 5; ```; version control files have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference and dispersion depends a lot on computing the psi4 (and other) versions. Hence the ""pull tags"" message. I can believe there's a way that communication breaks down. I'd suggest you compare commands and cat-ed files and s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:3618,release,release,3618,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,2,['release'],['release']
Deployability,"ast):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/inst",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1625,install,install,1625,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"ast):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or mess",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:3188,install,install,3188,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"ast):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:5296,install,install,5296,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 fun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1440,install,install,1440,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"at tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` for list marks.; - [x] to avoid FutureWarning, changed three `distutils.dir_util.copy_tree` into `shutil.copytree`. this is a py38 language feature, the first actual breaking of py37+ compatibility.; - [x] added the openfermion demo as test; - [x] apparently 3body in dftd3 fails on Mac. near-term goal is replacing, so skip for now; - [x] newly install pytest.ini and install any test_input.py, input.dat, and input.py from tests/ . sensibly, input.dat/py would only get installed if test_input.py present, but I can't teach cmake that logic, so it's either this or have to register each pytest-prepared psithon test. aux files from tests/ are also installed but these have to be registered with cmake.; - [x] moved `compare_moldenfiles()` from testing code to driver alongside `compare_fchkfiles()` so that it can be documented.; - [x] ""psi"" and ""api"" marks added to all tests/pytests/ files for reasons explained in docs. - Docs; - [x] Updated the add_tests documentation, esp. wrt pytest; - [x] Might have done enough of the outline to close #2396 ; - [x] Straightened out docstring inheritance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for dev",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:4347,install,installed,4347,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['installed']
Deployability,"ative to Schwarz. Turn on with `set screening csam` (#1499); - New Bragg-Slater (BS) radii change DFT total energies slightly (#1591); - Extend `SAD_SCF_TYPE` to all usual `SCF_TYPE` types by using exact or DF integrals under the hood (#1477).; - Implement quadrature weights cutoff at 1.e-15, which together with pruning makes DFT on C_60 40% faster (#1581); - Compute multipole potential integrals to arbitrary order, replacing code for EFP that was fixed at octupole (#1657); - Allow external potentials in FISAPT (#1608); - Speed up electric field integrals (25x) (#1671); - Implement SAD natural orbitals guess (#1672); - Analytic Hessians for LSDA functionals (#1664); - Add qc2p basis set from CFOUR (#1718); - Update to g2g v2 API (#1718); - Density cumulant functional theory (DCFT) thoroughly rebranded to density cumulant theory (DCT). Adjust your calls and keywords accordingly or psi will reproach you (#1719).; - Drop Travis-CI (thank you for years of compiling) and consolidate on Azure for Linux and Windows builds so we can host more complex pipelines (#1752).; - Update orthogonalization routines and consolidate them back to libmints instead of SCF (#1759); - Let the `Deriv` class be instructable in the flavor it computes, rather than trying to devine SCF vs correlated (#1756); - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:6898,pipeline,pipelines,6898,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['pipeline'],['pipelines']
Deployability,"auxc_ENABLE_GPU` keyword builds the Psi4/GauXC interface to support GPU execution. Additionally, for internally-build GauXC instances, setting `gauxc_ENABLE_GPU` to `ON` will build the internal GauXC install with GPU support. For external GauXC installs, `gauxc_ENABLE_GPU` will ensure that the external GauXC install supports GPU execution. ; - [X] Adds a new `SplitJK` derived class, `snLinK`. When Psi4 is built with GauXC support, `snLinK` contains the implementation of the details of the Psi4/GauXC interface, and is responsible for calling GauXC within Psi4. When Psi4 is not built with GauXC support, snLinK will instead throw an exception upon construction, as implemented in a stub class. The `snLinK` class supports both CPU and GPU execution of GauXC, controllable at runtime via the `SNLINK_USE_GPU` keyword. Additionally, the `snLinK` class operates correctly regardless of the value of `psi4_SHGAUSS_ORDERING`, as well as for both Spherical and Cartesian basis sets. ; - [X] Updates the `test_compositejk.py` and `test_comprehensive_jk_screening.py` pytests to test sn-LinK functionalities, given that GauXC is installed.; - [X] Adds a new file, `gauxc_writer.py` to generate HDF5 files as input for GauXC's `standalone_driver` functionality. Reference files for benzene at the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis set have been added, and a `test_gauxc_writer.py` file has been added to test the writer's functionality, given that GauXC is installed. . ## Notes; - Unlike COSX, which has a two-grid scheme currently, sn-LinK uses a single-grid scheme, simply converging the SCF on a single grid and leaving it at that. A multi-grid sn-LinK scheme is a potential idea for the future, but it is likely to be added as a separate PR.; - In terms of interfacing to GauXC, this PR only handles interfacing to the GauXC sn-LinK exact exchange algorithm through `CompositeJK`. GauXC, as I understand, also has capabilities for providing features such as standardized grids and functionals, but ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:5125,Update,Updates,5125,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['Update'],['Updates']
Deployability,"ay(_q_h1b); _q_mohijkl = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Ca(), _q_hf_wavefn.Ca(),; _q_hf_wavefn.Ca(), _q_hf_wavefn.Ca())); _q_molecule.mo_eri_ints = _q_mohijkl; _q_molecule.mo_eri_ints_bb = None; _q_molecule.mo_eri_ints_ba = None; if _has_B:; _q_mohijkl_BB = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Cb(), _q_hf_wavefn.Cb(),; _q_hf_wavefn.Cb(), _q_hf_wavefn.Cb())); _q_molecule.mo_eri_ints_bb = _q_mohijkl_BB; _q_mohijkl_BA = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Cb(), _q_hf_wavefn.Cb(),; _q_hf_wavefn.Ca(), _q_hf_wavefn.Ca())); _q_molecule.mo_eri_ints_ba = _q_mohijkl_BA; _q_dipole = _q_mints.ao_dipole(); _q_molecule.x_dip_ints = numpy.asarray(_q_dipole[0]); _q_molecule.y_dip_ints = numpy.asarray(_q_dipole[1]); _q_molecule.z_dip_ints = numpy.asarray(_q_dipole[2]); _q_dipole = _q_mints.ao_dipole(); for _n in range(len(_q_dipole)):; _q_dipole[_n].transform(_q_hf_wavefn.Ca()); _q_molecule.x_dip_mo_ints = numpy.asarray(_q_dipole[0]); _q_molecule.x_dip_mo_ints_b = None; _q_molecule.y_dip_mo_ints = numpy.asarray(_q_dipole[1]); _q_molecule.y_dip_mo_ints_b = None; _q_molecule.z_dip_mo_ints = numpy.asarray(_q_dipole[2]); _q_molecule.z_dip_mo_ints_b = None; if _has_B:; _q_dipole = _q_mints.ao_dipole(); for _n in range(len(_q_dipole)):; _q_dipole[_n].transform(_q_hf_wavefn.Cb()); _q_molecule.x_dip_mo_ints_b = numpy.asarray(_q_dipole[0]); _q_molecule.y_dip_mo_ints_b = numpy.asarray(_q_dipole[1]); _q_molecule.z_dip_mo_ints_b = numpy.asarray(_q_dipole[2]); _q_nd = _q_mol.nuclear_dipole(); _q_molecule.nuclear_dipole_moment = numpy.array([_q_nd[0], _q_nd[1], _q_nd[2]]); _q_molecule.reverse_dipole_sign = False; _q_molecule.save(). ```; Above outputs are all created with disabled workaround. Surprisingly my workaround doesn't work anymore even though I didn't (actively) update/change anything else. It seems it's not the backslash problem but might be the capital/small 'c' for the drive. But therewith I trust in your bug-fixing skills.; Thanks for looking into this issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228#issuecomment-872891922:11529,update,update,11529,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-872891922,1,['update'],['update']
Deployability,"bably revive the `psi4-dev` pkg, just because it is simple and durable. (And it's the easiest way to convey the Intel-atop-GNU flags.) It'll be a `conda install psi4/label/dev::psi4-dev -c conda-forge` access. Thoughts on improving it?; 7. Those `devtools/*/*buildrun*yaml` env specs are semi-auto-generated from the ecosystem GHA. Are they handy enough to maintain and promote, even though they don't come with `cmake` lines?; 8. Any other build tools to support other workflows wanted? It's easier to set them up all at once. ### Psi4 Conda Packages at Present with Channels. Built psi4 packages are slightly off-topic, but I thought this could be a handy reference for the more exotic ones. Note that these don't have as many addons as previous `-c psi4` packages did. See https://github.com/orgs/psi4/projects/2 for the conda-forge progress tracker. * `linux-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (GNU compilers, AM5 L2, MKL, all pythons); * `conda install psi4/label/dev::psi4 -c psi4/label/testing -c conda-forge` (Intel compilers, AM7 L2, MKL, even pythons); * `conda install psi4/label/testing::psi4=1.8a2=py310hfdeccc3_2 libblas=*=*<mkl|openblas|etc> -c conda-forge/label/libint_dev -c conda-forge` (GNU compilers, AM5 L2, choose-your-own BLAS/LAPACK https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation (add `libopenblas=*=*openmp*` with openblas), py310, not quite v1.8); * `win-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (clang-cl compilers, AM5 L2 (w/o Hessian integrals, so it'll fall back to findif and some tests will fail unless exclude `d2ints` label), MKL, all pythons); * `osx-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (Clang compilers, AM5 L2, MKL, all pythons); * `osx-arm64` ; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (Clang compilers, AM5 L2, OpenBLAS, all pythons); * `conda install psi4 libblas=*=*accelera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:5354,install,install,5354,https://psicode.org,https://github.com/psi4/psi4/issues/2965,3,['install'],['install']
Deployability,"bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 1113, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1516,release,release,1516,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,bind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Tools.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Targets.cmake; [ 69%] Completed 'pybind11_external'; [ 69%] Built target pybind11_external; Scanning dependencies of target psi4-core; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3934,Install,Installing,3934,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,8,['Install'],['Installing']
Deployability,"bject src/CMakeFiles/core.dir/core.cc.o; cd /home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/src && /usr/lib64/ccache/c++ -DUSING_CheMPS2 -DUSING_dkh -Dcore_EXPORTS -I/home/work/psi4/psi4/psi4/include -I/home/work/psi4/psi4/psi4/src -isystem /home/work/psi4/psi4/objdir/stage/include -I/home/work/psi4/install/include -isystem /usr/include/python3.6m -march=native -O2 -g -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/core.dir/core.cc.o -c /home/work/psi4/psi4/psi4/src/core.cc; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:1336,install,install,1336,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"build constructors by following instructions https://github.com/psi4/psi4meta/blob/master/conda-recipes/constructor-cutter-unified/README.md. * edit tag and hash; * clear package cache; * `python run.py`; * check for noarch (BAD); * upload to vergil. generate the download site; * create new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md mind the edition string `v13rc2` for this and future filenames; * copy and edit new https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; * enter `scripts/` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; * run the `install-generator.py` in place. it will dump new files into `data/installs/` _subdirs_. be sure to `git add` them.; * installer page is ready. if wanted, edit the desination of the `Download` nav button https://github.com/psi4/psicode-hugo-website/blob/master/config.toml#L35; * pays to test; * installer on Mac and Linux; * that download button and `curl` downloading register on the download counters on vergil",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733:370,install,installs,370,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733,7,['install'],"['install-generator', 'installer', 'installs']"
Deployability,"build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2439,Install,Installing,2439,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"c++.so.6 => /cluster/apps/gcc/5.2.0/lib64/libstdc++.so.6 (0x00007f1a73366000); libm.so.6 => /lib64/libm.so.6 (0x00007f1a730e1000); libgomp.so.1 => /cluster/apps/gcc/5.2.0/lib64/libgomp.so.1 (0x00007f1a72ec0000); libgcc_s.so.1 => /cluster/apps/gcc/5.2.0/lib64/libgcc_s.so.1 (0x00007f1a72caa000); libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f1a72a8c000); libc.so.6 => /lib64/libc.so.6 (0x00007f1a726f8000); libutil.so.1 => /lib64/libutil.so.1 (0x00007f1a724f5000); /lib64/ld-linux-x86-64.so.2 (0x00007f1a78d6a000); libgfortran.so.3 => /cluster/apps/gcc/5.2.0/lib64/libgfortran.so.3 (0x00007f1a721d5000); librt.so.1 => /lib64/librt.so.1 (0x00007f1a71fcd000); libquadmath.so.0 => /cluster/apps/gcc/5.2.0/lib/../lib64/libquadmath.so.0 (0x00007f1a71d8d000); [sfux@develop01 x86_64]$ ; ```. I did a quick test with. ```; #! Sample UHF/6-31G** CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'); ```; to verify that the installation does not crash on startup. So far everything looks fine. I have a comment about the shebang line in the psi4 python script. After the installation it was set to an absolute path:. #!/cluster/apps/python/2.7.12/x86_64/bin/python. On larger clusters, there are usually multiple python versions installed in non-standard locations. Therefore when I install executable python scripts on our cluster, I usually change the shebang line to. #!/usr/bin/env python. This way, it takes the first python interpreter that is found in $PATH. This can be convenient for systems with multiple python versions. On our cluster, we use environment modules to manage different versions of the same software. If I have a python script with the generic shebang line, I can choose the Python interpreter by loading the corresponding module; ```. [sfux@euler04 ~]$ module load python/2.7.6; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.6; [sfux@eule",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275104849:1650,install,installation,1650,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275104849,1,['install'],['installation']
Deployability,"c++filt __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; psi::PKJK::PKJK(std::__1::shared_ptr<psi::BasisSet>, psi::Options&). I'm not sure what this tells me. Regarding the symbol in core.so, it is there:. (11:48 ~/software/psi4/install/lib/psi4/) nm core.so | grep __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; 0000000000f0a730 t __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/971#issuecomment-384339865:246,install,install,246,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384339865,1,['install'],['install']
Deployability,"c-4.9) fails when building with:; ```; [ 82%] Performing configure step for 'gpu_dfcc_external'; loading initial cache file /home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/tmp/gpu_dfcc_external-cache-Release.cmake; -- Psi4 script: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/bin/psi4; -- Psi4 headers: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/include; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure] Error 1; CMakeFiles/Makefile2:1533: recipe for target 'extern",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:1230,install,installation,1230,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,1,['install'],['installation']
Deployability,"c/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:1836,install,install,1836,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"c:605: undefined reference to `CheMPS2::EdmistonRuedenberg::EdmistonRuedenberg(CheMPS2::Hamiltonian*, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:611: undefined reference to `CheMPS2::DMRGSCFunitary::loadU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:623: undefined reference to `CheMPS2::DIIS::loadDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:637: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:646: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:657: undefined reference to `CheMPS2::DMRGSCFunitary::makeSureAllBlocksDetOne(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:659: undefined reference to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS::appendNew(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:661: undefined reference to `CheMPS2::DIIS::calculateParam(double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:662: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/264:18762,update,updateUnitary,18762,https://psicode.org,https://github.com/psi4/psi4/issues/264,1,['update'],['updateUnitary']
Deployability,"can't run the pytest tests locally?; * `cd <objdir>`; * adjust PATH for psiapi http://psicode.org/psi4manual/master/build_planning.html#how-to-configure-paths-for-psiapi via `<objdir>/bin/psi --psiapi-path`; * get pytest via `conda install pytest` or `pip install pytest`; * `pytest ../tests/pytest -k methane-H_analytic`; the pytest tests can also be run via `psi4.test()`, `psi4 --test`, or `make pytest` but the above has more control. Yes, confirmed non-deterministic, so above was a red herring, sorry. But something has made it much less stable than before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452372272:232,install,install,232,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452372272,2,['install'],['install']
Deployability,"cause ""compilation"" and installation of pybind is just copying a dozen files into place.; * On the python detection, there's two places this could be happening, and one, like the above is irrelevant. It's the second one (in the psi4-core target) that really matters. Could you send me your analogs of the CMake output snippets below? Or send me the whole thing, but it'll have to be both the initial CMake configuration and the psi4-core configuration that runs during the course of the compilation. Psi4 and pybind11 use exactly the same Python detection scheme, so I'm surprised and would like to understand what's happening in your setup.; * As far as actually telling psi4 and cmake what Python to use w/o editing CMakeCache's, I'd recc setting one (EXE) or all of https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L39-L41 . But my impression is that you shouldn't have to. Main CMake configuration; ```; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Found PythonInterp: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/bin/python3.5 (found version ""3.5.2"") ; -- Found PythonLibs: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libpython3.5m.so; -- Found Python 3.5: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/bin/python3.5; -- Suitable CheMPS2 could not be located, Building CheMPS2 instead.; -- Suitable dkh could not be located, Building dkh instead.; -- Found libefp: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libefp.so (found version 1.3.0); -- Found gdma: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libgdma.so (found version 2.2.06); -- Found libint: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libint.so (found version 1.1.6); -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Found GCC 5.2.0; ```; Then you change into your objdir and pybind11 and other dependencies compile. Finally you get to:; ```; Scanning dependencies of targ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273512333:1263,configurat,configuration,1263,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273512333,1,['configurat'],['configuration']
Deployability,cct3 integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1833:5,integrat,integration,5,https://psicode.org,https://github.com/psi4/psi4/issues/1833,1,['integrat'],['integration']
Deployability,"ce, do a fresh environment and build. There aren't comprehensive build helpers yet for v1.8, but there's some environment specs to help. What form do you want your future build helpers to take? For reference, here's how to get psi4 binary packages for all architectures. ### Recent Upheaval. You may have noticed that the ""source"" option at https://psicode.org/installs/v18/ says ""check back later"". There are minor upheavals in the build procedure in that:; 1. Libint2 switched source again last week (akin to the several L2 switches in spring 2022) so you'll want a new conda environment.; 2. We're switching our primary binary distribution channel from `conda install psi4 -c psi4` to `conda install psi4 -c conda-forge` (latter cmd is a simplification -- don't use as-is), so while most of the `-c psi4` packages are perfectly compatible with master, they're not the freshest and will continue to decay.; 3. New release means new tag, so you'll need to pull tags anyway (`git fetch upstream 'refs/tags/*:refs/tags/*'`) for versioning, distributed driver, and dispersion addons to work. ### Interim Build Directions. Altogether, now is a good time to do a fresh clone, environment, and compile ... if only there were directions. The interim build guidance is:; 1. Create an environment from one of the ""buildrun"" env spec files under https://github.com/psi4/psi4/tree/master/devtools/conda-envs . First edit it to the python you want and the env name you want, and comment out any optional qc addons you don't want. ; 2. Then issue something like`conda env create -f Linux-buildrun-maxeco.yaml` and activate the environment. ; 3. Clone psi4, then `cmake -S. -Bobjdir -DBUILD_SHARED_LIBS=ON ...`, and it usually configures fine. ; 4. For Apple Silicon, there isn't a env yaml file yet, but replacing `libblas=*=*mkl` with `libblas=*=*accelerate` or `libblas=*=*openblas`, getting rid of other mkl lines, and aggressively pruning qc addons (not many ported to arm64) should do the trick.; 5. For App",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:954,release,release,954,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['release'],['release']
Deployability,"cies that aren't quite vanilla upstream; * psi4 likes to provide addons from projects that aren't released cleanly; * psi4 users have grown accustomed to `-c psi4` and `-c psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1205,patch,patch,1205,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['patch'],['patch']
Deployability,ckage if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. In,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15804,Install,Install,15804,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,closed by #2273 and the release of https://github.com/psi4/psi4/releases/tag/v1.4.1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272#issuecomment-945789348:24,release,release,24,https://psicode.org,https://github.com/psi4/psi4/issues/2272#issuecomment-945789348,2,['release'],"['release', 'releases']"
Deployability,"cmake doesn't detect `mpmath` directly. But you can look in `<objdir>/CMakeCache.txt` `PYTHON_EXECUTABLE` to check if right python is found. Otherwise, psi doesn't actually need `mpmath` anymore, so #968 drops the requirement. I'd guess it'll be merged tomorrow, then you can update your source.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-382188857:276,update,update,276,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382188857,1,['update'],['update']
Deployability,"com/psi4/psi4/pull/1721#issuecomment-537945417), you can build a Libint2 externally with cmake or internal to psi4. 1. Get some extra dependencies `conda install boost mpfr eigen ninja`. Only header-only parts of Boost are used. Eigen is needed for the l2 c++ interface. Ninja is because l2 now makes files with weird enough names that when the get written to `Makefile`s, `make` can't process them. EFV is strongly recommending Ninja, too. . 2. Make sure a Libint1 package is **not** in your conda environment. Even if you're properly pointing to a `Libint1_t`-modified l1 via `-DLibint_DIR`, the compiler will still find those conventional Libint1 headers in `$CONDA_PREFIX`. If you have `psi4-dev` installed, `conda remove libint --force` to remove libint(1) but keep `psi4-path-advisor`. 3. In https://github.com/loriab/psi4/blob/libint2/external/upstream/libint2/CMakeLists.txt and https://github.com/loriab/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confid",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:1050,toggle,toggles,1050,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,1,['toggle'],['toggles']
Deployability,conda install needs ncurses as dependency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/289:6,install,install,6,https://psicode.org,https://github.com/psi4/psi4/issues/289,1,['install'],['install']
Deployability,"conda release: py36hf231b52_0 ; Psi4 1.2.1 ; Rev {HEAD} 406f4de . The DF-CCSD iterations with the FNOCC and DFOCC modules diverge for a repulsive, C2-symmetric methanol dimer depending on how I read the geometry (it seems).; The first CCSD energy is already completely wrong. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 28.8732411379 28.8732411379 7.9419493294 0; 1 1 1 -305.0567532225 -333.9299943603 62248.5081330950 2; 2 2 1 -392.6124818532 -87.5557286307 1852579.6071174063 3; 3 3 1 -337.1095996214 55.5028822317 1639881736.6452949047 2; ```. The conventional CCSD shows no problems (fnocc/ccenergy tested). The (assumed) dependence on the input revealed itself while making a clean input for reporting.; The SCF part does not show anything odd. Geometry is correctly recognized. Attached tgz file contains the working and faulting input/output.; [tball.tar.gz](https://github.com/psi4/psi4/files/2240627/tball.tar.gz)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1110:6,release,release,6,https://psicode.org,https://github.com/psi4/psi4/issues/1110,1,['release'],['release']
Deployability,"constants data upstream of psi4 (psi4 Molecule, pyoptking, mol parsing, common driver, etc.), so it makes little sense that the Source of Truth is c-side Psi4 headers, `masses.h` and `physconst.h`. Nowadays, physical constants are in psi three times (c-side, py-side, qcdb) and masses are twice but of the 4 arrays in `masses.h`, only one, `an2masses` is ever called in theory, and I don't see it called in practice. #### solution; Move these aspects into their own [lightweight python module that's easily updated](https://github.com/qcdb/qcelemental). That module can write psi4 header files, which are what's copied here. #### stages; - [x] c-side `physconst.h` updated here CODATA 2010 (Andy c.2012) --> CODATA 2014; - [x] py-side `psi4.driver.constants.physconst.py` updated here, through autogeneration from c-side; - [x] qcdb-side `psi4.driver.qcdb.physconst.py` updated here, through copying and prefixing from py-side; - [x] c-side `masses.h` updated here from undated NIST document (that includes through element 117, so it can't be too old). changing this alone has no effect on the tests.; - [ ] py-side `psi4.driver.qcdb.periodictable` NOT updated here. (so effectively masses are unchanged in this PR.) Later, py-side psi4 will import this new module to get its periodictable data.; - [x] Implications to the test suite:; - [x] lots of nuclear repulsion energies wanted changing. I took them at their word; - [x] wherever we tested SCF or SCF+ to 9+ decimals, comparisons failed. I've copied in the new values. energy figures tended to be good beyond 6 decimals. #### PT changes; * Main major change is to Krypton, where the generic (non-isotope) element had been assigned to the wrong isotope. Then there's lots of unstable elements that had the same thing wrong, so the below generic elements differ by 1–13 [u]. Only other element to differ by > 1.e-5 is Darmstadtium.; ```; Checking z2el vs. Psi4 ... Checking el2z vs. Psi4 ... Checking (1e-05) el2mass vs. Psi4 ...; Element Kr diffe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1213:1029,update,updated,1029,https://psicode.org,https://github.com/psi4/psi4/pull/1213,1,['update'],['updated']
Deployability,"cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh\n'); Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 477, in trace_task; R = retval = fun(*args, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 760, in __protected_call__; return self.run(*args, **kwargs); File ""/code/bigchem/tasks.py"", line 52, in compute; return qcop_compute(program, inp_obj, raise_exc=raise_exc, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/qcop/main.py"", line 35, in compute; return adapter.compute(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/base.py"", line 143, in compute; results, stdout = self.compute_results(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/qcengine.py"", line 42, in compute_results; qcng_output = qcng_compute(; File ""/opt/conda/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 141, in compute; pversion = parse_version(self.get_version()); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>; from . import core; ImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh. ```. **EDIT:** The issue appears to be coming from using a `psi4` channel for installation. Some of my old `env.yaml` files used a `psi4` channel. The `psi4` installation from that channel appears broken. If you install from `conda-forge` it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124:2326,install,installation,2326,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124,3,['install'],"['install', 'installation']"
Deployability,"cting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /home/amjames2/.conda/envs/py3/bin/python (found version ""3.5.2"") ; -- Found PythonLibs: /home/amjames2/.conda/envs/py3/lib/libpython3.so; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; CMake Error at CMakeLists.txt:35 (find_package):; Could not find a package configuration file provided by ""libefp"" with any; of the following names:. libefpConfig.cmake; libefp-config.cmake. Add the installation prefix of ""libefp"" to CMAKE_PREFIX_PATH or set; ""libefp_DIR"" to a directory containing one of the above files. If ""libefp""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; ```. It seems that if I add two lines to the `CMAKE_ARGS` section of `ExternalProject_Add(psi4_core…` . ```; -Dlibint_DIR=${libint_DIR}; -Dlibefp_DIR=${libefp_DIR}; ```. Then the arguments that I pass on the command line are correctly fed into the psi4_core build. Currently they are not passed in but the step that would download/build them was skipped since they were detected in the initial CMake pass. The `CMAKE_PREFIX_PATH` option for detecting them works since that argument is currently passed through. The documentation should be edited to remove the suggestion that `-Dlibint_DIR` type options be used, or the source should be edited so that those arguments are passed through to the psi4_core build.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:2554,install,installation,2554,https://psicode.org,https://github.com/psi4/psi4/issues/516,2,['install'],"['installation', 'installed']"
Deployability,cting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13373,Install,Install,13373,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:2096,continuous,continuous,2096,https://psicode.org,https://github.com/psi4/psi4/issues/367,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,ctions: 25; Spherical Harmonics?: false							 Spherical Harmonics?: false; Max angular momentum: 1							 Max angular momentum: 1; 									 >; Core potential: LANL2DZ							 Core potential: LANL2DZ; Number of shells: 3								 Number of shells: 3; Number of ECP primitives: 13						 Number of ECP primitives: 13; Number of ECP core electrons: 10						 Number of ECP core electrons: 10; Max angular momentum: 2							 Max angular momentum: 2; 									 >; => Loading Basis Set <=							 => Loading Basis Set <=; 									 >; Name: (LANL2DZ AUX)								 Name: (LANL2DZ AUX); Role: JKFIT									 Role: JKFIT; Keyword: DF_BASIS_SCF							 Keyword: DF_BASIS_SCF; atoms 1-2 entry H line 18 file /Users/runner/work/psi4	 |	 atoms 1-2 entry H line 18 file D:\a\psi4\psi4\install\; atoms 3 entry O line 318 file /Users/runner/work/psi4	 |	 atoms 3 entry O line 318 file D:\a\psi4\psi4\install\; atoms 4 entry CA line 1250 file /Users/runner/work/psi4	 |	 atoms 4 entry CA line 1250 file D:\a\psi4\psi4\install\; 									 >; ==> Integral Setup <==							 ==> Integral Setup <==; 									 >; ==> DiskDFJK: Density-Fitted J/K Matrices <==					 ==> DiskDFJK: Density-Fitted J/K Matrices <==; 									 >; J tasked: Yes						 J tasked: Yes; K tasked: Yes						 K tasked: Yes; wK tasked: No						 wK tasked: No; OpenMP threads: 1						 OpenMP threads: 1; Integrals threads: 1						 Integrals threads: 1; Memory [MiB]: 375						 Memory [MiB]: 375; Algorithm: Core						 Algorithm: Core; Integral Cache: LOAD						 Integral Cache: LOAD; Schwarz Cutoff: 1E-12						 Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12						 Fitting Condition: 1E-12; 									 >; => Auxiliary Basis Set <=							 => Auxiliary Basis Set <=; 									 >; Basis Set: (LANL2DZ AUX)							 Basis Set: (LANL2DZ AUX); Blend: DEF2-UNIVERSAL-JKFIT							 Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 81							 Number of shells: 81; Number of basis functions: 336						 Number of basis functions: 336; Number of Cartesian functions: 336						,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3072:4683,install,install,4683,https://psicode.org,https://github.com/psi4/psi4/issues/3072,1,['install'],['install']
Deployability,"d that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: after discussion below, MRCC _will_ be defaulted to if available. Practically, the only confusion should arise for a-ccsd(t) where Psi4 has the method sometimes (rhf) but not others (uhf/rohf). Methods like ccsd will always default to ccenergy, and methods like ccsdt will always go to mrcc.; - [x] Like to the MRCC case above, the arbitrary-order methods mp_n_, zapt_n_, ci_n_ that were intercepted and then transferred around as a method (e.g., ""mp"") and a level (kwarg ""level=5"") were requiring extra complication to work with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords we",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:6275,Upgrade,UpgradeHelper,6275,https://psicode.org,https://github.com/psi4/psi4/pull/2731,2,"['Upgrade', 'deploy']","['UpgradeHelper', 'deployed']"
Deployability,"d.; ...; [ 50%] No patch step for 'pybind11_external'; [ 53%] No update step for 'pybind11_external'; [ 57%] Performing configure step for 'pybind11_external'; -- The CXX compiler identification is GNU 7.3.0; -- Check for working CXX compiler: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/x86_64-conda_cos6-linux-gnu-g++; -- Check for working CXX compiler: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/x86_64-conda_cos6-linux-gnu-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/python3.7 (found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:1539,install,install,1539,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,2,"['Install', 'install']","['Install', 'install']"
Deployability,"d; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachments/files/17463891/output.txt) on the basis of which the above-described file could be generated. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3235:2533,configurat,configuration,2533,https://psicode.org,https://github.com/psi4/psi4/issues/3235,1,['configurat'],['configuration']
Deployability,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16824,Install,Install,16824,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,5,['Install'],['Install']
Deployability,"dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/obj",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:2069,install,install,2069,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in out",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3673,install,install,3673,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5817,install,install,5817,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > super",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5188,install,install,5188,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"de a brief description of the PR's purpose here. -->; Some overloads of `Matrix::diagonalize` in `libmints` are never called anywhere within Psi4, and some more are currently taking pointer arguments. They should be removed, but as discussed in #2693 the entire `Matrix` class is `PSI_API` and Forte is for sure using these diagonalization functions. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. Call sites within Psi4 are however converted to use non-deprecated overloads, so after 1.7 is out, completing the removal should just be a simple deletion of the deprecated overloads. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, int nMatz = 1)` is now using the `diagonalize_order` enum, like the other overloads: `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)`. But since `ascending = 1`, this should not cause disruptions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2738:1024,release,release,1024,https://psicode.org,https://github.com/psi4/psi4/pull/2738,1,['release'],['release']
Deployability,def2 systematic patchup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1806:16,patch,patchup,16,https://psicode.org,https://github.com/psi4/psi4/pull/1806,1,['patch'],['patchup']
Deployability,dep version and FindPythonLibsNew updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1697:34,update,updates,34,https://psicode.org,https://github.com/psi4/psi4/pull/1697,1,['update'],['updates']
Deployability,df63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing:,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1933,install,installing,1933,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,dfocc tensor syntax update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2663:20,update,update,20,https://psicode.org,https://github.com/psi4/psi4/pull/2663,1,['update'],['update']
Deployability,"distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is untuned for dertype or E_/D_/R_CONVERGENCE.; * refuted first two thirds of a prominent footnote: `DFT gradients only implemented for SCF type DF. LRC-DFT gradients not implemented yet. DH-DFT gradients not implemented.`; - [x] upgraded stdsuite runner to catch up with qcdb and qcengine last year by (1) implementing per-dertype and abs/rel comparison checks (nothing is actually loosened) and (2) dropping a dict summary of each test to a record file.; - [x] arranged for available `td-{dft}` calls to show up in the energy table, https://psicode.org/psi4manual/master/energy.html; - [x] fixed `energy(""psimrcc_scf"")` to use regular SCF as ref for PSIMRCC and added a test; - [x] rehabilitated `energy(""qchf"")` (which never had its initialism expanded in the whole of the codebase, btw) so it runs. added a test. it probably ought to be better integrated with regular SCF module. Regular SCF has a qchf option that is unused.; - [x] adjusted some qcvars in FNOCC to collect more components from cepa-like methods and to collect different perturbative triples for qcisd.; - [x] collected qcvars correctly in DFOCC for CCD and QCHF. (It was harvesting the CCD method that tipped me into the rabbit-hole that became this PR.). - [x] TODO `pytest -m quick` is still friendly to run (CI finished in reasonable time), but the additions to s",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:11339,upgrade,upgraded,11339,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['upgrade'],['upgraded']
Deployability,"dizes function names surrounding scalar and array variables in globals & Wfn. Fills in missing methods.; - [x] C-side deprecates old names for Wfn variable access (compile-time for C-API downstream); - [x] Py-side deprecates old names for global and Wfn variable access (run-time for Py-API downstream, incl. Psithon inputs); - [x] New set of functions (reuse of many of the old fn names) for uniform access; - [x] Wfn variable access now case insensitive and storage always uppercase (as globals always has); - [x] array variable getters/setters now return _copies_ of the arrays; - [x] globals now throws instead of autovivifying to 0 when getter called for non-existant key (as Wfn always has); - [x] Py-side (and hence all globals access) resists giving the same key to a scalar and an array variable. This check is not in place for C-side Wfn, but shouldn't be a problem given our habit of labeling with E/G/H, etc.; - **ALERT** this generates oodles of `FutureWarning`s b/c to keep this PR focussed on the substantive changes, I haven't updated the fn names w/i the codebase. That will be a separate PR hard after this gains approval, and should probably be merged in sequence, lest users go batty. I've worked on other topics beyond this one, and I'm confident the deprecation warnings are allowing the unhindered use of old syntax.; - [x] Deprecation Warnings look like the below in PsiAPI and PSIthon modes, respectively. For the latter, I had to suppress printing of offending line b/c it was very wrong (usually part of the LGPL license).; ```; psiapi.py:8: FutureWarning: Using `psi4.core.get_variable` instead of `psi4.core.variable` (or ; `psi4.core.scalar_variable` for scalar variables only) is deprecated, and in 1.4 it will stop working. print(psi4.get_variable('current energy')); ```; ```; Using `psi4.core.get_variable` instead of `psi4.core.variable` (or `psi4.core.scalar_variable` for scalar variables only) is deprecated, and in 1.4 it will stop working. ```. ## Breaking Chan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1393:1106,update,updated,1106,https://psicode.org,https://github.com/psi4/psi4/pull/1393,1,['update'],['updated']
Deployability,dma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1769,Install,Install,1769,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,dna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For cs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3421,install,installing,3421,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,docs conda and docs build updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/709:26,update,updates,26,https://psicode.org,https://github.com/psi4/psi4/pull/709,1,['update'],['updates']
Deployability,"ds are one-off, not continuous development anyways, so it's worth no globs and yes flexibility. ADDED: switched to ninja for docs and docs-pr (ok memory-wise at max parallelism b/c debug build). ADDED 12 Nov; - [x] update ecosystem and docs GHA and linux azure to use the path-advisor env/cache procedure. this helps keep the path-advisore procedure tested and keeps testing envs up-to-date. alternate testing can still be imposed by `sed`ing the envs.; - [x] in azure linux, use the three testing lanes to go beyond quicktests. apart from some longer tests, we're now hitting all but stdsuite non-quick. ; - [x] fixed the windows nightly build through azure, which was many layers of bugs. the improved path handling in psi4 & psi4/__init__.py from May technically didn't play nicely with the build-and-copy-into-place of the azure file cmake_install_*-paths-wise, and the recent (Oct) trick to get a fast `psi4 --version` tripped the problem, hence the `sed`.; - [x] Strengthened the default to Release so that it works for windows, too. Ninja was setting Debug as-was.; - [x] Updated the buildrun.yaml files from path-advisor; - [x] Update the docs build for py312 by fixing the non-raw strings having backspace chars.; - [x] removed the pb11=2.10 pin for docs build by adding to nitpick list; - [x] Avoid all the warnings about INSIST_FIND_PACKAGE_<pkg> and <pkg>_DIR unused user-spec variable warnings that could be unnerving.; - [x] Use a different way of detecting libdl for plugins that doesn't throw cmake warnings. lmk if there's any problems.; - [x] Patch over a sapt+windows+ecp bug described at #3072 so can test complete ecosystem; - [x] Add a plain `psi4 --psiapi` variation on `psi4 --psiapi-path` that can be used in `eval $(psi4 --psiapi)`. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:4503,Release,Release,4503,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['Release'],['Release']
Deployability,dule v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14657,Install,Install,14657,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"e ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PS",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:8326,install,install,8326,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,"e ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https://github.com/dsirianni> hit them), so we switched toward the; > die+traceback. Now SCF will behave like optimizations.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1130#issuecomment-411567479>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdvbzSmwMSXIINgOIb089mSzOfCS1ks5uO2AMgaJpZM4V0pOZ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:2152,toggle,toggled,2152,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['toggle'],['toggled']
Deployability,"e coordinates. chg/mult from the xyz are possible https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/from_string.py#L117-L136. tu1.py; ```; import psi4. psi4.set_memory(""600 mb""). ### <<< Either ; #with open(""h2o.xyz"") as fp:; # fh2o = fp.read(); #; #psi4.geometry(fh2o). ### --- Or. h2o = psi4.core.Molecule.from_arrays(elem=[""O"", ""H"", ""H""], units=""Angstrom"", geom=[; 0.000000000000, 0.000000000000, -0.065775570538, ; 0.000000000000, -0.759061990794, 0.521953018295, ; 0.000000000000, 0.759061990794, 0.521953018295]) ; psi4.activate(h2o). ### >>> End. psi4.set_options({; ""basis"": ""cc-pVDZ"",; }); psi4.energy('scf'). psi4.compare_values(-76.0266327341067125, psi4.variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```. h2o.xyz; ```; 3; sdlkfs; O 0.000000000000 0.000000000000 -0.065775570538 ; H 0.000000000000 -0.759061990794 0.521953018295 ; H 0.000000000000 0.759061990794 0.521953018295 . ```; ## Single Core. To actually address your problem, can you try the following edits? If you edit the installed copy, no recompile needed. Hopefully this solves it -- thanks for the report!; ```; diff --git a/psi4/driver/procrouting/empirical_dispersion.py b/psi4/driver/procrouting/empirical_dispersion.py; index d23f016..ea4f79d 100644; --- a/psi4/driver/procrouting/empirical_dispersion.py; +++ b/psi4/driver/procrouting/empirical_dispersion.py; @@ -213,7 +213,7 @@ class EmpiricalDispersion(object):; resi,; self.engine,; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path(), ""ncores"": core.get_num_threads()}); ; dashd_part = float(jobrec.extras['qcvars']['DISPERSION CORRECTION ENERGY']); if wfn is not None:; @@ -231,7 +231,7 @@ class EmpiricalDispersion(object):; resi,; ""gcp"",; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938:1118,install,installed,1118,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938,1,['install'],['installed']
Deployability,"e different. ```; ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -0.15577370 xtpl_highest_1; total CBS -1011.27544804; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:1556,install,install,1556,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability,"e them in FreeBSD ports.; Nothing important should be hard-wired to Git during build/tests. I agree broadly, though I'd sacrifice it to get fine-grain versioning for cross-project communication if needed :-). The way psi is set up now, if the buildsys detects that it's not a git repo, it substitutes some generic most-recent-tag info and proceeds, so that one gets a working build. When I try, it works as planned:. acquire tarball; ```; > curl -L https://github.com/psi4/psi4/tarball/master -o psi4_v17.tgz; ```; configure and build -- it detects ""no git""; ```; # configure (all req'd deps detected except optking to be build from src); > cmake --build . -j12; ...; [ 88%] Performing build step for 'psi4-core'; [ 1%] Generating version info; [ 1%] Building CXX object src/psi4/lib3index/CMakeFiles/3index.dir/dftensor.cc.o; ...; [ 2%] Building CXX object src/CMakeFiles/l2export.dir/export_mints.cc.o; Blindly (no git) accepting release version: 1.7+6ce35a5 (recorded); 1.7 {} 6ce35a5 1.7.0.0 release 1.7 <-- 1.7+6ce35a5; [ 2%] Built target update_version; [ 2%] Building CXX object src/psi4/libciomr/CMakeFiles/ciomr.dir/dsyev_ascending.cc.o; ...; ```; version computes and simple test, distributed driver tests, and dftd3 addon tests work ok; ```; > stage/bin/psi4 --psiapi # execute results; >>> stage/bin/psi4 --version; 1.7; >>> ctest -R tu1; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 426: tu1-h2o-energy; 1/1 Test #426: tu1-h2o-energy ................... Passed 1.65 sec. 100% tests passed, 0 tests failed out of 1; >>> ctest -R ddd; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 479: ddd-deriv; 1/2 Test #479: ddd-deriv ........................ Passed 13.18 sec; Start 481: ddd-function-kwargs; 2/2 Test #481: ddd-function-kwargs .............. Passed 170.20 sec. 100% tests passed, 0 tests failed out of 2; >>> ctest -R dftd3; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 510: dftd3-energy; 1/5 Test #510: dftd3-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:1061,release,release,1061,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,1,['release'],['release']
Deployability,"e/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10513,install,install,10513,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,e/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-g,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2754,Install,Installing,2754,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"e/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 01:43PM; Psi4 wall time for execution: 1 day, 3:02:31.40. *** Psi4 exiting successfully. Buy a developer a beer!; ```. Note that the latter output, which is wrong, supposedly finished before the former. I have seen this behavior when running 6-core jobs in various different machines and for various Psi4 versions, including `Psi4 1.2.1 release, Git: Rev {HEAD} 406f4de`, `Psi4 1.3a1.dev315, Git: Rev {HEAD} 28d97e1 dirty`, `Psi4 1.2a1.dev",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:2626,install,install,2626,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability,"e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated)) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1125; #50 0x00007faabd6e0783 in run_mod (mod=<optimized out>, filename=<optimized out>, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab0338",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:17846,install,install,17846,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['install'],['install']
Deployability,"e; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2230,Install,Installing,2230,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"e; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:2572,install,installed,2572,https://psicode.org,https://github.com/psi4/psi4/issues/2912,2,['install'],"['installable', 'installed']"
Deployability,"eMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:657: undefined reference to `CheMPS2::DMRGSCFunitary::makeSureAllBlocksDetOne(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:659: undefined reference to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS::appendNew(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:661: undefined reference to `CheMPS2::DIIS::calculateParam(double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:662: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:677: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:678: undefined reference to `CheMPS2::DIIS::saveDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:695: undefined reference to `CheMPS2::EdmistonRuedenberg::Optimize(double*, double*, bool, double, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:696: undefined reference to `CheMPS2::EdmistonRuedenberg::FiedlerExchange(int, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::EdmistonRuedenberg::getUnitary()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::CASSCF::fillLocalizedOrbitalRotat",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/264:19727,update,updateUnitary,19727,https://psicode.org,https://github.com/psi4/psi4/issues/264,1,['update'],['updateUnitary']
Deployability,"eason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them. The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date. These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions. Andy. > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > ; > I think the short answer may be that a lot of the developers are still used; > to version control models like SVN or CVS.; > ; > Honestly I think you have the right idea though, with git there really; > isn't a need for two repositories for an open source code so long as we; > adopt the accompanying philosophy. It's now a matter of getting everyone; > on board.; > ; > Sent from my Android (without spellcheck). Please forgive the brevity.; > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wrote:; > ; > > Why don't you keep the sensitive new code in separate branches of your; > > (private) fork of the psi4public repo and only merge when the paper is; > > ready? Or only use the private repo for that kind of stuff and push; > > everything still straight to the public repo?; > > I think you",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98498738:1338,update,update,1338,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98498738,1,['update'],['update']
Deployability,ecessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Inst,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15973,Install,Install,15973,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ed out>, kwnames=0x0, kwargs=0x0, ; kwcount=<optimized out>, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4298; #47 0x00007faabd6bfe79 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, ; kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4327; #48 0x00007faabd6bfe3b in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:718; #49 0x00007faabd6e1068 in run_eval_code_obj (co=0x7faa87377d40, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab0338",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:15594,install,install,15594,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['install'],['install']
Deployability,"ed to pass `CMAKE_<LANG>_COMPILER_ARG1` through to psi4 subproject and all other externals.; - [x] let ctest tests run whether old or new d3 and gcp implementations present.; - [x] don't expect a pylibefpConfig.cmake for libefp detection. this is the case with the c-f package -- I'll probably put it back later when libefp/pylibefp repos combine.; - [x] I was using inconsistent naming for basis_set_exchange detection/import, so fix that.; - [x] adapt docs build so that it can use Ninja (or presumably any non-Makefiles) generator. The special thing about Makefiles is that it works as expected for glob depends. So we can tell the basis table to regenerate if any of the gbs files change. Other generators won't understand this. But most docs builds are one-off, not continuous development anyways, so it's worth no globs and yes flexibility. ADDED: switched to ninja for docs and docs-pr (ok memory-wise at max parallelism b/c debug build). ADDED 12 Nov; - [x] update ecosystem and docs GHA and linux azure to use the path-advisor env/cache procedure. this helps keep the path-advisore procedure tested and keeps testing envs up-to-date. alternate testing can still be imposed by `sed`ing the envs.; - [x] in azure linux, use the three testing lanes to go beyond quicktests. apart from some longer tests, we're now hitting all but stdsuite non-quick. ; - [x] fixed the windows nightly build through azure, which was many layers of bugs. the improved path handling in psi4 & psi4/__init__.py from May technically didn't play nicely with the build-and-copy-into-place of the azure file cmake_install_*-paths-wise, and the recent (Oct) trick to get a fast `psi4 --version` tripped the problem, hence the `sed`.; - [x] Strengthened the default to Release so that it works for windows, too. Ninja was setting Debug as-was.; - [x] Updated the buildrun.yaml files from path-advisor; - [x] Update the docs build for py312 by fixing the non-raw strings having backspace chars.; - [x] removed the pb11=2.10",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:3721,update,update,3721,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['update'],['update']
Deployability,"efault, `frequency()` does a gradient to determine if rotational projection is safe, then another flag to query external field and company to see if even translational projection is appropriate. ; - [x] more testing of isotopic, partial, non-stationary, etc., particularly wrt normco not just freq; - Add `compare_dicts` and `compare_molrecs` comparison functions. Former uses `deepdiff` module and does recursive comparison (sensitive to types). Can exempt fields with `forgive` arg. Latter makes use of former and also allows geoms to change if warranted by fix_com/orientation (checks via aligner).; - convert qcdb test suite from GnuMake (yes, that old) to pytest. switch compare_* fns to raise `TestComparisonError`, not `sys.exit(1)`.; - have to temporarily set `0 2` in some test cases, b/c the reconciler wants physically reasonable values, but the input molecule isn't currently passing through the code that would set those defaults.; - updated v2rdm_casscf pinning to one Eugene already fixed up to work w/psi; * **User-Facing for Release Notes**. ## Questions; - [ ] Right now, results of harmonic analysis is a dict of namedtuples with numpy arrays (contents and interface below). This is pretty convenient to access and work with. But it is numpy arrays attached to Wfn and thus mixing array classes on Wfn and unable to access c-side. Is this ok? Better ideas?; ```; Returns; -------; dict, text; Returns dictionary of VibrationAspect objects (fields: lbl unit data comment); Also returns text suitable for printing; ; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | key | description (lbl & comment) | units | data (real/imaginary modes) |; +===============+============================================+===========+======================================================+; | omega | frequency | cm^-1 | np.array(ndof) complex (real/imag) |; | q | normal mode, normalized mass-weighted | a0 u^1/2 | np.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:12579,update,updated,12579,https://psicode.org,https://github.com/psi4/psi4/pull/834,2,"['Release', 'update']","['Release', 'updated']"
Deployability,"em /usr/include/python3.6m -march=native -O2 -g -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/core.dir/core.cc.o -c /home/work/psi4/psi4/psi4/src/core.cc; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detai",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:1555,install,install,1555,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"ements (transition metals), so for now my solution is to just use `freeze_core true` for all SAPT0 calcs and go about my life. And when I thought the bad setting _just_ caused segfaults, I was fine to assume that all calculations that ran to completion were obviously OK. Now seeing that there's some shade of undefined behavior leading to memory corruption possibly going on, I'd like to understand what is going wrong so I can figure out what's likely impacted... cases where the energy is obviously and egregiously wrong (like above) are easy, but I'm worried more about subtle incorrectness. As for the general fix -- if `num_frozen_docc` is disabled for SAPT0, then it becomes impossible for a user to impose their own beliefs about frozen orbitals in tricky cases like transition metals, which seems... bad. Since it does impact the dispersion portion of the calc, it needs to be user-mutable. This setting *shouldn't* be actually impacting the HF energies, and fixing that strange interaction seems like most of the battle. I'm less sure of what to do in the MP2 case, since it does seem relevant that the user should be able to specify their own core policy as required... At the risk of further complication, would it make sense to implement either:; 1. The ability for `num_frozen_docc` to take in a tuple the same length of the number of fragments in the active `Molecule` (such that correct behavior can be inferred in cases like SAPT where both monomer and dimer calcs are run in a global context); 2. The ability to define, via a list(?), a custom policy on a per-element basis that can be fed to `freeze_core`? . Both of these would allow both for the user to handle cases like custom frozen thresholds in multi-calc situations and keep things consistent. At the same time, these are... possibly a lot of work. I'm prototyping a solution of type (2) but I'm not sure if it'll be too clunky for others to use -- assuming I haven't messed up horribly, I'll propose the patch later today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1207254380:3185,patch,patch,3185,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1207254380,1,['patch'],['patch']
Deployability,empirical disp updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2142:15,update,updates,15,https://psicode.org,https://github.com/psi4/psi4/pull/2142,1,['update'],['updates']
Deployability,empirical disp updates for qcng v0.19,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2180:15,update,updates,15,https://psicode.org,https://github.com/psi4/psi4/pull/2180,1,['update'],['updates']
Deployability,"ental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10799,release,release,10799,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['release'],['release']
Deployability,"epository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be removed when the history rewrite occurs on Oc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:3111,release,release,3111,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['release'],['release']
Deployability,"eqing/intel/oneapi/mkl/latest/lib/intel64:$LD_LIBRARY_PATH""; export EIGEN3_ROOT=""/home/yuyeqing/software/eigen3/include""; ```. cmake output the result log like this:. ```; -- Building using CMake 3.26.4 Generator Unix Makefiles; -- Setting option BUILD_SHARED_LIBS: OFF; -- Setting option CMAKE_BUILD_TYPE: Release; -- Setting option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; -- Setting option ENABLE_OPENMP: ON; -- Setting option ENABLE_AUTO_BLAS: ON; -- Setting option ENABLE_AUTO_LAPACK: ON; -- Setting option ENABLE_PLUGIN_TESTING: OFF; -- Setting option ENABLE_CYTHONIZE: OFF; -- Setting option ENABLE_CODE_COVERAGE: OFF; -- Setting option ENABLE_BOUNDS_CHECK: OFF; -- Setting option ENABLE_ASAN: OFF; -- Setting option ENABLE_TSAN: OFF; -- Setting option ENABLE_UBSAN: OFF; -- Setting option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 5; -- Setting option FC_SYMBOL: 2; -- Setting option BUILD_FPIC: ON; -- Setting option CMAKE_INSTALL_LIBDIR: lib; -- Setting option PYMOD_INSTALL_LIBDIR: /; -- Setting option psi4_INSTALL_CMAKEDIR: share/cmake/psi4; -- Setting option TargetLAPACK_INSTALL_CMAKEDIR: share/cmake/TargetLAPACK; -- Setting option TargetHDF5_INSTALL_CMAKEDIR: share/cmake/TargetHDF5; -- Setting option ENABLE_GENERIC: OFF; -- Setting option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting option psi4_CXX_STANDARD: 17; -- Setting option psi4_CXX_STANDARD_Libint2: 17; -- Setting option SIMINT_VECTOR: avx; -- Setting option SPHINX_THEME: sphinx_psi_theme; -- Setting option SPHINXMAN_STRICT: OFF; -- Setting option BUILD_Libint2_GENERATOR: OFF; -- Setting option psi4_SHGAUSS_ORDERING: gaussian; -- Psi4 install: /mnt/f/psi4/build_linux/install; -- Found Python 3.10: /home/yuyeqing/software/miniconda3/envs/psi/bin/python3.10 (found version 3.10.11); -- Psi4 staging: /mnt/f/psi4/build_linux/stage; -- CMAKE_CXX_FLAGS: -march=native; -- Could NOT find iomp5 -- con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119:771,Release,Release,771,https://psicode.org,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119,3,"['Release', 'install']","['Release', 'install']"
Deployability,"er API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Triplet TDDFT excitations from RKS are now supported. ## Theoretical Analysis. Why were DFT triplets harder than HF triplets? To understand this, we need to understand both the origin of the triplet matrix and the spin properties of the relevant matrix elements. 1. Starting from the UKS RPA/TDA matrices when Ca = Cb, we can do a similarity transformation to obtain the singlet and triplet RKS matrices. The new basis elements for the singlet block all take the form (i->a α + i->a β) / sqrt(2), while the new basis elements for the triplet block take form (i->a α - i->a β) / sqrt(2).; 2. The electron potential is spin-free. Because the coulomb J and exchange K terms are expectation values of this, the associated integrals are spin free, assuming spin does not integrate to zero. For J, spin only integrates to zeroes if there is a spin mismatch in either the bra or the ket. Because we only consider Sz preserving excitations, no spin mismatches are possible. For K, a bra orbital needs to have the same spin as a ket orbital. Because both bra orbitals have the same spin, and both ket orbitals have the same spin, this requires that _all_ orbitals have the same spin. Meanwhile, the DFT V terms are second derivatives of the DFT energy with respect to orbital rotation generators. These are not spin-free.; 3. Now let's combine the two above facts. After performing the spin-integration in the triplet case, you end up with [(α|α) - (α|β) - (β|α) + (β|β)]. Upon exploiting spin-restriction, this reduces to [(α|α) - (α|β)]. For J, the second term is equal to the first, so the two cancel. For K, the second term is zero, so you have the first integral. For V, the two terms are neither equal nor zero. The V term cannot be neglected, even though it's normally added to the J term, which here is zero. ## Dev notes & details; ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2885:1653,integrat,integrates,1653,https://psicode.org,https://github.com/psi4/psi4/pull/2885,1,['integrat'],['integrates']
Deployability,"er.py"", line 1113, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d\n"", count == 1, i != pshells_ - 1);; std::stringstream error;; error << ""DFHelper: not enough memory for (p shell) AO blocking!""; << "" required memory: "" << constra",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1679,release,release,1679,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,er] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2896,Install,Install,2896,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ernary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3441,Install,Installing,3441,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,error is a Windows install of conda that chocolatey seems to be failing connection on today. It was passing CI earlier.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810:19,install,install,19,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810,1,['install'],['install']
Deployability,"es attached.; - so, after `find_package(gdma CONFIG REQUIRED)`, you don't have to add a library or use the usual suspects. Instead, just attach as needed (though I still think the second one should be simpler); - `target_link_libraries(psi4_exe PUBLIC gdma::gdma)`; - `target_compile_definitions(gdma_interface PRIVATE $<TARGET_PROPERTY:gdma::gdma,INTERFACE_COMPILE_DEFINITIONS>)`. ```; gdma_FOUND : 1; gdma_VERSION : 2.2.06; gdma_INCLUDE_DIRS : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_INCLUDE_DIR : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_LIBRARIES : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; gdma_LIBRARY : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; ======================== gdma::gdma ========================; tgt='gdma::gdma' prop='IMPORTED'; value='TRUE'; defined='0'; set='1'; gt='gdma::gdma' prop='INTERFACE_COMPILE_DEFINITIONS'; value='USING_gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='INTERFACE_INCLUDE_DIRECTORIES'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include/GDMA'; defined='0'; set='1'; tgt='gdma::gdma' prop='LOCATION'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so'; defined='0'; set='1'; tgt='gdma::gdma' prop='NAME'; value='gdma::gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='POSITION_INDEPENDENT_CODE'; value='True'; defined='0'; set='1'; tgt='gdma::gdma' prop='TYPE'; value='SHARED_LIBRARY'; defined='0'; set='1'; `",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:2048,install,install-,2048,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,1,['install'],['install-']
Deployability,"escription; In this PR, we implement a pilot version of least squares tensor hypercontraction (LS-THC)... factoring 4-index ERIs (O(N^4)) into two-index quantities (i.e. $(mn|rs) = x_{m}^{P}x_{n}^{P}Z^{PQ}x_{r}^{Q}x_{s}^{Q}$). In the LS-THC formulation, $P$ and $Q$ are derived from grid points, and. $x_{m}^{P} = w_{P}^{\frac{1}{4}} \phi_{m}(x_{P}, y_{P}, z_{P})$,; $E^{PQ} = x_{m}^{P}x_{n}^{P}(mn|rs)x_{r}^{Q}x_{s}^{Q}$; $S^{PP'} = (x_{m}^{P}x_{m}^{P'})^{2}$; $Z^{PQ} = (S^{PP'})^{-1} E^{P'Q'} (S^{QQ'})^{-1}$. This is based off of the work of [Parrish et al. (2012)](https://pubs.aip.org/aip/jcp/article/137/22/224106/194901/Tensor-hypercontraction-II-Least-squares). These quantities can be constructed integral-direct and non-iteratively. No four or even three-index quantities are stored, thereby allowing for the future development of efficient, low-memory quantum chemistry algorithms in Psi. This is a PR in a series of planned PRs that will involve:; 1.) LS-THC-JK (integral-direct SCF without recomputing ERIs every iteration and faster K construction); 2.) LS-THC-MP2; 3.) Local grid implementation of LS-THC to allow for use in local correlation methods (DLPNO-MP2, DLPNO-CCSD/(T)). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Added Python interface (Pybind) for building LS-THC quantities that allow for rapid prototyping of new methods involving THC; - [x] Developed infrastructure for the development of alternate ways to perform THC (i.e. PF-THC). ## Dev notes & details; - [x] Implemented LS-THC C/Py-side for future QC methods. ## Questions; - [x] Is this the proper way to export this object Py-side?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3157:1333,release,release,1333,https://psicode.org,https://github.com/psi4/psi4/pull/3157,1,['release'],['release']
Deployability,"essian to test safety of projecting rotations. Instead assuming unsafe. Can pass `ref_gradient` array to test on or `set findif fd_project T/F` explcitly to control.; - `psi4.QMMM()` object replaced by `embedding_charges` kwarg in Bohr. See extern examples for details.; - `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. `json_ret` is now an object, so `.` access, not dictionary.; - CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. This is no longer happening, so for occasional string modelchem calcs, you may need to add a clean in the input.; - extern object units are bohr, not whatever the Molecule was.; - `psi4 --module` returns the path for loading via `import psi4`. opposite of `psi4.executable`; - `psi4.set_output_file` now wraps `psi4.core.set_output_file` and additionally sets up a truncating python logging file with `.log` extension at the same time as the `.out` file.; - Besides the input.dat/output.dat exception, default output naming simplified to always `.out` of input file name. If input has out or log extension (weird), extra extension added.; - Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - A Logging file has been introduced. All its contents should be considered experimental and subject to change. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351:2870,continuous,continuous,2870,https://psicode.org,https://github.com/psi4/psi4/pull/1351,1,['continuous'],['continuous']
Deployability,"ests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) =====================",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16655,Install,Install,16655,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,et-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolder,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3223,install,installing,3223,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ething is staged.; ## No More Convenience Headers. Convenience headers, like `mints.h` are evil. If they exist (like in many professional libraries) they are to be used by your users only. The primary reason for avoiding them is that they increase compile times. This is one of the primary reasons you had to recompile half of Psi4 when changing most files. Lesser reasons:; - Harder to know exactly what you brought in (people duplicated the contents of `mints.h` all over the place). ; - Can destroy distinction between interface/implementation classes if done incorrectly; - Splitting the header is a nightmare (as I can attest to) and is required if code gets factored, which really should happen to mints.; ## Removed psiconfig.h. The macros in it are easily replace by CMake's `add_definitions` function and doing so clears up the macro namespace considerably. Furthermore a lot of those macros weren't even being used.; ## Static vs. Shared Psi4 Core libraries. CMake provides the variable `BUILD_SHARED_LIBS` to toggle this. We weren't respecting this and have been forcing static builds. Again moving to modules is facilitated by shared libraries. I will note that apparently libiwl can't be compiled dynamically. ; ## No More setup.py. `setup.py` just wrapped the CMake call and rewriting it is an exercise in code duplication. My understanding is the point of this file was meant to ease the transition to CMake from GNU Make. Well, I think it's safe to say we've transitioned.; ## Angle Brackets for Includes Clean Up. The vast majority of includes that incorrectly used angled-brackets have been changed to quotes. Although not exactly correct, for all intents and purposes, use quotes to indicate that a header file is part of the current project and angled-brackets indicate it is an external dependency. This is not just semantics, it changes how the compiler behaves. It also can lead to subtle hard to find bugs when you have very commonly named header files and you use directives ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442:6830,toggle,toggle,6830,https://psicode.org,https://github.com/psi4/psi4/pull/442,1,['toggle'],['toggle']
Deployability,"ethods ; ----------- ; ; - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT (#1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#18",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:1140,Update,Update,1140,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Update'],['Update']
Deployability,"ew boost is unlinked at the time I run the `setup` script I will see both the include and library paths are set to the local boost install in the cmake output. However, if homebrew boost is linked when I run `make` I will get an error in the linking step. I suspect that the directory where hombrew adds the links to boost (`/usr/local/lib`) are passed as a linker argument by cmake, either by default, or because something else is installed there. Thus, if those links are present I will get the characteristic boost 1.60.0 linking errors. Hombrew installs boost-python as a separate package so to properly remove all of the links `brew unlink boost boost-python` . Interestingly I have a similar setup on a laptop running ArchLinux 4.4.5 where boost 1.60.0 was installed globally using `pacman` and I used the conda recipie to install boost 1.59.0 in `$CONDA_ENV_PATH`. If the conda virtual environment is activated and I use the `setup` args to direct cmake to boost 1.59.0 installed there I have no problems. The correct version is always found, even if I try to `make` with the conda virtual environment deactivated the cmake paths still point to the installation I want even though those paths aren't in my environment, and the build is successful. . I don't know If I would mark this as resolved, but it is at least understood to where it is predictable. . For anyone who has run into a similar problem:. If you are using a compatible version of boost installed manually on osx and your build fails to link, even if cmake reported the compatible version of boost was detected it may have detected the desired headers, but not the correct binaries. because homebrew has installed boost 1.60.0 in `/usr/local`. Try running `brew unlink boost boost-python` and running setup/make again. . This may be related to the issue linked by @bennybp. It seems it has something to do with cmake find package on osx. I haven't seen any problems come up switching between different versions of python though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313#issuecomment-198164795:1601,install,installation,1601,https://psicode.org,https://github.com/psi4/psi4/issues/313#issuecomment-198164795,3,['install'],"['installation', 'installed']"
Deployability,"ew matrix. `arr = wfn.Ca_subset(""AO"", ""OCC"").nph` now no longer give noise. (#736); - Basis PyParsing is now simpler and code duplication has been removed (#734 ); - Update cc-pVXZ and add cc-pwCVXZ for Li, Be, Na, Mg (#728); - MCSCF orbital semicanonicalization (#722); - C++ Options are now exposed to Python (#720); - Intermediate sub-system and partial-basis energies from `nbody` wrapped exported as psivars (#952); - Better start/stop/elapsed time printing. # Documentation; - Additional Documentation Information (#787). # Miscelaneous; - Added N to ANO0 basis set (#825). # Bug Fixes; - Accidental signed integer overflow when using extremely low memory in DFJK; - wB97X had an incorrect range-seperation parameter. This is now fixed. Note that this did not effect wB97X-D.; - Restricted-irrep finite-difference Hessians were only returning the totally symmetric portion of the Hessian ([in #834](https://github.com/psi4/psi4/pull/834/commits/67f536c720abf31040eaa933a12e26c207100b69)); - Analytic HF Hessians were wrong under particular circumstances (#903); - A bug causing IRCs to converge to the initial transition state was fixed (#882). # Conda changes since v1.1; - MKL linked dynamically through free Anaconda-provided `mkl_rt.so` rather than statically linked. This saves size (since NumPy also uses `mkl_rt`) and eliminates incorrect results and threading damping associated with multiple programs accessing BLAS/LAPACK from multiple sources (#748, #755).; - Psi4 no longer installs a non-standard gcc5.2 alongside Psi4 on Linux (or gcc feature on Mac). This was necessary when conda's default 4.8.5 was too low for Psi4's c++11 requirements, but since conda's default has leaped to 7.2.0, we use default again. Note that only libraries (e.g., `libstdc++`) are installed alongside Psi4 now, not compilers (e.g., `g++`).; - (generic, not psi4, conda) `conda activate env` works multishell, not just on `bash`. Since conda 4.4 c. Dec 2017. # Known Bugs; - PCM-ROHF is broken. See #999",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959:7142,install,installs,7142,https://psicode.org,https://github.com/psi4/psi4/issues/959,2,['install'],"['installed', 'installs']"
Deployability,"ew python optking driver. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] RN 1 The fixed_* optimization keywords have been changed to ranged_* options; - [x] RN 2 output will be changed. Check output.dat for simple convergence / step info. output.log for detailed info; - [x] RN 3 IRC convergence behavior different for minima and substep. ; - [x] Downstream plugin users who were still getting wfn from globals will find it has now departed. Please follow the advice it's been issuing for years to do wfn passing. [LAB added]. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New optimizer. Most of driver is very similar; - [x] Hessian Updating and optimization logic is in optking as much as possible; - [x] Restarting optimizations now supported. Optking can write entire state to disc (json); - [x] Driver attempts to symmetrize geometries; - [x] New keywords added. Some removed / updated. ; - [x] old optking removed from CMakeLists.txt from `/psi4/src/psi4`; - [x] optking py_funcs removed from core.cc; - [x] All tests have been verified for equal or better convergence. (except opt-irc-2); - [x] globals legacy gradient, wfn, and molecule removed [LAB added]. ## Questions; - [ ] A document describing differences between the optimzers may be necessary; - [ ] Unclear if I have fully removed old optking and building with new optking is fully working. ## Checklist; - [x] test15 tests restart; - [x] Can remove old deprecated set_gradient; - [x] ctest -L opt run. ## Status; - [x] Ready for review; - [ ] Ready for merge. For documentation on the new optimizer please see https://optking.readthedocs.io/en/latest/; The lines changed is almost entirely due to new test output.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727:1307,update,updated,1307,https://psicode.org,https://github.com/psi4/psi4/pull/2727,1,['update'],['updated']
Deployability,"ew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet, if boost 1.60.0 is linked it reports it found the correct libraries version 1.59.0, and if those links are removed it reports they are not found. In both cases it sets `Boost_FOUND = 1` but with the boost 1.60.0 links removed the pre-packaged boost is configured to bui",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313:1812,install,install,1812,https://psicode.org,https://github.com/psi4/psi4/issues/313,1,['install'],['install']
Deployability,"f hombrew boost is unlinked at the time I run the `setup` script I will see both the include and library paths are set to the local boost install in the cmake output. However, if homebrew boost is linked when I run `make` I will get an error in the linking step. I suspect that the directory where hombrew adds the links to boost (`/usr/local/lib`) are passed as a linker argument by cmake, either by default, or because something else is installed there. Thus, if those links are present I will get the characteristic boost 1.60.0 linking errors. Hombrew installs boost-python as a separate package so to properly remove all of the links `brew unlink boost boost-python` . Interestingly I have a similar setup on a laptop running ArchLinux 4.4.5 where boost 1.60.0 was installed globally using `pacman` and I used the conda recipie to install boost 1.59.0 in `$CONDA_ENV_PATH`. If the conda virtual environment is activated and I use the `setup` args to direct cmake to boost 1.59.0 installed there I have no problems. The correct version is always found, even if I try to `make` with the conda virtual environment deactivated the cmake paths still point to the installation I want even though those paths aren't in my environment, and the build is successful. . I don't know If I would mark this as resolved, but it is at least understood to where it is predictable. . For anyone who has run into a similar problem:. If you are using a compatible version of boost installed manually on osx and your build fails to link, even if cmake reported the compatible version of boost was detected it may have detected the desired headers, but not the correct binaries. because homebrew has installed boost 1.60.0 in `/usr/local`. Try running `brew unlink boost boost-python` and running setup/make again. . This may be related to the issue linked by @bennybp. It seems it has something to do with cmake find package on osx. I haven't seen any problems come up switching between different versions of python t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313#issuecomment-198164795:1422,install,installed,1422,https://psicode.org,https://github.com/psi4/psi4/issues/313#issuecomment-198164795,1,['install'],['installed']
Deployability,f-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; NUM PRINT = 20; MAXITER = 12 FREEZE CORE = yes; NUM ROOTS = 10 ICORE = 1; PRINT = 1 FCI = no; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-08 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 130; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 1; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = yes TRANS DENSITY= yes. FILES = 50 51 52 53. EX ALLOW = 1 1 ; STATE AVERAGE = 1(1.00) ; STATE AVERAGE = 1(1.00) . ORBITALS:; NMO = 246 NUM ALP = 47; ORBS IN CI = 232 NUM ALP EXPL = 33; FROZEN CORE = 14 NUM BET = 47; RESTR CORE = 0 NUM BET EXPL = 33; IOPEN = no; RAS1 LVL = 32 A RAS3 MAX = 2; RAS1 MIN = 92 B RAS3 MAX = 2; A RAS1 LVL = 32 RAS4 LVL = 232; A RAS1 MIN = 45 A RAS4 MAX = 0; A RAS1 MAX = 47 B RAS4 MAX = 0; B RAS1 LVL = 32 RAS4 MAX = 0; B RAS1 MIN = 45 A RAS34 MAX = 2; B RAS1 MAX = 47 B RAS34 MAX = 2; RAS3 LVL = 33 RAS34 MAX = 2; RAS3 ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/62:15533,UPDATE,UPDATE,15533,https://psicode.org,https://github.com/psi4/psi4/issues/62,1,['UPDATE'],['UPDATE']
Deployability,"familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them. The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date. These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions. Andy. > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > ; > I think the short answer may be that a lot of the developers are still used; > to version control models like SVN or CVS.; > ; > Honestly I think you have the right idea though, with git there really; > isn't a need for two repositories for an open source code so long as we; > adopt the accompanying philosophy. It's now a matter of getting everyone; > on board.; > ; > Sent from my Android (without spellcheck). Please forgive the brevity.; > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wrote:; > ; > > Why don't you keep the sensiti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98498738:1209,release,released,1209,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98498738,1,['release'],['released']
Deployability,"few comments:. It's the ia32 (32bit) build, the x86_64 one is here:; https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=amd64&ver=1%3A1.2.1-1&stamp=1546603567&raw=0. > * no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`). Thanks, I thought I had removed them already. > * psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`). It is using python3, this must be some indirect dependency which I can do nothing about.; ; > * production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8. OK, I will look into that. > * I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`). Hrm right, I will take another look at building the manual, thanks for pointing that out. > * threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270. Ok, I'll try to run that during bulid as well. > * Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`). That one is likely due to 32bit: `tests/options1/input.dat` tried to allocate more than 4 GB in the last two attempts in the `check set_memory() wrapper` test; the same applies to `json-v11-energy` and `json_data[""memory""] = ""5GB""`. . So those are accounted for, the ones which are weird are the . ```; Exit Status: infile ( -11 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```; failures. I've updated the packaging and am running a new build/test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762:2160,update,updated,2160,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762,1,['update'],['updated']
Deployability,ffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; i,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2256,install,installing,2256,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"find-exe, the known-failures, and the sow/reap, the ailing test cases involved either LRC functionals or ESP.; ```; The following tests FAILED:; 	151 - dft1 (Failed); 	152 - dft1-alt (Failed); 	154 - dft3 (Failed); 	188 - mints9 (Failed); 	272 - pywrap-db2 (Failed); 	275 - pywrap-freq-g-sowreap (Failed); 	322 - cubeprop-esp (Failed); 	333 - dftd3-version (Failed); 	341 - mrcc-ccsdt (Failed); 	342 - mrcc-ccsd_t_ (Failed); 	343 - mrcc-ccsdt_q_ (Failed); 	344 - mrcc-optfreq (Failed); Errors while running CTest; ```. ##### Recc. TODO. * In main CM, change erd warning to ` message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, gradients will be caught and halted, but LRC DFT, ESP, and perhaps other types not tested and identified will give *wrong* answers. Consider this your warning."")`. * In `psi4/driver/driver.py`, apply patch below. ```; --- a/psi4/driver/driver.py; +++ b/psi4/driver/driver.py; @@ -82,6 +82,9 @@ def _find_derivative_type(ptype, method_name, user_dertype):; raise ValidationError(""_find_derivative_type: user_dertype should only be None or int!""); dertype = user_dertype; ; + if (core.get_global_option('INTEGRAL_PACKAGE') == 'ERD') and (dertype != 0):; + raise ValidationError(""INTEGRAL_PACKAGE ERD does not play nicely with gradients, so stopping.""); +; # Summary validation; if (dertype == 2) and (method_name in procedures['hessian']):; pass; ```. * Running this yield the following list (30% failure rate).; ```; The following tests FAILED:; 	 12 - cbs-xtpl-freq (Failed); 	 13 - cbs-xtpl-gradient (Failed); 	 14 - cbs-xtpl-opt (Failed); 	 16 - cbs-xtpl-wrapper (Failed); 	 17 - cc1 (Failed); 	 21 - cc13 (Failed); 	 22 - cc13a (Failed); 	 23 - cc14 (Failed); 	 30 - cc21 (Failed); 	 32 - cc23 (Failed); 	 33 - cc24 (Failed); 	 34 - cc25 (Failed); 	 35 - cc26 (Failed); 	 36 - cc27 (Failed); 	 39 -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-276884648:1408,patch,patch,1408,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-276884648,1,['patch'],['patch']
Deployability,"first 2 questions:; Can try - this was my first psi4 optimization. 3:; ""exception"" related definitively to ""new linear angles"": . ```; Energy change for the previous step:; Projected : -0.0009583389; Actual : -0.0004424593. Performing BFGS update.; Previous computed or guess Hessian on step 1.; Steps to be used in Hessian update: 24 23; Taking RFO optimization step.; Going to follow RFO solution 1.; Using RFO vector 1.; Norm of target step-size 0.47532; Projected energy change by RFO approximation: -0.0041167176; Newly linear bends that need to be incoporated into the internal coordinates: 1 3 11; 2 9 13; The INTCO_EXCEPTion handler:; New linear angles; Dynamic level is 0.; exc.g_really_quit() is 0.; New linear angles; ```. There are 1825 geometries in the output.dat file (it is about 22mb in size).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/153#issuecomment-124906121:240,update,update,240,https://psicode.org,https://github.com/psi4/psi4/issues/153#issuecomment-124906121,2,['update'],['update']
Deployability,fockci integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1838:7,integrat,integration,7,https://psicode.org,https://github.com/psi4/psi4/issues/1838,1,['integrat'],['integration']
Deployability,"found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/includ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2029,Install,Installing,2029,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,2,['Install'],['Installing']
Deployability,"found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['ener",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159:8549,install,install,8549,https://psicode.org,https://github.com/psi4/psi4/issues/3159,1,['install'],['install']
Deployability,"g const&, bool const&) in libmints.a(onebody.cc.o); ...; ""_PyTuple_Size"", referenced from:; boost::python::objects::function::call(_object*, _object*) const in libboost_python-1_57.a(function.o); boost::python::objects::function::argument_error(_object*, _object*) const in libboost_python-1_57.a(function.o); ""_PyTuple_Type"", referenced from:; boost::python::converter::pyobject_type<boost::python::tuple, &(PyTuple_Type)>::check(_object*) in export_mints.cc.o; boost::python::detail::tuple_base::call(boost::python::api::object const&) in libboost_python-1_57.a(tuple.o); boost::python::detail::register_tuple_pytype_ptr::register_tuple_pytype_ptr() in libboost_python-1_57.a(tuple.o); boost::python::converter::pyobject_type<boost::python::tuple, &(PyTuple_Type)>::get_pytype() in libboost_python-1_57.a(pickle_support.o); ""_PyType_GenericAlloc"", referenced from:; boost::python::objects::class_type_object in libboost_python-1_57.a(class.o); ""_PyType_IsSubtype"", referenced from:; boost::python::instance_holder::install(_object*) in libboost_python-1_57.a(class.o); boost::python::objects::find_instance_impl(_object*, boost::python::type_info, bool) in libboost_python-1_57.a(class.o); boost::python::objects::(anonymous namespace)::new_class(char const*, unsigned long, boost::python::type_info const*, char const*) in libboost_python-1_57.a(class.o); boost::python::instance_holder::allocate(_object*, unsigned long, unsigned long) in libboost_python-1_57.a(class.o); boost::python::instance_holder::deallocate(_object*, void*) in libboost_python-1_57.a(class.o); boost::python::converter::(anonymous namespace)::complex_rvalue_from_python::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::complex_rvalue_from_python::get_slot(_object*) in libboost_python-1_57.a(builtin_converters.o); ...; ""_PyType_Ready"", referenced from:; boost::python::objects::static_data() in libboost_python-1_57.a(class.o); boost::python::objects::cl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:70786,install,install,70786,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,1,['install'],['install']
Deployability,"g: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3785,install,installing,3785,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"g; > whether one is easier to check than the other regarding whether the; > gradient is available. We need to know on a functional-by-functional basis; > whether we have analytic gradients or not. If that's much easier to handle; > with one style vs the other, that would be an argument for doing it that; > way. Then we can decide what to do with the HF cases to make them play; > nicely with our desired solution for the DFT ones.; > ; > David; > ; > On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > > ; > > # (a) for HF; > > ; > > energy(‘scf’); > > ; > > # (b) for unrestricted HF; > > ; > > set reference uhf; > > energy(‘scf’); > > ; > > # (c) for B3LYP; > > ; > > set dft_functional b3lyp; > > set reference rks; > > energy(‘scf’); > > ; > > # (d) also for B3LYP; > > ; > > energy(‘b3lyp’); > > ; > > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > > ; > > set dft_functional b3lyp; > > energy(‘scf'); > > ; > > # (e) for unrestricted B3LYP; > > ; > > set dft_functional b3lyp; > > set reference uks; > > energy(‘scf’); > > ; > > # (f) also for unrestricted B3LYP; > > ; > > set reference uks; > > energy(‘b3lyp’); > > ; > > # (g) also for unrestricted B3LYP (since energy command trumps options,; > > ; > > uhf gets translated to uks); > > set reference uhf; > > energy(‘b3lyp’); > > ; > > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > > reference into the energy() call for HF or DFT (though for the latter you’d; > > have to use dft_functional keyword.; > > ; > > Francesco brings up a related and overdue point. If you specify an; > > open-shell molecule and no reference, it complains at you b/c rhf (the; > > default) is unsuitable. I couldn’t say concretely, but some other programs; > > will switch to an appropriate reference for open-shell. F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:2327,toggle,toggle,2327,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['toggle'],['toggle']
Deployability,"gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ python 3.6.9 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ └─ psi4-r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3195,install,installed,3195,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability,gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3246,Install,Installing,3246,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,ge/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3050,Install,Installing,3050,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"gers coffee:. ```; PsiException: Could not converge SCF iterations in 4 iterations. Failed to converge. Traceback (most recent call last):; File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1093,patch,patch,1093,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,1,['patch'],['patch']
Deployability,"ghts reserved.; ; **************** THREAD INFORMATION ******************; Job running using OpenMP.; The number of parallel threads is: 4; ; ******************************************************; ; /home/termo/chargemol_09_26_2017/atomic_densities/ ; ; ******************** TIME CONTROL ********************; Starting format_total_cube_density; ******************************************************; ; inputfile = ""total_density.cube""; parameters; 5.0000000000000000 -12.329260000000000 -10.002257999999999 -9.6799070000000000 ; 131.00000000000000 0.16000000000000000 0.0000000000000000 0.0000000000000000 ; 120.00000000000000 0.0000000000000000 0.16000000000000000 0.0000000000000000 ; 122.00000000000000 0.0000000000000000 0.0000000000000000 0.16000000000000000 ; sum_negative_density= 0.0000000000000000 ; center_nabc =; 80 63 60; 55 63 60; 50 50 60; 50 69 71; 50 69 50; delta_na= 61; delta_nb= 61; delta_nc= 61; ; ******************** TIME CONTROL ********************; Starting check_grid_spacing; ******************************************************; ; The grid spacing in your electron density input file is adequate.; ; ******************** TIME CONTROL ********************; Finished check_grid_spacing in 0.11500000208616257 seconds; ******************************************************; ; ; ******************** TIME CONTROL ********************; Finished format_total_cube_density in 1.1610000133514404 seconds; ******************************************************; ; ncore = 0.0000; nvalence = 62.0000; pixelvolume = 4.0960E-03; numerically integrated valence density = 3.3967E+01; sum_valence_occupancy_correction = 0.0000E+00; checkme = 2.8033E+01; The electrons are not properly accounted for. ```. So here 28 electrons short in the cube of the 62 expected.... running on latest master:; ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.3a1.dev221. Git: Rev {master} 28a9a54. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-412835074:2479,integrat,integrated,2479,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-412835074,1,['integrat'],['integrated']
Deployability,"gin from that psi4 exe, and modify the Makefile as below, it should work. . ```; # miniconda environment; MCONDA = /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug; # Flags that were used to compile Psi4.; CXX = ${MCONDA}/bin/g++; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; LDFLAGS =; LDFLAGS=""-Wl,-rpath,${MCONDA}/lib/""; INCLUDES = -I${MCONDA}/include/ -I${MCONDA}/include/psi4 -I${MCONDA}/include/python2.7 -I/usr/include; ```. more explicitly,. ```; conda create -n p4plug2 psi4; source activate p4plug2; cd p4plug2 # may vary; just get into the miniconda/envs/p4plug2 directory; conda install gcc # 4.8.5-3; psi4 --new-plugin testplug; cd testplug; vi Makefile # copy in Makefile mods above, changing MCONDA variable; cp -pR ../../p4plug/include/psi4/ ../include/ # copy in a set of psi4 headers; make; psi4 # run sample input.dat; ldd testplug.so ; linux-vdso.so.1 => (0x00007fff969fe000); libstdc++.so.6 => /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug2/lib/libstdc++.so.6 (0x00007f763d984000); libm.so.6 => /lib64/libm.so.6 (0x00007f763d65c000); libgcc_s.so.1 => /theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/p4plug2/lib/libgcc_s.so.1 (0x00007f763d446000); libc.so.6 => /lib64/libc.so.6 (0x00007f763d085000); /lib64/ld-linux-x86-64.so.2 (0x00007f763de9e000); ```. @jturney, if you approve the plan, do you want to fix the includes installation and trigger an alternate Makefile.template if binary?. Of course, I haven't tried any plugin operation that actually involves blas/lapack calls.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172256746:1219,install,install,1219,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172256746,4,['install'],"['install', 'installation']"
Deployability,"github.com/articles/duplicating-a-repository/ . And in the beginning we didn’t want everyone to have to pay for storing private repositories if they wanted private forks (moot now since github offers private storage for scientists). That’s more of the history of how the current scheme came to be. I’m open to better schemes, but I think most of our problems can be solved by an automated public/private master sync when safe. Lori. > On May 3, 2015, at 12:18 PM, andysim notifications@github.com wrote:; > ; > It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1330,release,release,1330,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['release'],['release']
Deployability,gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; inst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2177,install,installing,2177,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,good news. The MKL is fine for this. I got the calculation finished.; Trouble was likely again #1679 because it failed right at the amplitude writing. I applied the `long long int` modification and the `size_t` suggestion above (see patch).; Results: [outfile.txt](https://github.com/psi4/psi4/files/3922471/outfile.txt); git patch: [fix.patch.txt](https://github.com/psi4/psi4/files/3922477/fix.patch.txt) (sort of untested hot fix for now),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561685809:233,patch,patch,233,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561685809,4,['patch'],['patch']
Deployability,"gradient', qualname='run_scf_gradient'); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4298; #29 0x00007faabd653e23 in _PyFunction_Vectorcall (func=<optimized out>, stack=0x7faa8746fd90, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Objects/call.c:435; #30 0x00007faabd65ca90 in PyVectorcall_Call (callable=<function at remote 0x7faa8748c1f0>, tuple=<optimized out>, kwargs=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Objects/call.c:199; #31 0x00007faabd6481e9 in do_call_core (kwdict={'molecule': <psi4.core.Molecule at remote 0x7faa8737c400>, 'opt_iter': True}, callargs=('hf',), func=<function at remote 0x7faa8748c1f0>, ; tstate=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:5010; #32 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:3559; #33 0x00007faabd6453f4 in PyEval_EvalFrameEx (throwflag=0, ; f=Frame 0x5589d8c47070, for file /home/work/psi4/install.susi/lib/psi4/driver/driver.py, line 973, in gradient (name='hf', kwargs={'opt_iter': True}, gradient_type='conventional', dertype=1, optstash=<OptionsState(data={('E_CONVERGENCE', 'SCF'): <OptionState(option='E_CONVERGENCE', module='SCF', value_global=<float at remote 0x7faa8746f890>, haschanged_global=False, value_local=<float at remote 0x7faa8746f830>, haschanged_local=False, value_used=<float at remote 0x7faa8746f870>, haschanged_used=False) at remote 0x7faa8737d490>, ('D_CONVERGENCE', 'SCF'): <OptionState(option='D_CONVERGENCE', module='SCF', value_global=<float at remote 0x7faa8746f8d0>, haschanged_global=False, value_local=<float at remote 0x7faa8746f530>, haschanged_local=False, value_used=<float at remote 0x7faa8746f8b0>, haschanged_used=False) at remote 0x7faa8737d460>, ('E_CONVERGENCE',): <OptionState(option='E_CONVERGENCE', module=None, value_global=<float at remote 0x7faa8746f990>, haschanged_global=False, valu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:9517,install,install,9517,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['install'],['install']
Deployability,grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mk,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2140,install,installing,2140,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,guess I'll do v1.2.0 + patch for conda (see https://github.com/PCMSolver/pcmsolver/issues/165). let me know when there's a tag that's fully operational (and what it's name will be)).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/988#issuecomment-385743002:23,patch,patch,23,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385743002,1,['patch'],['patch']
Deployability,"gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasiria",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:3666,install,install,3666,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:5774,install,install,5774,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"gy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:7272,release,release,7272,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include""` and all the other envvars also set similarly, and the build appears to be OK, no ctests or pytests failed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1975,release,release,1975,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['release'],['release']
Deployability,"hat have planning, computing and querying functions. Then, integrate the new driver with the QCArchive project for parallelizing nbody, CBS and findif. ## Deconstruction Progress; 99 changed files, and 5,314 additions and 2,946 deletions. c. dgasmith:recursive; - #2512; - #2515; - #2518; - #2526 ; - #2530 ; - #2532; - #2536 ; - #2544. 59 changed files, and 3,408 additions and 1,885 deletions. c. loriab:recursive62; - #2552 ; - #2557; - [ ] #2516. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [ ] Create compute classes for nbody, CBS and findif; - [ ] Integrate QCArchive. ## Release Notes; - `msgpack-python` added as req'd dependency. this keeps numpy arrays serialized when communicating in schema; - python 3.8 requires pint 0.10; - add a logging file, presently `file.log` that currently is continuously appended; - any fns mirroring `sherrill_gold_standard` or `allen_focal_point` need to be reformatted and registered with `register_composite_function`; - extrapolation functions for composite need to be registered with `register_xtpl_function`; - CBS and xtpl functions need to be called as strings, not objects. So `energy('cbs', scf_wfn='scf', scf_basis='cc-pV[DTQ]Z', scf_scheme='scf_xtpl_helgaker_3')` not `energy(cbs, scf_wfn='scf', scf_basis='cc-pV[DTQ]Z', scf_scheme=scf_xtpl_helgaker_3)`.; - no longer always evaluating gradient before Hessian to test safety of projecting rotations. Instead assuming unsafe. Can pass `ref_gradient` array to test on or `set findif fd_project T/F` explcitly to control.; - `psi4.QMMM()` object replaced by `embedding_charges` kwarg in Bohr. See extern examples for details.; - `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. `json_ret` is now an object, so `.` access, not dictionary.; - CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351:973,continuous,continuously,973,https://psicode.org,https://github.com/psi4/psi4/pull/1351,1,['continuous'],['continuously']
Deployability,"have chosen. The libboost_mpi-1_57.a is really absent in the /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4public-master/objdir/boost/lib. Nor it is listed in ""Required Compiled Boost Modules"" on the page https://github.com/psi4/psi4public/wiki/9_Boost. . The comand I used for .setup is as following:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake. The ""master"" verson also had a problem with the pcmsolver so I used an option ""--pcmsolver off"". . After successfull ./setup I went to the objdir and ran ""make"". Does anyone know, what can I do in this case? As far as I unserstand, I can only use mkl with intel compiler. Generally, I need psi4 to compute electronic density grids for fullCI and Coupled Cluster calculations of small molecules with huge basis sets. Thank you in advance.; Best regards,; Michael Medvedev. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:3302,release,release,3302,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/109:1715,install,install,1715,https://psicode.org,https://github.com/psi4/psi4/issues/109,1,['install'],['install']
Deployability,"he compilation flag list when enabled. The `-pedantic-errors` flag has the compilation fail any time the code does not strictly follow the C++ language standard, i.e., whenever a compiler-specific language extension is used. `FORCE_PEDANTIC` is currently set to be enabled by default. ; 2. Fixes any instances of the code where the above option/flag would cause a compilation failure. This only requires two changes currently - removing extra semicolons in `libdiis/diismanager.h`, and replacing use of variable-length C-style arrays in `libmints/extern.cc`. The goal of these changes is to improve code portability across different compilers. By effectively disabling compiler-specific language extensions, the code no longer relies on specific compiler functionalities to work, and therefore should be compatible with a larger range of compilers across a wider variety of systems. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds a new compile-time setting, `FORCE_PEDANTIC`, that causes compilation to fail whenever use of a compiler-specific extension is detected.; - [X] Removes extraneous semicolons in `libddis/diismanager.h` that led to compiler error with the `FORCE_PEDANTIC` option enabled.; - [X] Replaces the use of variable-length C-style arrays in `libmints/extern.cc` with `std::vector` constructs. ## Questions; - [X] Should this new option be on by default?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145:1153,release,release,1153,https://psicode.org,https://github.com/psi4/psi4/pull/3145,1,['release'],['release']
Deployability,"he initial CompositeJK implementation, and modifications of functions where necessary to support the above front-end changes. . ## User API & Changelog headlines; - [X] The ""COSX"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+COSX"".; - [X] The ""LINK"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+LINK"". ## Dev notes & details; - [X] Refactors the DFJLinK and DFJCOSK classes into the combined CompositeJK JK subclass. CompositeJK can perform the computations previously performed by both DFJLinK and DFJCOSK within a single JK subclass. These changes are largely localized to the commits f0c4f6c8e31696f6690e101d71bef1863bcf324c - ca66c91976cb5e8c42c8292fcf90c6d28b885fd0, with bfdff974dbfbb9513c85a460b00495598e5f240e also counting. ; - [X] Implements a new scheme for ""SCF_TYPE"" names associated with CompositeJK algorithm combinations. This scheme uses the ""+"" delimiter in conjunction with the names of the separate J and K algorithms present in CompositeJK to use a specific combination of separate J and K build algorithms. ; - [X] Changes functionalities in DFJLinK and DFJCOSK, as well of the JK base class itself, as necessary to support the standardized ""SCF_TYPE"" naming scheme and the general flexibility and ease of expansion that CompositeJK is aiming for.; - [X] Updates relevant tests and documentation. ## To-do; - [x] Update CompositeJK methods with comments on paper references.; - [x] Update CompositeJK::num_computed_shells() function. ## Questions; - [ ] Hopefully this PR isn't too large? While the lines changed looks pretty large, a lot of it comes from the removal of the DFJLinK and DFJCOSK classes and their reimplementation into CompositeJK, as well as the updating of associated reference outputs. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833:4167,Update,Updates,4167,https://psicode.org,https://github.com/psi4/psi4/pull/2833,3,['Update'],"['Update', 'Updates']"
Deployability,"he release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11667,release,release,11667,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['release'],['release']
Deployability,"he user will need; to add the installation directory into his/her path. If the package has; been installed in the default location `/usr/local/psi`, then in C; shell,; the user should add something like the following to their `.cshrc`; file::; ; setenv PSI /usr/local/psi; set path = ($path $PSI/bin); ; Next, the user needs to tell the PSI4 I/O manager how to handle scratch; files.; Identify the path to a fast scratch disk for which the user has write; access.; If the local `/tmp` volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended.; ; .. warning:: Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the; network; and negatively impact other users.; ; Specify scratch location by editing the `.cshrc` file to set the scratch; environment variable :envvar:`PSI_SCRATCH`. If the selected location is; `/scratch/user`, add something like the following::; ; setenv PSI_SCRATCH /scratch/user; ; In a bash shell, the corresponding commands to be added to `.bashrc` is; the following::; ; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user; ; More advanced control of scratch files and is handled through a; `.psi4rc` file, which is discussed at section :ref:`sec:psirc`.; ; .. note:: For developers: during compilation and testing, PSI4 finds its; basis sets,; grids, etc., in `psi4/lib`. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for; this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. -Rob. On Fri, Apr 11, 2014 at 9:39 AM, zxinfish notifications@github.com wrote:. > Reopened #56 https://github.com/psi4/psi4public/issues/56.; > ; > ## ; > ; > Reply to this email directly or view it on GitHubhttps://github.com/psi4/psi4public/issues/56; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56#issuecomment-40206429:2019,install,installation,2019,https://psicode.org,https://github.com/psi4/psi4/issues/56#issuecomment-40206429,1,['install'],['installation']
Deployability,"heel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermionpsi4-0.4-py36h934b37d_0 ...; installing: psi4-rt-1.3.2-py36ha6b60c8_0 ...; if: Expression Syntax.; ERROR: executing post_install.sh failed; [chenh@Pauling programs]$ psi4 -V; Segmentation fault (core dumped); ```; This problem is not a special case, and I have also found that someone has the same problem in other forums. My system is 2.6.32-431.el6.x86_64 #1 SMP Sun 2013 x86_64 x86_64 x86_64 GNU/Linux.; If you have any questions, please don't hesitate to ask me.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:4900,install,installing,4900,https://psicode.org,https://github.com/psi4/psi4/issues/1788,3,['install'],['installing']
Deployability,"hello, I'll try to work on the replies and changes to have it completed by the end of the week, might I ask what's the timeframe we're working here before 1.4 stable release?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-870509986:166,release,release,166,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-870509986,1,['release'],['release']
Deployability,"helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:4816,install,install,4816,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"hen PYMOD_INSTALL_LIBDIR is non-default.; - [x] export psi4::core target. use it in plugin. much simplify the psi4Config. tidy up the share installs.; - [x] flatten install dir structure. no more `external/`; - [x] shift importing of official plugins. rename psi4 --plugin* options. add cmake -C line. update CM templates.; - [x] switch over Py detection to PythonLibsNew. Beautify components printing. ; - [x] Move threads detection to target.; - [x] start testing the plugin templates again; - [x] standardize `Psi4Macros` --> `psi4OptionsTools`.; - [x] Correct CXX comp names in autocmake_static_lib (@robertodr, I copied this from you, so you may have it wrong, too). Check enabled langs properly rather than compilers defined so OptionsTools usable to other projects with diff enabled langs.; - [x] switch pybind11 to upstream source. better handle c++ std wrt pybind. `PSI4_CXX_STANDARD` --> `psi4_CXX_STANDARD`.; - [x] compile test of gcc version able to account for -gcc-name/-gxx-name (@bennybp, here's the code for what we talked about once in `custom_cxxstandard.cmake`); - [x] convert restrict test to write its own file.; - [x] kill off LAB and @jturney config files. replace with `cmake -C psi4PluginCache.cmake` suited config file.; - [x] `psi4pasture` --> `pasture`.; - [x] always whole-archive dpd and qt; - [x] `external` --> `external/upstream`, `internals` --> ``external/downstream`; - [x] remove old Find*cmake files. * **User-Facing for Release Notes**; - [x] We changed our python detection module to the one used by NumPy. Also changed so that not actually using libpython anywhere.; - [x] Used to do `psi4 --new-plugin-makefile` to generate `Makefile`. Now do `psi4 --plugin-compile` to get a cmake command to generate a `Makefile` against that psi4.; - [x] `--new-plugin` --> `--plugin-name`.; - [x] `ctest -L mini` --> `ctest -L smoke`; ; - [x] @amjames, the pasture is going to need a slight update to mesh with the new plugin infrastructure. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/554:1850,Release,Release,1850,https://psicode.org,https://github.com/psi4/psi4/pull/554,2,"['Release', 'update']","['Release', 'update']"
Deployability,"her route?. ```; ==> Integral Setup <==. DFHelper Memory: AOs need 0.104621 GiB; user supplied 0.104863 GiB. 14042044 14074472; Using in-core AOs. Traceback (most recent call last):; File ""stage/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 1113, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1361,release,release,1361,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,"hich can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:7374,install,installable,7374,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installable']
Deployability,"hird of the problem. I believe you can handle this transition manually with a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's pos",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2178,Update,Update,2178,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['Update'],['Update']
Deployability,"hmm, you're right -- adcc 15.14 is getting installed https://github.com/psi4/psi4/actions/runs/3508758253/jobs/5877394681#step:16:956 but not detected for tests https://github.com/psi4/psi4/actions/runs/3508758253/jobs/5877394681#step:21:656",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785#issuecomment-1322413359:43,install,installed,43,https://psicode.org,https://github.com/psi4/psi4/pull/2785#issuecomment-1322413359,1,['install'],['installed']
Deployability,"holesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(nam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:9654,install,install,9654,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ..",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1525,install,installing,1525,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"hot-swappable and AM not detectable at runtime. That is, a built psi4 is perfectly happy to link (in the ldd sense) to a libint.so that is inconsistent with fixed data dimensions in psi4 libmints, and libmints can't even throw an error for enlightenment. I could throw additional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:1734,install,install,1734,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,2,"['install', 'update']","['install', 'update']"
Deployability,"hrow an exception upon construction. For GPU support, there is the `gauxc_ENABLE_GPU` keyword, which ensures that the Psi4/GauXC interface supports GPU execution. For testing, `test_compositejk.py` and `test_comprehensive_jk_screening.py` both now include sn-LinK tests, conditional on the sn-LinK interface being built. Finally, a `gauxc_writer.py` file has been added, enabling construction of HDF5 reference files via the Psi4/GauXC interface, to be used in GauXC's `standalone_driver` for debugging purposes. The `test_gauxc_writer.py` file has been added to test this writer against reference HDF5 files. . ## User API & Changelog headlines; - [X] Psi4 has been interfaced to the GauXC standalone library, specifically the sn-LinK exact exchange algorithm present within GauXC. Construction of the interface is specified at compile-time with the compile-time flag `ENABLE_gauxc`, and GPU support is specified with the `gauxc_ENABLE_GPU` compile-time flag. Once installed, `SCF_TYPE=J_ALGO+SNLINK` can be used to call GauXC within Psi4. A large number of keywords have been added for controlling the behavior of `SNLINK`. For controlling the GauXC grid, `SNLINK_RADIAL_POINTS`, `SNLINK_SPHERICAL_POINTS`, and `SNLINK_RADIAL_SCHEME` control the GauXC radial point count, spherical point count, and radial quadrature, respectively. `SNLINK_USE_GPU` controls GPU execution of GauXC. Finally, `SNLINK_INTS_TOLERANCE` controls the integral screening threshold used by GauXC's sn-LinK algorithm. ## Dev notes & details; - [X] Adds a new new Psi4 compile-time option, `ENABLE_gauxc`. When set to `ON`, `ENABLE_gauxc` will build Psi4 with support for GauXC. The Psi4 build system has been adjusted so that Psi4 can either build an internal instance of GauXC, or hook up to an external GauXC instance defined by `gauxc_DIR`. The `gauxc_ENABLE_GPU` keyword builds the Psi4/GauXC interface to support GPU execution. Additionally, for internally-build GauXC instances, setting `gauxc_ENABLE_GPU` to `ON` will",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:3275,install,installed,3275,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['install'],['installed']
Deployability,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3198:279,install,install,279,https://psicode.org,https://github.com/psi4/psi4/issues/3198,2,['install'],"['install', 'installed']"
Deployability,"https://github.com/psi4/psi4/blob/master/tests/isapt2/input.dat is the test case version of that example. It has some updates, and it runs. thanks for the notice -- we should update the example. lmk if further problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281#issuecomment-902386060:118,update,updates,118,https://psicode.org,https://github.com/psi4/psi4/issues/2281#issuecomment-902386060,2,['update'],"['update', 'updates']"
Deployability,"hub.com/evaleev/libint/pull/233 | 23Mar22, after #2413, v1.6, v1.7 | `5-4-3-6-5-4_mm4f12ob2.tgz` | gss | `eri_c4_d1_l5` | `_15` | `_7` | `_4` |; | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2222,release,releases,2222,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['release'],['releases']
Deployability,hybrid dft-sapt integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1834:16,integrat,integration,16,https://psicode.org,https://github.com/psi4/psi4/issues/1834,1,['integrat'],['integration']
Deployability,"i have an update, i found this open PR (which hasn't been merged since 2018) on `psi4numpy` https://github.com/psi4/psi4numpy/pull/36/files . and adapted the code, and it works, though I couldn't specify the `dft_functional = ""WB97X-D""` parameter, but I believe it doesn't matter for the initial guess. . ```python; mol = psi4_geo. # cant specify 'dft_functional': ""WB97X-D"", not valid; psi4.set_options({'basis': 'def2-svp',; 'scf__reference': 'rhf',; # 'scf__dft_functional': ""WB97X-D"",; 'e_convergence': 1e-8}). # Integral generation from Psi4's MintsHelper; wfn = psi4.core.Wavefunction.build(mol, psi4.core.get_global_option('BASIS')); # t = time.time(); mints = psi4.core.MintsHelper(wfn.basisset()); S = np.asarray(mints.ao_overlap()). # Get nbf and ndocc for closed shell molecules; nbf = S.shape[0]; ndocc = wfn.nalpha(). print('\nNumber of occupied orbitals: %d' % ndocc); print('Number of basis functions: %d' % nbf). # Set SAD basis sets; nbeta = wfn.nbeta(); psi4.core.prepare_options_for_module(""SCF""); sad_basis_list = psi4.core.BasisSet.build(wfn.molecule(), ""ORBITAL"",; psi4.core.get_global_option(""BASIS""), puream=wfn.basisset().has_puream(),; return_atomlist=True). sad_fitting_list = psi4.core.BasisSet.build(wfn.molecule(), ""DF_BASIS_SAD"",; psi4.core.get_option(""SCF"", ""DF_BASIS_SAD""), puream=wfn.basisset().has_puream(),; return_atomlist=True). # Use Psi4 SADGuess object to build the SAD Guess; SAD = psi4.core.SADGuess.build_SAD(wfn.basisset(), sad_basis_list) # , ndocc, nbeta; SAD.set_atomic_fit_bases(sad_fitting_list); SAD.compute_guess();; D = SAD.Da(); sad_guess_manual = D.to_array(); ```. however, when I compare this `sad_guess_manual` with the density matrix from the full SCF with `maxiter = 0`, they are not close :( ; ```python; # run full SCF but limit maxiter to 0; psi4.set_options(; {; ""scf__reference"": ""rhf"",; ""scf__maxiter"": 0,; ""scf__fail_on_maxiter"": False; }; ); energy_sad, wfn_sad = psi4.energy('scf/def2-svp', dft_functional=""WB97X-D"", molecule=psi4_g",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2897#issuecomment-1467592397:10,update,update,10,https://psicode.org,https://github.com/psi4/psi4/issues/2897#issuecomment-1467592397,1,['update'],['update']
Deployability,"i remember the omega issue from a forum post: http://forum.psicode.org/t/wb97x-definition-bug/480. I think ORCA was used for all the DSD developments. There you can defined DHDF compositions in the input file (see e.g. my reference outputs). If manual defining parameters for another program really counts as a good test is perhaps debatable because typos never come alone ;). Are the non-dispersion forms of DSD-PBEP86 from both papers really different? I hope not...; Anyway, I'd stick with the 2013 paper in doubt because it is the latest ""update"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-371221109:543,update,update,543,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371221109,1,['update'],['update']
Deployability,i-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/ps,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3185,install,installing,3185,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"i/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8184,install,install,8184,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"i4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:1810,update,update,1810,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['update'],['update']
Deployability,"i4.energy('ccsd', return_wfn=True); t2 = wfn.T2(); ```; At the time when the python bound function is called and the code for `CCEenergyWavefunction::T2()` is executed the `global_dpd_` the dpd object that the `global_dpd_` points to has been deleted out from under it (you can see [here](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/libdpd/init.cc#L59) that `dpd_set_default` will assign the `global_dpd_` pointer to `dpd_list[0]`, and below it is the code for `dpd_close` that will delete the object. I see two possible solutions. . - The easiest to implement would be to have the getters/setters check that `global_dpd_` is not `nullptr`, and if it is construct the dpd. Before doing the geting/setting. The function would also have to free the dpd object as well as other modules will assume that `global_dpd_` is null until they initialize it and `dpd_init` will throw when they try to create it. - The other option is to simply start phasing out the `global_dpd_` entirely. A data member can be added to the `CCEnergyWavefunction` and the member functions of the class can be modified to use that data member instead of the `global_dpd_`. The initialization of the data member is moved into the construtor and the dpd will be valid until the wavefunction is destroyed. The same would need to be done for the cclambda wavefunction as well. . The constructing the dpd object is far from trival as it allocates memory for and computes index translations for all possible pairs and quartets of the orbital subspaces provided, since this is only done once at the beginning of each module using a DPD I haven't looked into how significan the overhead is but it may be an issue for the first option. The second option is better for code quality, and I once played around with this idea in a plugin years ago, but I never got to the point where I could test if there were any unforeseen consequences down the pipeline (subsequent calls to other CC* modules).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978:2673,pipeline,pipeline,2673,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978,1,['pipeline'],['pipeline']
Deployability,"i4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in . File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy']lowername. File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'); ```. For the record I copy my file 'pymodule.py' here:. ```; import psi4; import re; import os; import inputparser; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; import p4util; from p4xcpt import *. def run_dmrg(name, **kwargs):; r""""""Function encoding sequence of PSI module and plugin calls so that; dmrg can be called via :py:func:`~driver.energy`. For post-scf plugins. >>> energy('dmrg'). """"""; lowername = name.lower(); kwargs = p4util.kwargs_lower(kwargs). # Your plugin's psi4 run sequence goes here; #psi4.set_global_option('BASIS', 'sto-3g'); psi4.set_local_option('MYPLUGIN', 'PRINT', 1). # Compute a SCF reference, a wavefunction is return which holds the molecule used, orbitals; # Fock matrices, and more; print('Attention! This SCF is density-fitted.'); ref_wfn = kwargs.get('ref_wfn', None); if ref_wfn is None:; ref_wfn = scf_helper(name, **kwargs). # Call the Psi4 plugin; # Please note that setting the reference wavefunction in this way is ONLY for plugins; dmrg_wfn = psi4.plugin('dmrg.so', ref_wfn). return dmrg_wfn. # Integration with driver routines; procedures['energy']['dmrg'] = run_dmrg. def exampleFN():; # Your Python code goes here; pass; ```. As you can see it calls. ```; dmrg_wfn = psi4.plugin('dmrg.so', ref_wfn); ```. instead of. ```; returnvalue = psi4.plugin('dmrg.so'); ```. So have you generated the files **init**.py, pymodule.py etcetera with the right version of psi4 (psi4-0.5)? It doesn't suffice to run the plugin with the right version of psi4, you also need to do. ```; psi4 --new-plugin dmrg; ```. with the right version of psi4. Best wishes,; Sebastian",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:3353,Integrat,Integration,3353,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,1,['Integrat'],['Integration']
Deployability,"i4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4477,Install,Installing,4477,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"i4/cmake/math/MathLibs.cmake; *** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; --- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; ***************; *** 73,78 ****; --- 73,93 ----; set(ATLAS_LAPACK_LIBS atlas lapack); ; #-------------------------------------------------------------------------------; + # OPENBLAS; + ; + set(OPENBLAS_BLAS_INCLUDE_PATH_SUFFIXES); + set(OPENBLAS_LAPACK_INCLUDE_PATH_SUFFIXES); + ; + set(OPENBLAS_BLAS_HEADERS cblas.h openblas_config.h f77blas.h); + set(OPENBLAS_LAPACK_HEADERS lapacke.h lapacke_config.h lapacke_mangling.h lapacke_utils.h); + ; + set(OPENBLAS_BLAS_LIBRARY_PATH_SUFFIXES openblas); + set(OPENBLAS_LAPACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAPACK_LIBS openblas); + ; + #-------------------------------------------------------------------------------; # MKL; ; set(MKL_BLAS_INCLUDE_PATH_SUFFIXES); [sfux@develop01 psi4]$ ls; cdash CMakeAddOpenBLAS.patch _conda_vers.py doc LICENSE plugins README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:2205,patch,patch,2205,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['patch'],['patch']
Deployability,"i4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:2672,install,install,2672,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"i4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1b,<1.1.2a , which can be installed;; │ ├─ python [2.7.16|2.7.17] would require; │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ └─ python 2.7.18, which can be installed;; ├─ psi4 1.1+add49b9 would require; │ └─ gcc-5-mp , which requires; │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ └─ blas 1.0 mkl, which can be installed;; └─ psi4 [0.5.360|1.0rc0|1.0rc213]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:8258,install,installed,8258,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"i4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:10054,install,install,10054,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,i4/psi4/include/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMan,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:1484,Install,Installing,1484,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability,i4/psi4/include/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:1293,Install,Installing,1293,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rd,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5051,Install,Install,5051,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7201,Install,Install,7201,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6274,Release,Release,6274,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"ible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be inst",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2023,install,installed,2023,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"ible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5187,install,installed,5187,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"ible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be insta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:2400,install,installed,2400,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability,"icating in schema; - [x] any fns mirroring `sherrill_gold_standard` or `allen_focal_point` need to be reformatted and registered with `register_composite_function`; - [x] extrapolation functions for composite need to be registered with register_xtpl_function; - [x] CBS and xtpl functions need to be called as strings, not objects. So `energy('cbs', scf_wfn='scf', scf_basis='cc-pV[DTQ]Z', scf_scheme='scf_xtpl_helgaker_3')` not `energy(cbs, scf_wfn='scf', scf_basis='cc-pV[DTQ]Z', scf_scheme=scf_xtpl_helgaker_3)`.; - [x] no longer always evaluating gradient before Hessian to test safety of projecting rotations. Instead assuming unsafe. Can pass ref_gradient array to test on or `set findif fd_project` T/F explicitly to control.; - [x] `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. json_ret is now an object, so `.` access, not dictionary. The old schema runner uses a schema circa pre-2018 and we've warned it's deprecated for about a year, so I went ahead and updated all the tests to the new/current run_qcschema.; - [x] Pre-ddd, CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. With ddd, this is no longer happening, so for occasional string modelchem calcs (that is, `energy|gradient|hessian(""mtd/bas"")` only), you may need to add a clean in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:3964,update,updated,3964,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['update'],['updated']
Deployability,"ich does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗███",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2480,install,installed,2480,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"ide Psi4 headers, `masses.h` and `physconst.h`. Nowadays, physical constants are in psi three times (c-side, py-side, qcdb) and masses are twice but of the 4 arrays in `masses.h`, only one, `an2masses` is ever called in theory, and I don't see it called in practice. #### solution; Move these aspects into their own [lightweight python module that's easily updated](https://github.com/qcdb/qcelemental). That module can write psi4 header files, which are what's copied here. #### stages; - [x] c-side `physconst.h` updated here CODATA 2010 (Andy c.2012) --> CODATA 2014; - [x] py-side `psi4.driver.constants.physconst.py` updated here, through autogeneration from c-side; - [x] qcdb-side `psi4.driver.qcdb.physconst.py` updated here, through copying and prefixing from py-side; - [x] c-side `masses.h` updated here from undated NIST document (that includes through element 117, so it can't be too old). changing this alone has no effect on the tests.; - [ ] py-side `psi4.driver.qcdb.periodictable` NOT updated here. (so effectively masses are unchanged in this PR.) Later, py-side psi4 will import this new module to get its periodictable data.; - [x] Implications to the test suite:; - [x] lots of nuclear repulsion energies wanted changing. I took them at their word; - [x] wherever we tested SCF or SCF+ to 9+ decimals, comparisons failed. I've copied in the new values. energy figures tended to be good beyond 6 decimals. #### PT changes; * Main major change is to Krypton, where the generic (non-isotope) element had been assigned to the wrong isotope. Then there's lots of unstable elements that had the same thing wrong, so the below generic elements differ by 1–13 [u]. Only other element to differ by > 1.e-5 is Darmstadtium.; ```; Checking z2el vs. Psi4 ... Checking el2z vs. Psi4 ... Checking (1e-05) el2mass vs. Psi4 ...; Element Kr differs by 1.99911300: 83.9114977282 (this) vs 85.910610729 (psi); Element Tc differs by 0.99904235: 97.9072124 (this) vs 98.906254747 (psi); Element At d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1213:1230,update,updated,1230,https://psicode.org,https://github.com/psi4/psi4/pull/1213,1,['update'],['updated']
Deployability,"ide addons from projects that aren't released cleanly; * psi4 users have grown accustomed to `-c psi4` and `-c psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1259,release,releases,1259,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['releases']
Deployability,"if you'll rebase now, the Linux `using_mp2d` CI error should go away. there'll also be a Windows spot check section, https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-windows.yml#L191-L197 . If you add your failing Win test there, we should get better output for debugging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760:165,pipeline,pipelines,165,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760,2,['pipeline'],"['pipelines', 'pipelines-windows']"
Deployability,"ight want to test run with lower AM), there'll be a `libint-*.tgz` file produced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmake --build <build_dir> -j<N>`. definitely do this step in parallel. ### Note on AM=7; Regular AM is 5. If you only need 7, you can use this tarball rather than generating your own with `--target export` in L2 repo: https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2_rev1.tgz Start above directions at ""Now back at your psi4 clone..."". Still GCC only, not Intel compilers. ### Exhibit A; ```; cmake -S. -Bbuild \; -G Ninja \; -D LIBINT_BUILD_LIBRARY_AS_SUBPROJECT=OFF \; -D CMAKE_INSTALL_PREFIX=/path/to/l2/install \; -D REQUIRE_CXX_API=ON \; -D REQUIRE_CXX_API_COMPILED=OFF \; -D BUILD_TESTING=ON \; -D CMAKE_PREFIX_PATH=""/psi/toolchainconda/envs/singleboost;/psi/toolchainconda/envs/singlegmp;/psi/toolchainconda/envs/singleeigen"" \; -D ENABLE_MPFR=OFF \; -D LIBINT_LOCAL_EIGEN3_INSTALL=OFF \; -D CMAKE_CXX_COMPILER=$CXX \; -D CMAKE_C_COMPILER=$CC \; -D ENABLE_FORTRAN=OFF \; -D LIBINT2_SHGAUSS_ORDERING=standard \; -D ERI3_PURE_SH=OFF \; -D ERI2_PURE_SH=OFF \; -D ENABLE_ERI=2 \; -D ENABLE_ERI3=2 \; -D ENABLE_ERI2=2 \; -D ENABLE_ONEBODY=2 \; -D ENABLE_G12=1 \; -D DISABLE_ONEBODY_PROPERTY_DERIVS=ON \; -D MULTIPOLE_MAX_ORDER=4 \; -D WITH_G12_MAX_AM=3 \; -D WITH_ERI_MAX_AM=""10;3;2"" \; -D WITH_ERI3_MAX_AM=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:2409,release,releases,2409,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['release'],['releases']
Deployability,"ignal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/process.h:40; ```; #7 0x00007ffff2f92e59 in __run_exit_handlers () from /lib64/libc.so.6; #8 0x00007ffff2f92ea5 in exit () from /lib64/libc.so.6; #9 0x000000000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/64:1185,release,release,1185,https://psicode.org,https://github.com/psi4/psi4/issues/64,1,['release'],['release']
Deployability,"il::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:2999,install,install,2999,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"im/anaconda3/include"" ../configure --enable-eri=2 --enable-eri3=2 --enable-eri2=2 --with-eri-max-am=5 --with-eri2-max-am=6 --with-eri3-max-am=6 --with-shgauss-ordering=gaussian --prefix=/u/andysim/programming/libint/installdir3 --enable-eri2-pure-sh --enable-eri3-pure-sh`. 3. `make install` (this will take a *very* long time). 4. `make export` - this will generate a tarball that can be used to build a version for Psi4 called `libint-2.7.0-beta.1.tgz`. 5. Untar that tarball somewhere else and modify the file `include/libint2_params.h` to read; ```; #ifndef LIBINT2_MAX_AM_default; # define LIBINT2_MAX_AM_default 4; #endif. #ifndef LIBINT2_MAX_AM_default1; # define LIBINT2_MAX_AM_default1 LIBINT2_MAX_AM_default; #endif. #ifndef LIBINT2_MAX_AM_default2; # define LIBINT2_MAX_AM_default2 LIBINT2_MAX_AM_default; #endif; ```; from line 81 onwards. 6. Make a `build` subdir and from there `cmake .. -DCMAKE_INSTALL_PREFIX=/u/andysim/programming/libint/installdir_2.6 -DLIBINT2_SHGAUSS_ORDERING=gaussian -DCMAKE_CXX_FLAGS=""-fPIC""` The fPIC flag is needed, or you'll get some nasty link errors. 7. Now you can build Psi4. Yay! `cmake .. -DCMAKE_BUILD_TYPE=Debug -DLibint2_DIR=/u/andysim/programming/libint/installdir_2.6/lib/cmake/libint2 -DLibint_DIR=/u/andysim/programming/libint1/installdir/share/cmake/Libint -DCMAKE_CXX_FLAGS=""-g -O0 -gxx-name=/v/apps/gcc/5.4.0/bin/g++ $CXXFLAGS""` The libint1 should be the hacked version with the `Libint_t` changed to `Libint1_t`. Also I strongly recommend adding the `-O0` flag to the compiler flags, because our CMake debug build doesn't do this (we should change that) and the code takes a _very_ long time to compile with optimization. A lot of this will be streamlined in the not so distant future, and much of the complication will be eased when we nuke libint1. Until then, the above command should be sufficient to get you up and running with a development build. Please try it out - I'd love to have some help with getting the derivatives working :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417:1816,install,installdir,1816,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417,1,['install'],['installdir']
Deployability,inconsistency between release and developer version ?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1878:22,release,release,22,https://psicode.org,https://github.com/psi4/psi4/issues/1878,1,['release'],['release']
Deployability,ing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: gi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3136,install,installing,3136,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,ing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2966,install,installing,2966,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermionpsi4-0.4-py36h934b37d_0 ...; installing: psi4-rt-1.3.2-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:4022,install,installing,4022,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ing>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long time we had geometry optimizations exit smoothly even if failed for iterations exceeded. That caused some problems (I think @dsirianni hit them), so we switched toward the die+traceback. Now SCF will behave like optimizations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1851,toggle,toggled,1851,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,1,['toggle'],['toggled']
Deployability,install and import errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/issues/768,1,['install'],['install']
Deployability,install fails due to eternal loop,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/issues/460,1,['install'],['install']
Deployability,install fixes and improvements,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/277:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/pull/277,1,['install'],['install']
Deployability,install headers properly,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/215:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/issues/215,1,['install'],['install']
Deployability,install molden testing files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2263:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/pull/2263,1,['install'],['install']
Deployability,"install psi4 on MacOS, cannot pass `psi4 --test`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578:0,install,install,0,https://psicode.org,https://github.com/psi4/psi4/issues/2578,1,['install'],['install']
Deployability,installing psi4 into existing env with rdkit,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:0,install,installing,0,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installing']
Deployability,"installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to she",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3693,install,installing,3693,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/s",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3740,install,installing,3740,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermio",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3958,install,installing,3958,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"instead of cluttering up the user choice var `CMAKE_<LANG>_FLAGS`. This is especially relevant for intel compilers that need gcc passed. There's something that's not set up right yet for Intel Clang. Thus, we need to pass `CMAKE_<LANG>_COMPILER_ARG1` through to psi4 subproject and all other externals.; - [x] let ctest tests run whether old or new d3 and gcp implementations present.; - [x] don't expect a pylibefpConfig.cmake for libefp detection. this is the case with the c-f package -- I'll probably put it back later when libefp/pylibefp repos combine.; - [x] I was using inconsistent naming for basis_set_exchange detection/import, so fix that.; - [x] adapt docs build so that it can use Ninja (or presumably any non-Makefiles) generator. The special thing about Makefiles is that it works as expected for glob depends. So we can tell the basis table to regenerate if any of the gbs files change. Other generators won't understand this. But most docs builds are one-off, not continuous development anyways, so it's worth no globs and yes flexibility. ADDED: switched to ninja for docs and docs-pr (ok memory-wise at max parallelism b/c debug build). ADDED 12 Nov; - [x] update ecosystem and docs GHA and linux azure to use the path-advisor env/cache procedure. this helps keep the path-advisore procedure tested and keeps testing envs up-to-date. alternate testing can still be imposed by `sed`ing the envs.; - [x] in azure linux, use the three testing lanes to go beyond quicktests. apart from some longer tests, we're now hitting all but stdsuite non-quick. ; - [x] fixed the windows nightly build through azure, which was many layers of bugs. the improved path handling in psi4 & psi4/__init__.py from May technically didn't play nicely with the build-and-copy-into-place of the azure file cmake_install_*-paths-wise, and the recent (Oct) trick to get a fast `psi4 --version` tripped the problem, hence the `sed`.; - [x] Strengthened the default to Release so that it works for windows, too",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:3526,continuous,continuous,3526,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['continuous'],['continuous']
Deployability,int-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: d,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2097,install,installing,2097,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"int.so that is inconsistent with fixed data dimensions in psi4 libmints, and libmints can't even throw an error for enlightenment. I could throw additional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/too",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:1851,update,update,1851,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['update'],['update']
Deployability,"ion (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349, #1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) . ## New External Libraries; - [QCEngine](https://github.com/MolSSI/QCEngine) - A QCSchema runner is now a required dependency since we use it for several interfaces (#1577); - DFTD3; - MP2D; - gCP; - CPPE - Polarizable embedding with environment modeled by multi-center multipole expansion with dipole-dipole polarizabilities at the expansion sites (#1401) ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to Libxc5 (#1101, #2113, #2169, #2191) . ## Additional Non-Core Contributors to v1.4. @ramis, @jwaldrop107, @obrien951, @dsirianni, @Dpgibney, @derekmetcalf, @alenaizan, @susilehtola, @tovestra, @jeffschriber, @zachglick, @maxscheurer, @chapincavender, @PhillCli, @mdamer, @katrinleinweber, @mfherbst, @edeprince3, @konpat, @kcpearce, @Icyyork, @timostrunk, @shivupa, @taylor-a-barnes, @shannonhouck, @bennybp, @tomspur, @jgonthier, @sjrl, @kis-gergely-dzsi, @ferchault, @andyj10224, @psi-rking, @SimonBoothroyd, @yxie326, @VHchavez, @nlk36701, @edeustua, @leeping, @mquevill, @lazaroid, @sgoodlett. ## Performance Optimizations; - omega exchange can now be computed with `MemJK` algorith",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:2359,Upgrade,Upgrade,2359,https://psicode.org,https://github.com/psi4/psi4/issues/1562,2,"['Update', 'Upgrade']","['Update', 'Upgrade']"
Deployability,"ion); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1873,install,install,1873,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"ional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2005,update,update,2005,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['update'],['update']
Deployability,"ior of `SNLINK`. For controlling the GauXC grid, `SNLINK_RADIAL_POINTS`, `SNLINK_SPHERICAL_POINTS`, and `SNLINK_RADIAL_SCHEME` control the GauXC radial point count, spherical point count, and radial quadrature, respectively. `SNLINK_USE_GPU` controls GPU execution of GauXC. Finally, `SNLINK_INTS_TOLERANCE` controls the integral screening threshold used by GauXC's sn-LinK algorithm. ## Dev notes & details; - [X] Adds a new new Psi4 compile-time option, `ENABLE_gauxc`. When set to `ON`, `ENABLE_gauxc` will build Psi4 with support for GauXC. The Psi4 build system has been adjusted so that Psi4 can either build an internal instance of GauXC, or hook up to an external GauXC instance defined by `gauxc_DIR`. The `gauxc_ENABLE_GPU` keyword builds the Psi4/GauXC interface to support GPU execution. Additionally, for internally-build GauXC instances, setting `gauxc_ENABLE_GPU` to `ON` will build the internal GauXC install with GPU support. For external GauXC installs, `gauxc_ENABLE_GPU` will ensure that the external GauXC install supports GPU execution. ; - [X] Adds a new `SplitJK` derived class, `snLinK`. When Psi4 is built with GauXC support, `snLinK` contains the implementation of the details of the Psi4/GauXC interface, and is responsible for calling GauXC within Psi4. When Psi4 is not built with GauXC support, snLinK will instead throw an exception upon construction, as implemented in a stub class. The `snLinK` class supports both CPU and GPU execution of GauXC, controllable at runtime via the `SNLINK_USE_GPU` keyword. Additionally, the `snLinK` class operates correctly regardless of the value of `psi4_SHGAUSS_ORDERING`, as well as for both Spherical and Cartesian basis sets. ; - [X] Updates the `test_compositejk.py` and `test_comprehensive_jk_screening.py` pytests to test sn-LinK functionalities, given that GauXC is installed.; - [X] Adds a new file, `gauxc_writer.py` to generate HDF5 files as input for GauXC's `standalone_driver` functionality. Reference files for benze",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:4380,install,installs,4380,https://psicode.org,https://github.com/psi4/psi4/pull/3150,2,['install'],"['install', 'installs']"
Deployability,"ir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4679,install,install,4679,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"irianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/instal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10687,install,install,10687,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,is functions: 25						 Number of basis functions: 25; Number of Cartesian functions: 25						 Number of Cartesian functions: 25; Spherical Harmonics?: false							 Spherical Harmonics?: false; Max angular momentum: 1							 Max angular momentum: 1; 									 >; Core potential: LANL2DZ							 Core potential: LANL2DZ; Number of shells: 3								 Number of shells: 3; Number of ECP primitives: 13						 Number of ECP primitives: 13; Number of ECP core electrons: 10						 Number of ECP core electrons: 10; Max angular momentum: 2							 Max angular momentum: 2; 									 >; => Loading Basis Set <=							 => Loading Basis Set <=; 									 >; Name: (LANL2DZ AUX)								 Name: (LANL2DZ AUX); Role: JKFIT									 Role: JKFIT; Keyword: DF_BASIS_SCF							 Keyword: DF_BASIS_SCF; atoms 1-2 entry H line 18 file /Users/runner/work/psi4	 |	 atoms 1-2 entry H line 18 file D:\a\psi4\psi4\install\; atoms 3 entry O line 318 file /Users/runner/work/psi4	 |	 atoms 3 entry O line 318 file D:\a\psi4\psi4\install\; atoms 4 entry CA line 1250 file /Users/runner/work/psi4	 |	 atoms 4 entry CA line 1250 file D:\a\psi4\psi4\install\; 									 >; ==> Integral Setup <==							 ==> Integral Setup <==; 									 >; ==> DiskDFJK: Density-Fitted J/K Matrices <==					 ==> DiskDFJK: Density-Fitted J/K Matrices <==; 									 >; J tasked: Yes						 J tasked: Yes; K tasked: Yes						 K tasked: Yes; wK tasked: No						 wK tasked: No; OpenMP threads: 1						 OpenMP threads: 1; Integrals threads: 1						 Integrals threads: 1; Memory [MiB]: 375						 Memory [MiB]: 375; Algorithm: Core						 Algorithm: Core; Integral Cache: LOAD						 Integral Cache: LOAD; Schwarz Cutoff: 1E-12						 Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12						 Fitting Condition: 1E-12; 									 >; => Auxiliary Basis Set <=							 => Auxiliary Basis Set <=; 									 >; Basis Set: (LANL2DZ AUX)							 Basis Set: (LANL2DZ AUX); Blend: DEF2-UNIVERSAL-JKFIT							 Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 81							 Number of shel,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3072:4566,install,install,4566,https://psicode.org,https://github.com/psi4/psi4/issues/3072,1,['install'],['install']
Deployability,"is means (1) we don't need to have empty `__init__.py` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` for list marks.; - [x] to avoid FutureWarning, changed three `distutils.dir_util.copy_tree` into `shutil.copytree`. this is a py38 language feature, the first actual breaking of py37+ compatibility.; - [x] added the openfermion demo as test; - [x] apparently 3body in dftd3 fails on Mac. near-term goal is replacing, so skip for now; - [x] newly install pytest.ini and install any test_input.py, input.dat, and input.py from tests/ . sensibly, input.dat/py would only get installed if test_input.py present, but I can't teach cmake that logic, so it's either this or have to register each pytest-prepared psithon test. aux files from tests/ are also installed but these have to be registered with cmake.; - [x] moved `compare_moldenfiles()` from testing code to driver alongside `compare_fchkfiles()` so that it can be documented.; - [x] ""psi"" and ""api"" marks added to all tests/pytests/ files for reasons explained in docs. - Docs; - [x] Updated the add_tests documentation, esp. wrt pytest; - [x] Might have done enough of the outline to close #2396 ; - [x] Straightened out docstring inheritance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', .",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:4221,install,install,4221,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['install']
Deployability,issue installing from downloaded .exe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:6,install,installing,6,https://psicode.org,https://github.com/psi4/psi4/issues/2236,1,['install'],['installing']
Deployability,it'd be cool to have a libxc-4.x release with the solved issues.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-450763135:33,release,release,33,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-450763135,1,['release'],['release']
Deployability,"itals guess (#1672); - Analytic Hessians for LSDA functionals (#1664); - Add qc2p basis set from CFOUR (#1718); - Update to g2g v2 API (#1718); - Density cumulant functional theory (DCFT) thoroughly rebranded to density cumulant theory (DCT). Adjust your calls and keywords accordingly or psi will reproach you (#1719).; - Drop Travis-CI (thank you for years of compiling) and consolidate on Azure for Linux and Windows builds so we can host more complex pipelines (#1752).; - Update orthogonalization routines and consolidate them back to libmints instead of SCF (#1759); - Let the `Deriv` class be instructable in the flavor it computes, rather than trying to devine SCF vs correlated (#1756); - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module (#1873) ; - Remove debugging and timing code from psimrcc (#1879, #1901) ; - Add cython (#1889) ; - Update tolerances for mkl 2020.1 (#1896) ; - LGTM (#1905, #2038) ; - MP2/MP3 test suite (#1850, #1971) ; - Standardize CEPA and LCCD (#1909) ; - LCCD test suite (#1913, #1937) ; - Extensive improvements to DFGrad (#1915, #1923, #1953, #1974, #2049, #2079) ; - Expose cube-generating functions to python (#1917) ; - Fix cppe interface (#1922) ; - Move import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:6920,Update,Update,6920,https://psicode.org,https://github.com/psi4/psi4/issues/1562,2,['Update'],['Update']
Deployability,jdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-g,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2646,Install,Installing,2646,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"jects are used throughout the codebase via calls to `JK::compute()`. In SCF, many calls to `JK::compute()` are made interspersed with updates to the object's orbitals. `JK::compute()` does a [few things](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.cc#L550): performs sanity checks, creates densities from the orbitals, zeroes out the object's `J`/`K`/`wK` matrices, and finally calls the virtual function `compute_JK()`, which is where each child class implements some algorithm to fill `J`/`K`/`wK`. Now consider incremental Fock construction. Instead of recomputing `J`/`K`/`wK` each SCF iteration, the previous iteration's `J`/`K`/`wK` are added to a `J`/`K`/`wK` computed with the difference in densities between the current and previous iterations. As [implemented in the `DirectJK` class](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.h#L724-L734), this accomplished by storing the entire `J`/`K`/`wK` matrices of the previous iteration, computing the difference density update to `J`/`K`/`wK`, adding the two together, and storing in the `JK` objects `J`/`K`/`wK` matrices. This requires a lot of [convoluted bookkeeping](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/DirectJK.cc#L138-L217). Future JK classes that would want to do incremental Fock build would have to duplicate a lot of code, too. Instead, a much simpler approach would be this: The call to `JK::compute()` doesn't zero out the `J`/`K`/`wK` matrices. Instead, the child JK class can choose to zero out their `J`/`K`/`wK` matrices (if performing a normal Fock build) or leave them as-is from the previous iteration and add to them (if performing an incremental Fock build). This way no previous iterations' `J`/`K`/`wK` matrices have to be saved, and the logic in `compute_JK` becomes much simpler. . > Is `early_screening_` for this ""semi-numerical exchange,"" or something else? How close is this other PR to completion. Yes, this is used in semi-numerical exchange.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2529#issuecomment-1089141879:1623,update,update,1623,https://psicode.org,https://github.com/psi4/psi4/pull/2529#issuecomment-1089141879,1,['update'],['update']
Deployability,"kage supports very large angular momentum, whereas the default libint that's automatically compiled by Psi4 can't handle density fitting basis sets for transition metals... And the trouble is that Psi4 only detects via the cmake interface whereas other libint downstreams in Fedora require pkgconfig? iirc, Psi uses libint's cmake to also set some AM compile defs, not just location detection, so pkgconfig detection insufficient. Would having libint's cmake write out the pkgconfig files (as libxc now does) allow the cmake libint to work for everyone?. I agree I wouldn't ship a production distribution with the default angmom. I like 7 locally and soon I'll make conda use the 8 pkg (now optional) by default instead of the lighter 6. Only potential trouble for you is that libderiv AM = libint AM – 1. If you're going _really_ high for libint, deriv may not cooperate. -----------. I was misremembering when I wrote https://github.com/psi4/psi4/issues/1302#issuecomment-450762992 .; * cmake was why Psi v1.1 couldn't use upstream libxc 3 (so we forked 3 and added cmake).; * functional tweakers not in public API was why Psi v1.2 couldn't use libxc 4 w/o losing functionality (so we forked libxc 4.0 and added the rejected [MR 62](https://gitlab.com/libxc/libxc/merge_requests/62) plus a few merged build MRs). The same libxc ~4.0 is the current state of Psi master.; * The missing tweakers of rejected MR 62 were replaced in merged [MR 67](https://gitlab.com/libxc/libxc/merge_requests/67) but that's a different API (solved by #1101) and not in a release (discussion at [MR 61](https://gitlab.com/libxc/libxc/issues/61)).; * I've prepared a 4.2.3 + !67 + windows PRs + build PRs branch described [here](https://gitlab.com/libxc/libxc/issues/61#note_128653141) that works works with Psi and doesn't have any of the Maple changes. (Indeed, if I build #1101 against libxc master, it links and runs but I see a lot of numerical problems, so avoiding the ongoing libxc work is probably a good idea.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451132442:2010,release,release,2010,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451132442,1,['release'],['release']
Deployability,ke using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3812,Install,Installing,3812,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"l as other auxiliary work such as defining the GauXC execution space. `snLinK::build_G_component` constructs the K matrix from the input density via the GauXC integrator's `eval_exx` function. `build_G_component` also handles fundamental pre- and post-processing required for the involved matrices - Spherical Harmonic integral reordering permutations if `psi4_SHGAUSS_ORDERING` is set to the default option of gaussian , and Spherical-to-Cartesian transforms, if required, to enable GPU support (also forcible via the `SNLINK_FORCE_CARTESIAN` keyword). As a `SplitJK` instance, sn-LinK can be called within Psi4 via `SCF_TYPE = J_ALGO+SNLINK`, with `J_ALGO` being the J construction algorithm of choice (currently only `DFDIRJ`). If GPU support is enabled, the `SNLINK_USE_GPU` keyword can be turned on to run the sn-LinK algorithm using GPUs. Construction of the GauXC interface is specified at compile-time, using the `ENABLE_gauxc` flag. Psi4 can either build an internal instance of GauXC, or hook up to an external GauXC install specified by `gauxc_DIR`. If `ENABLE_gauxc` is turned off, the `snLinK` class will instead throw an exception upon construction. For GPU support, there is the `gauxc_ENABLE_GPU` keyword, which ensures that the Psi4/GauXC interface supports GPU execution. For testing, `test_compositejk.py` and `test_comprehensive_jk_screening.py` both now include sn-LinK tests, conditional on the sn-LinK interface being built. Finally, a `gauxc_writer.py` file has been added, enabling construction of HDF5 reference files via the Psi4/GauXC interface, to be used in GauXC's `standalone_driver` for debugging purposes. The `test_gauxc_writer.py` file has been added to test this writer against reference HDF5 files. . ## User API & Changelog headlines; - [X] Psi4 has been interfaced to the GauXC standalone library, specifically the sn-LinK exact exchange algorithm present within GauXC. Construction of the interface is specified at compile-time with the compile-time flag `ENAB",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:2209,install,install,2209,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['install'],['install']
Deployability,"l object now has Hessian-Vector functionality.; - [x] Added many C++ calls to the Python interface.; - [x] Reworked the building of superfunctionals. Note that the coefficients set when building a functional are no longer modified by exact exchange or MP2 correlation factors.; - [x] DFT Functionals now takes advantage of polarized vs unpolarized DFT kernels.; - [x] Added generalized solvers in `p4util/solvers.py`. These include DIIS, CG, BiCGSTAB, and Davidson.; - [x] New density-fitted AO->MO transform object. More efficient than previous objects and has multiple modes depending on the type of computation (direct or AO storage).; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order SCF convergence to DFT Wavefunctions.; - [x] Adds the gradient regularized asymptotic correction (GRAC) to DFT through the option `DFT_GRAC_SHIFT`.; - [x] Adds a density-fitted second-order Electron Propagator code. ; - [x] Adds the density-fitted SAPT(DFT) code.; - [x] Adds linear response DFT.; - [ ] Adds TDDFT methodologies.; - [x] To avoid conflict the function `property` was renamed to `properties`.; - [x] More involved JSON input/output interface.; - [x] Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - [x] Def2 family of basis ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:1555,Release,Release,1555,https://psicode.org,https://github.com/psi4/psi4/pull/698,1,['Release'],['Release']
Deployability,l-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; inst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2450,install,installing,2450,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,l-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; insta,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2218,install,installing,2218,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ld constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2116,update,update,2116,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['update'],['update']
Deployability,"le /home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/tmp/gpu_dfcc_external-cache-Release.cmake; -- Psi4 script: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/bin/psi4; -- Psi4 headers: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/include; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure] Error 1; CMakeFiles/Makefile2:1533: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:1454,install,installed,1454,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,1,['install'],['installed']
Deployability,"le at runtime**. That is, a built psi4 is perfectly happy to link (in the `ldd` sense) to a `libint.so` that is inconsistent with fixed data dimensions in psi4 _libmints_, and libmints can't even throw an error for enlightenment. . I could throw additional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:1534,install,install,1534,https://psicode.org,https://github.com/psi4/psi4/issues/1533,2,"['install', 'update']","['install', 'update']"
Deployability,le gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Ins,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5510,Install,Install,5510,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,le libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4con,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13860,Install,Install,13860,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/90:2109,install,install,2109,https://psicode.org,https://github.com/psi4/psi4/issues/90,3,['install'],"['install', 'installed', 'installing']"
Deployability,"le total_elecs = sum_of_elecs*D_[0]*D_[1]*D_[2];. ```; example file:; ```; molecule mol {; 0 1; C -0.000000000000 0.000000000000 -1.285087454295; N -0.000000000000 1.193800518377 -0.689363570963; N -0.000000000000 0.000000000000 1.378195289586; C 0.000000000000 -1.112779051192 0.642308628677; C -0.000000000000 1.112779051192 0.642308628677; N 0.000000000000 -1.193800518377 -0.689363570963; CL 0.000000000000 -2.604296831956 1.503991149589; CL -0.000000000000 2.604296831956 1.503991149589; CL -0.000000000000 0.000000000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; gr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:1573,integrat,integrated,1573,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['integrat'],['integrated']
Deployability,"lease notes once more. As always please note that these start off as incomplete and gradually fill in over time as they are quite lengthy. If I missed anything or an item is incorrect please comment below. Certainly some items need to be highlighted more and categorical division can be improved. Note: Psi4 1.3 starts around PR #1065. TODO: Document #1393, . ##. # Major Points of Interest. - Added native Windows compatibility without the WSL requirement.; - DFT collocation grids can now be cache in-memory to avoid extra computation and lowering the total cost of DFT by up to a factor of two (#1233).; - Wavefunctions can now be serialized to disk and back using `Wavefunction.to_file/from_file` (#1304).; - Psi4 is now Python 3.5+ only, Psi4 1.4 will be Python 3.6+ only. Potential:; - A smart SCF solver that can intelligently make a variety of choices depending on local conditions (#1135).; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349). . # Obtaining; - Binary installers: ; - Python Anaconda: `conda install psi4 -c psi4`. ##. # New Methods; - Improved support for the [MolSSI](molssi.org) QC Schema [interface](http://molssi-qc-schema.readthedocs.io/en/latest/index.html#) v1; - VV10 dispersion is now available for UKS references.; - Cubeprop can now compute the `FRONTIER_ORBITALS` and `DUAL_DESCRIPTOR` quantities.; - nZaPa-NR basis sets have been added.; - The recursive driver can now compute N-body gradients and Hessians. # New External Libraries; - [QCElemental](https://github.com/MolSSI/QCElemental) - A library for CODATA, molecule manipulation routines, and periodic table information.; - [HelPME](https://github.com/andysim/helpme) - A particle-mesh Ewald library for long-range electrostatics.; - [pyoptking](https://github.com/psi-rking/optking) - A python-based implementation of the OptKing geometry optimization and IRC program. # First Time Contributors; - @raimis - #1399, #1185, #1183, +70 more!; - @obrien951 #1359, #1222, #1130, #1140, #1100, #1097; - @zac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:1001,install,installers,1001,https://psicode.org,https://github.com/psi4/psi4/issues/1406,2,['install'],"['install', 'installers']"
Deployability,"lf - the final step of the PR scheme discussed in the comments in https://github.com/psi4/psi4/pull/2682. It is worth noting for the reviewers that, since this PR more closely matches the IncFock of DFJCOSK to that of DFJLinK, it should be considered relevant to the CompositeJK PR chain as well, as it smooths the combination of DFJLinK and DFJCOSK into a single class as planned in the next CompositeJK step. ## User API & Changelog headlines; - [X] DFJCOSK now uses the ""INCFOCK"" keyword to control usage of the incremental Fock procedure, rather than ""COSX_INCFOCK"", standardizing the incremental Fock keywords among the integral-direct SCF algorithms.; - [X] DFJCOSK can now recompute the Fock matrix every n iterations during a calculation using incremental Fock. The ""INCFOCK_FULL_FOCK_EVERY"" keyword controls the number of SCF iterations between full Fock matrix recomputations for DFJCOSK.; - [X] DFJCOSK can now disable the incremental Fock process when a specific SCF convergence threshold. The ""INCFOCK_CONVERGENCE"" keyword controls the SCF convergence threshold point at which the incremental Fock build process is disabled. ## Dev notes & details; - [X] Improves the DFJCOSK incremental Fock procedure by allowing it to recompute the full Fock matrix every n iterations.; - [X] Improves the DFJCOSK incremental Fock procedure by allowing it to disable the incremental Fock procedure past a certain SCF convergence threshold.; - [X] Improves the DFJCOSK incremental Fock prodecure by computing the full Fock matrix during the first SCF iteration of the calculation, even with INCFOCK enabled.; - [X] Adds incremental Fock build efficiency tests to test_dfjcosk.py. ; - [X] Updates documentation to reflect new changes. ## Questions; N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2816:4003,Update,Updates,4003,https://psicode.org,https://github.com/psi4/psi4/pull/2816,1,['Update'],['Updates']
Deployability,lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/li,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1960,Install,Install,1960,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"libpsiutil and libparallel2 may be compiled as dynamic libraries. Attached patch solves the issue. diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt 2015-09-08 13:11:35.454250886 -0700; @@ -14,7 +14,7 @@ add_subdirectory(CommEnvGuts); add_subdirectory(Schedulers); add_subdirectory(TaskJobGuts); add_subdirectory(Util); -add_library(parallel2 ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); +add_library(parallel2 STATIC ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); set_property(GLOBAL APPEND PROPERTY LIBLIST parallel2); if(BUILD_CUSTOM_BOOST); add_dependencies(parallel2 custom_boost); diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt 2015-09-08 13:11:06.531702529 -0700; @@ -16,7 +16,7 @@ set(SRC ProgressBar.h; Implementations/ProgressBar.cc; Implementations/Exception2.cc; ); -add_library(PsiUtil ${SRC}); +add_library(PsiUtil STATIC ${SRC}); add_dependencies(PsiUtil parallel2); include_directories(libparallel2); set_property(GLOBAL APPEND PROPERTY LIBLIST PsiUtil)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/178:75,patch,patch,75,https://psicode.org,https://github.com/psi4/psi4/issues/178,1,['patch'],['patch']
Deployability,"libxc 3.0.1 has now been released, which includes my backport of SCAN correlation. Still, I would recommend migrating to libxc 4, where the functional implementations are autogenerated using Maple.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863#issuecomment-345682809:25,release,released,25,https://psicode.org,https://github.com/psi4/psi4/issues/863#issuecomment-345682809,1,['release'],['released']
Deployability,libxc 5 has been released so you can switch to a stable tarball,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-609977179:17,release,released,17,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-609977179,1,['release'],['released']
Deployability,"libxc updated to 5.1.5 and packages built, though min is still 5.1.2. rtg, imo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2191#issuecomment-860967229:6,update,updated,6,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-860967229,1,['update'],['updated']
Deployability,libxc4 was released a few days ago.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-332738941:11,release,released,11,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-332738941,1,['release'],['released']
Deployability,"lid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/text.py ...; File ""/usr/lib64/psi4/driver/p4util/text.py"", line 197; print(stuff, file=sys.stdout); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/interface_cfour.py ...; File ""/usr/lib64/psi4/driver/procrouting/interface_cfour.py"", line 356; print('Unable to remove CFOUR temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/proc.py ...; File ""/usr/lib64/psi4/driver/procrouting/proc.py"", line 3767; print('Unable to remove MRCC temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/interface_gcp.py ...; File ""/usr/lib64/psi4/driver/qcdb/interface_gcp.py"", line 285; raise OSError('Unable to remove gcp temporary directory: {}'.format(gcp_tmpdir)) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py"", line 135; raise RuntimeError(err) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py"", line 45; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/tests/test_matrix.py ...; File ""/usr/lib64/psi4/tests/test_matrix.py"", line 203; doublet_args.append((group_size, *aargs, *bargs, t, t, 'rectangular')); ^; SyntaxError: invalid syntax. error: Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install). RPM build errors:; Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1565:3252,install,install,3252,https://psicode.org,https://github.com/psi4/psi4/issues/1565,2,['install'],['install']
Deployability,"ling: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [CMakeFiles/psi4_core.dir/all] Error 2; make[1]: Leaving directory `/scratch/appssf/psi4/build'; make: *** [all] Error 2; ```; For compiling, I was using ""make -j 8"". I will try to compile serially and see if that",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4791,Install,Installing,4791,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,ling: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-p,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2931,install,installing,2931,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,ling: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3053,install,installing,3053,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"lled (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6368,install,installed,6368,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,lling: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: plug,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1641,install,installing,1641,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1291,install,installing,1291,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"looks like pcmsolver is the culprit. add `psi4::libint2=*=hc9558a2_9 pytest=5 psi4::pcmsolver=*=py38h6d17ec8_2` to the env specs. py38 passes with that. note that you'll have to adjust the python version in the pcmsolver buildstring. Yes, v1.5 would be the primary victim. v1.6 is latest, so the newest-solving packages from `-c psi4` are built to work with it. Like wise v1.7.dev* and `-c psi4/label/dev`. In this case, v1.5 could have benefitted from more pins. For solid reproducibility, the psi4conda installers have the advantage. I'll have to add the add'l packages to the psicode download page command matrix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412:505,install,installers,505,https://psicode.org,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412,1,['install'],['installers']
Deployability,ls.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 1.33 seconds = 0.02 minutes; system time = 0.09 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 15.73 seconds = 0.26 minutes; system time = 0.42 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:54 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 4 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 4 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; MAXITER = 12 NUM PRINT = 20; NUM ROOTS = 1 ICORE = 0; PRINT = 1 FCI = yes; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 2 NUM BET = 2; NUM ALP EXPL = 2 NUM BET EXPL = 2; IOPEN = no; RAS1 LVL = 1 A RAS3 MAX = 2; RAS1 MIN = 0 B RAS3 MAX = 2; A RAS1 LVL = 1 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 2 B RAS4 MAX = 0; B RAS1 LVL = 1 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:10774,UPDATE,UPDATE,10774,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['UPDATE'],['UPDATE']
Deployability,"m `git describe`; - get the branch and tag contents, including when ppl have neglected to pull tags and have none defined; - make it so when ppl download zip distributions, they're not prevented from compiling for lack of version info; - be able to reset commit increment to preserve monotonic versioning as in https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/src/bin/psi4_main/gitversion.py#L105; - make sure the version gets recomputed _every_ time, even if someone just pulls a change to `README.md` that technically changes the version; - get all that info ; - into the output file header; - to essentially ""configure_file"" the https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/psi4-config.in file so that it gets written to the bottom of it; - into place for https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/doc/sphinxman/source/conf.py.in#L58-L73 to absorb it for the docs build; - so that psi4 command-line can report version. The test is if the docs index.html, an output file, `psi4 --version`, and `psi4-config --version --githash` all return the same correct thing after a pull that doesn't technically require any recompile. I don't doubt that a better formulation than at present could be devised, and that'd be nice to have, especially pure CMake, but as the initial formulation only partially hit the first point, I just reverted back to what worked. I did have to change from the pre-CMakeRewrite version this bit (https://github.com/ryanmrichard/psi4/commit/18a41e0d01a9fa903cdce98bba52c785f81560b2) which is probably why it's compiling again upon install. Perhaps that bit could be fixed by moving the `versioned_code` object lib up to the top level?. Basically, I'm open to fixes, but versioning is a real can of worms, and I'm willing to tolerate eight extra file compiles to avoid opening it. btw, I'm storing my changes at https://github.com/loriab/psi4/commits/CMakeRewrite for the moment, since I'm breaking some things that are purportedly working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239050499:1780,install,install,1780,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239050499,1,['install'],['install']
Deployability,"m/psi4/psi4/blob/master/.github/workflows/ecosystem.yml; 6. For Linux, if you want a high-AM L2, replace this line `conda-forge/label/libint_dev::libint=2.7.3dev1` https://github.com/psi4/psi4/blob/master/devtools/conda-envs/Linux-buildrun-maxeco.yaml#L22 with `psi4/label/testing::libint2=2.7.2=h2fe1556_1` . Despite the different package names, versions, and channels, they're built from the same source, just different configuration. (I can't build a big AM w/i the 6h c-f time window.). ### Future Build Tools. Previously, the main build helper has been the `psi4-dev` conda package that combines a maximal set of build tools (compilers, cmake, etc.) and psi4 buildtime ecosystem packages along with a little script `psi4-path-advisor` to firmly configure cmake with conda env locations. As far as I know, this is pretty convenient and durable, especially for build-once-use-forever workflows. Complications I've heard of are (1) Mac `CONDA_BUILD_SYSROOT` sometimes required present/absent and (2) `psi4-dev` is monolithic, awkward to update, or sometimes out-of-date with psi4 master's requirements. I, for one, don't often use `psi4-dev` b/c I want more flexibility with switching out packages. **So, I'd be glad to hear thoughts on what form and contents the build helpers should take. A few plans and questions below, but any feedback appreciated.**. 1. Do you want docker images of the stuff that was in `psi4-dev`? I think from PsiCon2022 the answer is yes.; 2. Do you want minimal (build tools & req'd deps) or maximal (+ optional addons) or micro (no build tools, just L2, g2g, libxc, qcng, scipy, pytest) or several of those choices Docker images? (I have one vote for minimal.); 3. Docker images are hefty (~600MB for the built psi4). Can I just push them to a `latest` tag and overwrite old ones, or does there need to be a history?; 4. For Docker of psi4 itself, I'm only doing linux-64 (https://hub.docker.com/r/psi4/psi4/tags). Since docker is usually run VM-like, is that all develo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:3153,update,update,3153,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['update'],['update']
Deployability,"ma2lapl2=0x0, v4sigma2lapltau=0x0, v4sigma2tau2=0x0, v4sigmalapl3=0x0, v4sigmalapl2tau=0x0, v4sigmalapltau2=0x0, v4sigmatau3=0x0, v4lapl4=0x0, v4lapl3tau=0x0, v4lapl2tau2=0x0, v4lapltau3=0x0, ; > v4tau4=0x0) at /psi/gits/libxc/src/mix_func.c:119; > #5 0x00007fffecf71998 in xc_gga (func=0x555556ca7500, np=255, rho=0x555556e575c0, sigma=0x555556ccda80, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, v2rho2=0x0, v2rhosigma=0x0, v2sigma2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rhosigma2=0x0, v3sigma3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho2sigma2=0x0, v4rhosigma3=0x0, v4sigma4=0x0); > at /psi/gits/libxc/src/gga.c:126; > #6 0x00007fffecf71b16 in xc_gga_exc_vxc (p=<optimized out>, np=<optimized out>, rho=<optimized out>, sigma=<optimized out>, zk=<optimized out>, vrho=<optimized out>, vsigma=0x555556c12720) at /psi/gits/libxc/src/gga.c:160; > #7 0x00007fffef1a9541 in psi::LibXCFunctional::compute_functional (this=0x896d, in=..., out=..., npoints=-1, deriv=1) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/LibXCfunctional.cc:549; > #8 0x00007fffef1b899f in psi::SuperFunctional::compute_functional (this=0x896d, vals=..., npoints=6) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/superfunctional.cc:633; > #9 0x00007fffef1737ba in psi::RV::compute_V (this=0x896d, ret=<error reading variable: Cannot access memory at address 0x896d>) at /psi/gits/hrw-demo/psi4/src/psi4/libfock/v.cc:1350; > #10 0x00007fffef7752c3 in psi::scf::RHF::form_V (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:180; > #11 0x00007fffef77451b in psi::scf::RHF::form_G (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:185; > ```; > ; > Please let me know when is a good point to try Psi4+Libxc 5.1 again and if your Libxc 6 PR needs adding atop this (surely not?), thanks. Yes, it turns out that the hotfix branch was still a work-in-progress by the time I was forced to go on holidays. I hope to get the remaining issues in the Python frontend fixed today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798:3815,hotfix,hotfix,3815,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798,1,['hotfix'],['hotfix']
Deployability,"ma_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6220,Release,Release,6220,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"mainly be an effort of connecting the strings together on the Psi4 side. Currently I am still very much in the planning phase of this PR, thankful for any early pointers or feedback to get me moving in a sensible direction. Since this is my first PR here I still feel a little lost inside the Psi4 source :smile:. My implementation so far hooks into the driver python code of Psi4 and branches out to either `adcc` or the built-in ADC module of Psi4. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Get ADC(2) calculation triggered in adcc from Psi4 (see `adcc_examples` subfolder).; - [x] Allow all ADC variants to be run in Psi4; - [x] Proper error handling of Psi4 SCF references not supported in adcc (symmetry, density-fitting, ...); - [x] Integration of adcc installation into Psi4 build system; - Currently adcc can only be installed via `pip`, but we would love to get `conda` support working on our end.; - [x] Tests and examples; - [x] Test install process; - [x] Documentation. ## Questions; - [x] How to best branch between the builtin module and adcc? The two implementations share some features, but use different approaches to solve ADC, which can in some cases lead to differing results (related to #1033 ); - [x] How to best direct options and configurables from Psi4 and adcc? The current solution I see is to add basically everything to the big `read_options.cc`, which is pretty inflexible and could lead to a lot of duplicated information being necessary. Is there some better way to do this?; - [x] What to do with the calculation results? Right now only the MP2 ground state energy is returned to the python world in ADC calculations of Ps4 if I understand this right. Our [ExcitedStates](https://adc-connect.org/reference.html#adcc.ExcitedStates) object, however, is capable of returning more results, most importantly oscillators strengths, or the complete excitation vector. I tried to understand what was done in the eom-cc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744:1416,install,install,1416,https://psicode.org,https://github.com/psi4/psi4/pull/1744,1,['install'],['install']
Deployability,"mal (internal) energy at 298.15 [K] -76.00118645 [Eh]. Enthalpy, H_trans = E_trans + k_B * T = E_trans + P * V; Electronic contrib to H beyond E_e 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational contrib to H 1.481 [kcal/mol] 6.197 [kJ/mol] 0.00236046 [Eh]; Rotational contrib to H 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational contrib to H 14.441 [kcal/mol] 60.423 [kJ/mol] 0.02301373 [Eh]; Correction H 16.811 [kcal/mol] 70.338 [kJ/mol] 0.02679047 [Eh]; Total H, Enthalpy at 298.15 [K] -76.00024226 [Eh]; *** Absolute enthalpy, not an enthalpy of formation ***. Gibbs free energy, G = H - T * S; Electronic contrib to G beyond E_e 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational contrib to G -8.837 [kcal/mol] -36.975 [kJ/mol] -0.01408304 [Eh]; Rotational contrib to G -2.205 [kcal/mol] -9.226 [kJ/mol] -0.00351383 [Eh]; Vibrational contrib to G 14.440 [kcal/mol] 60.418 [kJ/mol] 0.02301201 [Eh]; Correction G 3.398 [kcal/mol] 14.217 [kJ/mol] 0.00541514 [Eh]; Total G, Gibbs energy at 298.15 [K] -76.02161759 [Eh]; *** Absolute Gibbs energy, not a free energy of formation ***; ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Vibrational analysis printing is overhauled for clarity. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] These changes should fend off some problems seen by users. Feel free to suggest edits based on problems that have come your way. ## Checklist; - [x] ~Tests added for any new features~ It's only printing; - [x] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2969:2360,release,release,2360,https://psicode.org,https://github.com/psi4/psi4/pull/2969,1,['release'],['release']
Deployability,"means that `-std=gnu++11` will never get passed, even if CMake can detect that your compiler supports it. Instead will get a `-std=c++11` from pybind11 and possibly another `-std=c++11` if cmake detects that your compiler supports.; - [x] Put docs in order wrt threading; - [x] Make `psi4/__init__.py` pay attention to `PSI_SCRATCH`. Otherwise scratch is non-adjustible in PsiAPI mode.; - [x] Default to serial execution in `psi4/__init__.py`. Can be overruled in Psithon mode through `-nN` or `set_num_threads(N)`. Can be overruled in PsiAPI mode through `set_num_threads(N)`.; - [x] Fix `atexit` deregistering in Py3; - [x] Removed get_/set_num_threads driver wrappers. Still looks the same to users. Prints ""Threads set to %d by Python driver"" in output file so there's a record of the change.; - [x] `psi4.compare_values()` and friends adapted to work with pytest upon success. Recommended pattern: `ans = psi4.compare_values(normal test args here); assert ans`.; - [x] Set up pytest so can test installed psi4 free of cmake/ctest. For the moment, you need to be in `${top-level-psi4-dir}/tests/pytest`, have pytest installed (`conda install pytest`), have psi4 importable (`psi4 --psiapi-path`), and run `python -m pytest` or for more info, `python -m pytest -vs`.; - [x] Revive a ccsd(t) sp and an mp2 opt in the cfour interface. Add a pysmoke test.; - [x] Vital tweaks so that psiapi can handle more than vanilla calcs. Includes initializing efp in psi4.geometry, moving pcmsolver path detect to __init__, and the options clearing mentioned above.; - [x] Fix TargetHDF5 detection for detect pre-built case (i.e., conda case). * **User-Facing for Release Notes**; - [x] CMake 3.3 now required; - [x] Using `OMP_NUM_THREADS` and/or `MKL_NUM_THREADS` to guide parallelism in Psi4 is _now deprecated_. Psi4 won't pay the least attention to these variables.; - [x] Added `psi4 --psiapi-path` command-line argument. This prints the bash commands you need to execute to set up python interp and python",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627:1213,install,installed,1213,https://psicode.org,https://github.com/psi4/psi4/pull/627,1,['install'],['installed']
Deployability,"mebody looking over the code for the first time (which is what we want). _Accordingly_, here's my proposal for how to make the code more readable. First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate. The code is now divided into the following => level chunks:. => Prep Auxiliary Quantities <=; * Zeroing, Sizing, Atom Blocking all go here. => Prep Atom Pairs <=; * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it. => Prep Bra-Bra Shell Pairs <=; * What is currently, ""Store shell pairs that are significant by Schwarz estimate"". => Prep Bra-Ket Shell Pairs <=; * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets. => Integral Formation Loop <=; * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning. _______________________________________________. How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look. And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653:2055,update,update,2055,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653,1,['update'],['update']
Deployability,minor patches for fnocc and dfocc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2013:6,patch,patches,6,https://psicode.org,https://github.com/psi4/psi4/pull/2013,1,['patch'],['patches']
Deployability,"misc updates, incl. py311",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2764:5,update,updates,5,https://psicode.org,https://github.com/psi4/psi4/pull/2764,1,['update'],['updates']
Deployability,miscellaneous updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2034:14,update,updates,14,https://psicode.org,https://github.com/psi4/psi4/pull/2034,1,['update'],['updates']
Deployability,"models\molecule.py:294: in __init__; super().__init__(**kwargs); pydantic\main.py:341: in pydantic.main.BaseModel.__init__; ???; E pydantic.error_wrappers.ValidationError: 2 validation errors for Molecule; E connectivity -> 0; E '<' not supported between instances of 'tuple' and 'int' (type=type_error); E connectivity -> 1; E '<' not supported between instances of 'tuple' and 'int' (type=type_error); ================================================== warnings summary ===================================================; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:599; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:701; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:698; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:699; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:702; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in Num",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:4843,release,release,4843,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,1,['release'],['release']
Deployability,module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIP,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14496,Install,Install,14496,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13698,Install,Install,13698,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15302,Install,Install,15302,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,more installed windows path adjustments,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2540:5,install,installed,5,https://psicode.org,https://github.com/psi4/psi4/pull/2540,1,['install'],['installed']
Deployability,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-382181157:163,install,installation,163,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157,2,['install'],"['install', 'installation']"
Deployability,"ms]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; install",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1176,install,installing,1176,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"n = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11813,install,install,11813,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"n check to accommodate the default/existing conv crit (https://psicode.org/psi4manual/master/add_tests.html#test-contents). Tests checking opt status at a certain cycle exempt of course. That's the principle, but do feel free to change as you see fit --- the reference values (agreed, preferred thing to change if the ref is the culprit) or the comparison crit (if it's the optimizer behavior that's the instigator). > Explanation:; I've expanded the number of tests I'm running since I started cleaning up core.cc. In the opt specific tests the convergence is usually tight enough that the nuclear repulsion energies match the reference values just fine for both optimizers. There are some tests like cc1-3 that are failing due to being just above threshold. atol = 0.001 the difference is ~ 0.0017. These tests are using the default qchem convergence criteria ~ 3e-4 max_force. Both optimizers finish well below the criteria and geometries match to 1e-4 Angstroms and 0.001 degrees. Geometries are the same. There are around 5 or 6 tests failing like this. Thanks for the explanation. I'd view reference NRE values as less venerable. For one thing, only those that caused trouble were even updated when physical constants changed, iirc. > Would y'all like this PR to include updated output.ref files for the tests or would a separate test updating PR be better? I don't see anything in the"" adding tests documentation"" about reference log files. I can include those as well if desired. It will just greatly increase the number of lines changed in this PR. Separate, please. Like updating `samples/`, better to keep the not-for-visual-inspection changes aside. Update: I see Jonathon thinks differently. Including is ok with me, now that GH allows files to be folded up rather than scrolled through. Is `.log` where all the optking detailed output goes now? I guess we ought to start collecting them. `output.log`, perhaps. But this can also be deferred to a grand regenerate-the-refs script and PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262549464:1777,update,updated,1777,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262549464,3,"['Update', 'update']","['Update', 'updated']"
Deployability,"n removed, as have ""MP2"" variables from double-hybrid DFT final return (#1445); - `SCS-MP2 * ENERGY` now are defined (6/5, 1/3) quantities. For the user-influenceable vars, it's `CUSTOM SCS-MP2 * ENERGY` (#1445); - Dunning basis updates for Li, Be, Na, Mg (#1559); - S^Inf 2nd-order Dispersion and Exchange-Dispersion for SAPT (#1490); - Enable LGTM static analysis; - Add qcvars to wavefunction (not just globals) for CI, CheMPS2, PsiMRCC, DFT, scf_helper, DFMP2, OEPROP, DETCI. Add functional-including qcvars for DFT (#1570, #1445); - Add option `PARENT_SYMMETRY` to replace a global. Don't use it directly (#1575); - Driver sow/reap for optimize, database which never worked for py3 removed (#1583); - Add 6-311G(2df, <any>) for 2nd row atoms (#1531); - Improve printing and guess for r_e for the `diatomic` procedure (#1601); - Response code cleaned to use Hessian-vector products (#1550); - Enable running pytest in parallel via `psi4 --test -n<N>` if package `pytest-xdist` installed (#1612); - Considerable code-cleanup at LGTM's prompting (#1618, #1633, #1631, #1616, #1617, #1624, #1620, #1622, #1627, #1639, #1630, #1629, #1636, #1632, #1626, #1619, #1625, #1623, #1634, #1650, #1651, #1621, #1655); - Considerable memory-leak cleanup at CPPCHECK's prompting (#1534) and a bit more at valgrind's prompting (#1755); - moved code to QCA; - molecule alignment code (#1644); - `QCAspect` refined into `qcel.Datum` (#1654); - use code from QCA; - testing functions dropped in favor of wrapping qcelemental testing functions. also, can choose between conventional Psi4 testing API and QCA API (#1644); - Windows testing and build (#1648); - Add CSAM screening to ERISieve as alternative to Schwarz. Turn on with `set screening csam` (#1499); - New Bragg-Slater (BS) radii change DFT total energies slightly (#1591); - Extend `SAD_SCF_TYPE` to all usual `SCF_TYPE` types by using exact or DF integrals under the hood (#1477).; - Implement quadrature weights cutoff at 1.e-15, which together with p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:5134,install,installed,5134,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['install'],['installed']
Deployability,"n the `setup` script I will end up with the same issue where the local (boost 1.59.0) headers are in the boost inc paths, but the homebrew (1.60.0) libraries end up in the boost lib paths. . If hombrew boost is unlinked at the time I run the `setup` script I will see both the include and library paths are set to the local boost install in the cmake output. However, if homebrew boost is linked when I run `make` I will get an error in the linking step. I suspect that the directory where hombrew adds the links to boost (`/usr/local/lib`) are passed as a linker argument by cmake, either by default, or because something else is installed there. Thus, if those links are present I will get the characteristic boost 1.60.0 linking errors. Hombrew installs boost-python as a separate package so to properly remove all of the links `brew unlink boost boost-python` . Interestingly I have a similar setup on a laptop running ArchLinux 4.4.5 where boost 1.60.0 was installed globally using `pacman` and I used the conda recipie to install boost 1.59.0 in `$CONDA_ENV_PATH`. If the conda virtual environment is activated and I use the `setup` args to direct cmake to boost 1.59.0 installed there I have no problems. The correct version is always found, even if I try to `make` with the conda virtual environment deactivated the cmake paths still point to the installation I want even though those paths aren't in my environment, and the build is successful. . I don't know If I would mark this as resolved, but it is at least understood to where it is predictable. . For anyone who has run into a similar problem:. If you are using a compatible version of boost installed manually on osx and your build fails to link, even if cmake reported the compatible version of boost was detected it may have detected the desired headers, but not the correct binaries. because homebrew has installed boost 1.60.0 in `/usr/local`. Try running `brew unlink boost boost-python` and running setup/make again. . This may",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313#issuecomment-198164795:1208,install,installed,1208,https://psicode.org,https://github.com/psi4/psi4/issues/313#issuecomment-198164795,2,['install'],"['install', 'installed']"
Deployability,"n/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /software/intel/parallel_studio_xe_2017/compilers_and_libraries_2017.0.098/linux/bin/intel64/icpc; -- Check for working CXX compiler: /software/intel/parallel_studio_xe_2017/compilers_and_libraries_2017.0.098/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option MAX_AM_ERI: 5; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option PSI4_CXX_STANDARD: 11; -- Found PythonInterp: /usr/bin/python (found version ""2.7.3"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (found suitable version ""2.7.3"", minimum required is ""2"") ; -- Suitable pybind11 could not be located, building one instead.; -- Suitable libint could not be located, building one instead.; -- Suitable libefp could not be located, building one instead.; -- Try OpenMP C flag = [-qope",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261733153:1667,Release,Release,1667,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261733153,1,['Release'],['Release']
Deployability,"nd hopefully; someday I will be, so I will definitely keep this in mind), but I suspect; our users who are running with these ancient compilers also won't be using; Easybuild. Or is Easybuild something we would distribute with Psi4, much; like we do Boost?. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 25, 2015 8:22 AM, ""wpoely86"" notifications@github.com wrote:. > Easybuild https://hpcugent.github.io/easybuild/ is not an alternative; > to CMake or autoconf. The idea is to have an easy way to make reproducible; > builds and modules. Everything in the stack should also be optimally build,; > meaning utilizing the hardware to its full extend (for example, if AVX2 or; > infiniband is available, we will use it). Easybuild will take care of all; > dependencies. It will avoid using the OS installed (old) versions of; > software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after; > building a compiler (GCC/intel/...) from scratch. We also patch out any; > problem. Psi4 for example hard codes it's build path for the generation of; > new plugins. This is not desirable on a HPC system. Some software is also; > not adjusted to be build by anything other than GCC. We make it work with; > intel too. Some software doesn't even have a real build system other than a; > list of makefiles that usually don't work out of the box. We fix that so; > the build is reproducible .; > ; > It's primarily meant for HPC sites. If somebody adds support for a piece; > of software, other people can reuse it with one command. I use it to build; > Psi4 in production. If you're developing, Easybuild is useful for building; > all up to date versions of dependencies.; > ; > On our systems, if I run: module load PSI, I get a psi4 (a git version; > from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and; > mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for; > example GCC-5.1, it takes one command.; > ; > Adding a GCC sub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105251086:1048,patch,patch,1048,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105251086,1,['patch'],['patch']
Deployability,"nd would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:1926,update,update,1926,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['update'],['update']
Deployability,"nda3-latest-Linux-x86_64.sh; ./Miniconda3-latest-Linux-x86_64.sh -b; conda create -n p4dev psi4-dev python=3.6 -c psi4/label/dev; conda activate p4dev; conda install libint am8 -c psi4/label/dev; git clone https://github.com/psi4/psi4.git && cd psi4; `psi4-path-advisor --gcc` -DMAX_AM_ERI=8; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; ```. (The info on the forum is also confusing and due to formatting issues, some essential quotes are missing.). From the output of the penultimate line, it seems that the right AM options is picked up:. ```; ...; -- Setting option MAX_AM_ERI: 8; ...; ```. Alas, this does not work. The error I get from the last command is:. ```; -- Maximum AM: 8; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- CMAKE_CXX_FLAGS: -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- SIMINT_C_INCLUDES: /home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-fopenmp;-mavx; -- SIMINT_LINK_FLAGS: -fopenmp; CMake Error at simint/CMakeLists.txt:7 (message):; Maximum angular momentum set is greater than I have available (7); ```. I've checked manually that my libint supports the right angular momenta:. ```; grep MAX ~/miniconda3/envs/p4dev/include/libint/*.h ; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM1 8; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM12 7; /home/toon/miniconda3/envs/p4dev/include/libint/libint.h:#define LIBINT_MAX_AM 9; ```. I have no other version of libint installed on my test system. Any suggestions? Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341:2530,install,installed,2530,https://psicode.org,https://github.com/psi4/psi4/issues/1341,1,['install'],['installed']
Deployability,"ndent plugin, a deep C-layer integration and a; > python-level integration. Some of the questions depends on what you want to aim for (or need). Well, also depends a bit what you guys have in mind and how deep we want the integration to be. My thoughts:; - A **C-layer integration** is possible, but might be quite hard, since our iterative solvers are written in `python`. Given one falls back to solvers in C from psi4, in theory one can integrate adcc into the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one could also just return it to the user as is. Again the idea being that a psi4 user can use adcc implicitly for calculations, without needing to wo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:1179,integrat,integrating,1179,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['integrat'],['integrating']
Deployability,"ne 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4317,install,install,4317,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,"ne-off, not continuous development anyways, so it's worth no globs and yes flexibility. ADDED: switched to ninja for docs and docs-pr (ok memory-wise at max parallelism b/c debug build). ADDED 12 Nov; - [x] update ecosystem and docs GHA and linux azure to use the path-advisor env/cache procedure. this helps keep the path-advisore procedure tested and keeps testing envs up-to-date. alternate testing can still be imposed by `sed`ing the envs.; - [x] in azure linux, use the three testing lanes to go beyond quicktests. apart from some longer tests, we're now hitting all but stdsuite non-quick. ; - [x] fixed the windows nightly build through azure, which was many layers of bugs. the improved path handling in psi4 & psi4/__init__.py from May technically didn't play nicely with the build-and-copy-into-place of the azure file cmake_install_*-paths-wise, and the recent (Oct) trick to get a fast `psi4 --version` tripped the problem, hence the `sed`.; - [x] Strengthened the default to Release so that it works for windows, too. Ninja was setting Debug as-was.; - [x] Updated the buildrun.yaml files from path-advisor; - [x] Update the docs build for py312 by fixing the non-raw strings having backspace chars.; - [x] removed the pb11=2.10 pin for docs build by adding to nitpick list; - [x] Avoid all the warnings about INSIST_FIND_PACKAGE_<pkg> and <pkg>_DIR unused user-spec variable warnings that could be unnerving.; - [x] Use a different way of detecting libdl for plugins that doesn't throw cmake warnings. lmk if there's any problems.; - [x] Patch over a sapt+windows+ecp bug described at #3072 so can test complete ecosystem; - [x] Add a plain `psi4 --psiapi` variation on `psi4 --psiapi-path` that can be used in `eval $(psi4 --psiapi)`. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:4585,Update,Updated,4585,https://psicode.org,https://github.com/psi4/psi4/pull/3021,3,"['Patch', 'Update']","['Patch', 'Update', 'Updated']"
Deployability,"new basis elements for the singlet block all take the form (i->a α + i->a β) / sqrt(2), while the new basis elements for the triplet block take form (i->a α - i->a β) / sqrt(2).; 2. The electron potential is spin-free. Because the coulomb J and exchange K terms are expectation values of this, the associated integrals are spin free, assuming spin does not integrate to zero. For J, spin only integrates to zeroes if there is a spin mismatch in either the bra or the ket. Because we only consider Sz preserving excitations, no spin mismatches are possible. For K, a bra orbital needs to have the same spin as a ket orbital. Because both bra orbitals have the same spin, and both ket orbitals have the same spin, this requires that _all_ orbitals have the same spin. Meanwhile, the DFT V terms are second derivatives of the DFT energy with respect to orbital rotation generators. These are not spin-free.; 3. Now let's combine the two above facts. After performing the spin-integration in the triplet case, you end up with [(α|α) - (α|β) - (β|α) + (β|β)]. Upon exploiting spin-restriction, this reduces to [(α|α) - (α|β)]. For J, the second term is equal to the first, so the two cancel. For K, the second term is zero, so you have the first integral. For V, the two terms are neither equal nor zero. The V term cannot be neglected, even though it's normally added to the J term, which here is zero. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] V is still bundled with J, but the RSCF products now mark that they may need to get a J-like term. This is no longer equivalent to being singlet or not.; - [x] Several methods have been modified to have a singlet flag, necessary to pass to compure_Vx whether to compute the singlet or triplet term.; - [x] HF classes no longer have a `potential_` attribute. Ind",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2885:2233,integrat,integration,2233,https://psicode.org,https://github.com/psi4/psi4/pull/2885,1,['integrat'],['integration']
Deployability,"ng cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1b,<1.1.2a , which can be installed;; │ ├─ python [2.7.16|2.7.17] would require; │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ └─ python 2.7.18, which can be installed;; ├─ psi4 1.1+add49b9 would require; │ └─ gcc-5-mp , which requires; │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:8165,install,installed,8165,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2r,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1971,install,installing,1971,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ng: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profil",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3534,install,installing,3534,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"nni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 49",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:9884,install,install,9884,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,np.float update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2845:9,update,update,9,https://psicode.org,https://github.com/psi4/psi4/pull/2845,1,['update'],['update']
Deployability,"ns notifications@github.com; wrote:. > Description; > ; > Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and; > makes F/I-SAPT postprocessing scripts available in install/share.; > Todos; > ; > Notable points that this PR has either accomplished or will accomplish.; > - Enables the average citizen to quickly begin using F/I-SAPT.; > ; > Status; > - Ready to go. Looks ready to me, though there may well be further; > reST changes after viewing the docs build. @robparrish; > https://github.com/robparrish may want to look it over. We'll close; > the other PR.; > ; > ---; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4/pull/470; > Commit Summary; > - FISAPT does not need INTS_TOLERANCE 0.0 any more (bug fixed in; > LibFock previously); > - Removed extra pymol file in fsapt; > - Remove dependency on absolute path from copy_pymol scripts in fsapt; > - Short correctness test (1s) of fsapt0; > - Full example of fsapt0; > - Full example of fisapt0; > - Shorter version of tests/isapt1; > - Example of fsapt0 difference analysis; > - Hook up and clean fisapt test makefiles; > - Added a good bit of sphinx docs on FISAPT; > - update samples. docstring f/isapt tests; > - a few mods to fisapt docs that I can detect w/o seeking the built; > docs; > ; > File Changes; > - _M_ doc/sphinxman/CMakeLists.txt; > https://github.com/psi4/psi4/pull/470/files#diff-0 (6); > - _A_ doc/sphinxman/source/Total.png; > https://github.com/psi4/psi4/pull/470/files#diff-1 (0); > - _A_ doc/sphinxman/source/VA.png; > https://github.com/psi4/psi4/pull/470/files#diff-2 (0); > - _M_ doc/sphinxman/source/bibliography.rst; > https://github.com/psi4/psi4/pull/470/files#diff-3 (16); > - _A_ doc/sphinxman/source/fisapt.rst; > https://github.com/psi4/psi4/pull/470/files#diff-4 (351); > - _M_ doc/sphinxman/source/methods.rst; > https://github.com/psi4/psi4/pull/470/files#diff-5 (1); > - _M_ psi4/CMakeLists.txt; > https://github.com/psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470#issuecomment-249267903:1293,update,update,1293,https://psicode.org,https://github.com/psi4/psi4/pull/470#issuecomment-249267903,1,['update'],['update']
Deployability,nstalling: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36h,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2841,install,installing,2841,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,nt-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2013,install,installing,2013,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"nted and working, see the [adcc manual](https://adc-connect.org/calculations.html#general-adc-n-calculations), so this should mainly be an effort of connecting the strings together on the Psi4 side. Currently I am still very much in the planning phase of this PR, thankful for any early pointers or feedback to get me moving in a sensible direction. Since this is my first PR here I still feel a little lost inside the Psi4 source :smile:. My implementation so far hooks into the driver python code of Psi4 and branches out to either `adcc` or the built-in ADC module of Psi4. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Get ADC(2) calculation triggered in adcc from Psi4 (see `adcc_examples` subfolder).; - [x] Allow all ADC variants to be run in Psi4; - [x] Proper error handling of Psi4 SCF references not supported in adcc (symmetry, density-fitting, ...); - [x] Integration of adcc installation into Psi4 build system; - Currently adcc can only be installed via `pip`, but we would love to get `conda` support working on our end.; - [x] Tests and examples; - [x] Test install process; - [x] Documentation. ## Questions; - [x] How to best branch between the builtin module and adcc? The two implementations share some features, but use different approaches to solve ADC, which can in some cases lead to differing results (related to #1033 ); - [x] How to best direct options and configurables from Psi4 and adcc? The current solution I see is to add basically everything to the big `read_options.cc`, which is pretty inflexible and could lead to a lot of duplicated information being necessary. Is there some better way to do this?; - [x] What to do with the calculation results? Right now only the MP2 ground state energy is returned to the python world in ADC calculations of Ps4 if I understand this right. Our [ExcitedStates](https://adc-connect.org/reference.html#adcc.ExcitedStates) object, however, is capable of returning more results",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744:1210,Integrat,Integration,1210,https://psicode.org,https://github.com/psi4/psi4/pull/1744,3,"['Integrat', 'install']","['Integration', 'installation', 'installed']"
Deployability,"ntent); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; > ciwfn = core.detci(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:12378,install,install,12378,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"nutes on a 20-core machine with no individual test over 4m. That's not reasonable for a laptop. Blame the slow-to-converge oo methods, and it's going to get worse with occd and friends.; - [ ] TODO https://github.com/MolSSI/QCEngine/pull/376 and a new version of QCEngine are a prereq.; - [x] https://github.com/qcdb/qcdb/pull/57 is associated QCDB PR (psi4 PR is a prereq to it); - [ ] TODO full stdsuite in the presence of MRCC will have a couple faults of the ""not NYI"" variety after the MRCC defaulting logic switch from Q. I haven't decided how to remedy this, but it's unlikely to be hit, so I'll defer. ## Questions; - [ ] My version of Psi4+MRCC doesn't run CC2. Anyone else see this? (Just curious, not really needed for PR.); - [ ] I don't think the original module authors will find issues, but if you want to look over pertinent docs and capabilities tables, please do so.; - [x] [ADDED from #2737 For methods (or methods in certain circumstances, say reference or conv/df) only available through an external add-on, do we want those opt-in? That is, certainly the external must be (1) installed and detectable. But do we also want to (2) require the user to set qc_module=mrcc|adcc|chemps2 ? CheMPS2 has a long history of not requiring (2). ADCC has a shorter history of being the preferred backend and automatic choice, if present. @maxscheurer prefers not requiring (2). In this PR, I just switched MRCC syntax to yes require (2). That was in keeping with the user opt-ing in via energy(""mrccsd""). I can go either way, and I guess I'm now leaning toward not requiring (2) and adjusting MRCC accordingly. But it seems like something to discuss and settle on a consistent treatment. EDIT: ok, MRCC can be a default. above section edited. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13806,install,installed,13806,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['install'],['installed']
Deployability,nvs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2546,Install,Install,2546,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"nvs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12256,Install,Install,12256,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"o I downloaded Psi4conda-1.3.2-py36-Linux-x86_64.sh from the pis4 official website to install it:; ```; [chenh@Pauling programs]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; insta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1047,install,installing,1047,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,o e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6342,Install,Install,6342,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"o install it:; ```; [chenh@Pauling programs]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; inst",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1133,install,installing,1133,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"o separate PRs for reviewer convenience. Then I can bring in this PR. - [x] #2886; - [x] #2887; - [x] #2888; - [x] #2889. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Triplet TDDFT excitations from RKS are now supported. ## Theoretical Analysis. Why were DFT triplets harder than HF triplets? To understand this, we need to understand both the origin of the triplet matrix and the spin properties of the relevant matrix elements. 1. Starting from the UKS RPA/TDA matrices when Ca = Cb, we can do a similarity transformation to obtain the singlet and triplet RKS matrices. The new basis elements for the singlet block all take the form (i->a α + i->a β) / sqrt(2), while the new basis elements for the triplet block take form (i->a α - i->a β) / sqrt(2).; 2. The electron potential is spin-free. Because the coulomb J and exchange K terms are expectation values of this, the associated integrals are spin free, assuming spin does not integrate to zero. For J, spin only integrates to zeroes if there is a spin mismatch in either the bra or the ket. Because we only consider Sz preserving excitations, no spin mismatches are possible. For K, a bra orbital needs to have the same spin as a ket orbital. Because both bra orbitals have the same spin, and both ket orbitals have the same spin, this requires that _all_ orbitals have the same spin. Meanwhile, the DFT V terms are second derivatives of the DFT energy with respect to orbital rotation generators. These are not spin-free.; 3. Now let's combine the two above facts. After performing the spin-integration in the triplet case, you end up with [(α|α) - (α|β) - (β|α) + (β|β)]. Upon exploiting spin-restriction, this reduces to [(α|α) - (α|β)]. For J, the second term is equal to the first, so the two cancel. For K, the second term is zero, so you have the first integral. For V, the two terms are neither equal nor zer",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2885:1617,integrat,integrate,1617,https://psicode.org,https://github.com/psi4/psi4/pull/2885,1,['integrat'],['integrate']
Deployability,"o the superior [standalone library](https://github.com/robashaw/libecpint), also written by Rob Shaw. That library also provides gradient and Hessian terms, which will greatly improve performance. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Hook up external build; - [x] Get energies working; - [x] Get gradients working; - [x] Get Hessians working; - [x] Remove old native implementation; - [x] Make all tests / references to ECPs conditional depending on libECP activation. LAB: conditional build marked by `USING_ecpint` compile definition. This turned out uglier than should strictly be needed because as soon as you ifdef the ao_ecp declarations in integrals.cc, all calcs, w/ or w/o ecp segfault. Possibly I'm missing something, but present ifdef pattern is working stably.; - [x] Linux and Mac conda packages are available off psi4/label/dev. Windows untested. These packages have stylistic problems, but they'll do for now. There are also Linux and Mac conda packages off conda-forge. At least the Linux works fine. Installation is mildly involved with the mixed base channels, so the psi4 packages exist for simplicity of availability.; - [x] NYI message on stability code added to close #2577 ; - [ ] build docs will be in a separate PR. ## Questions; - Can anyone think of how one might access code with ecp ifdefs _without_ building a psi4 BasisSet (besides zerobasis)? Particularly though some non-driver mintshelper API call? This is important because the nearly sole whoa-your-mol+basis-needs-ecp-but-libecpint-not-built warning happens at the BasisSet build in export_mints. If users get around that, they'll be surprised by missing electrons b/c ecp code is deactivated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135:1168,Install,Installation,1168,https://psicode.org,https://github.com/psi4/psi4/pull/2135,1,['Install'],['Installation']
Deployability,o this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cl,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3930,Install,Installing,3930,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quat,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3342,Install,Installing,3342,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"ocal/opt/gcc@8/lib/gcc/8/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.25.0); 	/usr/local/lib/gcc/8/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); ```. As you said, it seems ```gcc``` tries to impose ```gomp```. How can I bypass it ?; Because I still have the error:; ```; E ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; E Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; E Expected in: flat namespace; E in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; ```. which (I think) is due to that right ?. PS: ```echo $DYLD_LIBRARY_PATH``` gives ```/opt/intel/lib``` only. And in case it helps, here is the output of my configuration step, which seems correct:; ```cmake -H. -Bobjdir -DOpenMP_LIBRARY_DIRS=/opt/intel/lib```; ```; -- The C compiler identification is GNU 8.3.0; -- The CXX compiler identification is GNU 8.3.0; -- Checking whether C compiler has -isysroot; -- Checking whether C compiler has -isysroot - yes; -- Checking whether C compiler supports OSX deployment target flag; -- Checking whether C compiler supports OSX deployment target flag - yes; -- Check for working C compiler: /usr/local/bin/gcc-8; -- Check for working C compiler: /usr/local/bin/gcc-8 -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:2524,configurat,configuration,2524,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,1,['configurat'],['configuration']
Deployability,odule pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14017,Install,Install,14017,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,odule simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14337,Install,Install,14337,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"oh no, not again. Yes, one had to download patched files for the previous version from their homepage.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281:43,patch,patched,43,https://psicode.org,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281,1,['patch'],['patched']
Deployability,"ok, Let me please know of the update. I am in dire need of this part of the PSI4.; Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786#issuecomment-323519546:30,update,update,30,https://psicode.org,https://github.com/psi4/psi4/issues/786#issuecomment-323519546,1,['update'],['update']
Deployability,"ok, folks, this now gives correct answers and fixes the azure error. * @dgasmith, what's the prospect of a g2g 2.0 release; * all those who consider pointers their allies should check that my formation of `xyz` is equivalent to https://github.com/dgasmith/gau2grid/compare/v1.3.1...master#diff-f8f6cc08ea43fcbc6d2e07d960e118c2L69-R94",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608:115,release,release,115,https://psicode.org,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608,1,['release'],['release']
Deployability,"ok, i updated to gcc_5.1.0, however when running ./psi4 : i get the following error : . Traceback (most recent call last):; File ""./psi4"", line 126, in <module>; import psi4; File ""/home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/**init**.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/core.so: undefined symbol: __intel_avx_rep_memset. Any idea how to get rid of this ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261747759:6,update,updated,6,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261747759,1,['update'],['updated']
Deployability,"oking for opinions on whether I'm entering the functional wrong or if the parameter hookup may need adjustment after Libxc 3-->4 changes + new dict func initialization. This is the first use of `use_libxc` for a LRC. ---. Ok, I believe I'm now using `use_libxc` correctly for LRC fctls (test case still unhappy):. ```; funcs.append({; ""name"": ""M11"",; ""x_functionals"": {; ""HYB_MGGA_X_M11"": {; ""use_libxc"": True; }; },; ""x_hf"": {; ""use_libxc"": ""HYB_MGGA_X_M11""; },; ""c_functionals"": {; ""MGGA_C_M11"": {}; },; ""description"": ' M11 Meta-GGA XC Functional\n',; ""citation"": ' R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011\n',; ""doi"": '10.1021/jz201170d',; }); ```. Aren't really any other M11 fctls in Libxc to get confused by:; ```; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11_L 75 /*M11-L correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11 76 /*M11 correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_X_M11_L 226 /*M11-L exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_HYB_MGGA_X_M11 297 /*M11 hybrid exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_MGGA_X_M11 225 /* Worker for M11 functional */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_HYB_MGGA_XC_M11 462 /* M11 functional from Minnesota */; ```; This turns into psi output; ```; => Composite Functional: M11 <=. M11 Meta-GGA XC Functional. R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011. Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_HYB_MGGA_X_M11 [omega = 0.2500]. => Exact (HF) Exchange <=. 1.5720 HF,LR [omega = 0.2500]; 0.4280 HF. => Correlation Functionals <=. 1.0000 XC_MGGA_C_M11; ```; which doesn't match; ![screen shot 2018-04-20 at 2 19 31 pm](https://user-images.githubusercontent.com/2314730/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383182397:1038,install,install-libxc,1038,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383182397,1,['install'],['install-libxc']
Deployability,"ol) # D2h subgroup; File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2532, in find_highest_point_group; return PointGroup(pg_bits); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1533, in __init__; self.constructor_bits(*args); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1576, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1754, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). ValidationError: Unrecognized point group bits: 96; ```. If I switch to B3LYP functional, there's no problem. And we're also able to run it on another site (different resources). Maybe we're missing some installation or the local machine libraries are not the right versions? I also paste here an `ldd` of the `core.so`. ```; linux-vdso.so.1 => (0x00007ffddc916000); libpthread.so.0 => /lib64/libpthread.so.0 (0x00002ac921db4000); libc.so.6 => /lib64/libc.so.6 (0x00002ac921fd0000); libpcm.so.1 => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00002ac922391000); libxc.so => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libxc.so (0x00002ac928dfa000); libdl.so.2 => /lib64/libdl.so.2 (0x00002ac92920a000); libgdma.so => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libgdma.so (0x00002ac92940e000); libderiv.so => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libderiv.so (0x00002ac92987b000); libint.so => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libint.so (0x00002ac92d840000); libdkh.so => /home/damasj02/software/psi4dev/lib/python3.6/site-packages/psi4/../../../libdkh.so (0x00002ac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948:6764,install,installation,6764,https://psicode.org,https://github.com/psi4/psi4/issues/948,1,['install'],['installation']
Deployability,"ole Moment: [D]; X: -0.0000 Y: -0.0000 Z: -0.0005 Total: 0.0005. /home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py:538: FutureWarning: Object arrays will not be saved by default in the future because `allow_pickle` will default to False. You should add `allow_pickle=True` explicitly to elminate this warning.; pickle_kwargs=pickle_kwargs); Traceback (most recent call last):; File ""minimal.py"", line 34, in <module>; scf_e_A, wfnA = psi4.energy(""SCF"", return_wfn=True, molecule=monomerA); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/procrouting/proc.py"", line 2058, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/procrouting/proc.py"", line 1423, in scf_helper; scf_wfn.to_file(write_filename); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/p4util/python_helpers.py"", line 303, in _core_wavefunction_to_file; np.save(filename, wfn_data); File ""/home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py"", line 538, in save; pickle_kwargs=pickle_kwargs); File ""/home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/format.py"", line 637, in write_array; raise ValueError(""Object arrays cannot be saved when ""; ValueError: Object arrays cannot be saved when allow_pickle=False; ```; ```python; > You should add allow_pickle=True explicitly to elminate this warning; ```. Related to #1607 ; NumPy version 1.6.2 provided with latest intel's python distro; After the proposed change the minimal.py passes through. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Patch the only np.save() with allow_pickle=True. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706:3127,Patch,Patch,3127,https://psicode.org,https://github.com/psi4/psi4/pull/1706,1,['Patch'],['Patch']
Deployability,"om/psi4/psi4/pull/799/files#diff-17> (1); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/799/files#diff-18> (4); > - *M* tests/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-19> (2); > - *A* tests/dft-custom/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-20> (3); > - *A* tests/dft-custom/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-21> (54); > - *A* tests/dft-custom/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-22> (910); > - *A* tests/dft-reference/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-23> (3); > - *A* tests/dft-reference/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-24> (19); > - *A* tests/dft-reference/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-25> (366); > - *M* tests/gcp/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-26> (2); > - *A* tests/gcp/hf3c-gradients/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-27> (3); > - *A* tests/gcp/hf3c-gradients/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-28> (19); > - *A* tests/gcp/hf3c-gradients/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-29> (1438); > - *A* tests/gcp/hf3c-hessian/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-30> (3); > - *A* tests/gcp/hf3c-hessian/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-31> (21); > - *A* tests/gcp/hf3c-hessian/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-32> (2612); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/799.patch; > - https://github.com/psi4/psi4/pull/799.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/799>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdtmlo2soYV97EnbfPbQiixA89Mymks5sjoXOgaJpZM4PbDFk>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/799#issuecomment-330258817:5382,Patch,Patch,5382,https://psicode.org,https://github.com/psi4/psi4/pull/799#issuecomment-330258817,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:3126,Release,Release,3126,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,4,"['Release', 'install']","['Release', 'install']"
Deployability,"ompute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/su",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2791,install,install,2791,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"on 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5905,install,installed,5905,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"on MacOS bigSur I am using `-DOpenMP_LIBRARY_DIRS=/usr/local/Cellar/libomp/12.0.1/lib` where I have brew installation `libomp.a` and `libomp.dylib1 but still getting:. ```; ld: library not found for -lMathOpenMP_LIBRARIES-NOTFOUND; clang: error: linker command failed with exit code 1 (use -v to see invocation); ```. I used conda's version and it worked. In the words of GROMACs, ""Sadly, the interactions of hardware, libraries, and compilers are only going to continue to get more complex."". And to add ""Thanks to MacOS and Intel :( """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636:105,install,installation,105,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636,1,['install'],['installation']
Deployability,"on of one-electron integrals on a quadrature grid. Therefore, there are a number of improvements to be made, in order of increasing difficulty:. - Do a better job at screening small integrals before they're computed (like [these](https://aip.scitation.org/doi/pdf/10.1063/1.5048491)); - Use better grids (such as [here](https://aip.scitation.org/doi/full/10.1063/1.5049435)); - Compute individual integrals faster. This could be done by reusing intermediates in the recursion for integrals involving the same shell-pair and different grid points. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement semi-numerical exchange in the `DFCOSK` class; - [x] Add tests & docs. ## Questions; - [x] What do we want the `SCF_TYPE` keyword for this algorithm to be? It's currently `COSK`. It could also be `DFJCOSK`. It might make more sense to call the algorithm `SNK` (for semi-numerical exchange) over `COSK`, as the latter is more general, and will still be accurate even if we change the screening procedure. (The former refers to a very specific screening procedure).; - [x] For anyone who regularly uses COSK: do you have a preference for how the tightness of the integration grids are specified? Currently, the user gives the number of spherical/angular points. We could also predefine a set of allowed spherical/angular combos. That might be easier for users (they don't have to know about lebedev numbers, for example), but it sacrifices flexibility.; - [x] This is less a question and more of a note: the `DFTGrid` class is in serious need of a refactor so that it does not read from global options. This PR kicks the can down the road by adding another constructor to the class, which takes `double`-type options. I'd be happy to hear any thoughts on what to do with this class, though that probably deserves its own issue. ## Checklist; - [x] Tests added for any new features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567:2714,integrat,integration,2714,https://psicode.org,https://github.com/psi4/psi4/pull/2567,1,['integrat'],['integration']
Deployability,"on:; 1. I wrote an extensive list of changes at the top of this PR. Read them– they affect you.; 2. To build Psi4 you now will need to do something along the lines of (in the top-level of the cloned source code):; ; ``` .sh; cmake -H. -Bbuild ; cd build && make; make install; ```; - In the configure step (the first line) there are a large number of CMake variables you can set to fine tune the build. See the top-level `CMakeLists.txt` for the more common ones. For example to change the C++ compiler add: `-DCMAKE_CXX_COMPILER=/path/to/compiler` after `-Bbuild`; - Anything not part of Psi4 proper is now in external and is expected to have its own build files. Paths where CMake should look for dependencies should now be passed to these external projects via `CMAKE_PREFIX_PATH`. ; - Installing is now a thing for Psi4. In theory you can run Psi4 from the build directory, but you'll quickly find it annoying (I'll leave it to you to learn why). Tests should still work from the build directory and can be performed from there before installing. They should be performed using `ctest` as normal. ; 3. Within the next week anyone who compiles Psi4 regularly (as opposed to just using the Conda package) should clone this branch and try it out. Please do it sooner rather than later because of the following points.; 4. Once this PR is merged, git operations on forks and clones of the current master repo will likely cease to work without a ton of effort. This is because of the size and amount of changes in this PR. Instead of fighting to rebase on top of it, there are two options:; 1. If you have some small changes you want to make in the near future [fork my fork](https://github.com/ryanmrichard/psi4), add your changes, submit a PR to me; 2. Wait until after my PR is merged into Psi4's master repo, make a fresh fork, and manually copy/paste any files you are working on into that fresh fork; 5. Since the history is getting messed up anyways, there are plans to rip Boost out after merg",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-236723542:1433,install,installing,1433,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-236723542,1,['install'],['installing']
Deployability,"onda-forge; pint 0.17 pyhd8ed1ab_0 psi4; pip 21.2.2 py38haa95532_0; pluggy 1.0.0 py38haa244fe_3 conda-forge; psi4 1.6+77475b5 py38_0 psi4; psutil 5.9.1 py38h294d835_0 conda-forge; py 1.11.0 pyh6c4a22f_0 conda-forge; py-cpuinfo 8.0.0 pyhd8ed1ab_0 conda-forge; pydantic 1.3 py38hfa6e2cd_0 psi4; pyparsing 3.0.9 pyhd8ed1ab_0 conda-forge; pytest 7.1.2 py38haa244fe_0 conda-forge; python 3.8.13 hcf16a7b_0_cpython conda-forge; python_abi 3.8 2_cp38 conda-forge; pyyaml 6.0 py38h294d835_4 conda-forge; qcelemental 0.17.0 py_0 psi4; qcengine 0.19.0 pyhd8ed1ab_0 psi4; scipy 1.8.1 py38h9bf8e03_0 conda-forge; setuptools 61.2.0 py38haa95532_0; sqlite 3.38.3 h2bbff1b_0; tk 8.6.12 h8ffe710_0 conda-forge; tomli 2.0.1 pyhd8ed1ab_0 conda-forge; vc 14.2 h21ff451_1; vs2015_runtime 14.27.29016 h5e58377_2; wheel 0.37.1 pyhd3eb1b0_0; wincertstore 0.2 py38haa95532_2; xz 5.2.5 h62dcd97_1 conda-forge; yaml 0.2.5 h8ffe710_2 conda-forge; zipp 3.8.0 pyhd8ed1ab_0 conda-forge; ```. Manually updating pydantic with `pip install -U pydantic`, installs version 1.9.1 and then running `psi4 --test` gives:; ```; ================================================= test session starts =================================================; platform win32 -- Python 3.8.13, pytest-7.1.2, pluggy-1.0.0 -- Path\psi4conda\envs\psi16\python.exe; cachedir: .pytest_cache; rootdir: Path\psi4conda\envs\psi16\lib\site-packages\psi4, configfile: pytest.ini; collected 4042 items / 1 error / 3950 deselected / 92 selected. ======================================================= ERRORS ========================================================; _______________________________ ERROR collecting tests/test_qcel_molparse_to_string.py ________________________________; psi4conda\envs\psi16\lib\site-packages\psi4\tests\test_qcel_molparse_to_string.py:7: in <module>; from qcelemental.tests import test_molparse_to_string; <frozen importlib._bootstrap>:991: in _find_and_load; ???; <frozen importlib._bootstrap>:975: in _find_and_load_unlocked; ??",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:2474,install,install,2474,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,2,['install'],"['install', 'installs']"
Deployability,ons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5804,Install,Install,5804,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ooking for pthread_create - found ; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; -- Disabled CheMPS2 ; -- Disabled dkh ; -- Using libefp: /usr/qc/psi4.bin/lib/libefp.a (version 1.3.0) ; -- Disabled erd ; -- Disabled gdma ; -- Using libint: /usr/qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:2914,release,release,2914,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,1,['release'],['release']
Deployability,opt/PSI4/v1.2/bin/psi4; ```; ```; >>> cat /proc/cpuinfo | grep flags; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms.......; ```; ```; >>> cat /proc/version ; Linux version 2.6.32-431.el6.x86_64 (mockbuild@x86-023.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Nov 10 22:19:54 EST 2013; ```; ```; >>> lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.5 (Santiago); Release:	6.5; Codename:	Santiago; ```; ```; >>> ldd -v lib/python3.6/site-packages/psi4/core.so ; 	linux-vdso.so.1 => (0x00007fffe3ffd000); 	libambit.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libambit.so (0x00002b78f3dff000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b78f4118000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b78f4335000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b78f45b9000); 	libpcm.so.1 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00002b78f47be000); 	libxc.so.5 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libxc.so.5 (0x00002b78fb817000); 	libgg.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgg.so (0x00002b78fc8e1000); 	libgdma.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgdma.so (0x00002b78fcf2800,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690:3324,release,release,3324,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690,1,['release'],['release']
Deployability,"optional fortran compiler, adjustable cmake config installation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2946:51,install,installation,51,https://psicode.org,https://github.com/psi4/psi4/pull/2946,1,['install'],['installation']
Deployability,"optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6328,Release,Release,6328,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"or internally-build GauXC instances, setting `gauxc_ENABLE_GPU` to `ON` will build the internal GauXC install with GPU support. For external GauXC installs, `gauxc_ENABLE_GPU` will ensure that the external GauXC install supports GPU execution. ; - [X] Adds a new `SplitJK` derived class, `snLinK`. When Psi4 is built with GauXC support, `snLinK` contains the implementation of the details of the Psi4/GauXC interface, and is responsible for calling GauXC within Psi4. When Psi4 is not built with GauXC support, snLinK will instead throw an exception upon construction, as implemented in a stub class. The `snLinK` class supports both CPU and GPU execution of GauXC, controllable at runtime via the `SNLINK_USE_GPU` keyword. Additionally, the `snLinK` class operates correctly regardless of the value of `psi4_SHGAUSS_ORDERING`, as well as for both Spherical and Cartesian basis sets. ; - [X] Updates the `test_compositejk.py` and `test_comprehensive_jk_screening.py` pytests to test sn-LinK functionalities, given that GauXC is installed.; - [X] Adds a new file, `gauxc_writer.py` to generate HDF5 files as input for GauXC's `standalone_driver` functionality. Reference files for benzene at the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis set have been added, and a `test_gauxc_writer.py` file has been added to test the writer's functionality, given that GauXC is installed. . ## Notes; - Unlike COSX, which has a two-grid scheme currently, sn-LinK uses a single-grid scheme, simply converging the SCF on a single grid and leaving it at that. A multi-grid sn-LinK scheme is a potential idea for the future, but it is likely to be added as a separate PR.; - In terms of interfacing to GauXC, this PR only handles interfacing to the GauXC sn-LinK exact exchange algorithm through `CompositeJK`. GauXC, as I understand, also has capabilities for providing features such as standardized grids and functionals, but that is beyond the scope of this PR. ; - Currently, there is a an issue in the code wherein the co",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:5261,install,installed,5261,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['install'],['installed']
Deployability,"ore-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chen",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3493,install,installing,3493,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"orks; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/python3.7 (found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:1833,Install,Installing,1833,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,ot detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detectin,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3847,Install,Install,3847,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ou can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:1988,Update,Update,1988,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['Update'],['Update']
Deployability,"ould not converge SCF iterations in 4 iterations.; >; > Failed to converge.; >; > Traceback (most recent call last):; > File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1365,patch,patch,1365,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['patch'],['patch']
Deployability,"ous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; ```; and started with a clean build directory. I am on the current master, commit 42016c2a4462b6d7e9f030df4e75e7d81b50b9a8. This is on Fedora 28 with; ```; $ gcc --version; gcc (GCC) 8.1.1 20180712 (Red Hat 8.1.1-5); Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:4739,install,install,4739,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"outing/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:10980,install,install,10980,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:9415,Update,Update,9415,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['Update'],['Update']
Deployability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:3808,Update,Update,3808,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Update'],['Update']
Deployability,"ove, the computation of the $G$ matrix (Eq. 7 in [Neese 2009](https://doi.org/10.1016/j.chemphys.2008.10.036)) is performed as $G_{\nu g} = \sum_{\tau} \text{sign}(w_{g}) A_{\nu \tau} (r_{g}) F_{\tau g}$ . In words, the sign of the corresponding grid weights are included in the formation of $G_{\nu g}$, when $A_{\nu \tau}$ and $F_{\tau g}$ are contracted. One other thing comes out as a consequence of this:; - For overlap fitting, the numerical overlap matrix $S_{N}$ (Eq. 13 in [Izsák 2011](https://doi.org/10.1063/1.3646921)) is computed as $S_{N} = X * X_{\text{alt}}^{T}$, where $X_{\kappa g} = \sqrt{|w_{g}|} \kappa(r_{g})$ (the same as the first bullet point in the reformulation above), and $X_{\text{alt},\kappa g} = \text{sign}(w_{g}) \sqrt{|w_{g}|} \kappa(r_{g})$. Essentially, $S_{N}$ now uses two variants of the $X$ matrix in its formulation, one of which folds the grid weight sign into itself. ## User API & Changelog headlines; - [X] COSX can now be used with a wider variety of grids, as a bug preventing COSX to be used with specific grid configurations has been fixed.; ## Dev notes & details; - [X] The COSX implementation has been reformulated to enable calculations with grids containing negative grid weights. ## Questions; - [x] Is the current way of handling computation of the numerical overlap matrix acceptable? Currently, two X matrices are used to form the numerical overlap matrix. One goal of folding the grid weight sign into the formation of G was to prevent the use of multiple X matrices. However, I don't think that can be done here without removing the call to `linalg::doublet` in the `compute_numeric_overlap` function. One could probably do a slightly-modified, manually-implemented matrix multiply with the grid weight folded in, and construct $S_{N}$ with a single $X$ matrix that way. But that comes at the cost of not utilizing BLAS. What does everyone consider preferable?; - [ ] What, exactly, is the best way to test this? I would like to add a test ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2931:2100,configurat,configurations,2100,https://psicode.org,https://github.com/psi4/psi4/pull/2931,1,['configurat'],['configurations']
Deployability,"owername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d\n"", count == 1, i != pshells_ - 1);; std::stringstream error;; error << ""DFHelper: not enough memory for (p shell) AO blocking!""; << "" required memory: "" << constraint * 8 / (1024 * 1024 * 1024.0) << ""[GiB]."";; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1991,release,release,1991,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,"p signal; Image PC Routine Line Source; libgdma.so 00007F6F7C68B10F for__signal_handl Unknown Unknown; libpthread-2.28.s 00007F6F9C906B20 Unknown Unknown Unknown; libc-2.28.so 00007F6F9BDDC37F gsignal Unknown Unknown; libc-2.28.so 00007F6F9BDC6DB5 abort Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B535A Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B53C5 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B5658 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B5A129 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B69438 _ZN3psi4PSIO2rwEm Unknown Unknown; core.cpython-310- 00007F6F88B6B963 _ZN3psi4PSIO5writ Unknown Unknown; core.cpython-310- 00007F6F88B566E9 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6DFBF4 Unknown Unknown Unknown; libpthread-2.28.s 00007F6F9C8FC14A Unknown Unknown Unknown; libc-2.28.so 00007F6F9BEA1DC3 clone Unknown Unknown; /var/spool/slurm/slurmd/job83930/slurm_script: line 27: 2245656 Aborted (core dumped); ```. I used conda to install psi4 in a new environment.; ```; psi4 1.7+6ce35a5 py310h769327c_1 psi4; ```. Below is the full log, which includes the geometry:. <details>. ```. Memory set to 7.451 GiB by Python driver.; Threads set to 4 by Python driver. Scratch directory: /scratch/njzjz/83930/; gradient() will perform analytic gradient computation. *** tstart() called on aerosol-020; *** at Fri May 26 20:10:38 2023. => Loading Basis Set <=. Name: DEF2-TZVPPD; Role: ORBITAL; Keyword: BASIS; atoms 1-33 entry C line 144 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs ; atoms 34-89 entry H line 14 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs ; atoms 90-101 entry N line 181 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs ; atoms 102-106 entry O line 218 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs . => WB97M-D3BJ: Empirical Dispersion <=. Grimme's -D3 (BJ-damping) Dispersion Correction; Gr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:1282,install,install,1282,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['install'],['install']
Deployability,"p.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 01:43PM; Psi4 wall time for execution: 1 day, 3:02:31.40. *** Psi4 exiting successfully. Buy a developer a beer!; ```. Note that the latter output, which is wrong, supposedly finished before the former. I have seen this behavior when running 6-core jobs in various different machines and for various Psi4 versions, including `Psi4 1.2.1 release, Git: Rev {HEAD} 406f4de`, `Psi4 1.3a1.dev315, Git: Rev {HEAD} 28d97e1 dirty`, `Psi4 1.2a1.dev829, Git: Rev {HEAD} 43b5ac2 dirty` and `Psi4 1.2.1 release, Git: Rev {HEAD} 406f4de`. Also, I found this problem for CBS calculations as well as for some MP2/au",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:2765,install,install,2765,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability,"parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one could also just return it to the user as is. Again the idea being that a psi4 user can use adcc implicitly for calculations, without needing to worry that he/she does. > Should adcc be distributed/build with psi4 in the end? (conda, cmake, etc.). Not sure what will work best. We are working on getting adcc distributed via conda ourselves, so I guess one could just pull it from there as part of the usual psi4 installation procedure. If the interfacing is done on the python level as I described above and as I did in the PR so far, this should not introduce big changes. One could even easily make the dependency optional. I am happy to hear other suggestions, too :smile:. Since we have a mandatory binary blob (in the form of the `adccore` library) for the moment, building the code completely as part of the psi4 setup is not possible unfortunately.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:2431,install,installation,2431,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['install'],['installation']
Deployability,patch excited state psivars in addon tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2470:0,patch,patch,0,https://psicode.org,https://github.com/psi4/psi4/pull/2470,1,['patch'],['patch']
Deployability,patch for conda-builds,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1285:0,patch,patch,0,https://psicode.org,https://github.com/psi4/psi4/pull/1285,1,['patch'],['patch']
Deployability,"pe)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:2140,install,install,2140,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"penMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - fo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:7517,release,release,7517,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3124,install,installed,3124,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"pi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/read_options.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_libparallel.cc.o; [100%] Linking CXX executable ../../../bin/psi4; ld: cannot find -lboost_mpi-1_57; [100%] Built target psi4. And there is no binary in the --prefix I have chosen. The libboost_mpi-1_57.a is really absent in the /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:1422,release,release,1422,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,"pickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3458,install,installing,3458,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:118,configurat,configuration,118,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229,1,['configurat'],['configuration']
Deployability,polarization-6-31g-_d_.gbs: Ga-Kr in Psi4 but not EMSL (new basis attributed to 6-31G* EMSL 8/22/17); polarization-6-31g-_d_p_.gbs: Ga-Kr in Psi4 but not EMSL (new basis attributed to 6-31G* EMSL 8/22/17); polarization-6311g-_d_p_.gbs: Iodine basis in EMSL; want to add (EMSL updated 2007?)?; polarization-6311g-_d_p_.gbs: Iodine basis in EMSL; want to add (EMSL updated 2007?)?; polarization-6311g-_2d_2p_.gbs: Fluorine D function 1 changed from 2.396 -> 3.5 (updated 2013); polarization-6311g-_2df_2pd_.gbs: Flurine D function 1 changed from 2.396 -> 3.5 (updated 2013); polarization-6311g-_3df_3pd_.gbs: No unaccounted difference,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1058#issuecomment-401467591:276,update,updated,276,https://psicode.org,https://github.com/psi4/psi4/issues/1058#issuecomment-401467591,4,['update'],['updated']
Deployability,"private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent from my Android (without spellcheck). Please forgive the brevity.; > > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wrote:; > > ; > > > Why don't you keep the sensitive new code in separate branches of your; > > > (private) fork of the psi4public repo and only merge when the paper is; > > > ready? Or only use the private repo for that kind of stuff and push; > > > everything still",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:2172,update,update,2172,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['update'],['update']
Deployability,psi4 fails when conda installed in symlinked directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126:22,install,installed,22,https://psicode.org,https://github.com/psi4/psi4/issues/3126,1,['install'],['installed']
Deployability,psi4 installation failed-Segmentation fault (core dumped),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:5,install,installation,5,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installation']
Deployability,psi4 installation via conda interacts poorly with ambertools>=20 on MacOS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024:5,install,installation,5,https://psicode.org,https://github.com/psi4/psi4/issues/2024,1,['install'],['installation']
Deployability,psi4 installs files into the build directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683:5,install,installs,5,https://psicode.org,https://github.com/psi4/psi4/issues/2683,1,['install'],['installs']
Deployability,"psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10133,install,install,10133,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could w",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1328,release,releases,1328,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['releases']
Deployability,psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:2589,Install,Installing,2589,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3330,Install,Install,3330,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3157,Install,Install,3157,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,psi4so has install rule even when it's not built,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/415:11,install,install,11,https://psicode.org,https://github.com/psi4/psi4/issues/415,1,['install'],['install']
Deployability,psiembed integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1839:9,integrat,integration,9,https://psicode.org,https://github.com/psi4/psi4/issues/1839,1,['integrat'],['integration']
Deployability,psixas integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1837:7,integrat,integration,7,https://psicode.org,https://github.com/psi4/psi4/issues/1837,1,['integrat'],['integration']
Deployability,"ptKing geometry optimization and IRC program. # First Time Contributors; - @raimis - #1399, #1185, #1183, +70 more!; - @obrien951 #1359, #1222, #1130, #1140, #1100, #1097; - @zachglick #1453, #1304, #1291; - @tovrstra #1510, #1506, #1500; - @timostrunk #1133, #1128, #1127; - @mdav2 #1374, #1142; - @chapincavender #1364; - @janisozaur #1321; - @rainli323 #1131; - @yxie326 #1083. # Additional Non-Core Contributors to v1.3. - @JonathonMisiewicz #1517, #1487, #1379, #1424, #1435, #1378, #1352, #1337, #1336, #1289, #1310, #1299, #1214, #1150, #1024, #1139, #1108; - @susilehtola #1475, #1493, #1481, #1479, #1472, #1458, #1460, #1468, #1456, #1452, #1451, #1260; - @PeterKraus #1470, #1350, #1405, #1235, #1303, #1262, #1232, #1138, #1123, #1119, #1109; - @hokru #1320, #1377, #1346, #1300, #1244, #1241; - @alenaizan #1365, #1042, #1294; - @tyzhang1993 #1437; - @tomspur #1257. # Performance Optimizations; - NYI. # Psi Developer Upgrade Guide; - Psi4 now requires C++14 (up from C++11); - The C++ code base was reformatted using clang-format and the provided format file (many PRs). # Developer Interests; - Cleans up the Matrix class for non-totally symmetric irrupts (#1383).; - Psi4 is now C++17 compatible (#1345).; - DFT grid generation is now threaded (#1291).; - `findif` is now ""metadata""-based to allow for greater serialization (#1289).; - Additional documentation and notes on alpha/beta for DFT functionals (#1260).; - `dpd.gbl` has been removed (#1254).; - The CC* modules are moving to a CCWavefunction based solution (#1253).; - CBS has been reworked to be dictionary based to allow for greater flexibility (#1235).; - Updated conversion factors to CODATA 2014 (#1213).; - `pthreads` has been removed from Psi4 (shall not return, #1199).; - Empirical Dispersion has been refactored to a new unified interface (#1151).; - OEProp has been split into many small modules allowing greater flexibility (#1133).; - SCF now throws a SCFConverenceError upon reaching maximum iterations (#113",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:2775,Upgrade,Upgrade,2775,https://psicode.org,https://github.com/psi4/psi4/issues/1406,1,['Upgrade'],['Upgrade']
Deployability,"ptional addons) or micro (no build tools, just L2, g2g, libxc, qcng, scipy, pytest) or several of those choices Docker images? (I have one vote for minimal.); 3. Docker images are hefty (~600MB for the built psi4). Can I just push them to a `latest` tag and overwrite old ones, or does there need to be a history?; 4. For Docker of psi4 itself, I'm only doing linux-64 (https://hub.docker.com/r/psi4/psi4/tags). Since docker is usually run VM-like, is that all developers want, or should I be building containers for other arch? Certainly I have the other-arch conda pkgs available -- it's just a matter of figuring out docker from them.; 5. I can build singularity/apptainer images from the Docker images, but I haven't figured out how to upload them yet. _For devs_, are apptainers wanted, or will docker alone do?; 6. I'll probably revive the `psi4-dev` pkg, just because it is simple and durable. (And it's the easiest way to convey the Intel-atop-GNU flags.) It'll be a `conda install psi4/label/dev::psi4-dev -c conda-forge` access. Thoughts on improving it?; 7. Those `devtools/*/*buildrun*yaml` env specs are semi-auto-generated from the ecosystem GHA. Are they handy enough to maintain and promote, even though they don't come with `cmake` lines?; 8. Any other build tools to support other workflows wanted? It's easier to set them up all at once. ### Psi4 Conda Packages at Present with Channels. Built psi4 packages are slightly off-topic, but I thought this could be a handy reference for the more exotic ones. Note that these don't have as many addons as previous `-c psi4` packages did. See https://github.com/orgs/psi4/projects/2 for the conda-forge progress tracker. * `linux-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (GNU compilers, AM5 L2, MKL, all pythons); * `conda install psi4/label/dev::psi4 -c psi4/label/testing -c conda-forge` (Intel compilers, AM7 L2, MKL, even pythons); * `conda install psi4/label/testing::psi4=1.8a2=py310hfdeccc3_2 libb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:4630,install,install,4630,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['install'],['install']
Deployability,"py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <mo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:9294,install,install,9294,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermionpsi4-0.4-py36h934b37d_0 ...; installing: psi4-rt-1.3.2-py36ha6b60c8_0 ...; if: Expression Syntax.; ERROR: executing post_install.sh failed; [chenh@Pauling programs]$ psi4 -V; Segmentation fault (core dumped); ```; This problem is not a special case, and I have also found that someone has the same problem in other forums. My sy",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:4302,install,installation,4302,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installation']
Deployability,pybind11 2.0.0 update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/557:15,update,update,15,https://psicode.org,https://github.com/psi4/psi4/pull/557,1,['update'],['update']
Deployability,"pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3222,install,install,3222,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"python 3.8, 3.9, & 3.10 all failing. also removed the '-rt'. `; mamba install psi4 psi4 python=3.8 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.8']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:70,install,install,70,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,2,['install'],"['install', 'installable']"
Deployability,"python branch.; - [x] Ambit builds with `ENABLE_ambit` as directed from the `external/upstream/ambit/CM`.; - [x] Ambit _does not_ link into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""./../skeletonambit/pymodule.py"", line 65, in run_skeletonambit; skeletonambit_wfn = psi4.core.plugin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:1209,patch,patch,1209,https://psicode.org,https://github.com/psi4/psi4/pull/593,1,['patch'],['patch']
Deployability,"qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /usr/bin/python3.4 (found version ""3.4.5"") ; -- Found PythonLibs: /usr/lib64/libpython3.4m.so; -- pybind11 v2.0.0; -- Configuring done; -- Generating done; -- Build files have been written to: /usr/qc/psi4.git/objdir/external/upstrea",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:3158,update,update,3158,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,2,"['patch', 'update']","['patch', 'update']"
Deployability,qcengine install fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1582:9,install,install,9,https://psicode.org,https://github.com/psi4/psi4/issues/1582,1,['install'],['install']
Deployability,qcng v0.24.1 update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2691:13,update,update,13,https://psicode.org,https://github.com/psi4/psi4/pull/2691,1,['update'],['update']
Deployability,"quire; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3098,install,installed,3098,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability,"quire; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ python 3.6.9 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ └─ psi4-rt 1.1 would require; │ └─ python 2.7* , which can be installed;; └─ python 3.6** , which can be installed (as previously explained).; `. From `conda install psi4 psi4-rt python=3.6 -c psi4`. not going to post b/c it seems like every package has a conflict",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3495,install,installed,3495,https://psicode.org,https://github.com/psi4/psi4/issues/2912,11,['install'],"['install', 'installed']"
Deployability,"quires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6003,install,installed,6003,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"r occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/drive",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8537,install,install,8537,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"r to start with the conventional; > integrals the df-mp2 code proceeds. However, the gradient is not correct; > because the MO coefficients are from conventional SCF, but it should be; > from DF-SCF. I think in the case df-mp2 gradients, if user set the; > conventional SCF, then we should throw an error. Alternatively we may; > change the reference to DF-SCF and throw a warning for user to explain what; > we did. Both solutions are okay for me.; > ; > DFOCC uses frozen cores properly in energy and gradients. I did not add; > the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients.; > However, OCC does not use frozen cores in the energy and gradients. In case; > of OCC the problem is that you need to define different MO class with; > libtrans, which is not obvious how to do it. I know it is possible now.; > Andy explained it for me. As a result, there is no plan for OCC module.; > However, frozen virtuals will be added to DFOCC. In fact, I am waiting for; > RC1 release, then I will implement add it to Psi4.; > ; > For the final question, your reference gradient is wrong (mp2tot_vals).; > This is a very good example how 3-point numeric gradients are unreliable; > for challenging systems. I reproduce problem with your input. However, if I; > use ""points 5"", all numeric gradient computations give the same result with; > the analytic gradients. I also run the same job with gausssian 09 with; > analytic gradients, which gives the same result with our analytic gradient.; > ; > ## Here is the G09 result:; > ; > Center Atomic Forces (Hartrees/Bohr); > ; > ## Number Number X Y Z; > ; > 1 1 0.000000000 0.000000000 -0.002819339; > 2 9 0.000000000 0.000000000 0.002819339; > ; > ---; > ; > and our analytic gradients:; > ; > -Total gradient:; > Atom X Y Z; > ; > ---; > ; > 1 0.000000000000 0.000000000000 0.002819338251; > 2 0.000000000000 0.000000000000 -0.002819338251; > ; > @loriab https://github.com/loriab; > ; > —; > Reply to this email directly or view it o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192920861:2200,release,release,2200,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192920861,1,['release'],['release']
Deployability,"r with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent from my Android (without spellcheck). Please forgive the brevity.; > > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:2036,release,released,2036,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['release'],['released']
Deployability,r-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcef,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3351,install,installing,3351,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"r-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2334,Install,Installing,2334,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,r/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Tools.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Targets.cmake; [ 69%] Completed 'pybind11_external'; [ 69%] Built target pybind11_external,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3837,Install,Installing,3837,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"r/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:7609,install,install,7609,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"r_, which keeps track of the number of shell quartets computed per SCF iteration. The computed_shells_per_iter_ variable is accessible to the user via Python, and thus can be used to conduct screening tests. In this way, density screening tests can be performed without the need for an ERI object. 2. As a bonus from the changes introduced by this PR, the DirectJK algorithm no longer has a need to print computed shell quartet counts to bench.dat. Bench.dat is used exclusively by the DirectJK object to dump the number of shell quartets computed per SCF iteration somewhere. That data is now accessible to the user in a cleaner fashion - it can be accessed through Python, in a manipulatable format. ## Notes; 1. Note that the changes in this PR have not been applied to the LinK portion of the DirectJK code. This is intentional, as Andy is planning on moving LinK out of DirectJK entirely, and editing the LinK code within DirectJK would interfere with that. Thus, the changes in this branch will be applied to LinK in a later update.; ; ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ X ] Addition of computed_shells_ member to JK object, which keeps track of number of shells computed during the JK build process.; - [ X ] Addition of computed_shells_per_iter_ member to HF wavefunction objects, which keep track of number of shells computed during each SCF iteration. This information can be accessed by the user via Python.; - [ X ] Modification of density screening tests in test_erisieve.py using the above class changes to allow the tests to run without construction of an ERI object. ## Questions; - [ ] Currently, only the density screening tests in test_erisieve.py use the new computed_shells_per_iter_ framework to test screening. Other tests in test_erisieve.py perform their tests using a generated ERI object. Should use of computed_shells_per_iter_ comparisons be applied to other tests in test_erisieve.py, as well?. ## Ch",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2547:2301,update,update,2301,https://psicode.org,https://github.com/psi4/psi4/pull/2547,1,['update'],['update']
Deployability,"ran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL fl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:10394,release,release,10394,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability,raw_input() calls not updated now Python3 is mandatory + other issues with ixyz2database.py script,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1367:22,update,updated,22,https://psicode.org,https://github.com/psi4/psi4/issues/1367,1,['update'],['updated']
Deployability,"rds from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WIIX7F74QLTYP2N5LSUJN43ANCNFSM4UXAU44A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:1708,Patch,Patch,1708,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2996,install,install,2996,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"regarding v2rdm_casscf, I think everything is now compatible with this PR on the C side; the plugin compiles against @robertodr 's fcidump branch. However, I get python errors when running any input file that are unrelated to v2rdm_casscf:. Traceback (most recent call last):; File ""/Users/deprince/software/robertodr/psi4/install/bin/psi4"", line 158, in <module>; import psi4; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/__init__.py"", line 31, in <module>; from psi4.driver.molutil import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/molutil.py"", line 35, in <module>; from psi4.driver.p4util import constants, filter_comments; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/__init__.py"", line 32, in <module>; from .util import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/util.py"", line 39, in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/proc_table.py"", line 35, in <module>; from . import sapt; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 32, in <module>; from psi4.driver import p4util; ImportError: cannot import name p4util",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355307312:323,install,install,323,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355307312,10,['install'],['install']
Deployability,release cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1537:0,release,release,0,https://psicode.org,https://github.com/psi4/psi4/pull/1537,1,['release'],['release']
Deployability,release proc update. drop py36.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2269:0,release,release,0,https://psicode.org,https://github.com/psi4/psi4/pull/2269,2,"['release', 'update']","['release', 'update']"
Deployability,reminder that we need to acquire a qcfractal beta10 and release the pin to it. @bennybp,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2939:56,release,release,56,https://psicode.org,https://github.com/psi4/psi4/issues/2939,1,['release'],['release']
Deployability,"resumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f37",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1361,install,install,1361,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,2,['install'],['install']
Deployability,"rge; libnghttp2 1.47.0 hff17c54_1 conda-forge; libnsl 2.0.0 h7f98852_0 conda-forge; libsanitizer 12.2.0 h46fd767_19 conda-forge; libsqlite 3.39.4 h753d276_0 conda-forge; libssh2 1.10.0 hf14f497_3 conda-forge; libstdcxx-devel_linux-64 12.2.0 h3b97bd3_19 conda-forge; libstdcxx-ng 12.2.0 h46fd767_19 conda-forge; libuuid 2.32.1 h7f98852_1000 conda-forge; libuv 1.44.2 h166bdaf_0 conda-forge; libzlib 1.2.13 h166bdaf_4 conda-forge; llvm-openmp 14.0.4 he0ac6c6_0 conda-forge; mkl 2022.1.0 h84fe81f_915 conda-forge; mkl-devel 2022.1.0 ha770c72_916 conda-forge; mkl-include 2022.1.0 h84fe81f_915 conda-forge; ncurses 6.3 h27087fc_1 conda-forge; numpy 1.23.4 pypi_0 pypi; openssl 3.0.7 h166bdaf_0 conda-forge; ordered-set 4.1.0 pyhd8ed1ab_0 conda-forge; pint 0.20.1 pyhd8ed1ab_0 conda-forge; pip 22.3 pyhd8ed1ab_0 conda-forge; pybind11 2.10.1 pypi_0 pypi; pybind11-global 2.10.1 pypi_0 pypi; pydantic 1.10.2 pypi_0 pypi; python 3.11.0 ha86cf86_0_cpython conda-forge; python_abi 3.11 2_cp311 conda-forge; readline 8.1.2 h0f457ee_0 conda-forge; rhash 1.4.3 h166bdaf_0 conda-forge; setuptools 65.5.0 pyhd8ed1ab_0 conda-forge; sysroot_linux-64 2.12 he073ed8_15 conda-forge; tbb 2021.6.0 h924138e_1 conda-forge; tk 8.6.12 h27826a3_0 conda-forge; typing-extensions 4.4.0 hd8ed1ab_0 conda-forge; typing_extensions 4.4.0 pyha770c72_0 conda-forge; tzdata 2022f h191b570_0 conda-forge; wheel 0.37.1 pyhd8ed1ab_0 conda-forge; xz 5.2.6 h166bdaf_0 conda-forge; zlib 1.2.13 h166bdaf_4 conda-forge; zstd 1.5.2 h6239696_4 conda-forge; ```. Could it be this library file name issue you were hitting in Fedora?. Note that I let the environment use latest pint (v0.20.1) and internal build qcelemental (v0.4.0). In that combination, certain tests like `tu4-h2o-freq/input.dat` will give `AttributeError: module 'pint' has no attribute 'quantity'`. That's a pretty easy patch to qcel (I just minted it in v0.25.1) or you can constrain pint<0.20 . If you hit this, lmk what your constraints are, and I can suggest a combination.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719:5372,patch,patch,5372,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719,1,['patch'],['patch']
Deployability,"rianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:9514,install,install,9514,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,"rk with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords were a good idea in that they allow different defaults for different levels of theory and are fairly easy to guess and uniform to use. One flaw is that you don't know programmatically what controls what method -- it's all hard-coded, sometimes in more than one place, in proc.py . Now there's a method:type association dict in procrouting/proc_data.py . There's also a little function there serving up the info, so you can get out the keyword and current value with `method_algorithm_type(mtd).keyword` and `method_algorithm_type(mtd).now`, respectively. This helps clean up proc.py and allows the controlling keyword to be linked for each method in the generated tables.; - [x] in proc.py, ; - [x] select_* functions have been made more boilerplate and elsewhere-mentioned DETCI and MRCC changes integrated in.; - [x] CCD is given select_ccd* functions to raise a sensible error message since the default (cc_type=CONV) isn't implemented. ; - [x] CC2 and CC3 are given select_* functions since now CCENERGY and MRCC cover them. This led to controversy (unresolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error mess",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:8084,integrat,integrated,8084,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['integrat'],['integrated']
Deployability,"roduced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmake --build <build_dir> -j<N>`. definitely do this step in parallel. ### Note on AM=7; Regular AM is 5. If you only need 7, you can use this tarball rather than generating your own with `--target export` in L2 repo: https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2_rev1.tgz Start above directions at ""Now back at your psi4 clone..."". Still GCC only, not Intel compilers. ### Exhibit A; ```; cmake -S. -Bbuild \; -G Ninja \; -D LIBINT_BUILD_LIBRARY_AS_SUBPROJECT=OFF \; -D CMAKE_INSTALL_PREFIX=/path/to/l2/install \; -D REQUIRE_CXX_API=ON \; -D REQUIRE_CXX_API_COMPILED=OFF \; -D BUILD_TESTING=ON \; -D CMAKE_PREFIX_PATH=""/psi/toolchainconda/envs/singleboost;/psi/toolchainconda/envs/singlegmp;/psi/toolchainconda/envs/singleeigen"" \; -D ENABLE_MPFR=OFF \; -D LIBINT_LOCAL_EIGEN3_INSTALL=OFF \; -D CMAKE_CXX_COMPILER=$CXX \; -D CMAKE_C_COMPILER=$CC \; -D ENABLE_FORTRAN=OFF \; -D LIBINT2_SHGAUSS_ORDERING=standard \; -D ERI3_PURE_SH=OFF \; -D ERI2_PURE_SH=OFF \; -D ENABLE_ERI=2 \; -D ENABLE_ERI3=2 \; -D ENABLE_ERI2=2 \; -D ENABLE_ONEBODY=2 \; -D ENABLE_G12=1 \; -D DISABLE_ONEBODY_PROPERTY_DERIVS=ON \; -D MULTIPOLE_MAX_ORDER=4 \; -D WITH_G12_MAX_AM=3 \; -D WITH_ERI_MAX_AM=""10;3;2"" \; -D WITH_ERI3_MAX_AM=""10;4;3"" \; -D WITH_ERI2_MAX_AM=""10;4;3"" \; -D WITH_MAX_AM=""10;4;3""; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:2709,install,install,2709,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['install'],['install']
Deployability,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/425:0,rollback,rollback,0,https://psicode.org,https://github.com/psi4/psi4/pull/425,1,['rollback'],['rollback']
Deployability,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3177:1439,release,release,1439,https://psicode.org,https://github.com/psi4/psi4/pull/3177,1,['release'],['release']
Deployability,rw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3538,Install,Installing,3538,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"ry installers](https://psicode.netlify.com/installs/v14/); * Span: [437 PRs](https://github.com/psi4/psi4/milestone/5?closed=1), roughly 1559-2264. ## Obtaining; - Binary installers: see link above; - Python Anaconda: `conda install psi4 -c psi4`.; - Windows conda packages available (#1560); - Dropped dependencies: deepdiff, Libint1; - Added dependencies: QCEngine, Libint2. ## New Methods; - Add ability to call Axilrod-Teller-Muto (ATM) 3-body dispersion correction from Grimme's DFTD3. Note that this is for dftd3 call, not energy call (#1491); - MP2D energies and gradients with help of external program (#1661); - SCAN functionals – SCAN0, revSCAN0, SCAN, revSCAN, BMK, revM06-L (#1597); - hybrid LDA functionals – CAM-LDA0, LDA0 (when Libxc puts them in a release) (#1645); - FISAPT-D (#1670); - Superposition of atomic potentials (SAP) guess (#1665, #1700); - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349, #1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) . ## New External Libraries; - [QCEngine](https://github.com/MolSSI/QCEngine) - A QCSchema runner is now a required dependency since we use it for several interfaces (#1577); - DFTD3; - MP2D; - gCP; - CPPE - Polarizable embedding with environment modeled by multi-center multipole expansion with dipole-dipole polarizabilities at the expansion sites (#1401) ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Int",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:964,release,release,964,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['release'],['release']
Deployability,"s = psi4.core.MintsHelper(wfn.basisset()). test_one_body_ao_computer = mints.ao_kinetic(conv, aux); test_ao_helper = mints.ao_eri(conv, aux, conv, aux); test_ao_shell_getter = mints.ao_eri_shell(5, 3, 2, 4); test_ao_3coverlap_helper = mints.ao_3coverlap(conv, conv, aux); test_mo_helper = mints.mo_eri(Co, Cv, Co, Cv); test_mo_spin_helper = mints.mo_spin_eri(Co, Cv); psi4.core.timer_off(""Thread 8""). psi4.core.timer_on(""Thread 1""); psi4.set_num_threads(1). mints = psi4.core.MintsHelper(wfn.basisset()). ref_one_body_ao_computer = mints.ao_kinetic(conv, aux); ref_ao_helper = mints.ao_eri(conv, aux, conv, aux); ref_ao_shell_getter = mints.ao_eri_shell(5, 3, 2, 4); ref_ao_3coverlap_helper = mints.ao_3coverlap(conv, conv, aux); ref_mo_helper = mints.mo_eri(Co, Cv, Co, Cv); ref_mo_spin_helper = mints.mo_spin_eri(Co, Cv); psi4.core.timer_off(""Thread 1""); ```. Outputs:; ```; Test 1: True; Test 2: True; Test 3: True; Test 4: True; Test 5: True; Test 6: True; User System Wall Calls; Thread 8 : 164.900u 1.467s 15.559w 1 calls; Thread 1 : 150.083u 1.283s 89.410w 1 calls; ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Speeds up computation of integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds a lot of `omp parallel for`; - [X] Makes input require `std::vector<std::shared_ptr<TwoBodyAOInt>>`; - [X] Rearranges where 3coverlap is so that it isn't sandwiched btwn the two body ints. ## Checklist; - [X] No new tests; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [X] Passed both pytest and ctest ""quick"" tests. ## Status; - [X] Ready for review; - [X] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3128:1469,release,release,1469,https://psicode.org,https://github.com/psi4/psi4/pull/3128,1,['release'],['release']
Deployability,"s ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; i",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1331,install,installing,1331,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"s GCC and therefore GCC 4.9+.; - The fundamental restructuring of Psi4 is complete. There are no large changes currently being considered. ; - Boost has been completely removed from Psi4 in favor of using C++ 11.; - Boost::python has been replaced with PyBind11. Note that PyBind11 adheres more to C-style than Python-style when it comes to references and pointer counting. As such, several functions required deep changes as internal references from C-side are no longer manipulatable Python-side.; - Python functions are no longer called from C++, several functions have had to be reworked.; - BasisSets are now exclusively built in Python and passed into C side by the `Wavefunction` `get_basisset` and `set_basisset` calls.; - The `Wavefunction` class now has internal `variables_` and `arrays_` std::maps for double and SharedMatrix types, respectively. These should be used inside a computation to enable greater localization of variables.; - Numpy integration has been expanded to allow Matrices and Vector to be converted to NumPy arrays and back. Please see `tests/numpy-array-interface` for a full suite of examples.; - The GitHub history has been rewritten. All forks built prior to 10/19/2016 are no longer valid. Please refork before working on Psi4. ; - Plugins are now based off a cmake system and the interface has received a substantial renovation. ; - Python API should not be considered stable. # Miscellaneous; - The sto-3g and 6-31G fitting basis sets used to default to cc-pVDZ-RI for both JKFIT and RI fit roles. For these basis sets the default is now def2-SVP-JKFIT and def2-SVP-RI for JKFIT and RI fit roles, respectively. ; - The MCSCF module now accepts the `MCSCF_ROTATE` command to rotate orbitals from the `SCF` guess.; - Environment variable `PSI4DATADIR` is now defunct. `PSIDATADIR`, to point to useful text files in `/share/psi4/`, remains but should not need to be used unless you want to specify one _not_ adjacent to the built `psi4/core.so` library. For running",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/485:2274,integrat,integration,2274,https://psicode.org,https://github.com/psi4/psi4/issues/485,1,['integrat'],['integration']
Deployability,s README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3250,Patch,Patching,3250,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Patch'],['Patching']
Deployability,"s corresponds to L2 at https://github.com/evaleev/libint/pull/233 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switches psi4 to use a Libint2 forked from upstream in 2022, not in 2019; - [x] changes a couple cmake knobs and changes the required components to EFV's preferred syntax (`g5` -> `eri_c4_d1_l5`); - [x] avoided grid points discrepancies that I had hit by implementing Holger's suggestion.; - [x] I and others have reported needing `pybind11::headers` in extra places, so adding those; - [x] The defines `INT_NCART` and `INT_CARTINDEX` in psi https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L46-L64 are also in L2. They used to be `#define` in the current/2019 fork of L2, but now in L2 master, it’s an inline function. To avoid errors like the below, they're namespaced and inlined here now, too. ```; < namespace libint2 {; < inline int INT_NCART(int am) { return ((am + 2) * (am + 1)) >> 1; }; < }; < LIBINT_DEPRECATED(""please use libint2::INT_NCART instead""); < inline int INT_NCART(int am) { return libint2::INT_NCART(am); }; ---; > #define INT_NCART(am) ((((am)+2)*((am)+1))>>1); ```; With that situation (define in psi and inlined in L2), I get lots of; ```; In file included from /psi/gits/hrw-pybind/psi4/src/psi4/libmints/integral.cc:28:; /psi/gits/libint2-efv/install-p01/include/libint2/cgshell_ordering.h:104:12: error: expected unqualified-id before 'int'; 104 | inline int INT_CARTINDEX(unsigned int am, int i, int j) {; | ^~~~~~~~~~~~~; ```; I can fix the problem by renaming in psi to `INT_NCART_PSI` and `INT_CARTINDEX_PSI`. What's a cleaner solution than renaming? Should we inline? Or add to the `psi {}` namespace?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2413:1455,install,install-,1455,https://psicode.org,https://github.com/psi4/psi4/pull/2413,1,['install'],['install-']
Deployability,"s have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference and dispersion depends a lot on computing the psi4 (and other) versions. Hence the ""pull tags"" message. I can believe there's a way that communication breaks down. I'd suggest you compare commands and cat-ed files and see where the discrepancy in workflow/environment arises.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:4119,release,release,4119,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,1,['release'],['release']
Deployability,"s out of memory for AO blocking. The result of the print statement in second snippet is `AAAA 1: 14176380 > 14074472 || 3 == 65`. Should we put padding back or go another route?. ```; ==> Integral Setup <==. DFHelper Memory: AOs need 0.104621 GiB; user supplied 0.104863 GiB. 14042044 14074472; Using in-core AOs. Traceback (most recent call last):; File ""stage/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 1113, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1189,release,release,1189,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,"s that I think I've traced back to some rather mystifying bits of code in cubature.cc... (h/t for @rmcgibbo for lots of help here). The problems begin here:; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L5106. (Don't mind the mismatch between line numbers I quote and line numbers in my gdb outputs -- there's some edits in a local version of psi4 we're using but I pinkie-promise they're not at all related to the code in-question! ...but to be very sure, I'll check that the same things happen with a truly vanilla build when I get home and have access to my ""normal""/vanilla psi4 build.). Which is where my runs always hang (on the [] access, specifically) when they do. If I pop open gdb, attach, and check what lebedev_mapping_ looks like, I see something somewhat disturbing:. ```; #4 psi::SphericalGrid::build (scheme="""", npoints=1852534357, points=0x1b2) at /tmp/garden-install.1c2be761ae20/psi4-1.6.1-desres02-c7/psi4/src/psi4/libfock/cubature.cc:5142; 5142 /tmp/garden-install.1c2be761ae20/psi4-1.6.1-desres02-c7/psi4/src/psi4/libfock/cubature.cc: No such file or directory.; (gdb) print lebedev_mapping_; $5 = std::map with 6 elements = {; [26] = 0,; [26] = 0,; [26] = 0,; [26] = 0,; [26] = 0,; [26] = 0; }; ```. Which is obviously not correct in two ways:; 1. There shouldn't be multiple entries for 26; 2. The entry for 26 should be 3. The threads are all deadlocking on the `[]` access, probably because multiple threads all tried to access an _unset_ entry of 26, wrote 0 to it in the process, and ran into each other. From what I can find `[]` isn't thread-safe (because of situations like this), and `.at()` should be used instead. Since `lebedev_mapping_` is a static member of `SphericalGrid`, all threads within their nice shiny `new SphericalGrid()`s inside `SphericalGrid::build` are still accessing the same global map, and mayhem is happening in the process. ...but the more disturbing problem, IMO, is that `lebedev_mapping_` appears uninitializ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735:1078,install,install,1078,https://psicode.org,https://github.com/psi4/psi4/issues/2735,1,['install'],['install']
Deployability,"s/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/dri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8361,install,install,8361,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,s/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Too,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3635,Install,Installing,3635,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"s?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH` has to be hinted (`find_package(gdma CONFIG REQUIRED HINTS ${CMAKE_PREFIX_PATH}/gdma)`) and the current way I've done can't be robust (think ;-lists). I can understand your wanting to separate out extproj() installations as not-quite-up-to-snuff, but the extra hinting level is annoying, so how about keeping `externals/` (controlled by a keyword maybe; `INSTALL_EXTPROJ_SEPARATE`) and dropping the extra namespacing level. So a default installation looks like below. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - bin/; - chemps2; - lib/; - libchemps2.a; - libgdma.a; - libint.a; - libderiv.a; - libdkh.a; - share/; - cmake/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That way, can have `externals/` in `CMAKE_PREFIX_PATH` and all the configs can be detected. In the `INSTALL_EXTPROJ_SEPARATE`, `externals/` is missing and the external/bin-s join the main bin, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:5495,install,installations,5495,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,2,['install'],"['installation', 'installations']"
Deployability,"said functions but keeps them usable. Call sites within Psi4 are however converted to use non-deprecated overloads, so after 1.7 is out, completing the removal should just be a simple deletion of the deprecated overloads. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, int nMatz = 1)` is now using the `diagonalize_order` enum, like the other overloads: `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)`. But since `ascending = 1`, this should not cause disruptions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `PSI_DEPRECATED` has been added to the three functions mentioned _vide supra_.; - [x] Both `Matrix::diagonalize(Matrix&, Vector&, int)` and `Matrix::diagonalize(Matrix*, Vector*, diagonalize_order)` used to call `sq_rsp`, now only `Matrix::diagonalize(Matrix&, Vector&, diagonalize_order)` calls it.; - [x] All other overloads are now calling `Matrix::diagonalize(Matrix&, Vector&, diagonalize_order",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2738:1465,release,release,1465,https://psicode.org,https://github.com/psi4/psi4/pull/2738,1,['release'],['release']
Deployability,samples updates for v1.7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2820:8,update,updates,8,https://psicode.org,https://github.com/psi4/psi4/pull/2820,1,['update'],['updates']
Deployability,"sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3656,Release,Release,3656,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,scipy and python updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2455:17,update,updates,17,https://psicode.org,https://github.com/psi4/psi4/pull/2455,1,['update'],['updates']
Deployability,segmentation fault of computing eri with updated version of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2542:41,update,updated,41,https://psicode.org,https://github.com/psi4/psi4/issues/2542,1,['update'],['updated']
Deployability,"ser input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:1897,upgrade,upgrades,1897,https://psicode.org,https://github.com/psi4/psi4/issues/367,1,['upgrade'],['upgrades']
Deployability,ser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Tools.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3737,Install,Installing,3737,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"server cannot be connected to the network, so I downloaded Psi4conda-1.3.2-py36-Linux-x86_64.sh from the pis4 official website to install it:; ```; [chenh@Pauling programs]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; ins",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1006,install,installing,1006,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"sform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!. [CMakeError.log](https://github.com/psi4/psi4/files/1515094/CMakeError.log); [CMakeOutput.log](https://github.com/psi4/psi4/files/1515095/CMakeOutput.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:2067,update,updated,2067,https://psicode.org,https://github.com/psi4/psi4/issues/871,1,['update'],['updated']
Deployability,"sh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is untuned for dertype or E_/D_/R_CONVERGENCE.; * refuted first two thirds of a prominent footnote: `DFT gradients only implemented for SCF type DF. LRC-DFT gradients not implemented yet. DH-DFT gradients not implemented.`; - [x] upgraded stdsuite runner to catch up with qcdb and qcengine last year by (1) implementing per-dertype and abs/rel comparison checks (nothing is actually loosened) and (2) dropping a dict summary of each test to a record file.; - [x] arranged for available `td-{dft}` calls to show up in the energy table, https://psicode.org/psi4manual/master/energy.html; - [x] fixed `energy(""psimrcc_scf"")` to use regular SCF as ref for PSIMRCC and added a test; - [x] rehabilitated `energy(""qchf"")` (which never had its initialism expanded in the whole of the codebase, btw) so it runs. added a test. it probably ought to be better integrated with regular SCF module. Regular SCF has a qchf option that is unused.; - [x] adjusted some qcvars in FNOCC to collect more components from cepa-like methods and to collect different perturbative triples for qcisd.; - [x] collected qcvars correctly in DFOCC for CCD and QCHF. (It was harvesting the CCD method that tipped me into the rabbit-hole that became this PR.). - [x] TODO `pytest -m quick` is still friendly to run (CI finished in reasonable time), but the additions to stdsuite have make ordinary full pytests expensive. I need to manipulate default marks so folks don't inadvertently start hours of tests. `pytest -v ../tests/pytests/test_standard_suite.py -m ""not noci"" -n auto --durations 100 --durations-min 60.0` runs in 25 minutes on a 20-core machine with no individual test over 4m. That's not reasonable for a laptop. Blame the slow-to-converge oo methods, and it's going to get worse with occd and friends.; - [ ] TODO https://github.com/MolSSI/QCEngine/pull/376 and a new",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:11957,integrat,integrated,11957,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['integrat'],['integrated']
Deployability,shields.io update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1121:11,update,update,11,https://psicode.org,https://github.com/psi4/psi4/pull/1121,1,['update'],['update']
Deployability,"si4-config` script to the installation, final contents (for the binary) below. Binary nightly build is off for the moment, because I'm working on it for other reasons, but you can see if something like the below is what you'd like. I'm concerned that it's got a lot of full paths and binary-specific (static) flags and libraries, but perhaps it can be made useful with some modifications. ``` py; #!/usr/bin/env python; # vim:ft=python. import sys; from collections import OrderedDict. def main(argv):; info = OrderedDict(); info['--cc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icc'; info['--cxx'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc' # aka PLUGIN_CXX; info['--fc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/ifort'; info['--version'] = psiver; info['--githash'] = githash; if 'ON' == 'ON':; info['--prefix'] = '/opt/anaconda1anaconda2anaconda3'; else:; info['--prefix'] = '/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl'; info['--top-level-psi4-dir'] = '/scratch/cdsgroup/conda-builds/work'; info['--max-am-eri'] = '4'; info['--python-version'] = '2.7'; info['--has-pcmsolver'] = 'ON'; info['--has-chemps2'] = 'ON'; info['--includes'] = '-I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include' # aka PLUGIN_INCLUDES; info['--defines'] = '-DHAVE_PCMSOLVER -DHAVE_DKH -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172395303:1178,install,install,1178,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172395303,1,['install'],['install']
Deployability,"si4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:3418,install,install,3418,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"si4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <mo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:5526,install,install,5526,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,si4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4;,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:2117,Install,Installing,2117,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability,si4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h. (and on and on and on),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:2840,Install,Installing,2840,https://psicode.org,https://github.com/psi4/psi4/issues/460,8,['Install'],['Installing']
Deployability,"si4/pull/2454/files#diff-93c9a8823b9fa2f85a114c39cd0d17d6c66e4cb93aa00189785ff8040d3169b3). ## Todos. - CI; - [x] read [.github/workflows/README.md](https://github.com/psi4/psi4/pull/2454/files#diff-636942e0afa55e1aea027fb857aa2c6046858fb317c0b9a4f12ff3ca17e64ffb); - [x] current readings are below (fail/pass/skip/uncollected/xfail/xpass/warnings) for `pytest -m ""addon and not long""`; - L: -/244/ 10/3229/4/4/303; - M: -/229/ 25/3229/6/2/304; - W: -/144/112/3229/2/4/303; - skipped on Linux are things like gpu_dfcc (needs gpus), mrcc (proprietary), cct3 (no package), fock-ci (apparently I packaged the wrong thing); - [ ] there's an unresolved issue on macOS where with Py39 adcc shows pulled from pypi but it tests fine. with Py310, adcc and others pulled from pypi and it doesn't get found for testing. leaving at Py39 for now, but mysterious; - [ ] I haven't removed all the addons from the Azure pipelines yet but I can if everyone comfortable. - Testing Strategy; - [x] `ctest` is familiar, easy to read, and doesn't require configuration. on the other hand, it can't test installations, it can't do parameterizations, and by passing through TestingMacros and runtest.py, you can't always pass environment info into it. Don't worry, it's staying exactly as it is. I've added a single short file to several ctest directories ...; - [x] moved `setup.cfg` to `pytest.ini` and install it. only pytest was using the setup.cfg file anyways. all labels (things you can `pytest -m quick` akin to `ctest -L quick`) are stored here instead of duplicated btwn setup.cfg and conftest.py. The GHA will complain if you hit unregistered label.; - [x] changed the pytest import_mode from default to ""importlib"". this means (1) we don't need to have empty `__init__.py` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking gen",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:2526,configurat,configuration,2526,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['configurat'],['configuration']
Deployability,si4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6690,Install,Install,6690,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"si4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; inst",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1250,install,installing,1250,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4884,Install,Install,4884,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4711,Install,Install,4711,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"side libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356840364:1257,Release,Release,1257,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364,2,['Release'],['Release']
Deployability,"sirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/pr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2209,install,install,2209,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,sixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Instal,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5331,Install,Install,5331,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,sorry i'm new to this and i've been having trouble with installing and running psi4 on Windows,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175694537:56,install,installing,56,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175694537,1,['install'],['installing']
Deployability,"sort will use 2.02 mb. Number of (ab|cd) temporary files: 2; Number of (ab|ci) temporary files: 3; Starting temporary file number: 270. Initial sort........done. Sort (IJ|KL)........done.; Sort (IJ|KA) 1/2....done.; Sort (IJ|KA) 2/2....done.; Sort (IA|JB)........done.; Sort (IJ|AB)........done.; Sort (IA|BC) 1/3....done.; Sort (IA|BC) 2/3....done.; Sort (IA|BC) 3/3....done.; Sort (AB|CD) 1/2....done.; Sort (AB|CD) 2/2....done. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.01 seconds = 0.00 minutes; 	system time = 0.03 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.46 seconds = 0.01 minutes; 	system time = 0.09 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:9940,Configurat,Configuration,9940,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Configurat'],['Configuration']
Deployability,"spect CMake variables (library, libraries, include_dir, include_dirs) (see below) but also; - manages requesting static shared, e.g., `find_package(gmda CONFIG REQUIRED COMPONENTS shared)`; - manages version requests; - exports a target `gdma::gdma` that has all its location, includes, `-DUSING_gdma` compiler definition, properties attached.; - so, after `find_package(gdma CONFIG REQUIRED)`, you don't have to add a library or use the usual suspects. Instead, just attach as needed (though I still think the second one should be simpler); - `target_link_libraries(psi4_exe PUBLIC gdma::gdma)`; - `target_compile_definitions(gdma_interface PRIVATE $<TARGET_PROPERTY:gdma::gdma,INTERFACE_COMPILE_DEFINITIONS>)`. ```; gdma_FOUND : 1; gdma_VERSION : 2.2.06; gdma_INCLUDE_DIRS : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_INCLUDE_DIR : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_LIBRARIES : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; gdma_LIBRARY : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; ======================== gdma::gdma ========================; tgt='gdma::gdma' prop='IMPORTED'; value='TRUE'; defined='0'; set='1'; gt='gdma::gdma' prop='INTERFACE_COMPILE_DEFINITIONS'; value='USING_gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='INTERFACE_INCLUDE_DIRECTORIES'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include/GDMA'; defined='0'; set='1'; tgt='gdma::gdma' prop='LOCATION'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cds",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:1558,install,install-,1558,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,3,['install'],['install-']
Deployability,sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for ins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3015,install,installing,3015,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"ss acts the same way as a normal `Eigen::Matrix` object, but uses an external array as its data buffer rather than an internal data buffer. The `eigen_map()` and `eigen_maps()` functions, then, return Eigen matrix-like objects that directly link with the Psi4 matrix data buffer of the Psi4 matrix for which the function was called. This provides an efficient fashion by which to utilize Psi4 matrices in contexts which require Eigen constructs, with no data deepcopying or Eigen-to-Psi4 back-conversions required. There is a key difference between the two functions. `eigen_map()` assumes that the matrix has a single irrep, and returns a single `Eigen::Map` object. `eigen_maps()` , on the other hand, is used for matrices with multiple irreps, and returns a `std::vector` of `Eigen::Map` objects, each `Map` in the `vector` corresponding to one irrep of the Psi4 matrix. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds two new functions, `eigen_map()` and `eigen_maps()`, usable in Psi4 plugins and downstream programs, that return a formulation of the calling `Psi::Matrix` object, that is usable in contexts where `Eigen::Matrix` objects are required/desired. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds two new member functions to `Psi4::Matrix`, `eigen_map()` and `eigen_maps()`, that return `Eigen::Map` representations of the Psi4 matrix object. ## Questions; - [X] N/A. ## Notes; - [X] I did look into forward declaring the necessary Eigen classes, but forward declaring `Eigen::Map` turns out to be a bit ugly, as it is a class template that, to forward declare, ends up requiring forward declarations for other Eigen classes and enums (such as `Stride` and `",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3143:1507,release,release,1507,https://psicode.org,https://github.com/psi4/psi4/pull/3143,1,['release'],['release']
Deployability,"st #511: dftd3-grad ....................... Passed 11.33 sec; Start 512: dftd3-psithon2; 3/5 Test #512: dftd3-psithon2 ................... Passed 13.39 sec; Start 513: dftd3-version; 4/5 Test #513: dftd3-version .................... Passed 27.06 sec; Start 514: dftd3-nbody-cp-gradient; 5/5 Test #514: dftd3-nbody-cp-gradient .......... Passed 33.83 sec. 100% tests passed, 0 tests failed out of 5; ```; version control files have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:3194,release,release,3194,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,1,['release'],['release']
Deployability,"st successfully, using the modified conda recipe to build the static libs, but only if the hombrew boost is unlinked at setup, _and_ compile time.. . If the homebrew boost is linked at the time I run the `setup` script I will end up with the same issue where the local (boost 1.59.0) headers are in the boost inc paths, but the homebrew (1.60.0) libraries end up in the boost lib paths. . If hombrew boost is unlinked at the time I run the `setup` script I will see both the include and library paths are set to the local boost install in the cmake output. However, if homebrew boost is linked when I run `make` I will get an error in the linking step. I suspect that the directory where hombrew adds the links to boost (`/usr/local/lib`) are passed as a linker argument by cmake, either by default, or because something else is installed there. Thus, if those links are present I will get the characteristic boost 1.60.0 linking errors. Hombrew installs boost-python as a separate package so to properly remove all of the links `brew unlink boost boost-python` . Interestingly I have a similar setup on a laptop running ArchLinux 4.4.5 where boost 1.60.0 was installed globally using `pacman` and I used the conda recipie to install boost 1.59.0 in `$CONDA_ENV_PATH`. If the conda virtual environment is activated and I use the `setup` args to direct cmake to boost 1.59.0 installed there I have no problems. The correct version is always found, even if I try to `make` with the conda virtual environment deactivated the cmake paths still point to the installation I want even though those paths aren't in my environment, and the build is successful. . I don't know If I would mark this as resolved, but it is at least understood to where it is predictable. . For anyone who has run into a similar problem:. If you are using a compatible version of boost installed manually on osx and your build fails to link, even if cmake reported the compatible version of boost was detected it may have detected",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313#issuecomment-198164795:994,install,installs,994,https://psicode.org,https://github.com/psi4/psi4/issues/313#issuecomment-198164795,1,['install'],['installs']
Deployability,"st uses Accelerate libs for Mac, again just fine; * said scheme can find ACML after heavy hinting; * there is a FindLapack CMake module, but either we haven't tried hard enough or it can't find ACML. It also will only find shared MKL libs. #### Complications and Bandaids; * conda pkg building needs _static_ mkl libs back from math detection (except for a couple). We've [patched this within the Bast math detection](https://github.com/psi4/psi4/blob/master/cmake/math/MathLibsFunctions.cmake#L59-L73) if triggered by a cmake var.; * MKL in general needs `-Wl,--start-group` and `-Wl,--end-group` passed to the linker around the math libs to resolve circular dependencies. Supposedly this can be conveyed to cmake directly with https://cmake.org/cmake/help/v3.0/prop_tgt/LINK_INTERFACE_MULTIPLICITY.html . Problem with the start/end-group is that cmake will optimize them out of position if more than one set are included in a link line formed from cmake vars. We patched this in Psi4 by [combining blas and lapack targets](https://github.com/psi4/psi4/blob/master/cmake/math/ConfigMath.cmake#L111) so that one set can sandwich both. Supposedly if these come into the link line through a target rather than a cmake var, then cmake won't mess with them.; * Even though psi4 builds and links fine, we're having to advise more and more people to LD_PRELOAD various mkl libraries or mkl_rt.so. part of the complication could be conda pkgs (even numpy) that are already in env and complicating the link loader's tasks. But we really shouldn't be telling ppl about preloading, which is bad practice for non-dire situations. @ryanmrichard [put in something](https://github.com/psi4/psi4/pull/513/files#diff-bb0d8c2ec987bfc58b4a943e453ea132L147) to preferentially detect the runtime lib as a bandaid to this.; * People for whom Bast math detection works fine but cmake FindLapack doesn't (namely, @psi-rking and [this fellow](http://forum.psicode.org/t/problem-with-building-from-source-according-to-cmakelis",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/537:1547,patch,patched,1547,https://psicode.org,https://github.com/psi4/psi4/issues/537,1,['patch'],['patched']
Deployability,stall package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Inst,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15637,Install,Install,15637,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"stalled;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/no",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3022,install,installed,3022,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,stalling: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2634,install,installing,2634,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"stdlib, third_party, and first_party blocks and then alphabetizes the imports within. It also effectively tests the fragility of the import structure by jumbling them all into alphabetical order. Attempts in past years to run isort led to circular imports and a retreat. This time I was able to fix the single one that came about. Third pass is that I ran `autoflake` on the driver to remove unused stdlib imports. It also removed some `pass` on empty fns that weren't needed because the docstring suffices for the syntax. ## User notes; - [x] the import structure has changed. you might need to add standard library imports to your input files if you use them (e.g., `import math` before `math.pi`) that previously were preloaded by psi4. ## Dev notes & details; - [x] switched import style to relative imports, ran isort, ran autoflake; - [x] actual material changes:; * stop importing `molutil` into `sapt_proc`. this is the main one that allows killing off the embarrassing `temp_circular_import_blocker` fn. https://github.com/psi4/psi4/compare/master...loriab:psi4:import_slayer?expand=1#diff-f3e93ffa6125dd1f79abad7630bbf259bb1daeee89e983d2889b68af6038875aL35; * delay loading fisapt_proc until runtime in sapt_util. this releases the main circular import in procrouting. https://github.com/psi4/psi4/compare/master...loriab:psi4:import_slayer?expand=1#diff-b3bc4df41c2c04c815d7a8a9b374c88759487db4a68e9dc962785dae8cb4b73cR268; * delay loading driver_findif in empirical_dispersion. https://github.com/psi4/psi4/compare/master...loriab:psi4:import_slayer?expand=1#diff-6c949ad06bfcc0f8d646a54c79a427c47e008cbdae82ca148b0f0af1e1319a63R379; * kill off circular_import blocker from python_helpers and molutil https://github.com/psi4/psi4/compare/master...loriab:psi4:import_slayer?expand=1#diff-f1bd68ebb5a84a2a1bfea1cce073adda3b39a3146012026cb7841280ef8ca25dL658. ## Checklist; - ~tests added for any new features~; - [x] full tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3033:2023,release,releases,2023,https://psicode.org,https://github.com/psi4/psi4/pull/3033,1,['release'],['releases']
Deployability,still getting the same error after running the following:. conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge -c psi4; psi4 --test. :(,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640:121,update,update,121,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640,2,"['install', 'update']","['install', 'update']"
Deployability,"sting Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` for list marks.; - [x] to avoid FutureWarning, changed three `distutils.dir_util.copy_tree` into `shutil.copytree`. this is a py38 language feature, the first actual breaking of py37+ compatibility.; - [x] added the openfermion demo as test; - [x] apparently 3body in dftd3 fails on Mac. near-term goal is replacing, so skip for now; - [x] newly install pytest.ini and install any test_input.py, input.dat, and input.py from tests/ . sensibly, input.dat/py would only get installed if test_input.py present, but I can't teach cmake that logic, so it's either this or have to register each pytest-prepared psithon test. aux files from tests/ are also installed but these have to be registered with cmake.; - [x] moved `compare_moldenfiles()` from testing code to driver alongside `compare_fchkfiles()` so that it can be documented.; - [x] ""psi"" and ""api"" marks added to all tests/pytests/ files for reasons explained in docs. - Docs; - [x] Updated the add_tests documentation, esp. wrt pytest; - [x] Might have done enough of the outline to close #2396 ; - [x] Straightened out docstring inheritance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for developers/users who prefer those to psi4-dev conda package. they were generated from the ecosystem GHA but not autoupdated -- that may happen in a future GHA from master; - [x] added passing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:4525,install,installed,4525,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['installed']
Deployability,"stored the; > external potential as an additional matrix, matrices_[""VE""], that is then; > added to the one-electron potential for the monomer SCF calculations and; > the HF term. Is there a better way to handle this problem that doesn't; > require storing an additional matrix?; > - I compared total SAPT0 energy for a 2-fragment F-SAPT calculation to; > the SAPT module. Is there a good way to check a 3-fragment I-SAPT energy; > with the SAPT module?; >; > Checklist; >; > - For a 2-fragment system, total SAPT0 energies with and without an; > external potential in FISAPT module agree with SAPT module; > - For a 3-fragment system, total SAPT0 energies with and without an; > external potential give reasonable energies; > - Passed included smoke and sapt tests; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1608; > Commit Summary; >; > - Added external potential to FISAPT one-electron potential; > - Fixed double counting external interaction in one-electron potential; >; > File Changes; >; > - *M* psi4/driver/procrouting/proc_util.py; > <https://github.com/psi4/psi4/pull/1608/files#diff-0> (2); > - *M* psi4/src/psi4/fisapt/fisapt.cc; > <https://github.com/psi4/psi4/pull/1608/files#diff-1> (68); > - *M* psi4/src/psi4/libmints/wavefunction.cc; > <https://github.com/psi4/psi4/pull/1608/files#diff-2> (2); > - *M* psi4/src/psi4/libmints/wavefunction.h; > <https://github.com/psi4/psi4/pull/1608/files#diff-3> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1608.patch; > - https://github.com/psi4/psi4/pull/1608.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1608>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAXVA5Q26LUISGVVNYCPO5TPSMNXLANCNFSM4HIWTBEQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-487221275:2927,Patch,Patch,2927,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-487221275,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"sts/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12733,Install,Install,12733,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,symlinked installation fails (partially),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:10,install,installation,10,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['install'],['installation']
Deployability,"symmetry, switch symmetry off and check if I'm still at a stable solution. However, I find I'm unable to change my molecule for symmetry constraints (or charge/multiplicity for that matter). The following input; ```; molecule sym {; 0 1; H 0.459619 0.000000 0.000000; H 0.000000 0.459619 0.000000; }. set basis STO-3G; energy('scf'). molecule nosym {; 0 1; H 0.459619 0.000000 0.000000; H 0.000000 0.459619 0.000000; }. set scf guess read; energy('scf'); ```; runs the first SCF, but crashes on the second with; ```; RuntimeError: ; Fatal Error: SCF guess was set to SAD, but sad_basissets_ was empty!. Error occurred in file: /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/sad.cc on line: 659; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::scf::HF::compute_SAD_guess(); psi::scf::HF::guess(); psi::scf::HF::initialize(); psi::scf::HF::compute_energy(); ```; Oddly, it appear that while in the second run; ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is READ.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00; ```; the initialization uses; ```; ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 375; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12. => Auxiliary Basis Set <=. Basis Set: file /home/work/psi4/install/share/psi4/basis/def2-svp-jkfit.gbs; Number of shells: 12; Number of basis function: 36; Number of Cartesian functions: 40; Spherical Harmonics?: true; Max angular momentum: 2. Minimum eigenvalue in the overlap matrix is 2.8114045453E-01.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.; ```; followed by the crash.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/586:1804,install,install,1804,https://psicode.org,https://github.com/psi4/psi4/issues/586,1,['install'],['install']
Deployability,"t has already been patched into c-f builds as of v1.8.2 `_1`. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] test py312 where possible (mac py312 works, but to keep testing legacy qcfractal (until psi4 v1.9), need to stick with py39); - [x] switch azure windows to miniforge, so it doesn't spend 18m switching default channels and doing the solve to get mamba. (note that this isn't a weakness of miniconda (which has packaged conda and mamba since this summer) but of the age of the miniconda on chocolatey vs the age of the miniforge.; - [x] tested the new qcfractal 0.51 and found that (1) there's a snowflake threading bug that Ben has since fixed (unreleased) and (2) there's a new space-saving step on qcfractal, so psi4 driver needs to regenerate qcvars info for distributed driver thru qcf runs (fixed here).; - [x] on py312 on windows, there's a change in `shutil.which` that affects us through qcel. currently patched, but awaiting a new release there.; - [x] py312 starts visible SyntaxWarning about non-escaped special characters (like '\n' newline or '\b' bell) and unfortunately, they abound in Windows paths. Further unfortunately, the error detection in the new version parsing for psi4 in qcengine (implemented to avoid those ""[-1] index is not accessible"" means ""pull psi4 tags or otherwise fix version"" errors) springs into defense and thinks a clean psi4 isn't present. So, let's convert possible filepaths to raw strings so no confusion with special chars. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3049:1253,patch,patched,1253,https://psicode.org,https://github.com/psi4/psi4/pull/3049,2,"['patch', 'release']","['patched', 'release']"
Deployability,"t not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz'], 'dashlevel': 'd3bj', 'dashparams': {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}, 'dashparams_citation': False, ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; ----------; jobrec : dict; Nested dictionary with input specifications for DFTD3 in generic; QC terms.; dftd3rec : dict; Nested dictionary with input specification and outp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:14232,update,updates,14232,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['update'],['updates']
Deployability,"t parser (#1743); - In `-o stdout` mode, `core.be_quiet()` followed by `core.reopen_outfile()` no longer petulantly deprives you of output (#1735); - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#1815) ; - Fix to omp call (#1823) ; - Handle very bad linear dependencies (#1844) ; - Fixes to vibrational analysis (#1845) ; - Fix threading in SAPT CPHF (#1849) ; - Fix MP2 handling of 1-electron cases (#1857) ; - Replace seg fault with error in DETCI and DFOCC (#1858, #1861) ; - Fix printing of custom basis sets in banner (#1880) ; - Remove omp_set_nested (#1883) ; - Fix seg fault in CCEnergyWavefunction::rotation() (#1887) ; - Threading fix in ESP potential build (#1900) ; - Proper computation of TDMs from DETCI (#1910) ; - Close DETCI files (#1926) ; - Fix UHF after RHF CCSD gradient crash (#1928) ; - Fix ECPa f-electron combinations (#1930) ; - Keep default_psio_manager alive (#1933) ; - Fix printing of coordinates (#1938) ; - Fixes to Treutler gcc5 (#1945) ; - Fix string setting in options (#1955) ; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.6.0 (#2028) ; - Fix memory bug in libtrans (#2027) ; - Fix to large DF-MP2 (#",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:13161,Patch,Patches,13161,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['Patch'],['Patches']
Deployability,"t recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; ciwfn = core.detci(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:11697,install,install,11697,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,['install'],['install']
Deployability,"t reused to the base class, and hoisting things up in the inheritance chain that only get used in one derived class; - Reducing visible and mutable state, as well as the contact surface of the classes. This is achieved by making data and functions as private as possible, providing access to data through getters returning `const&` when necessary, and making a few data members `const`. Having `const` members in classes is sometimes considered to be bad form, but AFAIK all of the downsides are already incurred on account of `MOInfoBase` having reference members. The git history on this branch is admittedly a bit messy, I changed my mind about a couple of things. LMK if that is a problem.; The next PR in this series will get to what I originally wanted to achieve and remove uses of the ugly ""cast Dimension object to pointer"" operators (see #2953) from `libmoinfo.`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No API changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused function `MOInfoBase::correlate` is removed; - [x] The only thing the `MOInfoBase` dtor does is call `MOInfoBase::cleanup()`, an empty function. Removed both.; - [x] Moved the contents of `MOInfo::free_memory()` into its only caller, the `MOInfo` dtor; - [x] Added a lot of new machine-readable docstrings, moved some existing ones; - [x] Some ""obsolete code"", commented out a long time ago is deleted from `moinfo_mappings.cc`; - [x] Moved the `double** scf` MO array and the `get_scf_mos()` getter from `MOInfoBase` to `MOInfo` and made the array private; - [x] Moved the contents of `MOInfoBase::startup()` into its only caller, the `MOInfoBase` ctor; - [x] Moved `MOInfoBase::nmo` to `MO",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3155:1346,release,release,1346,https://psicode.org,https://github.com/psi4/psi4/pull/3155,1,['release'],['release']
Deployability,"t set on the remote machine; (probably didn't re-source ~/.bashrc after installing psi4. However, it; should be writing to local disks. I can see psi...clean files in the local; directory, are those scratch files?. No, psi.[pid].clean is a little text file that contains a list of all the; scratch files to clean up. You should look at the list of scratch files in; this psi.[pid].clean file to see where it is writing the scratch files, and; make sure that it isn't to a NFS-mounted directory. Otherwise you'll take; a huge performance hit. On Thu, Mar 1, 2018 at 11:05 AM, Lori A. Burns <notifications@github.com>; wrote:. > Possible, but I really doubt it, as glibc mismatches aren't usually; > healable. Usually this is a symptom of packages depending on different; > versions of a library and symbols getting sometimes loaded one way and; > sometimes another depending on import order. Often fixable by swapping; > import order, but in the psi-in-jupyter case, there's simply nothing to; > swap.; >; > I thoroughly expected this to be fixed when I built with the newer; > compilers and was alarmed when it wasn't. @sergsb; > <https://github.com/sergsb>, would you want to try the conda env line in #862; > (comment) <https://github.com/psi4/psi4/issues/862#issuecomment-347074303>; > ? Possibly more defaults packages have been updated to the new compilers; > since November and healed the problem.; >; > Only thing else I can think of is that I'm still linking libc++ statically; > (which it should be entirely safe to do, being the least-fundamental of the; > glibc, libgcc_s, libstdc++ trio) and that's running into a symbol error; > with the jupyter stack.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/862#issuecomment-369640226>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdr3o6Z-YaJeCQ901ywG8eMHjO8c5ks5taBxDgaJpZM4Qhais>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369646381:1449,update,updated,1449,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369646381,1,['update'],['updated']
Deployability,"t target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/g++-8; -- Check for working CXX compiler: /usr/local/bin/g++-8 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting (unspecified) option MAX_AM_ERI: 5; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 14; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /Users/bsenjean/Documents/intelpython3/bin/python3 (found suitable version ""3.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:4756,Release,Release,4756,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,2,"['Release', 'install']","['Release', 'install']"
Deployability,"t__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [CMakeFiles/psi4_core.dir/all] Error 2; make[1]: Leaving directory `/scratch/appssf/psi4/build'; make: *** [all] Error 2; ```; For compiling, I was using ""make -j 8"". I will try to compile serially and see if that was the cause for the installation problem. Best regards and thank you very much for your help. Sam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4912,Install,Installing,4912,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,5,"['INSTALL', 'Install', 'install']","['INSTALL', 'Installing', 'install', 'installation']"
Deployability,tage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2951,Install,Installing,2951,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"talled;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ python 3.6.9 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ └─ psi4-rt 1.1 would require; │ └─ python 2.7* , which can be installed;; └─ python 3.6** , which can be installed (as previously explained).; `. From `conda install psi4 psi4-rt python=3.6 -c psi4`. not going t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3398,install,installed,3398,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability,"tasks for after #1721. feel free to add items. - [ ] switch CI to conda package, not from-source build; - [ ] remove Libint1 & Libint1t; - [ ] remove ERD #1780 ; - [ ] determine the best way to handle spherical harmonic max AM requirements in libmints, without the LIBINT_MAX_AM macro; - [ ] ~fix lgtm l2 build and move extra cmake out of main CMakeLists.txt~ LGTM defunct; - [ ] resolve `libint2_DIR` vs. `Libint2_DIR` with Valeev; - [x] update sphinx<2 requirement -- we're on 7 now?; - [ ] update one electron integrals to use Libint2, and remove existing routines",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1940:439,update,update,439,https://psicode.org,https://github.com/psi4/psi4/issues/1940,2,['update'],['update']
Deployability,"tch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4578,Install,Installing,4578,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"te master sync when safe. Lori. > On May 3, 2015, at 12:18 PM, andysim notifications@github.com wrote:; > ; > It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an op",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1700,update,updates,1700,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,2,"['release', 'update']","['releases', 'updates']"
Deployability,tecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if neces,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14975,Install,Install,14975,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,tecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13213,Install,Install,13213,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,tecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2731,Install,Install,2731,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1336,Install,Install,1336,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"testing dedup, stdsuite upgrades",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2632:24,upgrade,upgrades,24,https://psicode.org,https://github.com/psi4/psi4/pull/2632,1,['upgrade'],['upgrades']
Deployability,tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/t,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6871,Install,Install,6871,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"th a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2254,upgrade,upgrade,2254,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,2,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"th ddd, this is no longer happening, so for occasional string modelchem calcs (that is, `energy|gradient|hessian(""mtd/bas"")` only), you may need to add a clean in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents should be considered experimental and subject to change.; - [x] Dipole derivatives through finite difference of dipoles added, so IR intensities available; - [x] The dummy wavefunctions returned from wrappers always had some questionable properties (e.g., single method for mixed method, largeset HF basis for cbs wavefunction) can be even less realistic (e.g., always def2-svp basis for cbs).; - [x] n-body qcvars renamed (grace period applies); ```; ""CP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""NOCP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTE",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:5180,continuous,continuous,5180,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['continuous'],['continuous']
Deployability,"th the CMake user will variable and the compiler definition to `ENABLE_<Pkg>` as the CMake user will variable and `USING_<Pkg>` as the compiler def. so we're not tempted to conflate the roles. **What it doesn't do**; - linking not right for one of `psi4_main.a` or `psi4.so` (don't remember which) when libgdma is static. **Behavior I'm aiming for**. (a) `ENABLE_<Pkg>`: whether set to TRUE or FALSE; (b) `CMAKE_DISABLE_FIND_PACKAGE_<Pkg>`: whether set to TRUE or FALSE; (c) `<Pkg>_DIR`: whether `<pkg>Config.cmake` findable at this loc; (d) `CMAKE_PREFIX_PATH`. | (a) enabled | (b) disable find | (c) findable dir | (d) findable gen | outcome |; | --- | --- | --- | --- | --- |; | T | T | | | extproj_add, detect superbuild |; | T | F | T | | detect pre-built at <pkg>_dir |; | T | F | F | T | detect pre-built at cmake_prefix_path |; | T | F | F | F | extproj_add, detect superbuild |; | F | | | | no add-on |. **Questions**; - Since it's tricky to detangle plan from implementation, have I violated any of your superbuild principles?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:4343,install,installation,4343,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,1,['install'],['installation']
Deployability,"thanks for the new functionality!. it looks like the git history has gotten tangled so that there are non-you commits and some of your commits are multiples. (the most likely cause is you rebased to upstream, then pulled and pushed to your branch, rather than rebasing to upstream, then force pushing to your branch.) unless you care about the development history, I recommend checking out a new branch from hyperpolar_CCSD, then `git reset` (mixed, the default) back to before any of your commits, then add back everything (yours and others') and make a single commit. then rebase, which should filter out all the work by others so your commit ends up with only your work. then make a new PR (or `git push origin hyperpolar_CCSD_rb:hyperpolar_CCSD --force` to update this PR).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2043#issuecomment-736708921:761,update,update,761,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-736708921,1,['update'],['update']
Deployability,"that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed globally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:1901,install,installed,1901,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,2,['install'],['installed']
Deployability,"the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1068,install,install,1068,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"the consensus from [SO](https://stackoverflow.com/questions/34212036/python-3-installation-on-windows-running-from-command-line) and azure is that Windows has no `python3` cmd. if from #1708, redhat has no `python`, then we're in a pickle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1709#issuecomment-526614553:78,install,installation-on-windows-running-from-command-line,78,https://psicode.org,https://github.com/psi4/psi4/pull/1709#issuecomment-526614553,1,['install'],['installation-on-windows-running-from-command-line']
Deployability,"the snsmp2 plugin (https://github.com/DEShawResearch/sns-mp2/blob/master/snsmp2/wavefunctioncache.py) is a big user of the npz format for file 180 before wavefunction serialization to a npy file. (Probably the only external user.) Moreover, they both use them and write out new ones for consumption. They also modify and store `Ca_occ` in their exchange files. (Looks like npz did this: https://github.com/psi4/psi4/commit/e5b12a40c8c2d65a5e59f758df871407afdc544c#diff-dbf22cd80d16f6d8ef8250145a6d91bf) For those from a psi4 run, the Ca_occ can just be extracted by API from the deserialized wfn. But is there any facility for storing extra items in the npy?. There's some lengthy workarounds for issues since resolved (custom cast-up) but the guess of dimer from stack of monomer isn't in psi4 and the plugin isn't being actively developed (to my knowledge), so I suggest a minimal patch-up rather than thorough update. The way to run this is to build an up-to-date psi, edit it to apply #1508, then clone the snsmp2 repo (above), navigate to `<sns-mp2-repo>/tests/` and run an input with `PYTHONPATH=../ <path-to-psi4-objdir>/stage/bin/psi4 simple.in`. If this doesn't get taken up, we'll tackle it next Wednesday the @CDSherrill group programming. In the meantime, snsmp2 is getting dropped from `psi4-rt`. FYI @rmcgibbo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1514:883,patch,patch-up,883,https://psicode.org,https://github.com/psi4/psi4/issues/1514,2,"['patch', 'update']","['patch-up', 'update']"
Deployability,thermo updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/348:7,update,updates,7,https://psicode.org,https://github.com/psi4/psi4/pull/348,1,['update'],['updates']
Deployability,"this has had added to it the option to turn off dispersion during an FISAPT calc. it'd be helpful to get a 3rd review so it's ready to merge after qcng release. presently, master qcng and master psi4 don't play nicely because of renamed dashparams file.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1661#issuecomment-502267181:152,release,release,152,https://psicode.org,https://github.com/psi4/psi4/pull/1661#issuecomment-502267181,1,['release'],['release']
Deployability,this needs a new pcmsolver release and a merge of https://github.com/DEShawResearch/sns-mp2/pull/7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-735636351:27,release,release,27,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735636351,1,['release'],['release']
Deployability,"this'll probably pass CI, but there's a segfault lurking in `nbody-multi-level` with `Dimension` and `wfn.set_scalar_variable` that I haven't tracked down. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64; (gdb) bt; #0 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #1 0x00007fffefd91a81 in psi::Matrix::Matrix(psi::Matrix const*) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #2 0x00007fffefd94334 in psi::Matrix::clone() const () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffefc687b3 in psi::Wavefunction::set_array_variable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<psi::Matrix>) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffefc67fba in psi::Wavefunction::set_gradient(std::shared_ptr<psi::Matrix>) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffeea99b09 in void pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::Wavefunction, std::shared_ptr<psi::Matrix>, pybind11::name, pybind11::is_method, pybind11::sibling, char [34]>(void (psi::Wavefunction::*)(std::shared_ptr<psi::Matrix>), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [34])::{lambda(psi::Wavefunction*, std::shared_ptr<psi::Matrix>)#1}, void, psi::Wavefunction*, std::shared_ptr<psi::Matrix>, pybind11",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368:440,install,install,440,https://psicode.org,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368,1,['install'],['install']
Deployability,"thon 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potentia",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6400,install,install,6400,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['install']
Deployability,threading test patch,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3007:15,patch,patch,15,https://psicode.org,https://github.com/psi4/psi4/pull/3007,1,['patch'],['patch']
Deployability,ting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13532,Install,Install,13532,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14816,Install,Install,14816,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install packa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15136,Install,Install,15136,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4con,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7036,Install,Install,7036,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ting tripped up because in the past I was able to install rdkit into a env with psi4 but not now apparently. from `mamba install psi4 psi4-rt python=3.6 -c psi4'; `. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4-rt', 'python=3.6']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a6",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:1419,install,installable,1419,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installable']
Deployability,"tionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/su",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4899,install,install,4899,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"tions from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulating the X matrix (the matrix central to the observed error) to be able to handle positive grid weights. . ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:1917,configurat,configurations,1917,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['configurat'],['configurations']
Deployability,"tking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3599,Release,Release,3599,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"tl;dr Don't just update your psi4 source, do a fresh environment and build. There aren't comprehensive build helpers yet for v1.8, but there's some environment specs to help. What form do you want your future build helpers to take? For reference, here's how to get psi4 binary packages for all architectures. ### Recent Upheaval. You may have noticed that the ""source"" option at https://psicode.org/installs/v18/ says ""check back later"". There are minor upheavals in the build procedure in that:; 1. Libint2 switched source again last week (akin to the several L2 switches in spring 2022) so you'll want a new conda environment.; 2. We're switching our primary binary distribution channel from `conda install psi4 -c psi4` to `conda install psi4 -c conda-forge` (latter cmd is a simplification -- don't use as-is), so while most of the `-c psi4` packages are perfectly compatible with master, they're not the freshest and will continue to decay.; 3. New release means new tag, so you'll need to pull tags anyway (`git fetch upstream 'refs/tags/*:refs/tags/*'`) for versioning, distributed driver, and dispersion addons to work. ### Interim Build Directions. Altogether, now is a good time to do a fresh clone, environment, and compile ... if only there were directions. The interim build guidance is:; 1. Create an environment from one of the ""buildrun"" env spec files under https://github.com/psi4/psi4/tree/master/devtools/conda-envs . First edit it to the python you want and the env name you want, and comment out any optional qc addons you don't want. ; 2. Then issue something like`conda env create -f Linux-buildrun-maxeco.yaml` and activate the environment. ; 3. Clone psi4, then `cmake -S. -Bobjdir -DBUILD_SHARED_LIBS=ON ...`, and it usually configures fine. ; 4. For Apple Silicon, there isn't a env yaml file yet, but replacing `libblas=*=*mkl` with `libblas=*=*accelerate` or `libblas=*=*openblas`, getting rid of other mkl lines, and aggressively pruning qc addons (not many ported to ar",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:17,update,update,17,https://psicode.org,https://github.com/psi4/psi4/issues/2965,4,"['install', 'update']","['install', 'installs', 'update']"
Deployability,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3184:692,update,update,692,https://psicode.org,https://github.com/psi4/psi4/issues/3184,4,"['install', 'update']","['install', 'update']"
Deployability,"to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of projectors up to f can be retained.; > Just remove the f projector as it has a 0.0 coefficient. IMHO, this would be the correct option, as a projector with a coefficient of 0.0 is only a technical remnant from the development process.; > I quickly tested both approaches with both TURBOMOLEv7.7.1 and ORCAv5.0.4 and in all cases, the same single-point energy and properties resulted for a simple F_2 molecule. Would it be possible to update the wB97X-3c basis set included in Psi4 to allow F-containing molecules to run? I'm happy to make the PR myself if that would be useful. For reference, here's my HF structure:; ```; 2; title; F 0.48776591 0.00000000 0.00000000; H -0.48776591 0.00000000 0.00000000; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3205:2433,update,update,2433,https://psicode.org,https://github.com/psi4/psi4/issues/3205,1,['update'],['update']
Deployability,to do a rc release:; * bump the version and get it on master http://psicode.org/psi4manual/master/manage_git.html#how-to-bump-a-version; * build the explicit packages. don't rely upon usual build-latest but instead set branches directly at https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-multiout/meta.yaml#L10 in psi4-multiout on L & M and https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-docs/meta.yaml#L10 on L. start them building.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-462074622:11,release,release,11,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-462074622,1,['release'],['release']
Deployability,"tor+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3057,install,install,3057,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability,"tps://github.com/CDSherrill>; >; > Oh, and if an error's raised but not caught, it just shows the traceback; > and triggers coffee:; >; > PsiException: Could not converge SCF iterations in 4 iterations.; >; > Failed to converge.; >; > Traceback (most recent call last):; > File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1197,patch,patch,1197,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['patch'],['patch']
Deployability,try shared/module toggle,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2103:18,toggle,toggle,18,https://psicode.org,https://github.com/psi4/psi4/pull/2103,1,['toggle'],['toggle']
Deployability,ture-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/sample,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:3384,install,installing,3384,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"txt; @@ -77,10 +77,6 @@ option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); -option(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_UBSAN"" Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_MSAN"" Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF); # These options are relevant to pasture; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); @@ -114,6 +110,14 @@ option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); +option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=address -fno-omit-frame-pointer""); +option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); +option_with_flags(ENA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343290538:1246,install,installed,1246,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343290538,2,['install'],['installed']
Deployability,"ub.com wrote:; > ; > Dear Pis4 developers.; > ; > I've got in issue when link psi4 binary:; > ; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of`tmpnam_r' is dangerous, better use `mkstemp'; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function`posix_tempnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use`mkstemp'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; > builtin_converters.cpp:(.text+0x1286): undefined reference to`PyUnicodeUCS4_AsWideChar'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; > builtin_converters.cpp:(.text+0x455): undefined reference to`PyUnicodeUCS4_FromEncodedObject'; > collect2: error: ld returned 1 exit status; > make[2]: **\* [bin/psi4] Ошибка 1; > make[1]: **\* [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; > make: **\* [all] Ошибка 2; > I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x; > ; > Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; > http://packages.ubuntu.com/trusty/libboost-all-dev; > ; > My python interpreter support UCS-4.; > ; > python -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > python3 -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; > in particular, I only need to generate MOLDEN file from SCF calculations.; > ; > With respect, Vladimir.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/94#issuecomment-100760375:1850,install,installed,1850,https://psicode.org,https://github.com/psi4/psi4/issues/94#issuecomment-100760375,1,['install'],['installed']
Deployability,"ubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/psi4.git; (base) gwood@EXS-001355 src % git branch; * master; ```; my cmake version is:. ```; (base) gwood@EXS-001355 src % cmake --version; cmake version 3.23.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; blas and lapack is picked up from xcode, e.g.:; ```. //BLAS libraries; BLAS_LIBRARIES:STRING=/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/lib/libblas.tbd ; ```. any ideas, any more information you might need?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:2503,Install,InstalledDir,2503,https://psicode.org,https://github.com/psi4/psi4/issues/3006,2,"['Install', 'install']","['InstalledDir', 'install']"
Deployability,"ue, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > Fil",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:4159,install,install,4159,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"ue, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6303,install,install,6303,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:39,integrat,integratorxx,39,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547,2,['integrat'],['integratorxx']
Deployability,"uilt-in method scfgrad of PyCapsule object at remote 0x7faaaff6a120>, args=<optimized out>, nargs=<optimized out>, keywords=0x0); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Objects/call.c:159; #23 0x00007faabd64b53c in _PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x5589d8c41a08, callable=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Include/cpython/abstract.h:125; #24 _PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x5589d8c41a08, callable=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Include/cpython/abstract.h:115; #25 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x5589d803e680) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4963; #26 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:3469; #27 0x00007faabd6453f4 in PyEval_EvalFrameEx (throwflag=0, ; --Type <RET> for more, q to quit, c to continue without paging-- f=Frame 0x5589d8c417d0, for file /home/work/psi4/install.susi/lib/psi4/driver/procrouting/proc.py, line 2354, in run_scf_gradient (name='hf', kwargs={'molecule': <psi4.core.Molecule at remote 0x7faa8737c400>, 'opt_iter': True}, dft_func=False, optstash=<OptionsState(data={('SCF_TYPE',): <OptionState(option='SCF_TYPE', module=None, value_global='PK', haschanged_global=False, value_local=None, haschanged_local=None, value_used=None, haschanged_used=None) at remote 0x7faa8737d4c0>, ('REFERENCE', 'SCF'): <OptionState(option='REFERENCE', module='SCF', value_global='RHF', haschanged_global=False, value_local='RHF', haschanged_local=False, value_used='RHF', haschanged_used=False) at remote 0x7faa8737d2e0>}) at remote 0x7faa8737d190>, ref_wfn=<psi4.core.RHF(memory_jk_=49152000, memory_collocation_=0) at remote 0x7faa8737cf90>)) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:741; #28 _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<opti",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:7320,install,install,7320,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['install'],['install']
Deployability,"uld require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5718,install,installed,5718,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"un_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:9468,install,install,9468,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,unable to install on ubuntu,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586:10,install,install,10,https://psicode.org,https://github.com/psi4/psi4/issues/1586,1,['install'],['install']
Deployability,"unction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6951,install,install,6951,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"unk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4279,Install,Installing,4279,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,update PCMSolver interface to v1.2.3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2903:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2903,1,['update'],['update']
Deployability,update addon build commits,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1561:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1561,1,['update'],['update']
Deployability,update azure win,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2961:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2961,1,['update'],['update']
Deployability,update copyright,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3122:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3122,1,['update'],['update']
Deployability,update copyright for 2023,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2854:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2854,1,['update'],['update']
Deployability,update copyright to 2017,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/578:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/578,1,['update'],['update']
Deployability,update deprecation warnings text,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2557:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2557,1,['update'],['update']
Deployability,update distributed driver interface for qcfractal next,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2645,1,['update'],['update']
Deployability,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1868:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1868,1,['update'],['update']
Deployability,update for geometric 1.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2750:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2750,1,['update'],['update']
Deployability,update run_json and wfn qcvars,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1578:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1578,1,['update'],['update']
Deployability,update samples,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2757:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2757,1,['update'],['update']
Deployability,update sapt fitting basis sets,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/317:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/317,1,['update'],['update']
Deployability,update slack link,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1727:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/1727,2,['update'],['update']
Deployability,update the review guidance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2917:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/2917,1,['update'],['update']
Deployability,update to adcc 0.15.16,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2942:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2942,1,['update'],['update']
Deployability,update to pyddx 0.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2940:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2940,1,['update'],['update']
Deployability,update to qcengine v0.28,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3022:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/pull/3022,1,['update'],['update']
Deployability,update to qcfractal beta10 for v1.8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2939:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2939,1,['update'],['update']
Deployability,"update: the immediate problem in this issue is fixed with something like the below. but there are other problems from the accumulation of qcengine harvesting, distributed driver, and neglecting this Psi4/Cfour mode. I should have a PR later today. ```; - if core.get_global_option('BASIS') == '':; + if core.get_global_option('BASIS') in ["""", ""(AUTO)""]:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1157965071:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1157965071,1,['update'],['update']
Deployability,updated OP with current formatting example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2001#issuecomment-683462708:0,update,updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2001#issuecomment-683462708,1,['update'],['updated']
Deployability,"updated the PR:; * removed unused imports; * switched to psi4.drivers.constants for conversion factors; * reformatted files with yapf, I had malfunctioning commit hook when submitting original PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-821106659:0,update,updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-821106659,1,['update'],['updated']
Deployability,updates scripts for py3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1395:0,update,updates,0,https://psicode.org,https://github.com/psi4/psi4/pull/1395,1,['update'],['updates']
Deployability,"ux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 2 entry O line 190 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 3-4 entry H line 20 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; ```; - [x] 7. soon after all the new basis stuff went in Nov 2014, Jet added another layer in qcdb pyconstruct to make CABS basis sets work. unfortunately, this broke one of the key principles/advantages of the new scheme. not that i remember exactly what that principle was, though it was probably that the basis could be re-constituted by `basis mybas {...}` mybas name; - [x] 8. fix the 5-zeta and 6-zeta orbital defaulting to quad-zeta fitting as in noted in #144 ; - [x] 9. Switch out Pople basis fitting bases to appropriate-zeta def2-*-ri/jkfit, rather than Dunning ri/jkfit, as former has fewer element holes. (as noted in #144); - [x] 10. Create (maybe?) another layer of defaulting so that aug-cc-pvdz orbital uses aug-cc-pvdz-ri/jkfit when available (as at present), then def2-tzvp-ri/jkfit (not at present), then the ultimate default def2-qzvpp-ri/jkfit (as at present). This way don't get high AM cost on supposedly cheap orbital basis sets. (as noted in #144); - [x] 11. drop DUAL and pick up perhaps others in http://psicode.org/psi4manual/master/basissets_byfamily.html; - [x] 12. thoroughly update basisset.rst, especially examples; - [x] 13. reexamine the PSIPATH basis load ordering and make sure that there's a way to install new basissets in the conda package w/o overwriting library files; - [x] 14. the python object name (mybas in above) is the key handle by which a user-def basis can be reapplied to new molecules, but this can be anonymous (if mybas omitted definitely; and maybe if defined conventionally through ""set basis"" if all turned into functions). would be handy to have a name to print in the output file (some sort of aug-cc-pvdz+cc-pvdz+6-31g) as well as the handle by which it's retrievable. That's all I can think of for now. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-189541354:3143,update,update,3143,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-189541354,2,"['install', 'update']","['install', 'update']"
Deployability,"v37/bin/x86_64-conda_cos6-linux-gnu-g++; -- Check for working CXX compiler: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/x86_64-conda_cos6-linux-gnu-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/python3.7 (found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:1604,Install,Install,1604,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,5,"['Install', 'Release', 'configurat']","['Install', 'Installing', 'Release', 'configuration']"
Deployability,"ver wrappers. Still looks the same to users. Prints ""Threads set to %d by Python driver"" in output file so there's a record of the change.; - [x] `psi4.compare_values()` and friends adapted to work with pytest upon success. Recommended pattern: `ans = psi4.compare_values(normal test args here); assert ans`.; - [x] Set up pytest so can test installed psi4 free of cmake/ctest. For the moment, you need to be in `${top-level-psi4-dir}/tests/pytest`, have pytest installed (`conda install pytest`), have psi4 importable (`psi4 --psiapi-path`), and run `python -m pytest` or for more info, `python -m pytest -vs`.; - [x] Revive a ccsd(t) sp and an mp2 opt in the cfour interface. Add a pysmoke test.; - [x] Vital tweaks so that psiapi can handle more than vanilla calcs. Includes initializing efp in psi4.geometry, moving pcmsolver path detect to __init__, and the options clearing mentioned above.; - [x] Fix TargetHDF5 detection for detect pre-built case (i.e., conda case). * **User-Facing for Release Notes**; - [x] CMake 3.3 now required; - [x] Using `OMP_NUM_THREADS` and/or `MKL_NUM_THREADS` to guide parallelism in Psi4 is _now deprecated_. Psi4 won't pay the least attention to these variables.; - [x] Added `psi4 --psiapi-path` command-line argument. This prints the bash commands you need to execute to set up python interp and pythonpath in your shell to `python -c ""import psi4""`; - [x] Psi4 molecule strings passed to `psi4.geometry()` no longer balk at python-style comments, as these are filtered out.; - [x] Added a `psi4.clean_options()` fn (alongside `psi4.clean()` and `psi4.clean_variables()`) to reset the `P::e.options` object to its initial state. This is necessary for independent tests in pytest and will probably be useful for psiapi sessions.; - [x] Add pytest smoke tests for psi4 itself and psi4+addons (addon tests skip if addon not enabled or detectable). From source, `cd tests/pytest && python -m pytest [-v -s]`. From staged or installed, `python -c ""import psi4; psi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627:1866,Release,Release,1866,https://psicode.org,https://github.com/psi4/psi4/pull/627,1,['Release'],['Release']
Deployability,"ver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasiria",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:8696,install,install,8696,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"vided into several (3-4) regions where the; > outer region gets the most accurate grid and the grid get step-wise more; > coarse towards the inner region(s).; >; > Additionally this PR changes the Bragg-Slater (BS) radii and completes the; > Treutler-Ahlrichs integration code with the recommended mapping values. Old; > radii were of unknown origin.; >; > *Because of the updated BS radii, this PR will impact the total energies; > of any DFT calculation and can change how many grid points are generated; > even without pruning.* (11/33 DFT tests fail); > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - updated BS radii and extended to 104 elements; > - implementation of missing Treutler-Eta mapping parameter; > - DFT_PRUNE_TYPE keyword:; > - Treutler grid pruning (DFT_PRUNE_TYPE=TREUTLER); > - a more robust grid pruning (DFT_PRUNE_TYPE=ROBUST); > - old pruning using a function (DFT_PRUNE_TYPE=FUNCTION); > - modified Becke mu from Ochsenfeld for smoother integration (however; > no time savings); > - possibility to scale Treutler-Etas to better treat diffuse basis sets; > - better print out of options; > - testing and error overview; > - option to properly disable all pruning (currently only indirect way); >; > Questions; >; > - How to C++? Explicit guidance or help is welcome.; > - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Stat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:1058,update,updated,1058,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"w modest improvements here, especially to allow anyone so inspired to switch the docs theme and figure out new customizations. Apart from a certain fondness for the colors and an insistence that tables like https://psicode.org/psi4manual/master/introduction.html#id59 not be mangled, I'd be pleased if anyone wanted to overhaul the docs theme. Some things to know:; * psi4 colors and specializations are https://github.com/psi4/sphinx-psi-theme/blob/master/sphinx_psi_theme/themes/sphinx_psi_theme/theme.conf#L37; * to use a different theme, pass `-DSPHINX_THEME=another_theme` to cmake (or edit it in the cache); * build with `cmake --build . --target sphinxman`; * built docs will be in `<objdir>/doc/sphinxman/html/`. that html dir can be tarred and sent anywhere to load in a browser. ## Dev notes & details; - [x] the two sphinx extensions that were in the sphinx_psi_theme are now stored here in the repo. this lets them be used by any theme, which is important for the QCVariables one that otherwise emits thousands of warnings.; - [x] more logic around `@SPHINX_THEME@` in the controlling docs/sphinxman/source/conf.py.in so that one can use options and configuration particular to different themes. feel free to add more. tried themes are psi, cloud, basic, furo, and pydata. beware that some modern themes take a looong time to build (e.g., 40m instead of 5m) and increase the docs size 10-fold. at least one culprit is trying to put the whole TOC in the sidebar (incl. 1400 options), so there's stuff to be solved to try to transition themes.; - [x] I thought https://sphinx-tabs.readthedocs.io/en/latest/ would be a nice way to show psithon/psiapi/qcschema syntax, so I added that requirement to the docs build along with a quick example. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3053:1907,configurat,configuration,1907,https://psicode.org,https://github.com/psi4/psi4/pull/3053,1,['configurat'],['configuration']
Deployability,"w. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; ins",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1443,install,installing,1443,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"w/o reinvestigating, this is my memory of what's going on:. props2 is a Cartesian-with-variable geometry (y-coord gets updated in a loop) with _no explicit_ freeze com/orient. System is a cation so origin of *poles matters. Test ref values are computed at COM. For a long time this was fine b/c in the absence of user forbidding it, molecule was moved to COM & std orientation and computed==expected. But there's a deep pit that both users and developers can fall into wrt scanning over coordinates of a Cartesian system -- values you're updating aren't in same coord sys as values being specified. Results can be jarring. So DGAS fixed with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L3110-L3117 . This fills the pitfall, but now the props2 case doesn't get moved to COM, so computed != expected. That is, until psi4/psi4#808 where we explictly instruct moving to COM so that test passes again. Naturally, a Z-Mat molecule would always go to COM and wouldn't have this distinction. This is all perfectly logical. Trouble is consistency btwn Cart/ZMat and what users will be least confused by.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/782#issuecomment-332296506:119,update,updated,119,https://psicode.org,https://github.com/psi4/psi4/issues/782#issuecomment-332296506,1,['update'],['updated']
Deployability,"we are looking forward to deploying it, so the sooner the better. gianni de fabritiis. On Mon, Jul 23, 2018 at 11:18 AM, Lori A. Burns <notifications@github.com>; wrote:. > @raimis <https://github.com/raimis>, it might be good to assess the; > state-of-the-port. That is, are we waiting on you to check ""ready for; > merge"", or are you waiting on us for reviews, or are you waiting on us for; > code changes to do away with linux-bound code? On the last point, #953; > <https://github.com/psi4/psi4/pull/953> and #1098; > <https://github.com/psi4/psi4/pull/1098> are candidates (see question at; > preceding comment), but to spare you the rebase, it'd be nice to get your; > PRs in first, unless you need the changes.; >; > Thanks very much for all your work on porting psi. I just want to make; > sure we're not at a polite impasse.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/933#issuecomment-407095142>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHaqOtQlJAAnmrtgpTrfN9o8lC6qsA3Wks5uJelFgaJpZM4ShQlu>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-407100752:26,deploy,deploying,26,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407100752,1,['deploy'],['deploying']
Deployability,"weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could work for all the downstreams on c-f that want to use it. (It could be worse -- in integral package land, there's also commonly source-generation-time options :-); * the production-level Linux libint2 package has 26k source files, takes way more than 6h to build running on 12 cores, and needs `ulimit` reset on the building computer to complete; * Windows libint2 package has only ever been built on @andysim 's laptop. I worry that between the careful choice of compiler he had to make and the clang-cl details that something would conflict with c-f's locked-down build tooling. Of course we get away",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1965,release,release,1965,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['release']
Deployability,"well, I've done; conda update psi4 -c psi4/label/dev; which got ; gau2grid: 0.1-0 psi4/label/dev; psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; But now psi4 doesn't work from my Anaconda Python3:; Traceback (most recent call last):; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 54, in <module>; from . import core; ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""cc4.py"", line 1, in <module>; import psi4; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370160912:23,update,update,23,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370160912,1,['update'],['update']
Deployability,"were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3477,install,install,3477,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"what needs to happen:. - [x] wait for https://github.com/psi4/psi4/pull/1101; - [ ] update gcp used by PSI4 (I already have Gerrit's new code) (LAB edit: https://github.com/psi4/psi4/pull/2791); - [ ] setup a modified B97 (GGA); - [ ] provide the custom basis set; - [ ] hook up all components. If someone is eager to do this let me know, I can help. Otherwise I'll do it once the libxc5 move is complete.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1898:84,update,update,84,https://psicode.org,https://github.com/psi4/psi4/issues/1898,1,['update'],['update']
Deployability,"what should be happening here in the CI is that we've got a mixture of; * Libint, from conda psi4, built with Intel 2019 compilers, not calling MKL; * numpy, from conda defaults, built with GCC, calling MKL; * psi4, built on Azure with GCC or Clang, calling MKL; * MKL, distributed from conda but built by Intel with ? compilers (we'll assume Intel). My local tests with the reported `MKL_CBWR` are the same as the bullets except psi4 was build with Intel 2019.4 compilers. To test, I've solely been switching out MKL package with `conda install mkl=2019.4` or `=2020.1`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896#issuecomment-633695142:538,install,install,538,https://psicode.org,https://github.com/psi4/psi4/pull/1896#issuecomment-633695142,1,['install'],['install']
Deployability,"where there's only one potential and both charges and locations are specified. Additionally, there's two related categories. F-SAPT can put _different_ external potentials on any of fragments A, B, C, which have been passed in as `energy(""fisapt"", external_potentials={""A"": extern, ...}, ...)`. Also nbody can take an array of charges (not locations) that replace fragments when the fragments are ghosted. These are passed as `energy(..., bsse_type=..., embedding_charges=[monoAchg, ...])`. Problems:; * formation of Python objects in the input file and special options setting doesn't translate to QCSchema, which is the sole means of communication for many calcs in DDD.; * the most common calc, the simple single extern has no kwarg-to-energy way to set; * the uncertainty in units of ExternalPotential can be confusing and has led to bugs. Also, in DDD, the spec order of mol and extern may not be so clear to set the units. This is No. 2 of the DDD series, #1351. ## Todos; - [x] Replace `QMMM()` with `QMMMbohr()` and issue an update guide if the former is called.; - [x] For the common single-extern case, switch to `energy(..., external_potentials=array` instead of `QMMM()` object. This tests whether the `external_potentials` value is an array for a single extern, which gets processed and set immediately, or a dict of externs, which gets handled by the run_fsapt later on.; - [x] relaxed the array spec by which externs are initialized. instead of `q, [x, y, z]` also allow `q, x, y, z`, which makes for very easy numpy processing for units transofmation.; - [x] removed all the units handling around ExternalPotential; - [x] docs . ## Questions; - [ ] ok to use external_potentials kwarg for both simple and fsapt multi frags use cases?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2515:1431,update,update,1431,https://psicode.org,https://github.com/psi4/psi4/pull/2515,1,['update'],['update']
Deployability,"with fixed data dimensions in psi4 _libmints_, and libmints can't even throw an error for enlightenment. . I could throw additional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:1653,update,update,1653,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['update'],['update']
Deployability,"with pointers. Not only are pointers more error-prone, they are currently involved in some strange interaction between `Dimension` and `Matrix` objects, resulting in awkward roundabout initialization/construction that I hope to untangle before Psi4 1.11? (1.11, or maybe 1.12?).; Please let me know if you feel the three deprecations in this PR would be too disruptive or otherwise undesirable, this PR is very much a ""request for comments"". ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] API change: The custom assignment operator for `Dimension` objects (`Dimension& operator=(const int*)`) is being deprecated. Unless someone speaks up, 1.10 may be the last release to have it.; - [x] API change: Cast-to-pointer operators for `Dimension` objects (`operator int*()` and `operator const int*() const`) are being deprecated. Unless someone speaks up, 1.10 may be the last release to have them.; - [x] Minor API change: Several constructors and member functions of `Dimension` are now using `size_t` instead of `int` for indexing:; −`Dimension::Dimension(int, const std::string&)` is now `Dimension::Dimension(size_t, const std::string&)`; −`void Dimension::init(int, const std::string&)` is now `void Dimension::init(size_t, const std::string&)`; −`int Dimension::n() const` is now `size_t Dimension::n() const`; −`int& Dimension::operator[](int)` is now `int& Dimension::operator[](size_t)`; −`const int& Dimension::operator[](int) const` is now `const int& Dimension::operator[](size_t) const`; −`const int& Dimension::get(int) const` is now `const int& Dimension::get(size_t) const`; −`void Dimension::set(int, int)` is now `void Dimension::set(size_t, int)`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Shou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953:1356,release,release,1356,https://psicode.org,https://github.com/psi4/psi4/pull/2953,1,['release'],['release']
Deployability,"xing these issues is the handling of how certain variables within the `TwoBodyAOInt` class are initialized. To enable universal support of JK builds with `SCREENING = NONE`, an option has been added to manually call the `TwoBodyAOInt::create_sieve_pair_info()` function via the new wrapper function `TwoBodyAOInt::initialize_sieve()`. Multiple JK builds rely on values of variables initialized via `create_sieve_pair_info()` , and `initialize_sieve()` is now used to initialize the required variables if `SCREENING = NONE` is set. In this way, `SCREENING = NONE` can exist with the benefits it provides, while still working with all JK builds. Also, changes are made to ensure that no screening actually occurs in JK builds when `SCREENING` is set to `NONE`. In line with the above, some tests have been expanded. `test_comprehensive_jk_screening.py` has been changed to account for the `SCF_TYPE`/`SCF_SUBTYPE`/`SCREENING` combinations that were fixed. `test_erisieve.py` has been updated to more thoroughly test `SCREENING=NONE`. It is worth noting that, unfortunately, `TwoBodyAOInt::initialize_sieve()` must be defined per integral engine, and so the fixes of this PR only work with Libint2. The issues this PR tries to fix, still persist if Simint is used instead. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new function to `TwoBodyAOInt`, `initialize_sieve`, which allows for manual initialization of screening variables via `create_sieve_pair_info()` needed for JK builds.; - [X] Uses the above function to fix combinations of `SCF_TYPE`, `SCF_SUBTYPE`, and `SCREENING` which were broken.; - [X] Updates the `test_comprehensive_jk_screening.py` and `test_erisieve.py` test to account for the previously-described fixes. ## Questions; -[] Should we keep the `initialize_sieve` name? I named it as such, because it is basically a light wrapper to manually call `create_sieve_pair_info`. But the name of ""sieve"" might be objectionable. ## Checklist; - [X] ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3060:1615,update,updated,1615,https://psicode.org,https://github.com/psi4/psi4/pull/3060,1,['update'],['updated']
Deployability,"xist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6282,install,installed,6282,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"xist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║█",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5807,install,installed,5807,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,xx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2055,install,installing,2055,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability,"y makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue, but it sounds like an extra `rm -rf` or two gets the desired behavior?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:1190,install,install,1190,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,3,['install'],['install']
Deployability,"y the Intel-atop-GNU flags.) It'll be a `conda install psi4/label/dev::psi4-dev -c conda-forge` access. Thoughts on improving it?; 7. Those `devtools/*/*buildrun*yaml` env specs are semi-auto-generated from the ecosystem GHA. Are they handy enough to maintain and promote, even though they don't come with `cmake` lines?; 8. Any other build tools to support other workflows wanted? It's easier to set them up all at once. ### Psi4 Conda Packages at Present with Channels. Built psi4 packages are slightly off-topic, but I thought this could be a handy reference for the more exotic ones. Note that these don't have as many addons as previous `-c psi4` packages did. See https://github.com/orgs/psi4/projects/2 for the conda-forge progress tracker. * `linux-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (GNU compilers, AM5 L2, MKL, all pythons); * `conda install psi4/label/dev::psi4 -c psi4/label/testing -c conda-forge` (Intel compilers, AM7 L2, MKL, even pythons); * `conda install psi4/label/testing::psi4=1.8a2=py310hfdeccc3_2 libblas=*=*<mkl|openblas|etc> -c conda-forge/label/libint_dev -c conda-forge` (GNU compilers, AM5 L2, choose-your-own BLAS/LAPACK https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation (add `libopenblas=*=*openmp*` with openblas), py310, not quite v1.8); * `win-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (clang-cl compilers, AM5 L2 (w/o Hessian integrals, so it'll fall back to findif and some tests will fail unless exclude `d2ints` label), MKL, all pythons); * `osx-64`; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (Clang compilers, AM5 L2, MKL, all pythons); * `osx-arm64` ; * `conda install psi4 -c conda-forge/label/libint_dev -c conda-forge` (Clang compilers, AM5 L2, OpenBLAS, all pythons); * `conda install psi4 libblas=*=*accelerate -c conda-forge/label/libint_dev -c conda-forge` (Clang compilers, AM5 L2, Acellerate BLAS, all pythons)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:5955,install,install,5955,https://psicode.org,https://github.com/psi4/psi4/issues/2965,4,['install'],['install']
Deployability,"y"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3907,install,install,3907,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"y"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6051,install,install,6051,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"y, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 01:43PM; Psi4 wall time for execution: 1 day, 3:02:31.40. *** Psi4 exiting successfully. Buy a developer a beer!; ```. Note that the latter output, which is wrong, supposedly finished before the former. I have seen this behavior when running 6-core jobs in various different machines and for various Psi4 versions, including `Psi4 1.2.1 release, Git: Rev {HEAD} 406f4de`, `Psi4 1.3a1.dev315, Git: Rev {HEAD} 28d97e1 dirty`, `Psi4 1.2a1.dev829, Git: Rev {HEAD} 43b5ac2 dirty` and `Psi4 1.2.1 release, Git: Rev {HEAD} 406f4de`. Also, I found this problem for CBS calculations as well as for some MP2/aug-cc-pvdz. This happened only a handful of times out of thousands of calculations that I ran.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:2906,install,install,2906,https://psicode.org,https://github.com/psi4/psi4/issues/1279,4,"['install', 'release']","['install', 'release']"
Deployability,"y` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` for list marks.; - [x] to avoid FutureWarning, changed three `distutils.dir_util.copy_tree` into `shutil.copytree`. this is a py38 language feature, the first actual breaking of py37+ compatibility.; - [x] added the openfermion demo as test; - [x] apparently 3body in dftd3 fails on Mac. near-term goal is replacing, so skip for now; - [x] newly install pytest.ini and install any test_input.py, input.dat, and input.py from tests/ . sensibly, input.dat/py would only get installed if test_input.py present, but I can't teach cmake that logic, so it's either this or have to register each pytest-prepared psithon test. aux files from tests/ are also installed but these have to be registered with cmake.; - [x] moved `compare_moldenfiles()` from testing code to driver alongside `compare_fchkfiles()` so that it can be documented.; - [x] ""psi"" and ""api"" marks added to all tests/pytests/ files for reasons explained in docs. - Docs; - [x] Updated the add_tests documentation, esp. wrt pytest; - [x] Might have done enough of the outline to close #2396 ; - [x] Straightened out docstring inheritance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:4244,install,install,4244,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['install']
Deployability,"yeah, you see the pink & blue line at top of the psi4 main page? Above it says commits, branches, **releases**, contributors, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-273780555:100,release,releases,100,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-273780555,1,['release'],['releases']
Deployability,"you end up with [(α|α) - (α|β) - (β|α) + (β|β)]. Upon exploiting spin-restriction, this reduces to [(α|α) - (α|β)]. For J, the second term is equal to the first, so the two cancel. For K, the second term is zero, so you have the first integral. For V, the two terms are neither equal nor zero. The V term cannot be neglected, even though it's normally added to the J term, which here is zero. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] V is still bundled with J, but the RSCF products now mark that they may need to get a J-like term. This is no longer equivalent to being singlet or not.; - [x] Several methods have been modified to have a singlet flag, necessary to pass to compure_Vx whether to compute the singlet or triplet term.; - [x] HF classes no longer have a `potential_` attribute. Individual classes may need to access signatures of the specific subclass they have. Instead, subclasses now have a specific subclass for their `potential_` attribute if applicable. An abstract method has been added to the HF base class to get the potential when the subclass doesn't change the method signature.; - [x] RV::compute_Vx_full now exists alongside RV::compute_Vx. The former needs to exist so we can have a flag to control the spin-integration. The latter needs to exist to not break polymorphism when we don't need that flag.; - [x] A new function has been created to make a UKS version of an RKS functional.; - [x] If a triplet is requested, `compute_functional` will build a UKS functional, compute for that, and cannibalize the pieces to get the properly triplet spin-integrated quantity.; - [x] Ability to do `DAXPBY` added.; - [x] Updated a bad test value. ## Checklist; - [x] `test_tdscf_excitations.py` passes. All 70 of the tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2885:3702,integrat,integration,3702,https://psicode.org,https://github.com/psi4/psi4/pull/2885,3,"['Update', 'integrat']","['Updated', 'integrated', 'integration']"
Deployability,"you're right. it's hitting [this logic](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasisset.py#L802) which didn't have aux-basis-sets-derived-from-orbital-basis-sets in mind when it was derived. two solutions:. a) forget envvar `PSIPATH`. instead, put the `ano-rcc.gbs` in the same directory as the input file. `.` is in the search path.; b) edit `libraryPath` to `basisPath` [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasisset.py#L811) and remake (and possibly re-install) to copy into right place. Without write access, (a) is probably the way to go. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487691447:518,install,install,518,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487691447,1,['install'],['install']
Deployability,"your time at the moment, because the virtual dimension is way smaller by using localized orbitals. But for that I need to implement the full 4-RDM instead of the diagonal one, and that is not for the very near future. The cumulant approximation is also ready on the other hand, but will only be used in conjunction with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in . File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy']lowername. File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'); ```. For the record I copy my file 'pymodule.py' here:. ```; import psi4; import re; import os; import inputparser; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; import p4util; from p4xcpt import *. def run_dmrg(name, **kwargs):; r""""""Function encoding ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1592,update,updated,1592,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,1,['update'],['updated']
Deployability,"ystem time = 0.37 seconds = 0.01 minutes; total time = 1 seconds = 0.02 minutes. ===== Begin fort.56 input for MRCC ======; 3 1 0 0 1 0 0 1 0 1 1 1 0 0 0 6 0 0 0.00 0 48000; ex.lev,nsing,ntrip, rest,CC/CI, dens,conver, symm, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; ===== End fort.56 input for MRCC ======; **********************************************************************; MRCC program system; **********************************************************************. Written by; Mihaly Kallay, Peter R. Nagy, David Mester, Zoltan Rolik, Gyula Samu,; Jozsef Csontos, Jozsef Csoka, P. Bernat Szabo, Laszlo Gyevi-Nagy,; Bence Hegely, Istvan Ladjanszki, Lorant Szegedy, Bence Ladoczki,; Klara Petrov, Mate Farkas, Pal D. Mezei, and Adam Ganyecz. Department of Physical Chemistry and Materials Science; Budapest University of Technology and Economics; Budapest P.O.Box 91, H-1521 Hungary. www.mrcc.hu. Release date: February 22, 2020. ************************ 2020-04-12 06:03:22 *************************; Executing minp... Reading input from MINP... Input file:. Checking keyword combinations... Basis set is not specified!. Fatal error in exec minp.; Program will stop. ************************ 2020-04-12 06:03:22 *************************; Error at the termination of mrcc.; **********************************************************************; ```. As it so happens, I was running `mrccsdt` not too long ago on the CCQC cluster. What I see looks like ; ```; Generating fort.55 integral file...done.; Generating fort.56 input file...done. *** tstop() called on n081 at Sun Mar 8 14:10:25 2020; Module time: ; user time = 1.90 seconds = 0.03 minutes; system time = 0.87 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes; Total time: ; user time = 164.68 seconds = 2.74 minutes; system time = 15.26 seconds = 0.25 minutes; total time = 2719 seconds = 45.32 minutes. ===== Begin fort.56 input for MRCC ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866:1626,Release,Release,1626,https://psicode.org,https://github.com/psi4/psi4/issues/1866,1,['Release'],['Release']
Deployability,"ython3.5/site-packages/v2rdm_casscf/pymodule.py:66: RuntimeError; ---------------------------------------------- Captured stdout call -----------------------------------------------; N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A; =========================== 1 failed, 15 passed, 2 skipped, 1 xfailed in 201.46 seconds ===========================; ```. </details>; Also here is the current status of the conda installation:; <details>. ```bash; je714@guanine:~$ conda list; # packages in environment at /home/je714/psi4conda:; #; alabaster 0.7.10 py35_0; babel 2.4.0 py35_0; bzip2 1.0.6 3; cffi 1.9.1 py35_0; chemps2 1.8.3 5; cloog 0.18.0 0; cmake 3.6.3 0; conda 4.3.16 py35_0; conda-env 2.6.0 0; cryptography 1.7.1 py35_0; curl 7.52.1 0; dftd3 3.2.0 7; erd 3.0.6 0; expat 2.1.0 0; gcc-5 5.2.0 1; gcc-5-mp 5.2.0 0; gcp 2.0.1 0; gdma 2.2.6 2; gmp 6.1.0 0; hdf5 1.8.17 1; idna 2.2 py35_0; imagesize 0.7.1 py35_0; isl 0.12.2 0; jinja2 2.9.5 py35_0; libefp 1.4.1 3; libffi 3.2.1 1; libint 1.1.6 0; markupsafe 0.23 py35_2; mkl 2017.0.1 0; mpc 1.0.1 0; mpfr 3.1.2 0; ncurses 5.9 10; numpy 1.12.1 py35_0; openssl 1.0.2k 1; pcmsolver 1.1.10 py35_0; psi4 1.1rc1+6db9b1f py35_0 psi4/label/devel; psi4-deps 1.0 py35_1; py 1.4.33 py35_0; pyasn1 0.2.3 py35_0; pycosat 0.6.2 py35_0; pycparser 2.17 py35_0; pygments 2.2.0 py35_0; pyopenssl 16.2.0 py35_0; pytest 3.0.7 py35_0; python 3.5.3 1; pytz 2017.2 py35_0; readline 6.2 2; requests 2.13.0 py35_0; ruamel_yaml 0.11.14 py35_1; setuptools 27.2.0 py35_0; simint 0.7 0; six 1.10.0 py35_0; snowballstemmer 1.2.1 py35_0; sqlite 3.13.0 0; tk 8.5.18 0; v2rdm_casscf 0.2.1 py35_0; xz 5.2.2 1; yaml 0.1.6 0; zlib 1.2.8 3; je714@guanine:~$ conda info -e; # conda environments:; #; root * /home/je714/psi4conda; je714@guanine:~$ python --version; Python 3.5.3 :: Continuum Analytics, Inc.; ```. </details>. Also, after following this path of installation, do I have to manually change the PYTHONPATH to make it importable as a module?. Thanks for any comments!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:7949,install,installation,7949,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['install'],['installation']
Deployability,"ython; basis_sets = ['STO-3G','6-31g','6-311g','6-31+G','6-31G*','6-31+G*',; '6-311G*','6-311+G**','cc-pVDZ','cc-pVTZ']. B = psi4.geometry(""""""; 0 2; B; """"""). bs, es, wfns = [], [], []. for basis_set in basis_sets:; ; psi4.set_options({'reference': 'uhf','basis': basis_set}); e, wfn = psi4.energy('hf',return_wfn=True); ; es.append(e); wfns.append(wfn.basisset().nbf()); bs.append(basis_set). ```; #### Problem description. While trying to run the above code, I am sometimes able to get 1-4 of the basis sets energies. After I run this block, if I try to run another block with one of the basis sets that has already worked, it will run. However if I try it with one of the basis sets that did not work, it will raise the RuntimeError shown below. I have tried placing inside the loop all combinations of `psi4.core.clean()`, `psi4.core.clean_variables()`, and `psi4.core.clean_options()`, but it still does not work. I believe my installation to be fine, as I can manually restart the kernel and obtain all the basis sets required, albeit only after restarting the kernel each time. #### Version; `psi4.__version__`: '1.4a2.dev313'. ```python; --------------------------------------------------------------------; RuntimeError Traceback (most recent call last); <ipython-input-7-95f03e942086> in <module>; 9 ; 10 psi4.set_options({'reference': 'uhf','basis': basis_set}); ---> 11 e, wfn = psi4.energy('hf',return_wfn=True); 12 ; 13 print(""energy ="",e,"" and number of basis functions ="", wfn.basisset().nbf()). /usr/local/psi4/lib/psi4/driver/driver.py in energy(name, **kwargs); 568 shutil.copy(item, targetfile); 569 ; --> 570 wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); 571 ; 572 for postcallback in hooks['energy']['post']:. /usr/local/psi4/lib/psi4/driver/procrouting/proc.py in run_scf(name, **kwargs); 2180 ; 2181 ; -> 2182 scf_wfn = scf_helper(name, post_scf=False, **kwargs); 2183 returnvalue = scf_wfn.energy(); 2184 . /usr/local/psi4/lib/psi4/driver/proc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1794:978,install,installation,978,https://psicode.org,https://github.com/psi4/psi4/issues/1794,1,['install'],['installation']
Deployability,"“; At present, only SCF quantities will appear in the FCHK.”. That’s not true - both the SCF and post-HF quantities are printed out. The code just assumes that if ref_wfn exists, the main density is a correlated one. Susi Lehtola; Sent from my phone so excuse my brevity. On 2 Feb 2019, at 18.20, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. @loriab approved this pull request. I added a commit with some notes. Very glad to have this patch up. Thanks!. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/pull/1475#pullrequestreview-199353163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ5YM_MNpT_blnZqjipAEXi8HLMe3ks5vJbrZgaJpZM4Z_OW5>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1475#issuecomment-459979332:472,patch,patch,472,https://psicode.org,https://github.com/psi4/psi4/pull/1475#issuecomment-459979332,1,['patch'],['patch']
Deployability,"─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1b,<1.1.2a , which can be installed;; │ ├─ python [2.7.16|2.7.17] would require; │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ └─ python 2.7.18, which can be installed;; ├─ psi4 1.1+add49b9 would require; │ └─ gcc-5-mp , which requires; │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ └─ blas 1.0 mkl, which can be installed;; └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; └─ pychemps2 1.7.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:8360,install,installed,8360,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"│ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /███████████████████████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2376,install,installed,2376,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"│ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔█",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2569,install,installed,2569,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be insta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:4531,install,installed,4531,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ op",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:7689,install,installed,7689,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.8']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:1367,install,installed,1367,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4-rt', 'python=3.6']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:1744,install,installed,1744,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Energy Efficiency,"								 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10659,Energy,Energy,10659,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"								 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 				",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10721,Energy,Energy,10721,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,						 Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]			 Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]			 Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000								 Nuclear repulsion = 0.000000000000000. Charge = 0											 Charge = 0; Multiplicity = 1											 Multiplicity = 1; Electrons = 10											 Electrons = 10; Nalpha = 5											 Nalpha = 5; Nbeta = 5											 Nbeta = 5. ==> Algorithm <==											 ==> Algorithm <==. SCF Algorithm Type is DIRECT.										 SCF Algorithm Type is DIRECT.; DIIS enabled.												 DIIS enabled.; MOM disabled.												 MOM disabled.; Fractional occupation disabled.									 Fractional occupation disabled.; Guess Type is CORE.											 Guess Type is CORE.; Energy threshold = 1.00e-06										 Energy threshold = 1.00e-06; Density threshold = 1.00e-05										 Density threshold = 1.00e-05; Integral threshold = 1.00e-12										 Integral threshold = 1.00e-12. ==> Primary Basis <==											 ==> Primary Basis <==. -AO BASIS SET INFORMATION:									 |	 Basis Set: CC-PVDZ; Name = CC-PVDZ								 |	 Blend: CC-PVDZ; Blend = CC-PVDZ								 |	 Number of shells: 6; Total number of shells = 6									 |	 Number of basis function: 14; Number of primitives = 22									 |	 Number of Cartesian functions: 15; Number of AO = 15									 |	 Spherical Harmonics?: true; Number of SO = 14									 |	 Max angular momentum: 2; Maximum AM = 2									 <; Spherical Harmonics = TRUE								 <; 												 <; -Contraction Scheme:										 <; Atom Type All Primitives // Shells:							 <; ------ ------ --------------------------							 <; 1 NE 17s 4p 1d // 3s 2p 1d 							 <. ==> DFT Potential <==											 ==> DFT Potential <==. => Composite Functional: FT97 <= 									 => Composite Functional:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:3124,Energy,Energy,3124,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"					 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|					 Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -123.06842016548131 -1.23068e+02 5.10688e-01 DIIS			 |	 @RKS iter 1: -123.27362297901736 -1.23274e+02 1.80808e+04 DIIS; @RKS iter 2: -124.46188217449202 -1.39346e+00 6.10863e-01 DIIS			 |	 @RKS iter 2: -73.76905164751832 4.95046e+01 8.29835e+08 DIIS; @RKS iter 3: -128.81098734456091 -4.34911e+00 6.36107e-02 DIIS			 |	 @RKS iter 3: -66.70632235195494 7.06273e+00 6.43558e+07 DIIS; @RKS iter 4: -128.84997903672445 -3.89917e-02 3.37243e-03 DIIS			 |	 Occupation by irrep:; @RKS iter 5: -128.85006926342885 -9.02267e-05 1.88570e-03 DIIS			 |	 Ag B1g B2g B3g Au B1u B2u B3u ; @RKS iter 6: -128.85010506058651 -3.57972e-05 1.22444e-04 DIIS			 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; @RKS iter 7: -128.85010520037952 -1.39793e-07 1.18298e-05 DIIS			 <; @RKS iter 8: -128.85010519896633 1.41318e-09 2.04953e-05 DIIS			 <; @RKS iter 9: -128.85010519995217 -9.85835e-10 7.24431e-06 DIIS			 <; Energy and wave function converged.								 <; 												 <; 												 <; ==> Post-Iterations <==									 <; 												 <; Electrons on quadrature grid:								 <; Ntotal = 9.9999999997 ; deviation = -3.407e-10 					 <; 												 <; Orbital Energies [Eh]									 <; ---------------------									 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.7559918",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:9346,Energy,Energy,9346,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"			 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 >	 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. *** tstop() called on psinet at Tue Jan 5 23:59:30 2021					 |	 @RKS",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10830,Energy,Energy,10830,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"	 <; Electrons on quadrature grid:								 <; Ntotal = 9.9999999997 ; deviation = -3.407e-10 					 <; 												 <; Orbital Energies [Eh]									 <; ---------------------									 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]		",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10558,Energy,Energy,10558,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency," 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by QChem reproduce the results provided in the Trofimov, Stelter, Schirmer paper. However, the energies provided by Psi4 seem to have an inconsistent deviation from the values: for some states, the energies reported are near e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2388,energy,energy,2388,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0; 11 8 4 -0.2003286173 -0.0000000000 0.0000000230 0. CISD iterations converged!. CISD variational energy: -0.200328617292; CISD transition energy: -0.200328617850. OS SCS-MP2 correlation energy: -0.179813193864; SS SCS-MP2 correlation energy: -0.016670275217; SCS-MP2 correlation energy: -0.196483469081; * SCS-MP2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:10701,Allocate,Allocate,10701,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Allocate'],['Allocate']
Energy Efficiency," # Q-Chem; > e_opt = -139.5573922 # Q-Chem; > #norm_g_opt # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; > ; > # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); > compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); > compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(odd_g_start, g0, 3, 'start grad'); > ; > def test_badodd_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); > compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); > compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'); > ; > test_norm_start(normz); > test_zero_grad(normz); > ; > # And behold, the initial gradient matches Q-Chem, the optimization; > ; > # progresses nicely, the RMS Force column goes to zero, and the gradient; > ; > # at the end is zero.; > ; > # start nre....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:3412,ENERGY,ENERGY,3412,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['ENERGY'],['ENERGY']
Energy Efficiency, #2: adc2 ............................. Passed 43.73 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 11.68 sec; Start 5: casscf-sa-sp; 12/411 Test #3: casscf-fzc-sp .................... Passed 19.26 sec; Start 6: ao-casscf-sp; 13/411 Test #6: ao-casscf-sp ..................... Passed 8.25 sec; Start 7: casscf-sp; 14/411 Test #5: casscf-sa-sp ..................... Passed 23.99 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.23 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 124.34 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 13.78 sec; Start 11: cbs-delta-energy; 18/411 Test #7: casscf-sp ........................ Passed 38.07 sec; Start 12: cbs-parser; 19/411 Test #10: castup3 .......................... Passed 15.65 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #316: sapt2 ............................ Passed 350.80 sec; Start 14: cbs-xtpl-energy; 21/411 Test #394: python-vibanalysis ............... Passed 958.22 sec; Start 15: cbs-xtpl-freq; 22/411 Test #14: cbs-xtpl-energy .................. Passed 14.64 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #15: cbs-xtpl-freq .................... Passed 9.77 sec; Start 17: cbs-xtpl-opt; 24/411 Test #12: cbs-parser ....................... Passed 69.31 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #16: cbs-xtpl-gradient ................ Passed 32.38 sec; Start 20: cc1; 26/411 Test #19: cbs-xtpl-wrapper ................. Passed 84.37 sec; Start 21: cc10; 27/411 Test #17: cbs-xtpl-opt ..................... Passed 118.78 sec; Start 22: cc11; 28/411 Test #20: cc1 .............................. Passed 108.09 sec; Start 23: cc12; 29/411 Test #21: cc10 ............................. Passed 56.95 sec; Start 24: cc13; 30/411 Test #22: cc11 ............................. Passed 46.44 sec; Start 26: cc13b; 31/411 Test #23: cc12 ............................. Passed 31.76 sec; Start 27: cc13c; 32/411 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:2142,energy,energy,2142,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency, #303: pywrap-basis ..................... Passed 17.25 sec; Start 10: castup3; 231/413 Test #102: cubeprop ......................... Passed 10.10 sec; Start 84: cdomp2-1; 232/413 Test #5: casscf-sa-sp ..................... Passed 15.42 sec; Start 228: mp2-1; 233/413 Test #368: dft-smoke ........................ Passed 15.59 sec; Start 367: cubeprop-esp; 234/413 Test #326: sapt8 ............................ Passed 15.45 sec; Start 288: props3; 235/413 Test #352: dft-custom ....................... Passed 16.19 sec; Start 219: mints6; 236/413 Test #342: soscf-large ...................... Passed 14.89 sec; Start 91: cepa1; 237/413 Test #141: dfomp2-1 ......................... Passed 13.41 sec; Start 287: props2; 238/413 Test #199: freq-isotope1 .................... Passed 17.04 sec; Start 126: dfccsdl1; 239/413 Test #243: ocepa-grad1 ...................... Passed 15.58 sec; Start 370: scf-freq1; 240/413 Test #340: scf7 ............................. Passed 17.37 sec; Start 14: cbs-xtpl-energy; 241/413 Test #268: opt1-fd .......................... Passed 14.23 sec; Start 139: dfmp2-grad4; 242/413 Test #110: dcft2 ............................ Passed 11.74 sec; Start 129: dfccsdt1; 243/413 Test #84: cdomp2-1 ......................... Passed 10.02 sec; Start 245: ocepa1; 244/413 Test #367: cubeprop-esp ..................... Passed 9.60 sec; Start 159: dfrasscf-sp; 245/413 Test #10: castup3 .......................... Passed 13.10 sec; Start 359: tu4-h2o-freq; 246/413 Test #228: mp2-1 ............................ Passed 12.23 sec; Start 371: dft-jk; 247/413 Test #288: props3 ........................... Passed 13.97 sec; Start 272: opt4; 248/413 Test #219: mints6 ........................... Passed 12.99 sec; Start 343: soscf-ref; 249/413 Test #126: dfccsdl1 ......................... Passed 12.21 sec; Start 374: dft-custom-hybrid; 250/413 Test #287: props2 ........................... Passed 14.05 sec; Start 337: scf4; 251/413 Test #245: ocepa1 ........................... Passed 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:22621,energy,energy,22621,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency, #305: pywrap-checkrun-rohf ............. Passed 171.95 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 2.08 sec; Start 392: python-cc54; 378/411 Test #374: dft-custom-gga ................... Passed 29.34 sec; Start 393: python-3-index-transforms; 379/411 Test #391: python-mints2 .................... Passed 3.28 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.88 sec; Start 396: python-memdfjk; 381/411 Test #396: python-memdfjk ................... Passed 0.92 sec; Start 397: json-v11-energy; 382/411 Test #397: json-v11-energy .................. Passed 3.85 sec; Start 398: json-v11-gradient; 383/411 Test #393: python-3-index-transforms ........ Passed 10.30 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 3.98 sec; Start 400: json-schema-1-ghost; 385/411 Test #400: json-schema-1-ghost .............. Passed 1.26 sec; Start 401: json-schema-1-orient; 386/411 Test #399: json-schema-1-energy ............. Passed 3.33 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 403: json-schema-1-gradient; 388/411 Test #401: json-schema-1-orient ............. Passed 2.05 sec; Start 404: json-schema-1-properties; 389/411 Test #392: python-cc54 ...................... Passed 17.13 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.61 sec; Start 406: skeletonaointegrals; 391/411 Test #404: json-schema-1-properties ......... Passed 1.34 sec; Start 407: skeletondfmp2; 392/411 Test #405: skeleton ......................... Passed 1.17 sec; Start 408: skeletonmointegrals; 393/411 Test #406: skeletonaointegrals .............. Passed 1.57 sec; Start 409: skeletonscf; 394/411 Test #409: skeletonscf ...................... Passed 0.65 sec; Start 410: skeletonsointegrals; 395/411 Test #408: skeletonmointegrals .............. Passed 2.19 sec; Start 411: skelet,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:36226,energy,energy,36226,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency, #390: python-mints9 .................... Passed 1.89 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.96 sec; Start 392: python-cc54; 386/411 Test #389: python-pubchem ................... Passed 50.14 sec; Start 393: python-3-index-transforms; 387/411 Test #373: dft-custom-mgga .................. Passed 175.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.81 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 0.95 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.53 sec; Start 398: json-v11-gradient; 391/411 Test #393: python-3-index-transforms ........ Passed 10.54 sec; Start 399: json-schema-1-energy; 392/411 Test #398: json-v11-gradient ................ Passed 2.05 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 1.58 sec; Start 401: json-schema-1-orient; 394/411 Test #399: json-schema-1-energy ............. Passed 4.08 sec; Start 402: json-schema-1-throws; 395/411 Test #401: json-schema-1-orient ............. Passed 2.72 sec; Start 403: json-schema-1-gradient; 396/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 404: json-schema-1-properties; 397/411 Test #403: json-schema-1-gradient ........... Passed 1.76 sec; Start 405: skeleton; 398/411 Test #404: json-schema-1-properties ......... Passed 1.78 sec; Start 406: skeletonaointegrals; 399/411 Test #392: python-cc54 ...................... Passed 25.14 sec; Start 407: skeletondfmp2; 400/411 Test #405: skeleton ......................... Passed 1.92 sec; Start 408: skeletonmointegrals; 401/411 Test #406: skeletonaointegrals .............. Passed 2.03 sec; Start 409: skeletonscf; 402/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 410: skeletonsointegrals; 403/411 Test #407: skeletondfmp2 .................... Passed 1.80 sec; Start 411: skelet,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:36850,energy,energy,36850,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency," #499: mrcc-ccsdt .......................***Failed 0.62 sec; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /tmp/mrcc_67625/KEYWD; Image PC Routine Line Source; dmrcc 0000000001284F08 Unknown Unknown Unknown; dmrcc 00000000012A12A2 Unknown Unknown Unknown; dmrcc 00000000004AE4BD Unknown Unknown Unknown; dmrcc 0000000000507E55 Unknown Unknown Unknown; dmrcc 000000000040D9DD Unknown Unknown Unknown; dmrcc 00000000004021AA Unknown Unknown Unknown; dmrcc 0000000000400DF2 Unknown Unknown Unknown; dmrcc 00000000013571F9 Unknown Unknown Unknown; dmrcc 0000000000400CCA Unknown Unknown Unknown; Traceback (most recent call last):; File ""/home/gytibor/psi4/objdir/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 599, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4732, in run_mrcc; for line in open('iface'):. FileNotFoundError: [Errno 2] No such file or directory: 'iface'. Printing out the relevant lines from the Psithon --> Python processed input file:; h 1 1.0 2 104.5; """""",""h2o""); core.IO.set_default_namespace(""h2o""); core.set_global_option(""BASIS"", ""cc-pvdz""); core.set_global_option(""FREEZE_CORE"", ""true""); --> energy('mrccsdt'); compare_values( 8.801465529972, variable(""NUCLEAR REPULSION ENERGY""), 6, 'NRE'); compare_values(-76.021418445155, variable(""SCF TOTAL ENERGY""), 6, 'SCF'); compare_values( -0.204692406830, variable(""MP2 CORRELATION ENERGY"") , 6, 'MP2 correlation'); compare_values( -0.217715210258, variable(""CCSDT CORRELATION ENERGY""), 6, 'CCSDT correlation'); compare_values(-76.239133655413, variable(""CURRENT ENERGY""), 6, 'CCSDT'). !-----------------------------------------------!; ! !; ! [Errno 2] No such file or directory: 'iface' !; ! !; !-----------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497:1907,energy,energy,1907,https://psicode.org,https://github.com/psi4/psi4/issues/2497,6,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency, #50: cc32 ............................. Passed 47.12 sec; Start 210: gibbs; 33/415 Test #129: dfccsd-t-grad1 ................... Passed 103.60 sec; Start 149: dfomp3-1; 34/415 Test #309: pywrap-alias ..................... Passed 141.43 sec; Start 346: scf5; 35/415 Test #94: ci-multi ......................... Passed 59.86 sec; Start 317: pywrap-db1; 36/415 Test #112: dcft3 ............................ Passed 75.08 sec; Start 136: dfmp2-ecp; 37/415 Test #128: dfccsd-grad1 ..................... Passed 94.95 sec; Start 263: omp2p5-2; 38/415 Test #11: cbs-delta-energy ................. Passed 615.43 sec; Start 102: ci-property; 39/415 Test #3: casscf-fzc-sp .................... Passed 55.64 sec; Start 256: omp2-2; 40/415 Test #210: gibbs ............................ Passed 51.08 sec; Start 403: python-cc54; 41/415 Test #136: dfmp2-ecp ........................ Passed 32.87 sec; Start 323: rasscf-sp; 42/415 Test #149: dfomp3-1 ......................... Passed 52.09 sec; Start 14: cbs-xtpl-energy; 43/415 Test #346: scf5 ............................. Passed 46.11 sec; Start 5: casscf-sa-sp; 44/415 Test #317: pywrap-db1 ....................... Passed 41.80 sec; Start 85: cdomp2-1; 45/415 Test #263: omp2p5-2 ......................... Passed 30.33 sec; Start 179: extern1; 46/415 Test #102: ci-property ...................... Passed 28.56 sec; Start 386: pywrap-bfs; 47/415 Test #256: omp2-2 ........................... Passed 32.02 sec; Start 127: dfccsdl1; 48/415 Test #371: x2c1 ............................. Passed 130.82 sec; Start 4: casscf-semi; 49/415 Test #5: casscf-sa-sp ..................... Passed 14.54 sec; Start 205: fnocc4; 50/415 Test #14: cbs-xtpl-energy .................. Passed 17.93 sec; Start 377: dft-smoke; 51/415 Test #85: cdomp2-1 ......................... Passed 16.80 sec; Start 126: dfccsd1; 52/415 Test #116: dcft7 ............................ Passed 408.77 sec; Start 132: dfmp2-1; 53/415 Test #4: casscf-semi ...................... Passed 15.25 sec; Start 25,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:4355,energy,energy,4355,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency," 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1421,ENERGY,ENERGY,1421,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,1,['ENERGY'],['ENERGY']
Energy Efficiency," (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents should be considered experimental and subject to change.; - [x] Dipole derivatives through finite difference of dipoles added, so IR intensities available; - [x] The dummy wavefunctions returned from wrappers always had some questionable properties (e.g., single method for mixed method, largeset HF basis for cbs wavefunction) can be even less realistic (e.g., always def2-svp basis for cbs).; - [x] n-body qcvars renamed (grace period applies); ```; ""CP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""NOCP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED TOTAL ENERGY"": (""NOCP-CORRECTED TOTAL ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY"", 1.7),; ""VALIRON-MAYER FUNCTION COUTERPOISE TOTAL ENERGY"": (""VALIRON-MAYER FUNCTION COUNTERPOISE TOTAL ENERGY"", 1.7), # note misspelling; ""VALIRON-MAYER FUNCTION COUTERPOISE INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY"", 1.7),; ``` ; - [x] added managed mode for scf gradient. it's not wholly effective at consolidating code, though, since only trigge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:6027,ENERGY,ENERGY,6027,https://psicode.org,https://github.com/psi4/psi4/pull/2575,2,['ENERGY'],['ENERGY']
Energy Efficiency," (a.u.), 11.4718175 (eV); 	3 A state: 0.4538994 (a.u.), 12.3512305 (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1602,energy,energy,1602,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1998,energy,energy,1998,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1668,energy,energy,1668,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
