quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Security,"or message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5540,hash,hashCode,5540,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['hash'],['hashCode']
Security,"orm. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2631,hash,hashCode,2631,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['hash'],['hashCode']
Security,"ouble, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of object fields, accessed via reflection. createPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; createPane() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. createPane(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. createPane(ObservableValue<ImageData<T>>) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createPane(ObservableValue<ImageData<T>>, boolean) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createPathImage(ImageServer<BufferedImage>, ImagePlus, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Create a PathImage from an ImagePlus and region. createPathObjectIcon(PathObject, int, int) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:205540,access,accessed,205540,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessed']
Security,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2256,hash,hashCode,2256,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9542,hash,hashCode,9542,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12416,hash,hashCode,12416,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11723,hash,hashCode,11723,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15757,hash,hashCode,15757,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12158,hash,hashCode,12158,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['hash'],['hashCode']
Security,"output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:2506,hash,hashCode,2506,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['hash'],['hashCode']
Security,"ove tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the PathTool corresponding to the specified String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MOVE; public static final PathTool MOVE; Move tool. RECTANGLE; public static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended PathTool that can switch between drawing lines or arrows. POLYGON; public static final PathTool POLYGON; Polygon drawing tool (closed). POLYLINE; public static final PathTool POLYLINE; Polyline drawing tool (open). BRUSH; public static final PathTool BRUSH; Brush drawing tool. POINTS; public static fin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,1,['hash'],['hashCode']
Security,"owStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Workflow; public Workflow(). Method Details. getSteps; public List<WorkflowStep> getSteps(); Get an unmodifiable list of the steps. Returns:. getLastStep; public WorkflowStep getLastStep(); Get the last WorkflowStep in the workflow, or null if no steps are available. Returns:. addStep; public void addStep(WorkflowStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> ste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:2597,hash,hashCode,2597,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,1,['hash'],['hashCode']
Security,"ows IOException; Write a JavaFX image to the specified path. Parameters:; image - the image to write; path - the path to write the image; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). setChannelDisplayRange; public static void setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by number. Parameters:; channel - channel number (0-based index); minDisplay - ; maxDisplay - . setChannelDisplayRange; public static boolean setChannelDisplayRange(ImageData<BufferedImage> imageData,; int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by number. Parameters:; imageData - ; channel - channel number (0-based index); minDisplay - ; maxDisplay - ; Returns:; true if it was possible to set the display range, false otherwise (e.g. if the image could not be accessed,; or the channel was out of range). setChannelDisplayRange; public static void setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by name. Parameters:; channelName - ; minDisplay - ; maxDisplay - . setChannelDisplayRange; public static void setChannelDisplayRange(ImageData<BufferedImage> imageData,; String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by name. Parameters:; imageData - ; channelName - ; minDisplay - ; maxDisplay - . saveAnnotationMeasurements; public static void saveAnnotationMeasurements(String path,; String... includeColumns); Save annotation measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:18320,access,accessed,18320,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['access'],['accessed']
Security,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1246,access,accessibleHelp,1246,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"p; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:3636,hash,hashCode,3636,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['hash'],['hashCode']
Security,"padding on each side. int; getX1(). Get the first horizontal padding (left of the image), in pixels. int; getX2(). Get the second horizontal padding (right of the image), in pixels. int; getXSum(). Get the total horizontal padding (sum of x1 and x2). int; getY1(). Get the first vertical padding (top of the image), in pixels. int; getY2(). Get the second vertical padding (bottom of the image), in pixels. int; getYSum(). Get the total vertical padding (sum of x1 and x2). boolean; isEmpty(). Returns true of the padding is zero. boolean; isSymmetric(). Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Padding; max(Padding padding). Compare two paddings, and take the larger padding value on all sides. Padding; subtract(Padding padding). Add another padding from this one. static Padding; symmetric(int pad). Get a padding object with 'pad' pixels on all sides. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getX1; public int getX1(); Get the first horizontal padding (left of the image), in pixels. Returns:. getX2; public int getX2(); Get the second horizontal padding (right of the image), in pixels. Returns:. getXSum; public int getXSum(); Get the total horizontal padding (sum of x1 and x2). Returns:. getY1; public int getY1(); Get the first vertical padding (top of the image), in pixels. Returns:. getY2; public int getY2(); Get the second vertical padding (bottom of the image), in pixels. Returns:. getYSum; public int getYSum(); Get the total vertical padding (sum of x1 and x2). Returns:. toString; public String toString(). Overrides:; toString in class Object. isSymmetric; public boolean isSymmetric(); Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Returns:. isEmpty; public boolean isEmpty(); Returns true of the padding is zero. Returns:. add; public Padding add(Padding padding); Add this padding",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html:1991,hash,hashCode,1991,javadoc/docs/qupath/lib/regions/Padding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html,1,['hash'],['hashCode']
Security,"path.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1374,hash,hashCode,1374,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,1,['hash'],['hashCode']
Security,"path.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1495,hash,hashCode,1495,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,1,['hash'],['hashCode']
Security,"pe>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1858,hash,hashCode,1858,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['hash'],['hashCode']
Security,"peSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1833,hash,hashCode,1833,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['hash'],['hashCode']
Security,"perty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuBar(). Method Details. systemMenubarProperty; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty(); Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3659,access,access,3659,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['access'],['access']
Security,"plying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT). Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformer; public ColorTransformer(). Method Details. getODNormalizedColor; public static int getODNormalizedColor(int rgb,; double minOD,; float offset,; float scale); Create a 'normalized' color for visualization.; ; This is achieved by converting RGB values to optical densities, putting the RGB ODs into; a 3x1 vector and normalizing this to unit length, then rescaling the result to give an RGB representation.; Because of the somewhat strange rescaling involved, the final RGB values produced should not be over-interpreted -; this is really intended for visualization, such as when interactively looking for regions of single stains; when selecting color deconvolution stain vectors. Parameters:; rgb - original 8-bit RGB values; minOD - the minimum OD; pixels with an OD less than this will be considered unstained, and shown as white; offset - brightness and contrast offset; scale - brightness and contrast scale",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:5911,hash,hashCode,5911,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['hash'],['hashCode']
Security,"predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OpenCVDnn.ModelType DEFAULT; Default Model class. DETECTION; public static final OpenCVDnn.ModelType DETECTION; Refers to DetectionModel. SEGMENTATION; public static final OpenCVDnn.ModelType SEGMENTATION; Refers to SegmentationModel. CLASSIFICATION; public static final OpenCVDnn.ModelType CLASSIFICATION; Refers to ClassificationModel. KEYPOINTS; public static final OpenCVDnn.ModelType KEYPOINTS; Refers to KeypointsModel. TEXT_RECOGNITION; public static final OpenCVDnn.ModelType TEXT_RECOGNITION; Refers to TextRecognitionModel. TEXT_DETECTION_DB; public static final OpenCVDnn.ModelType TEXT_DETECTION_DB; Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST; public static final OpenCVDnn.ModelType TEXT_DETECTION_EAST; Refers to TextDetectionModel_EAST. Method Details. values; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:1846,hash,hashCode,1846,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,1,['hash'],['hashCode']
Security,"protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this view",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:3880,access,access,3880,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['access'],['access']
Security,"pting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1348,hash,hashCode,1348,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['hash'],['hashCode']
Security,"ptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2025,hash,hashCode,2025,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['hash'],['hashCode']
Security,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:6875,validat,validated,6875,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['validat'],['validated']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2596,hash,hashCode,2596,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2462,hash,hashCode,2462,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2436,hash,hashCode,2436,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2447,hash,hashCode,2447,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"qupath.lib.gui.QuPathGUI. Get an unmodifiable observable list of all viewers. getAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Get an observable list of viewers. getAlphaComposite() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getAnalysisTabPane() - Method in class qupath.lib.gui.QuPathGUI. Access the main tab pane shown in the QuPath window. getAncestorList(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:328543,access,accessible,328543,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessible']
Security,"qupath.lib.images.servers.bioformats; Class OMEPixelParser.Builder. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Enclosing class:; OMEPixelParser. public static class OMEPixelParser.Builder; extends Object; Builder for instances of OMEPixelParser. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPixelParser; build(). Creates a new OMEPixelParser instance. OMEPixelParser.Builder; byteOrder(ByteOrder byteOrder);  ; OMEPixelParser.Builder; effectiveNChannels(int effectiveNChannels);  ; OMEPixelParser.Builder; isInterleaved(boolean isInterleaved);  ; OMEPixelParser.Builder; normalizeFloats(boolean normalizeFloats);  ; OMEPixelParser.Builder; pixelType(PixelType pixelType);  ; OMEPixelParser.Builder; samplesPerPixel(int[] samplesPerPixel);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. isInterleaved; public OMEPixelParser.Builder isInterleaved(boolean isInterleaved). Parameters:; isInterleaved - whether pixel values are interleaved; Returns:; the current builder. pixelType; public OMEPixelParser.Builder pixelType(PixelType pixelType). Parameters:; pixelType - the bit-depth of the image pixels; Returns:; the current builder. byteOrder; public OMEPixelParser.Builder byteOrder(ByteOrder byteOrder). Parameters:; byteOrder - the byte order of each pixel; Returns:; the current builder. effectiveNChannels; public OMEPixelParser.Builder effectiveNChannels(int effectiveNChannels). Parameters:; effectiveNChannels - the effective size of the C dimension of the image. This is not always; the number of channels, for example RGB values can be stored in one effective channel; Returns:; the current builder. normalizeFloats; public OMEPixelParser.Builder normalizeFloats(b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html:1339,hash,hashCode,1339,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,1,['hash'],['hashCode']
Security,"qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_THREE_PLUS. Default name for a class representing ""3+"" staining intensity (i.e. static final String; NAME_TWO_PLUS. Default name for a class representing ""2+"" staining intensity (i.e. static final PathClass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:1332,validat,validation,1332,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['validat'],['validation']
Security,"qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; OpenCVTypeAdapters - Class in qupath.opencv.io. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters() - Constructor for class qupath.opencv.io.OpenCVTypeAdapters;  ; OpenCVTypeAdapters.OpenCVTypeAdapter<T> - Class in qupath.opencv.io. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory - Class in qupath.opencv.io. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenCVTypeAdaptorFactory() - Constructor for class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; openFile(File) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a file in the native application. openImage(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. openImage(QuPathViewer, String) - Method in class qupath.lib.gui.QuPathGUI;  ; openImage(QuPathViewer, String, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a new whole slide image server, or ImageData. openImageEntry(ProjectImageEntry<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Open the image represented by the specified ProjectImageEntry. openInBrowser(String) - Static method in class qupath.lib.gui.QuPathGUI. Try to launch a browser window for a specified URL. opening(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:726062,access,access,726062,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"r Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(double spaceY); Set the vertical spacing between lines for any counting gri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:1661,hash,hashCode,1661,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html,1,['hash'],['hashCode']
Security,"r and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:2338,hash,hashCode,2338,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['hash'],['hashCode']
Security,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1309,hash,hashCode,1309,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,1,['hash'],['hashCode']
Security,"r indicating pixel values for a channel indicate levels of transparency. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ImageChannel>; getChannelList(String... names). Convert an array of channel names into a list of ImageChannel using default colors. Integer; getColor(). Color used to display the output channel. static Integer; getDefaultChannelColor(int channel). Get the default color for a specified channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. TRANSPARENT; public static final Integer TRANSPARENT; Special color indicating pixel values for a channel indicate levels of transparency. RED; public static final ImageChannel RED; Default red channel for RGB images. GREEN; public static final ImageChannel GREEN; Default green channel for RGB images. BLUE; public static final ImageChannel BLUE; Default blue channel for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:1864,hash,hashCode,1864,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,1,['hash'],['hashCode']
Security,"r of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2206,hash,hashCode,2206,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['hash'],['hashCode']
Security,"r server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guarantee",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3077,hash,hashCode,3077,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['hash'],['hashCode']
Security,"r tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569582,hash,hashCode,569582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"r. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:2806,hash,hashCode,2806,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['hash'],['hashCode']
Security,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1930,hash,hashCode,1930,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,3,['hash'],['hashCode']
Security,"r:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:1690,hash,hashCode,1690,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,1,['hash'],['hashCode']
Security,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html:1416,hash,hashCode,1416,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,1,['hash'],['hashCode']
Security,"r<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1552,hash,hashCode,1552,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['hash'],['hashCode']
Security,"rStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2328,hash,hashCode,2328,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['hash'],['hashCode']
Security,"rain was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569955,hash,hashCode,569955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"raphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean value); Set the selected property of the action. Parameters:; value - ; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:2579,hash,hashCode,2579,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,1,['hash'],['hashCode']
Security,"rchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initia",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:3181,hash,hashCode,3181,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['hash'],['hashCode']
Security,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:2654,hash,hashCode,2654,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['hash'],['hashCode']
Security,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileObject.Status getStatus(); Get the current status (pending, processing or done). Returns:. isProcessing; public boolean isProcessing(); Returns true if setIsProcessing(true) has recently been called. Returns:. isComplete; public boolean isComplete(); Returns true if setComplete() has been called. Returns:. setComplete; public void setComplete(boolean wasCancelled); Notify the tile that its processing is done.; ; This both changes its display color, and triggers a check to see if overl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:3281,hash,hashCode,3281,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['hash'],['hashCode']
Security,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2173,hash,hashCode,2173,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['hash'],['hashCode']
Security,"redImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4101,hash,hashCode,4101,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['hash'],['hashCode']
Security,"referred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:5556,hash,hashCode,5556,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['hash'],['hashCode']
Security,"result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3978,hash,hashCode,3978,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['hash'],['hashCode']
Security,"rete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2449,hash,hashCode,2449,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['hash'],['hashCode']
Security,"rfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Tile processing complete. Method Details. values; public static ParallelTileObject.Status[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ParallelTileObject.Status valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html:1584,hash,hashCode,1584,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,1,['hash'],['hashCode']
Security,"ription; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2090,hash,hashCode,2090,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['hash'],['hashCode']
Security,"ription; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1677,hash,hashCode,1677,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['hash'],['hashCode']
Security,"rlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:1684,hash,hashCode,1684,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['hash'],['hashCode']
Security,"rm. ColorTransformTypeAdapter() - Constructor for class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; combineROIs(ROI, ROI, RoiTools.CombineOp) - Static method in class qupath.lib.roi.RoiTools. Combine two shape ROIs together. combineSelectedAnnotations(ImageData<?>, RoiTools.CombineOp) - Static method in class qupath.lib.gui.commands.Commands. Combine the selected annotations for the specified hierarchy. comboPasteEscape - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTask",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125390,access,access,125390,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"rned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1761,hash,hashCode,1761,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['hash'],['hashCode']
Security,"roviderClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns:. getArgs; public String[] getArgs(); Get the args array. This returns a clone of any original array. Returns:. buildOriginal; protected ImageServer<T> buildOriginal(); throws Exception. Specified by:; buildOriginal in class ImageServerBuilder.AbstractServerBuilder<T>; Throws:; Exception. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServerBuilder.ServerBuilder; Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. ImageServerBuilder.ServerBuilder.updateURIs(Map). updateURIs; public ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Description copied from interface: ImageServerBuilder.ServerBuilder; Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. ImageServerBuilder.ServerBuilder.getURIs(). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:4369,hash,hashCode,4369,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,3,['hash'],['hashCode']
Security,"rred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already been loaded. Parameters:; path - the image path (usually an absolute file path); Returns:; a vendor string if available, or null if OpenSlide could not be loaded or does not recognize the file. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:3041,access,access,3041,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['access'],['access']
Security,"rtPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, getCurrentScriptTab, getCurrentSyntax, getCurrentText, getSelectedText, getStage, pasteFromClipboard, promptToSetFontSize, scriptRunning, sendLogToConsoleProperty, showEditor, showScript, showScript, supportsFile. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RichScriptEditor; public RichScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getNewEditor; protected ScriptEditorControl<? extends Region> getNewEditor(). Overrides:; getNewEditor in class DefaultScriptEditor. applyCompletion; protected void applyCompletion(EditableText control,; AutoCompletions.Completion completion); Insert the text from the completion to the editable text. Parameters:; control - ; completion - . getNewConsole; protected ScriptEditorControl<? extends Region> getNewConsole(). Overrides:; getNewConsole in class DefaultScriptEditor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:2613,hash,hashCode,2613,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,1,['hash'],['hashCode']
Security,"ructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['hash'],['hashCode']
Security,"rver. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2794,hash,hashCode,2794,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['hash'],['hashCode']
Security,"r | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.OMEPyramidSeries. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.OMEPyramidSeries; extends Object; Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; writePyramid(String path). Deprecated.; use writeSeries(String) instead. void; writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series). Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. void; writeSeries(String path). Write an image to the given file. void; writeSeries(IFormatWriter writer,; IMetadata meta,; int series). Append an image as a specific series. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writePyramid; @Deprecated; public void writePyramid(String path); throws FormatException,; IOException; Deprecated.; use writeSeries(String) instead. Write an OME-TIFF pyramidal image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writeSeries; public void writeSeries(String path); throws FormatException,; IOException; Write an image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writePyramid; @Deprecated; public void writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series); throws FormatException,; IOException; Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. Append an image as a specific series to a pyramidal OME TIFF. Parameters:; writer - the current writer; it should already be initialized, with metadata and ID set; meta - the metadata, which should already have been initialized",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html:1281,hash,hashCode,1281,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,1,['hash'],['hashCode']
Security,"s are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipMarker - ; ipMask - ; Returns:. openingByReconstruction; public static ImageProcessor openingByReconstruction(ImageProcessor ip,; double radius); Apply opening by reconstruction, with the specified minimum filter radius. Parameters:; ip - ; radius - ; Returns:. closingByReconstruction; public static ImageProcessor closingByReconstruction(ImageProcessor ip,; double radius); Apply a morphological closing by reconstruction. Parameters:; ip - ImageProcessor to process; radius - minimum filter radius; Returns:; processed image. imposeMinima; public static void imposeMinima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. Parameters:; fp - ; roi - . imposeMaxima; public static void imposeMaxima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has regi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:3213,validat,validateMarkerMask,3213,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,2,['validat'],['validateMarkerMask']
Security,"s child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569299,hash,hashCode,569299,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"s in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OMEPyramidWriter.ChannelExportType DEFAULT; Leave it up to the writer to choose the appropriate method. INTERLEAVED; public static final OMEPyramidWriter.ChannelExportType INTERLEAVED; Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR; public static final OMEPyramidWriter.ChannelExportType PLANAR; Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). IMAGES; public static final OMEPyramidWriter.ChannelExportType IMAGES; Channels are stored as separate images (this is not yet supported!). Method Details. values; public static OMEPyramidWriter.ChannelExportType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:1896,hash,hashCode,1896,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,1,['hash'],['hashCode']
Security,"s qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569658,hash,hashCode,569658,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"s. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1933,hash,hashCode,1933,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['hash'],['hashCode']
Security,"s. Static functions to help work with RGB(A) colors using packed ints. ColorToolsAwt. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:9786,access,access,9786,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"s. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3233,hash,hashCode,3233,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['hash'],['hashCode']
Security,"s. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23752,hash,hashCode,23752,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['hash'],['hashCode']
Security,"s.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.stats.RunningStatistics;  ; size() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Number of entries in the array. size() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of non-NaN values added. size() - Method in interface qupath.lib.measurements.MeasurementList. Returns the number of measurements in the list. size() - Method in class qupath.lib.plugins.workflow.Workflow. Total number of steps in the workflow. size() - Method in class qupath.opencv.dnn.DnnShape. Total number of elements in a blob with this shape; This is the product of the lengths returned by DnnShape.getShape() or DnnShape.UNKNOWN_SHAPE. size(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred size ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:979960,access,accessible,979960,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessible']
Security,"s; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1347,hash,hashCode,1347,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['hash'],['hashCode']
Security,"s<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2149,hash,hashCode,2149,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['hash'],['hashCode']
Security,"sFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the processing steps applied to the ImageData. Returns:. setColorDeconvolution",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4172,hash,hashCode,4172,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['hash'],['hashCode']
Security,"senting the pixel height, in the stored units. double; getPixelHeightMicrons(). Get the pixel height in microns, or Double.NaN if this is unknown. String; getPixelHeightUnit(). Get a String representation of the preferred pixel height unit. Number; getPixelWidth(). Get the numeric value representing the pixel width, in the stored units. double; getPixelWidthMicrons(). Get the pixel width in microns, or Double.NaN if this is unknown. String; getPixelWidthUnit(). Get a String representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in microns, or Double.NaN if this is unknown. String; getZSpacingUnit(). Get a String representation of the preferred z-spacing unit. int; hashCode();  ; boolean; hasPixelSizeMicrons(). Returns true if the pixel width and height information in microns is known. boolean; hasZSpacingMicrons(). Returns true if the z-spacing is known in microns. int; nTimepoints(). Get the number of known time points. String; toString();  ; boolean; unitsMatch2D(). Returns true if the units for pixel width and height are the same. boolean; unitsMatch3D(). Returns true if the units for pixel width, height and z-spacing are the same. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. PIXEL; public static final String PIXEL; String to represent 'pixel' units. This is the default when no pixel size calibration is known. See Also:. Constant Field Values. MICROMETER; public static final String MICROMETER; String to represent 'micrometer' units. Z_SLICE; public static final String Z_SLICE; String to represent 'z-slice' units. See Also:. Constant Field Values. Method Details. createScaledInstance",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:2942,hash,hashCode,2942,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['hash'],['hashCode']
Security,"should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2642,hash,hashCode,2642,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['hash'],['hashCode']
Security,"sionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1366,secur,security,1366,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['secur'],['security']
Security,"some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:2273,hash,hashCode,2273,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['hash'],['hashCode']
Security,"splayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1512,hash,hashCode,1512,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,1,['hash'],['hashCode']
Security,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1144,access,access,1144,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['access'],['access']
Security,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:2222,hash,hashCode,2222,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['hash'],['hashCode']
Security,"st<PathObject>; createAnnotations(ROI parent). Create a list of PathAnnotationObject tiles from the input. List<Geometry>; createGeometries(Geometry parent). Create a list of Geometry tiles from the input. List<PathObject>; createObjects(ROI parent,; Function<ROI,PathObject> creator). Create a list of PathObject tiles from the input. List<ROI>; createROIs(ROI parent). Create a list of ROI tiles from the input. List<PathObject>; createTiles(ROI parent). Create a list of PathTileObject tiles from the input. Tiler.TileAlignment; getAlignment(). Get the tiling alignment. boolean; getCropToParent(). Check if the tiler is set to crop the output to the input parent. boolean; getFilterByCentroid(). Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. int; getTileHeight(). Get the height of output tiles. int; getTileWidth(). Get the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getTileWidth; public int getTileWidth(); Get the width of output tiles. Returns:; the width in pixels. getTileHeight; public int getTileHeight(); Get the height of output tiles. Returns:; the height in pixels. getCropToParent; public boolean getCropToParent(); Check if the tiler is set to crop the output to the input parent. Returns:; whether the tiler is set to crop output to the parent object. getAlignment; public Tiler.TileAlignment getAlignment(); Get the tiling alignment. Returns:; The current setting. getFilterByCentroid; public boolean getFilterByCentroid(); Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Returns:; The current setting. createGeometries; public List<Geometry> createGeometries(Geometry parent); Create a list of Geometry tiles from the input. These may; not all be rectangular based on the settings used. Parameters:; parent - the object that wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html:2285,hash,hashCode,2285,javadoc/docs/qupath/lib/objects/utils/Tiler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html,1,['hash'],['hashCode']
Security,"stable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1700,hash,hashCode,1700,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['hash'],['hashCode']
Security,"str; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1200,validat,validation,1200,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['validat'],['validation']
Security,"systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3029,hash,hashCode,3029,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['hash'],['hashCode']
Security,"t Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measurements. CHANGE_OTHER; public static final PathObjectHierarchyEvent.HierarchyEventType C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:2158,hash,hashCode,2158,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,1,['hash'],['hashCode']
Security,"t of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static final Tiler.TileAlignment TOP_RIGHT. CENTER_LEFT; public static final Tiler.TileAlignment CENTER_LEFT. CENTER; public static final Tiler.TileAlignment CENTER. CENTER_RIGHT; public static final Tiler.TileAlignment CENTER_RIGHT. BOTTOM_LEFT; public static final Tiler.TileAlignment BOTTOM_LEFT. BOTTOM_CENTER; public static final Tiler.TileAlignment BOTTOM_CENTER. BOTTOM_RIGHT; public static final Tiler.TileAlignment BOTTOM_RIGHT. Method Details. values; public static Tiler.TileAlignment[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1808,hash,hashCode,1808,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,1,['hash'],['hashCode']
Security,"t value will be ignored. Parameters:; request - ; Returns:. intersects; public boolean intersects(double x2,; double y2,; double w2,; double h2); Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. Parameters:; x2 - ; y2 - ; w2 - ; h2 - ; Returns:. contains; public boolean contains(int x,; int y,; int z,; int t); Check if this region contains a specified coordinate. Parameters:; x - ; y - ; z - ; t - ; Returns:. getX; public int getX(); Get the x coordinate of the region bounding box (top left). Returns:. getY; public int getY(); Get the y coordinate of the region bounding box (top left). Returns:. getWidth; public int getWidth(); Get the width of the region bounding box. Returns:. getHeight; public int getHeight(); Get the height of the region bounding box. Returns:. getZ; public int getZ(); Get the z-slice index for the region. Returns:. getT; public int getT(); Get the time point index for the region. Returns:. getMinX; public int getMinX(); Get the x coordinate of the top left of the region bounding box. Returns:. getMaxX; public int getMaxX(); Get the x coordinate of the bottom right of the region bounding box. Returns:. getMinY; public int getMinY(); Get the y coordinate of the top left of the region bounding box. Returns:. getMaxY; public int getMaxY(); Get the y coordinate of the bottom right of the region bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Get the z-slice and time point for this region as an ImagePlane. Returns:; Since:; v0.4.0 (replaces getPlane() for better consistency with other classes). getPlane; @Deprecated; public ImagePlane getPlane(); Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). Get the z-slice and time point for this region as an ImagePlane. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:5487,hash,hashCode,5487,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,3,['hash'],['hashCode']
Security,"t; qupath.imagej.processing.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform for ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8); Apply a watershed transform. Parameters:; ip - intensity image; ipLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html:1384,hash,hashCode,1384,javadoc/docs/qupath/imagej/processing/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html,1,['hash'],['hashCode']
Security,"tLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. LEGACY_KEY_UNIQUE_ID; @Deprecated; public static final String LEGACY_KEY_UNIQUE_ID; Deprecated.; The key used before v0.4.0 to represent a unique (usually patient) ID.; This was replaced by #KEY_CASE_ID. See Also:. Constant Field Values. KEY_CASE_ID; public static final String KEY_CASE_ID; Metadata key to store a case identify for the TMA core.; This can be used to group cores that belong to the same case. See Also:. Constant Field Values. KEY_OVERALL_SURVIVAL; public static final String KEY_OVERALL_SURVIVAL; Metadata key for an overall survival (temporal) value. See Also:. Constant Field Values. KEY_RECURRENCE_FREE_SURVIVAL; public static final String KEY_RECURRENCE_FREE_SURVIVAL; Metadata key for an recurrence-free survival (temporal) value. See Also:. Constant Field Values. KEY_OS_CENSORED; public static final String KEY_OS_CENSORED; Metadata key for an overall survival censored flag. See Also:. Constant Field Values. KEY_R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:3610,hash,hashCode,3610,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['hash'],['hashCode']
Security,"tProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1539,hash,hashCode,1539,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['hash'],['hashCode']
Security,"tSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores boundaries, not using them for classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2562,hash,hashCode,2562,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,1,['hash'],['hashCode']
Security,"tail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Returns:; a view depicting element fields. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1228,hash,hashCode,1228,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,2,"['access', 'hash']","['accessed', 'hashCode']"
Security,"takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SUBSTRING_TOKENIZER; public static final AutoCompletions.CompletionTokenizer SUBSTRING_TOKENIZER; A completion tokenizer that simply takes the first part of the text up to the caret position. JAVA_TOKENIZER; public static final AutoCompletions.CompletionTokenizer JAVA_TOKENIZER; A completion tokenizer that extracts a token used to determine Java completions. Constructor Details. AutoCompletions; public AutoCompletions(). Method Details. getComparator; public static Comparator<AutoCompletions.Completion> getComparator(); Get a comparator to order completions. Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText); Create a new completion with fixed display and completion text. Parameters:; declaringClass - the declaring class; choose null for static imports; displayText - the text to display; completionText - the te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:2189,hash,hashCode,2189,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,1,['hash'],['hashCode']
Security,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5802,sanitiz,sanitize,5802,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,6,['sanitiz'],['sanitize']
Security,"tatic methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1484,hash,hashCode,1484,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['hash'],['hashCode']
Security,"tatic void; writeImage(ImageServer<BufferedImage> server,; String path). Static helper method to write an image using Bio-Formats. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression). Static helper method to write an image using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region). Static helper method to write an image region using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT). Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writeImage; public void writeImage(String path); throws FormatException,; IOException; Write an image consisting of one or more series to the specified path. Parameters:; path - ; Throws:; FormatException; IOException; See Also:. createWriter(Collection); createWriter(OMEPyramidSeries...). createWriter; public static OMEPyramidWriter createWriter(OMEPyramidWriter.OMEPyramidSeries... series); Create a writer capable of writing an image with one or more series. Parameters:; series - ; Returns:. createWriter; public static OMEPyramidWriter createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series); Create a writer capable of writing an image with a collection of series. Parameters:; series - ; Returns:. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats.; This is primarily intended ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:3275,hash,hashCode,3275,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,1,['hash'],['hashCode']
Security,"tch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3591,hash,hashCode,3591,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['hash'],['hashCode']
Security,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3305,hash,hashCode,3305,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['hash'],['hashCode']
Security,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3800,hash,hashCode,3800,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['hash'],['hashCode']
Security,"ted Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1581,hash,hashCode,1581,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,1,['hash'],['hashCode']
Security,"tem menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1875,hash,hashCode,1875,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['hash'],['hashCode']
Security,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:2412,hash,hashCode,2412,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['hash'],['hashCode']
Security,"tener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1827,hash,hashCode,1827,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,1,['hash'],['hashCode']
Security,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2481,hash,hashCode,2481,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['hash'],['hashCode']
Security,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOExc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2475,hash,hashCode,2475,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['hash'],['hashCode']
Security,"th.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matric",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1344,hash,hashCode,1344,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,1,['hash'],['hashCode']
Security,th.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570253,hash,hashCode,570253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"th.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ROI.RoiType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html:1487,hash,hashCode,1487,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,1,['hash'],['hashCode']
Security,"th.opencv.tools.OpenCVTools. Convert a BufferedImage to an OpenCV Mat. imageToMatBGR(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. imageToMatRGB(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. imageTypeSettingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify how setting the image type should be handled for images when they are opened for the first time. imageUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). ImageWriter<T> - Interface in qupath.lib.images.writers. Interface for defining class that can write images. ImageWriterTools - Class in qupath.lib.images.writers. Static methods to access ImageWriter objects and write images. ImageWriterTools() - Constructor for class qupath.lib.images.writers.ImageWriterTools;  ; IMMUNE_CELLS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Immune cell classification. IMMUNE_CELLS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Immune cell classification. ImmutableDimension - Class in qupath.lib.geom. An immutable alternative to Java's AWT Dimension. IMPORT_IMAGES - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; IMPORT_IMAGES_LEGACY - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; importDearrayedTMAData(File) - Static method in class qupath.lib.gui.tma.TMADataIO. Import a TMA grid from an exported TMA analysis file, i.e. importFromCSV(File, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a file into the TMAGrid of an object hi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:597676,access,access,597676,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"thTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). Field Details. MOVE_TOOL; @ActionAccelerator(""m""); @ActionConfig(""Tools.m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:3053,hash,hashCode,3053,javadoc/docs/qupath/lib/gui/ToolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html,1,['hash'],['hashCode']
Security,"ther a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3156,hash,hashCode,3156,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['hash'],['hashCode']
Security,"this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:3027,hash,hashCode,3027,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['hash'],['hashCode']
Security,"thod Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and defaul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['hash'],['hashCode']
Security,"thod. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1323,hash,hashCode,1323,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,1,['hash'],['hashCode']
Security,"ting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must not be retained and reused,; because it may be invalidated by a call to resetPreferences().; Rather, as far as possible other methods of this class should be used rather than accessing the; Preferences directly.; . Returns:. savePreferences; public static boolean savePreferences(); Save the preferences. Returns:. resetPreferences; public static void resetPreferences(); Reset the preferences to their defaults. This requires QuPath to be restarted. scrollSpeedProperty; public static IntegerProperty scrollSpeedProperty(); Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. Returns:. getScaledScrollSpeed; public static double getScaledScrollSpeed(); Get scroll speed scaled as a proportion and forced to be in the range 0-1. For example, 100% becomes 1. Returns:. navigationSpeedProperty; public static IntegerProperty navigationSpeedProperty(); Percentage to scale navigation speed. Returns:; navigationSpeedProperty. getScaledNavigationSpeed; public static double getScaledNavigationSpeed(); Get navigation speed scaled as a proportion and forced to be in the range 0-",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:46748,access,accessing,46748,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['accessing']
Security,"tion of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:2616,hash,hashCode,2616,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['hash'],['hashCode']
Security,"tions. Exists mostly to ensure consisting naming (including capitalization). Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; IGNORE. Ignore classification, indicating what should not be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClass POSITIVE; Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html:1620,hash,hashCode,1620,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,1,['hash'],['hashCode']
Security,"tions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:59765,access,access,59765,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"tiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standard deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(); Default constructor. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features); Constructor prepared to calculate specified features. Parameters:; features - . Method Details. gaussianSmoothed; public MultiscaleFeatures.MultiscaleResultsBuilder gaussianSmoothed(boolean calculate); Calculate the Gaussian-smoothed image. Parameters:; calculate - ; Returns:. paddingXY; public MultiscaleFeatures.MultiscaleResultsBuilder paddingXY(int padding); Specify the number of pixels that the input image is padded (left, right, above, below). ; This padding will be stripped prior to outputting the results. Default is 0. Parameters:; padding - ; Returns:. weightedStdDev; public MultiscaleFeatures.MultiscaleResultsBuilder weightedStdDev(boolean calculate); Calculate a Gaussian-weighted standard deviation. Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:3711,hash,hashCode,3711,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['hash'],['hashCode']
Security,"to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2276,hash,hashCode,2276,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"tring form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.classifiers.Normalization. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Returns the enum const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077461,validat,validation,1077461,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validation']
Security,"trol.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  ; final org.controlsfx.control.action.Action; SLIDE_LABEL;  ; final org.controlsfx.control.action.Action; VIEW_TRACKER;  ; final Object; zoomActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_ANALYSIS_PANEL; public final org.controlsfx.control.action.Action SHOW_ANALYSIS_PANEL. COMMAND_LIST; @ActionConfig(""Action.View.commandList""); @ActionAccelerator(""shortcut+l""); public final org.controlsfx.control.action.Action COMMAND_LIST. RECENT_COMMAND_LIST; @ActionConfig(""Action.View.recentCommands""); @ActionAccelerator(""shortcut+p""); public final org.controlsfx.control.action.Action RECENT_COMMAND_LIST. SEP_0; public final org.controlsfx.control.action.Action SEP_0. BRIGHTNESS_CONTRAST; public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SEP_1; public final org.controlsfx.control.action.Action SEP_1. multiviewActions; @ActionMenu(""Menu.View.Multiview""); public final ViewMenuActions.MultiviewActions multiviewActions. CHANNEL_VIEWER; @ActionConfig(""Action.View.channelViewer""); public final org.controlsfx.control.action.Action CHANNEL_VIEWER. MINI_VIEWER; @ActionConfig(""Action.View.miniViewer""); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html:3125,hash,hashCode,3125,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"trolsfx.control.action.Action; REMOVE_FRAGMENTS;  ; final org.controlsfx.control.action.Action; RESOLVE_HIERARCHY;  ; final org.controlsfx.control.action.Action; RIGID_OBJECT_EDITOR;  ; final org.controlsfx.control.action.Action; SELECT_ALL_ANNOTATION;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.control.action.Action; SIMPLIFY_SHAPE;  ; final org.controlsfx.control.action.Action; SPECIFY_ANNOTATION;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS_BY_LINES;  ; final org.controlsfx.control.action.Action; TRANSFER_ANNOTATION;  . Constructor Summary; Constructors. Constructor; Description; AnnotationActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SPECIFY_ANNOTATION; @ActionConfig(""Action.Objects.Annotation.specify""); public final org.controlsfx.control.action.Action SPECIFY_ANNOTATION. SELECT_ALL_ANNOTATION; @ActionAccelerator(""shortcut+shift+a""); @ActionConfig(""Action.Objects.Annotation.fullImage""); public final org.controlsfx.control.action.Action SELECT_ALL_ANNOTATION. SEP_5; public final org.controlsfx.control.action.Action SEP_5. INSERT_INTO_HIERARCHY; @ActionAccelerator(""shortcut+shift+i""); @ActionConfig(""Action.Objects.Annotation.hierarchyInsert""); public final org.controlsfx.control.action.Action INSERT_INTO_HIERARCHY. RESOLVE_HIERARCHY; @ActionAccelerator(""shortcut+shift+r""); @ActionConfig(""Action.Objects.Annotation.hierarchyResolve""); public final org.controlsfx.control.action.Action RESOLVE_HIERARCHY. SEP_6; public final org.controlsfx.control.action.Action SEP_6. RIGID_OBJECT_EDITOR; @ActionAccelerator(""shortcut+shift+t""); @ActionConfig(""Action.Objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html:2154,hash,hashCode,2154,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,1,['hash'],['hashCode']
Security,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:2459,hash,hashCode,2459,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,1,['hash'],['hashCode']
Security,"ts Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:1566,hash,hashCode,1566,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,1,['hash'],['hashCode']
Security,"ts.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls - ; Returns:; Throws:; IOException. getProjectExtension; public static String getProjectExtension(boolean includePeriod); Get the default exten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1471,hash,hashCode,1471,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,1,['hash'],['hashCode']
Security,"turns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3508,hash,hashCode,3508,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['hash'],['hashCode']
Security,"ty(). Return the String property of this ViewTracker. int; nFrames(). Return the number of recorded frames. BooleanProperty; recordingProperty(). Return the recording property of this ViewTracker. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setFile(File file). Set the file for this ViewTracker. void; setName(String name). Set the name of this ViewTracker. void; setOptionalParameters(boolean ZandT,; boolean cursorTracking,; boolean activeToolTracking,; boolean eyeTracking). Set optional parameters for this ViewTracker. void; setRecording(boolean recording). Set the recording property of this ViewTracker. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. recording; public BooleanProperty recordingProperty; Return the recording property of this ViewTracker. See Also:. isRecording(); setRecording(boolean); recordingProperty(). name; public StringProperty nameProperty; Return the String property of this ViewTracker. See Also:. getName(); setName(String); nameProperty(). cursorTracking; public BooleanProperty cursorTrackingProperty; Return the cursorTracking property of this tracker. See Also:. cursorTrackingProperty(). activeTool; public BooleanProperty activeToolProperty; Return the activeTool property of this tracker. See Also:. activeToolProperty(). eyeTracking; public BooleanProperty eyeTrackingProperty; Return the eyeTracking property of this tracker. See Also:. eyeTrackingProperty(). Field Details. df; protected static final DecimalFormat df. LOG_DELIMITER; protected static final String LOG_DELIMITER. See Also:. Constant Field Values. Method Details. nFrames; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:4857,hash,hashCode,4857,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['hash'],['hashCode']
Security,"uchscreens and trackpads. useSelectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; useSelectedColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.comman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076101,validat,validateMarkerMask,1076101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validateMarkerMask']
Security,"uctor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been upda",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1788,hash,hashCode,1788,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['hash'],['hashCode']
Security,"ufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typicall",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3201,access,accessed,3201,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"ui.images.stores.ColorModelRenderer. All Implemented Interfaces:; ImageRenderer. public class ColorModelRenderer; extends Object; implements ImageRenderer; An ImageRenderer that uses a ColorModel. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorModelRenderer(ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html:1421,hash,hashCode,1421,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,1,['hash'],['hashCode']
Security,"ul 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6413,hash,hashCode,6413,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['hash'],['hashCode']
Security,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2015,hash,hashCode,2015,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['hash'],['hashCode']
Security,"um and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This method is applied per-channel, with no eps added to the denominator if m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:2159,hash,hashCode,2159,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,1,['hash'],['hashCode']
Security,"um; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:1993,hash,hashCode,1993,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['hash'],['hashCode']
Security,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1396,hash,hashCode,1396,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,1,['hash'],['hashCode']
Security,"upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27175,access,access,27175,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['access'],['access']
Security,"us.AnalyzeMenuActions.Actions. Enclosing class:; AnalyzeMenuActions. @ActionMenu(""Menu.Analyze""); public class AnalyzeMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COLOR_DECONVOLUTION_REFINE;  ; final org.controlsfx.control.action.Action; CREATE_TILES;  ; final org.controlsfx.control.action.Action; DISTANCE_CENTROIDS;  ; final org.controlsfx.control.action.Action; DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; INTENSITY_FEATURES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SHAPE_FEATURES;  ; final org.controlsfx.control.action.Action; SIGNED_DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SMOOTHED_FEATURES;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COLOR_DECONVOLUTION_REFINE; @ActionConfig(""Action.Analyze.Preprocessing.estimateStainVectors""); public final org.controlsfx.control.action.Action COLOR_DECONVOLUTION_REFINE. CREATE_TILES; @ActionMenu(""Menu.Analyze.Tiles""); @ActionConfig(""Action.Analyze.Tiles.createTiles""); public final org.controlsfx.control.action.Action CREATE_TILES. SEP_0; @ActionMenu(""Menu.Analyze.CellDetection""); public final org.controlsfx.control.action.Action SEP_0. SMOOTHED_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.smoothedFeatures""); public final org.controlsfx.control.action.Action SMOOTHED_FEATURES. INTENSITY_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.intensityFeatures""); public final org.controlsfx.control.action.Action INTENSITY_FEATURES. SHAPE_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.shapeFeatures""); public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html:1451,hash,hashCode,1451,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2384,hash,hashCode,2384,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['hash'],['hashCode']
Security,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1435,hash,hashCode,1435,javadoc/docs/qupath/lib/gui/charts/Charts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html,1,['hash'],['hashCode']
Security,"ving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); Get a path to this project, or null if this project is not on a local file system.; ; If not null, the path may be a file or a directory. Returns:; See Also:. ProjectImageEntry.getEntryPath(). createSubProject; Project<T> createSubProject(String name,; Collection<ProjectImageEntry<T>> entries); Create a sub-project that provides a view on the specified entries.; ; The retains exactly the same references and data, i.e. it does not duplicate entries or data files - ; rather it is used to generate projects that provide access to a subset of the entries in the original project. Parameters:; name - the name of the sub-project; entries - the entries to retain within the sub-project; Returns:. isEmpty; boolean isEmpty(); Test if the project contains any images. Returns:. addImage; ProjectImageEntry<T> addImage(ImageServerBuilder.ServerBuilder<T> server); throws IOException; Add an image for a particular ImageServer. Parameters:; server - ; Returns:; Throws:; IOException. addDuplicate; ProjectImageEntry<T> addDuplicate(ProjectImageEntry<T> entry,; boolean copyData); throws IOException; Add an image by duplicating an existing entry.; This retains the same ImageServerBuilder.ServerBuilder, name, description and metadata, but assigns ; a new unique ID. Parameters:; entry - the entry that should be copied; copyData - if true, copy existing image data in addition to other properties; Returns:; the new entry that has been added to the project; Throws:; IOException. getEntry; ProjectImageEnt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:5540,access,access,5540,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['access'],['access']
Security,"w; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale factor applied to a standard deviation (assuming a roughly normal distribution). Parameters:; k - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html:1141,hash,hashCode,1141,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,1,['hash'],['hashCode']
Security,"would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3247,hash,hashCode,3247,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['hash'],['hashCode']
Security,"xtends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a single-channel output. Returns:. minimum; public static ImageOp minimum(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:1501,hash,hashCode,1501,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,1,['hash'],['hashCode']
Security,"y whichever changes were made. PathObjectHierarchyEvent.HierarchyEventType; getEventType(). Get the hierarchy event type. PathObjectHierarchy; getHierarchy(). The hierarchy to which this event refers. Object; getSource(). Get the source that triggered the event. PathObject; getStructureChangeBase(). If this is a structure change event, return the base object, i.e. boolean; isAddedOrRemovedEvent(). Returns true if objects have been added or removed from the hierarchy. boolean; isChanging(). Returns true if changes are still being made, so more events will be fired. boolean; isObjectClassificationEvent(). Returns true if the event indicates that object classifications have changed. boolean; isObjectMeasurementEvent(). Returns true if the event indicates that object measurements have changed. boolean; isStructureChangeEvent(). Returns true if the hierarchy structure has changed, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createStructureChangeEvent; public static PathObjectHierarchyEvent createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject); Create a hierarchy event indicating that the hierarchy structure has been changed. Parameters:; source - ; hierarchy - ; parentObject - ; Returns:. createObjectAddedEvent; public static PathObjectHierarchyEvent createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded); Create a hierarchy event indicated objects were added. Parameters:; source - ; hierarchy - ; parentObject - ; pathObjectAdded - ; Returns:. createObjectRemovedEvent; public static PathObjectHierarchyEvent createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved); Create a hierarchy event ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html:3049,hash,hashCode,3049,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,1,['hash'],['hashCode']
Security,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1283,hash,hashCode,1283,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,4,['hash'],['hashCode']
Security,"y; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BUGS;  ; final org.controlsfx.control.action.Action; CITE;  ; final org.controlsfx.control.action.Action; DEMOS;  ; final org.controlsfx.control.action.Action; DOCS;  ; final org.controlsfx.control.action.Action; FORUM;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.control.action.Action DOCS. DEMOS; @ActionConfig(""Action.Help.video""); public final org.controlsfx.control.action.Action DEMOS. UPDATE; @ActionConfig(""Action.Help.updates""); public final org.controlsfx.control.action.Action UPDATE. SEP_2; public final org.controlsfx.control.action.Action SEP_2. CITE; @ActionConfig(""Action.Help.cite""); public final org.controlsfx.control.action.Action CITE. BUGS; @ActionConfig(""Action.Help.issues""); public final org.controlsfx.control.action.Action BUGS. FORUM; @ActionConfig(""Action.Help.forum""); public final org.controlsfx.control.action.Action FORUM. SOURCE; @Actio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html:1600,hash,hashCode,1600,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"y; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the exten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1642,hash,hashCode,1642,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['hash'],['hashCode']
Security,"yItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2900,hash,hashCode,2900,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['hash'],['hashCode']
Security,"yMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1743,hash,hashCode,1743,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,1,['hash'],['hashCode']
Security,"zeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredTileHeight; public int getPreferredTileHeight(); Get the preferred tile height, which can be used to optimize pixel requests for large images. Returns:. duplicate; public ImageServerMetadata duplicate(); Duplicate this metatadata. Returns:. getName; public String getName(); Get the image name. Returns:. getChannel; public ImageChannel getChannel(int n); Get the specified channel. Parameters:; n - channel index, starting at 0.; Returns:. getChannels; public List<ImageChannel> getChannels(); Get an unmodifiable list of all channels. Returns:. getClassificationLabels; public Map<Integer,PathClass> getClassificationLabels(); Get map between labels and classification names. This is relevant only where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION, ; otherwise it returns an empty map. Returns:. getChannelType; public ImageServerMetadata.ChannelType getChannelType(); Get the channel type, which can be used to interpret the channels. Returns:. isCompatibleMetadata; public boolean isCompatibleMetadata(ImageServerMetadata metadata); Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). Parameters:; metadata - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:9877,hash,hashCode,9877,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,3,['hash'],['hashCode']
Security,"| ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreferences""); public final org.controlsfx.control.action.Action RESET_PREFERENCES",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html:1262,hash,hashCode,1262,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"| ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSyntaxes(); Get the available script syntaxes. Returns:. getSyntaxFromName; public static ScriptSyntax getSyntaxFromName(String name); Get a script syntax from a specified language name.; If no specific syntax is found, then a general-purpose (plain) syntax will be returned. Parameters:; name - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html:1426,hash,hashCode,1426,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,1,['hash'],['hashCode']
Security,"| ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; server - the server to i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:1303,hash,hashCode,1303,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,1,['hash'],['hashCode']
Security," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:1264,hash,hashCode,1264,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,1,['hash'],['hashCode']
Security," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:1316,hash,hashCode,1316,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html,1,['hash'],['hashCode']
Security," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.CopyActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions. Enclosing class:; EditMenuActions. public class EditMenuActions.CopyActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COPY_ANNOTATION_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_FULL_SCREENSHOT;  ; final org.controlsfx.control.action.Action; COPY_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_VIEW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW_SCREENSHOT;  ; final org.controlsfx.control.action.Action; SEP_00;  . Constructor Summary; Constructors. Constructor; Description; CopyActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COPY_SELECTED_OBJECTS; @ActionConfig(""Action.Edit.Copy.selectedObjects""); public final org.controlsfx.control.action.Action COPY_SELECTED_OBJECTS. COPY_ANNOTATION_OBJECTS; @ActionConfig(""Action.Edit.Copy.annotationObjects""); public final org.controlsfx.control.action.Action COPY_ANNOTATION_OBJECTS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. COPY_VIEW; @ActionConfig(""Action.Edit.Copy.currentViewer""); public final org.controlsfx.control.action.Action COPY_VIEW. COPY_WINDOW; @ActionConfig(""Action.Edit.Copy.mainWindowContent""); public final org.controlsfx.control.action.Action COPY_WINDOW. COPY_WINDOW_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.mainWindowScreenshot""); public final org.controlsfx.control.action.Action COPY_WINDOW_SCREENSHOT. COPY_FULL_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.fullScreenshot""); public final org.controlsfx.control.action.Action COPY_FULL_SCREENSHOT. Constructor Details. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html:1278,hash,hashCode,1278,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,1,['hash'],['hashCode']
Security," ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1304,hash,hashCode,1304,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,1,['hash'],['hashCode']
Security," imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2383,hash,hashCode,2383,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['hash'],['hashCode']
Security," max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; double[] OD_LUT). Convert a float pixel to an optical density value using a pre-computed lookup table. static final double; makeODByLUT(int val,; double[] OD_LUT). Convert an int pixel to an optical density value using a pre-computed lookup table. static double[]; makeODLUT(double maxValue). Create an optical density lookup table with 256 entries, normalizing to the specified background value. static double[]; makeODLUT(double maxValue,; int nValues). Create an optical density lookup table, normalizing to the specified background value. static ColorDeconvolutionStains; refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped). Attempt to automatically refine color deconvolution stains based upon pixel values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorDeconvolutionHelper; public ColorDeconvolutionHelper(). Method Details. makeOD; public static final double makeOD(double val,; double max); Convert a single pixel value to an optical density as max(0, -log10(val/max). where val is clipped to be >= 1. Parameters:; val - ; max - ; Returns:. makeODByLUT; public static final double makeODByLUT(int val,; double[] OD_LUT); Convert an int pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double). Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODByLUT; public static final double makeODByLUT(float val,; double[] OD_LUT); Convert a float pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:3048,hash,hashCode,3048,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['hash'],['hashCode']
Security," p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2173,hash,hashCode,2173,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['hash'],['hashCode']
Security," pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time points. ImageServerMetadata.Builder; sizeZ(int sizeZ). Specify the number of z-slices. ImageServerMetadata.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify the time unit and individual time points. ImageServerMetadata.Builder; width(int width). Specify the full-resolution image width. ImageServerMetadata.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify the spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServerMetadata metadata); Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden.; ; The existing metadata will be duplicated, therefore later changes in one metadata object will not be ; reflected in the other. Parameters:; metadata - . Builder; public Builder(); Minimal builder for a new ImageServerMetadata; further properties must be set. Builder; public Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height); Builder for a new ImageServerMetadata; further properties must be set. Parameters:; serverClass - ; path - ; width - ; height - . Method Details. width; public ImageServerMetadata.Builder width(int width); Specify the full-resolution image width. Parameters:; width - ; Returns:. height; public ImageServerMetadata.Builder height(int height); Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:3519,hash,hashCode,3519,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['hash'],['hashCode']
Testability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1449,log,logviewer,1449,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,4,['log'],"['log', 'logged', 'logviewer']"
Testability," (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2011,log,logging,2011,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TIL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1713,test,test,1713,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['test'],['test']
Testability," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1007,log,logging,1007,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," ; qupath.imagej.superpixels, ; qupath.imagej.tools, ; qupath.lib.algorithms, ; qupath.lib.analysis, ; qupath.lib.analysis.algorithms, ; qupath.lib.analysis.features, ; qupath.lib.analysis.heatmaps, ; qupath.lib.analysis.images, ; qupath.lib.analysis.stats, ; qupath.lib.analysis.stats.survival, ; qupath.lib.awt.common, ; qupath.lib.classifiers, ; qupath.lib.classifiers.object, ; qupath.lib.classifiers.pixel, ; qupath.lib.color, ; qupath.lib.common, ; qupath.lib.display, ; qupath.lib.display.settings, ; qupath.lib.experimental.pixels, ; qupath.lib.extension.svg, ; qupath.lib.geom, ; qupath.lib.gui, ; qupath.lib.gui.actions, ; qupath.lib.gui.actions.annotations, ; qupath.lib.gui.actions.menus, ; qupath.lib.gui.charts, ; qupath.lib.gui.commands, ; qupath.lib.gui.commands.display, ; qupath.lib.gui.commands.objects, ; qupath.lib.gui.dialogs, ; qupath.lib.gui.extensions, ; qupath.lib.gui.images.servers, ; qupath.lib.gui.images.stores, ; qupath.lib.gui.localization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:1445,log,logging,1445,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability," Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAcceler",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659840,log,logging,659840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.display.ChannelDisplayMode; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains; qupath.lib.color.ColorTransformer.ColorTransformMethod; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType; qupath.lib.gui.dialogs.Dialogs.DialogButton; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap; qupath.lib.gui.tools.GuiTools.SnapshotType; qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode; qupath.lib.gui.tools.IconFactory.PathIcons; qupath.lib.images.ImageData.ImageType; qupath.lib.gui.viewer.ImageInterpolation; qupath.lib.images.servers.ImageServerMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType; qupath.opencv.dnn.OpenCVDnn.ModelType; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode; qupath.lib.plugins.ParallelTileObject.Status; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses; qupath.lib.io.PathIO.GeoJsonExportOptions; qupath.lib.objects.PathObjectFilter (implements java.util.function.Predicate<T>); qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType; qupath.lib.gui.prefs.PathP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:44703,log,logging,44703,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4232,test,test,4232,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,3,['test'],['test']
Testability," Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if someth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1173,log,logging,1173,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1900,log,log,1900,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability," Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2158,test,test,2158,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['test'],['test']
Testability," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2405,test,test,2405,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,1,['test'],['test']
Testability," Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073416,log,logger,1073416,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3321,log,logger,3321,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,2,['log'],['logger']
Testability," all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2167,log,logarithm,2167,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['log'],['logarithm']
Testability," and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810296,log,logging,810296,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in whic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55061,test,test,55061,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['test'],['test']
Testability," class for interactively modifying existing ROIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter. Convert a QuPath ROI to a JTS Geometry. roiToGeometry(ROI) - Static method in class qupath.lib.roi.GeometryTools. Convert to QuPath ROI to a JTS Geometry. RoiTools - Class in qupath.lib.roi. A collection of static methods for working with ROIs. RoiTools() - Constructor for class qupath.lib.roi.RoiTools;  ; RoiTools.CombineOp - Enum Class in qupath.lib.roi. Methods of combining two ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. Rotated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:871263,log,logging,871263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138569,log,logger,138569,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['log'],['logger']
Testability," dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-proces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1776,log,logs,1776,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['logs']
Testability," dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3646,log,logging,3646,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['log'],['logging']
Testability," enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659544,log,log-rank,659544,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability," for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3613,log,logged,3613,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['log'],['logged']
Testability," in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659114,log,logging,659114,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPathClass(PathObjectHierarchy, PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPlane(int, int) - Static method in class qupath.lib.scripting.QP. Selected objects in the current hierarchy occurring on the specified z-slice and timepoint. selectObjectsByPlane(PathObjectHierarchy, ImagePla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:900411,log,logging,900411,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability, property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdirectory containing shared scripts. See Also:. Constant Field Values. DIR_COLORMAPS; public static final String DIR_COLORMAPS; Name of subdirectory containing colormaps. See Also:. Constant Field Values. DIR_LOGS; public static final String DIR_LOGS; Name of subdirectory containing log files. See Also:. Constant Field Values. DIR_LOCALIZATION; public static final String DIR_LOCALIZATION; Name of subdirectory containing properties files for localization. See Also:. Constant Field Values. Method Details. getInstance; public static UserDirectoryManager getInstance(); Get the singleton instance of the UserDirectoryManager. Returns:. createRelativePathProperty; public ReadOnlyObjectProperty<Path> createRelativePathProperty(String other); Create a read only property for a relative path of the user subdirectory.; This can be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directo,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:6376,log,log,6376,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability," qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.richtextfx.styl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810317,log,logging,810317,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2605,log,logToFile,2605,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,3,['log'],"['logToFile', 'logging']"
Testability," something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2173,log,logging,2173,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659046,log,logging,659046,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283956,log,logging,283956,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," to query or add specific numeric measurements. Returns:. getMeasurements; public Map<String,Number> getMeasurements(); Get a map-based view on getMeasurementList().; This is likely to be less efficient (because it does not support primitives), but has several advantages ; ; it uses a familiar and standard API; it is much more amenable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:9530,test,testing,9530,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['test'],['testing']
Testability,"    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1071,log,logging,1071,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,"(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1108510,log,logged,1108510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logged']
Testability,") - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.sur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658616,log,logarithm,658616,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,"); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2885,log,logFiles,2885,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logFiles']
Testability,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1597,log,logger,1597,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,13,['log'],"['logOnce', 'logged', 'logger']"
Testability,");  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:4586,log,log,4586,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,", nothing will happen.; Otherwise, if null then any existing TMA grid will be removed. Parameters:; tmaGrid - . insertPathObject; public boolean insertPathObject(PathObject pathObject,; boolean fireChangeEvents); Insert an object into the hierarchy. This differs from addObject(PathObject, boolean) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObject - the object to add; fireChangeEvents - if true, an event will be added after adding the object. Choose false if a single event should be added after making multiple changes.; Returns:; true if the hierarchy changed as a result of this call, false otherwise. insertPathObjects; public boolean insertPathObjects(Collection<? extends PathObject> pathObjects); Insert a collection of objects into the hierarchy, firing a change event on completion.; This differs from addObjects(Collection) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObjects - the objects to add; Returns:; true if the hierarchy changed as a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects within the hierarchy. removeObject; public boolean removeObject(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the object being removed; if false, remove these also; Returns:. removeObjectWithoutUpdate; public boolean removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, without firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:11897,log,logic,11897,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['log'],['logic']
Testability,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:624,log,logs,624,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,2,['log'],"['log', 'logs']"
Testability,". CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:796,log,log,796,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['log'],['log']
Testability,". Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1435,log,logarithm,1435,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['log'],['logarithm']
Testability,". GroovyStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:893,log,logConsole,893,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['log'],['logConsole']
Testability,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:525,test,test,525,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,2,['test'],"['test', 'testing']"
Testability,". LocalBinaryPatternsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class LocalBinaryPatternsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.LocalBinaryPatternsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class LocalBinaryPatternsPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:853,test,tested,853,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['test'],['tested']
Testability,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:348,log,logging,348,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,5,['log'],"['log', 'logging']"
Testability,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:389,log,logging,389,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,5,['log'],"['log', 'logging']"
Testability,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:521,log,log-rank,521,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,8,"['log', 'test']","['log', 'log-rank', 'test']"
Testability,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:639,log,log,639,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,2,"['log', 'test']","['log', 'test']"
Testability,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:468,log,logging,468,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,6,['log'],"['logOnce', 'logger', 'logging']"
Testability,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:508,log,log,508,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,4,['log'],"['log', 'logged', 'logviewer']"
Testability,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:700,log,logger,700,javadoc/docs/qupath/lib/scripting/LoggingTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html,8,['log'],"['log', 'logger', 'logging']"
Testability,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html:917,log,logged,917,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html,2,['log'],['logged']
Testability,". PropertiesStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:925,log,logConsole,925,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['log'],['logConsole']
Testability,". PythonStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:885,log,logConsole,885,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['log'],['logConsole']
Testability,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:1048,test,test,1048,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,1,['test'],['test']
Testability,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:912,log,logged,912,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['log'],['logged']
Testability,". ScriptStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Interface ScriptStyler. All Known Implementing Classes:; GroovyStyler, JsonStyler, MarkdownStyler, PlainStyler, PropertiesStyler, PythonStyler, XmlStyler, YamlStyler. public interface ScriptStyler; Interface for classes that apply some styling to a RichTextFX's CodeArea. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html:933,log,logConsole,933,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,1,['log'],['logConsole']
Testability,. Search (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Search. Additional resources. The help page provides an introduction to the scope and syntax of JavaDoc search.; You can use the <ctrl> or <cmd> keys in combination with the left and right arrow keys to switch between result tabs in this page.; The URL template below may be used to configure this page as a search engine in browsers that support this feature. It has been tested to work in Google Chrome and Mozilla Firefox. Note that other browsers may not support this feature or require a different URL format.; linkCopy. Redirect to first result. Loading search index... ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/search.html:523,test,tested,523,javadoc/docs/search.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/search.html,1,['test'],['tested']
Testability,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:777,log,logging,777,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['log'],['logging']
Testability,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:654,test,test,654,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['test'],['test']
Testability,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html:352,log,logging,352,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,1,['log'],['logging']
Testability,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:678,log,logged,678,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['log'],['logged']
Testability,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html:671,log,loggable,671,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,1,['log'],['loggable']
Testability,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:1285,test,test,1285,javadoc/docs/qupath/lib/analysis/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html,1,['test'],['test']
Testability,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:807,log,log-rank,807,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,4,"['log', 'test']","['log', 'log-rank', 'test']"
Testability,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html:589,log,logging,589,javadoc/docs/qupath/lib/common/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:527,test,tested,527,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,1,['test'],['tested']
Testability,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:821,log,logging,821,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,2,['log'],['logging']
Testability,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:17,log,logging,17,javadoc/docs/qupath/lib/gui/logging/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html,6,['log'],"['log', 'logging']"
Testability,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:17,log,logging,17,javadoc/docs/qupath/lib/gui/logging/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html,5,['log'],['logging']
Testability,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:740,log,logging,740,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html,2,['log'],['logging']
Testability,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:870,log,logging,870,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html:722,log,logging,722,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html:728,log,logging,728,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html:424,log,logging,424,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,2,['log'],"['loggable', 'logging']"
Testability,".Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:268811,log,logarithm,268811,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,".Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error wr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2522,log,logger,2522,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1864,log,log,1864,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,2,['log'],['log']
Testability,.gui.commands.InteractiveObjectImporter; qupath.opencv.tools.Interpolation; qupath.lib.gui.JavadocViewer; qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus;,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19701,log,logging,19701,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability,".lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852192,log,logging,852192,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,".scripting.richtextfx.stylers.PropertiesStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeEditorStyles(String) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the main editor. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; computeFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute features. computeLocalBinaryPatterns16(SimpleImage, double) - Static method in class qupath.lib.analysis.features.LocalBinaryPatterns. Compute local binary pattern descriptor for a SimpleImage. computeLogRankTest(KaplanMeierData, KaplanMeierData) - Static method in class qupath.lib.analysis.stats.survival.LogRankTest. Compare KaplanMeier objects using log-rank test. computeRunningStatistics(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a RunningStatistics object using all the values from a specified array. computeRunningStatistics(SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Compute running statistics using all pixels from a SimpleImage. computeRunningStatistics(SimpleImage, SimpleImage, List<RunningStatistics>) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). computeTiledROIs(ROI, ImmutableDimension, ImmutableDimension, boolean, int) - Static method in class qupath.lib.roi.RoiTools. Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:133209,log,log-rank,133209,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1844,log,log,1844,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.L",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1778,log,log,1778,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1254,log,log,1254,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['log'],['log']
Testability,"; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16165,log,logging,16165,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['log'],['logging']
Testability,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:2134,log,logged,2134,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,1,['log'],['logged']
Testability,"; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:2074,test,test,2074,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['test'],['test']
Testability,"; mat - ; x - ; y - ; width - ; height - ; Returns:. crop; public static Mat crop(Mat mat,; Padding padding); Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). Parameters:; mat - ; padding - ; Returns:; Since:; v0.4.0. applyTiled; public static Mat applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType); Apply a function to a Mat that strictly requires a specific input size.; The output is expected to have the same size as the input, but may have a different number of channels.; ; This method can be used to:; ; Split larger input into tiles of the required size, apply the function and merge the result; Pad smaller input into tiles of the required size, apply the function and strip padding from the result. If the image dimensions are not an exact multiple of the requested tile sizes, both steps may be required.; ; Important! If the output (width & height) of the function is smaller than the input, it will resized; to have the same dimensions and a warning will be logged. Parameters:; fun - the function to apply to the input; mat - the input Mat; tileWidth - the strict tile width required by the input; tileHeight - the strict tile height required by the input; padding - padding to apply for internal tiling. Note that if the entire image needs to be padded, this should ; be done before input.; borderType - an OpenCV border type, in case padding is needed; Returns:; the result of applying fun to mat, having applied any necessary tiling along the way. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky); Apply a separable filter to an image, with symmetric boundary padding. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky,; int borderType); Apply a separable filter to an image. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel; border",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:33157,log,logged,33157,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logged']
Testability,CV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.dis,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267689,log,log,267689,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:2803,log,logged,2803,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['log'],['logged']
Testability,"Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1720,log,log,1720,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,Extension (QuPath 0.5.0); Subcommand (QuPath 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14149,log,logging,14149,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['log'],['logging']
Testability,"F. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2928,log,log,2928,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"H. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1312,log,logging,1312,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support only local files (rather than any ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:925151,log,log,925151,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"MapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.LocalBinaryPatternsPlugin. Default constructor. localeDefault - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeFormat - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; LocalePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localizationDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the localization directory. localNormalization(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Apply local 2D normalization",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:654404,test,test,654404,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; default org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Compute styling for the specified text, considering it will be used in the console. Parameters:; text - the text to process styling for; logConsole - if true, the console prints to the log rather than directly; Returns:; stylespans the StyleSpans to apply. getBaseStyle; default String getBaseStyle(); Optionally return a base style for the code area.; The default is to return null, but one use is to return ""-fx-font-family: sans-serif"" if the language should ; not be formatted as code. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html:2164,log,logConsole,2164,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,3,['log'],"['log', 'logConsole']"
Testability,"Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1304,log,logger,1304,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['log'],['logger']
Testability,"N serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentia",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4116,log,logged,4116,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['log'],['logged']
Testability,"OIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter. Convert a QuPath ROI to a JTS Geometry. roiToGeometry(ROI) - Static method in class qupath.lib.roi.GeometryTools. Convert to QuPath ROI to a JTS Geometry. RoiTools - Class in qupath.lib.roi. A collection of static methods for working with ROIs. RoiTools() - Constructor for class qupath.lib.roi.RoiTools;  ; RoiTools.CombineOp - Enum Class in qupath.lib.roi. Methods of combining two ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer(ImageServer<BufferedImage>, Rotat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:871332,log,log,871332,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"Options;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045096,log,logging,1045096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"P. Select all tile objects in the current hierarchy. selectTiles(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all tile objects in the specified hierarchy. selectTMACores() - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores(boolean) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, optionally including missing cores. selectTMACores(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the specified hierarchy, excluding missing cores. selectTMACores(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the specified hierarchy, optionally including missing cores. sendLogToConsoleProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. sendQuitRequest() - Method in class qupath.lib.gui.QuPathGUI. Request to quit QuPath. SEP - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; SEP - Variable in class qupath.process.gui.ProcessingExtension.PixelClassificationCommands;  ; SEP_0 - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SEP_00 - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; SEP_00 - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:903292,log,log,903292,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3585,log,logDirectoryProperty,3585,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['logDirectoryProperty']
Testability,"Property<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1608,log,log,1608,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"RROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void set",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2811,log,log,2811,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the specified ScriptLanguage. ; If the language cannot be matched, PlainStyler is returned. Parameters:; language - ; Returns:; corresponding stylers, or PlainStyler if no match. getPlainStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getPlainStyling(String text); Get simple styling that does not apply any classes. Parameters:; text - the text to process styling for; Returns:. getLogStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getLogStyling(String text); Get styling for use with a logger. Parameters:; text - the text to process styling for; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:3396,log,logger,3396,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['log'],['logger']
Testability,UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14238,log,logging,14238,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['log'],['logging']
Testability,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6567,log,logging,6567,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['log'],['logging']
Testability,"Writer implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27021,test,test,27021,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['test'],['test']
Testability,"ace qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430446,log,logger,430446,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"age. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2942,log,logLevel,2942,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logLevel']
Testability,"ager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1475,log,logging,1475,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"aining the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852281,log,logging,852281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,an be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. Returns:. cssDirectoryProperty; public ReadOnlyObjectProperty<Path> cssDirectoryProperty(); Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. Returns:. localizationDirectoryProperty; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty(); Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. Returns:. logDirectoryProperty; public ReadOnlyObjectProperty<Path> logDirectoryProperty(); Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. Returns:. scriptsDirectoryProperty; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty(); Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Thr,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:7849,log,logDirectoryProperty,7849,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,3,['log'],"['log', 'logDirectoryProperty']"
Testability,"analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1901,log,log,1901,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['log']
Testability,"and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3411,log,logger,3411,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"andler. Constructor. WandToolEventHandler.WandPreferences - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102949,log,logging,1102949,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"andles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27805,log,logs,27805,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['log'],['logs']
Testability,"anes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659955,log,logging,659955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ange listener; use removeListener(PathObjectHierarchyListener) instead. Parameters:; listener - . getRootObject; public PathObject getRootObject(); Get the root object. All other objects in the hierarchy are descendants of the root. Returns:. getTMAGrid; public TMAGrid getTMAGrid(); Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. Returns:. getSelectionModel; public PathObjectSelectionModel getSelectionModel(); Get the selection model, which handles the selection status of objects. Returns:. setTMAGrid; public void setTMAGrid(TMAGrid tmaGrid); Set the tma grid for this hierarchy.; If identical to the current TMA grid, nothing will happen.; Otherwise, if null then any existing TMA grid will be removed. Parameters:; tmaGrid - . insertPathObject; public boolean insertPathObject(PathObject pathObject,; boolean fireChangeEvents); Insert an object into the hierarchy. This differs from addObject(PathObject, boolean) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObject - the object to add; fireChangeEvents - if true, an event will be added after adding the object. Choose false if a single event should be added after making multiple changes.; Returns:; true if the hierarchy changed as a result of this call, false otherwise. insertPathObjects; public boolean insertPathObjects(Collection<? extends PathObject> pathObjects); Insert a collection of objects into the hierarchy, firing a change event on completion.; This differs from addObjects(Collection) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObjects - the objects to add; Returns:; true if the hierarchy changed as a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:11244,log,logic,11244,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['log'],['logic']
Testability,"arBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for au",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:9013,log,log,9013,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"arameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<T>; Parameters:; imageData - ; arg - ; Returns:. getLoggableParameters; protected ParameterList getLoggableParameters(ImageData<T> imageData); Get a copy of the current parameter list (with empty parameters removed) suitable for logging.; Subclasses might choose to append extra parameters here, which aren't part of the main list; (e.g. because they shouldn't be included in any automatically created dialog box). Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:5581,log,logging,5581,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['log'],['logging']
Testability,"arameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is null.; ; Note: This is not a perfect test, since it really only checks if the vertices of the child ROI fall within the parent - it is possible; that connecting lines stray outside the parent, yet it still returns true. This behavior may change in later versions.; ; TODO: Consider improving 'containsROI' method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the image; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean); findObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:18062,test,test,18062,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['test'],['test']
Testability,"archy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. static String; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19128,log,logger,19128,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['log'],['logger']
Testability,"ass qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660096,log,log,660096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ass qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126499,log,log,126499,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ass qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658312,log,logarithm,658312,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,"ass qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scriptin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018462,test,test,1018462,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log le",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1110,log,logging,1110,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1301,log,log,1301,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,1,['log'],['log']
Testability,"athGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7171,log,logging,7171,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"athObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.Open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194868,log,log,194868,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"atic method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, fl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:953146,log,log,953146,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944412,log,log,944412,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ay.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073571,log,logger,1073571,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"b.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (implements java.lang.annotation.Annotation). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42814,log,logging,42814,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9565,log,log,9565,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"bjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:5380,test,test,5380,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['test'],['test']
Testability,"ble, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430842,log,log,430842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be writ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34994,log,log,34994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"c final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathPrefs.DetectionTreeDisplayModes> hierarchyDisplayMode. Constructor Deta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:3062,log,logLevel,3062,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logLevel']
Testability,"cation string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430760,log,logger,430760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"ctions.menus;  ; ObjectsMenuActions.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWrit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720144,log,logging,720144,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1655,log,log,1655,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"cv.ml.pixel.PixelClassifierTools.CreateObjectOptions;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045061,log,logging,1045061,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"d annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25457,log,logging,25457,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"d tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659188,log,logging,659188,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"d. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659207,log,log,659207,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"do' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3164,log,logging,3164,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['log'],['logging']
Testability,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2286,log,logging,2286,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,3,['log'],"['log', 'logging']"
Testability,"e (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43189,log,logging,43189,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logging']
Testability,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:2312,test,tested,2312,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,1,['test'],['tested']
Testability,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8269,log,logging,8269,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"e, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. minValueProperty; public DoubleProperty minValueProperty(); The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. Returns:. maxValueProperty; public DoubleProperty maxValueProperty(); The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. Returns:. updateHistogram; public void updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected); Update the histogram to show the data for the given channel. Parameters:; imageDisplay - ; channelSelected - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:12754,log,logarithm,12754,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"eOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODLUT; public static double[] makeODLUT(double maxValue); Create an optical density lookup table with 256 entries, normalizing to the specified background value. Parameters:; maxValue - ; Returns:; See Also:. makeOD(double, double); makeODByLUT(int, double[]). makeODLUT; public static double[] makeODLUT(double maxValue,; int nValues); Create an optical density lookup table, normalizing to the specified background value. Parameters:; maxValue - background (white value); nValues - number of values to include in the lookup table; Returns:. convertPixelsToOpticalDensities; public static void convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT); For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values.; Otherwise, log values need to be calculated for every pixel (which can be relatively slow). Parameters:; px - ; maxValue - ; use8BitLUT - . getRedOpticalDensities; public static float[] getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getGreenOpticalDensities; public static float[] getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getBlueOpticalDensities; public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:4919,log,log,4919,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['log'],['log']
Testability,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5968,log,logged,5968,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['log'],['logged']
Testability,"ed image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:42941,log,logging,42941,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logging']
Testability,"ed on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:1068,log,log,1068,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,"ed, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:3370,log,logarithm,3370,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"een ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigned either a valid PathClass or null to indicate ; that they have no classification. Returns:. toSet; public Set<String> toSet(); Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names.; ; Important! If any path class component names are duplicates, these will ; (necessarily) be removed from the set. Therefore it is not guaranteed that ; calling fromCollection(Collection) on the output will return the same PathClass object.; ; var pathClass = ...;; var pathClass2 = PathClass.getInstance(pathClass.toSet());; assert pathClass == pathClass2; // This may or may not be true!; . However the PathClass objects should be the same if the name components are all valid and ; there are no duplicates (which should normally be the case). Returns:. compareTo; public int compareTo(PathClass o); This is now equivalent to this.toString().compareTo(o.toString()).; ; Note that in previous versions (< 0.1.2), the comparison was made based on the name only.; ; This could result in unexpected behavior whenever comparing with equality and using ; derived PathClass objects, because only the (final) name part was being compared ; and this could potentially result in classifications (wrongly) being considered equal ; (e.g. ""Tumor: Positive"" and ""Stroma: Positive"").; ; This was most significant when working with Groovy, where == is replaced by compareTo. Specified by:; compareTo in interface Comparable<PathClass>. getNullClass; public static PathClass getNullClass(); Get the value of NULL_CLASS, used to represent no classification.; In most cas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:10137,assert,assert,10137,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['assert'],['assert']
Testability,"eld Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html:1962,test,test,1962,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,1,['test'],['test']
Testability,"enCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:14369,log,logged,14369,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logged']
Testability,"entroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this success",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143389,test,test,143389,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,"etOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. minValueProperty; public DoubleProperty minValueProperty(); The minimum value displayed on the histogram.; This can be used to interactively control mi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11995,log,logarithm,11995,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:2546,test,test,2546,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,2,['test'],['test']
Testability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1248,log,logOnce,1248,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,['log'],['logOnce']
Testability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1290,log,log,1290,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1910,test,test,1910,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['test'],['test']
Testability,"e component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set els",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2046,log,log,2046,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"f its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect2D(ImageRegion region); Intersect to the specified 2D region, ignoring z and t. Parameters:; region - the region defining the x, y, width and height of the maximum permitted bounding box.; Returns:; the clipped RegionRequest, which may be this if no clipping is required. intersect2D; public RegionRequest intersect2D(int x,; int y,; int width,; int height); Intersect to the specified 2D region. Parameters:; x - x-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - heig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7950,test,test,7950,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['test'],['test']
Testability,"f necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:956678,log,log,956678,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"face used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1019372,log,logging,1019372,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"fferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30907,log,logging,30907,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27797,log,log,27797,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"formats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally use the full ROI for parent objects, rather than TileExporter.tileSize(int, int). useRotateGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useRotateGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support rotate gestures for touchscreens and trackpads. userPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. A path where additional files may be stored, such as extensions and log files. useScrollGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support scroll gestures for touchscreens and trackpads. useSelectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; useSelectedColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1075016,log,log,1075016,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"former. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10197,log,log,10197,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"g events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2112,log,log,2112,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"g.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1390,log,log,1390,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['log'],['log']
Testability,"geJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:930604,log,log,930604,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:2233,test,test,2233,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,1,['test'],['test']
Testability,"h.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:899858,log,logging,899858,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"h.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659219,log,logOnce,659219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logOnce']
Testability,"han the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting with Geometry.buffer(0)), although none; are guaranteed to work. The first that largely preserves the polygon's area is returned.; ; The result is guaranteed to be valid, but not necessarily to be a close match to the ; original polygon; in particular, if everything failed the result will be empty.; ; Code that calls this method can test if the output is equal to the input to determine ; if any changes were made. Parameters:; polygon - input (possibly-invalid) polygon; Returns:; the input polygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in points and lines being stripped away, ; leaving only polygons. Parameters:; geometry - input geometry to refine; minSizePixels - minimum area of a fragment to keep (the area of interior rings for polygons will be ignored); minHoleSizePixels - minimum size of an interior hole to keep; Returns:; the refined geometry (possibly the original unchanged), or empty geometry if the changes resulted in the Geometry disappearing; See Also:. removeFragments(Geometry, double); removeInterio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:9945,test,test,9945,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['test'],['test']
Testability,"hat doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27576,log,log,27576,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502822,log,logging,502822,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"hen dealing with ImageServers. ServerTools() - Constructor for class qupath.lib.images.servers.ServerTools;  ; setAccelerator(String, String) - Method in class qupath.lib.gui.QuPathGUI. Set an accelerator for the specified menu command. setAccelerator(MenuItem, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified menu item. setAccelerator(Action, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified action. setActiveHandlePosition(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. If a handle has been grabbed, update its displacement. setActiveTool(PathTool) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the active PathTool for input to this viewer. setActiveViewer(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the activeViewer property. setAll() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ALL. setAlphaComposite(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; setArgs(String[]) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set optional string args to pass to the script. setBatchIndex(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image index for batch processing (default is 0). setBatchProjectAndImage(Project<BufferedImage>, ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the Project and ImageData to use for batch processing for the current thread. setBatchSaveResult(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Specify whether the script that is running should save results or not. setBatchSize(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the batch size for batch processing (default is 1). setBioformatsEnabled(boolean) - Method in class qupath.lib.images.servers.bioformats.BioF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:913255,log,log,913255,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4255,test,test,4255,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,3,['test'],['test']
Testability,"hy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:499768,log,log-rank,499768,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"ib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109133,log,loggable,1109133,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['loggable']
Testability,"ib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430367,log,logging,430367,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814511,log,logging,814511,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1550,test,test,1550,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,1,['test'],['test']
Testability,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3356,log,log,3356,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,9,['log'],"['log', 'logging']"
Testability,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9824,test,test,9824,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['test'],['test']
Testability,iler.Builder. Match tiles to the bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoi,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34961,log,logging,34961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659334,log,logOnce,659334,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logOnce']
Testability,"in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaContro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018580,test,test,1018580,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"ing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659769,log,log,659769,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log', 'test']"
Testability,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2165,test,test,2165,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['test'],['test']
Testability,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8239,test,test,8239,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['test'],['test']
Testability,"ionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse ap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29239,log,log,29239,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2457,log,logger,2457,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"iption; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to dec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1915,log,logging,1915,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,"ized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430152,log,log,430152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"j.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077193,test,test,1077193,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"ject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3191,log,log,3191,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27715,log,log,27715,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['log', 'test']","['log', 'test']"
Testability,"lass qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502855,log,log,502855,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"lassifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143786,test,test,143786,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,"le in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:40936,log,logging,40936,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"le, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430594,log,logged,430594,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['log'],"['log', 'logged']"
Testability,"lean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25062,log,logging,25062,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"llection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to mana",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658759,log,log,658759,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"lsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorContro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8113,test,test,8113,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['test'],['test']
Testability,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61557,log,logged,61557,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,['log'],"['loggable', 'logged']"
Testability,"ludePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601346,log,logging,601346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"lue; public static final String; PROJECT_LOCATION; ""classifiers/pixel_classifiers"". qupath.lib.color.ColorDeconvolutionStains. Modifier and Type; Constant Field; Value; public static final String; DAB; ""DAB""; public static final String; EOSIN; ""Eosin""; public static final String; HEMATOXYLIN; ""Hematoxylin"". qupath.lib.common.GeneralTools. Modifier and Type; Constant Field; Value; public static final String; SYMBOL_MICROMETER; ""\u00b5m""; public static final char; SYMBOL_MU; '\u00b5'; public static final char; SYMBOL_SIGMA; '\u03c3'. qupath.lib.gui.JavadocViewer. Modifier and Type; Constant Field; Value; public static final String; PROP_JAVADOC_PATH; ""javadoc"". qupath.lib.gui.QuPathGUI. Modifier and Type; Constant Field; Value; public static final int; TOOLBAR_ICON_SIZE; 16. qupath.lib.gui.UserDirectoryManager. Modifier and Type; Constant Field; Value; public static final String; DIR_COLORMAPS; ""colormaps""; public static final String; DIR_CSS; ""css""; public static final String; DIR_EXTENSIONS; ""extensions""; public static final String; DIR_LOCALIZATION; ""localization""; public static final String; DIR_LOGS; ""logs""; public static final String; DIR_SCRIPTS; ""scripts"". qupath.lib.gui.commands.InteractiveObjectImporter. Modifier and Type; Constant Field; Value; public static final String; MIME_TYPE_GEOJSON; ""application/geo+json"". qupath.lib.gui.measure.ObservableMeasurementTableData. Modifier and Type; Constant Field; Value; public static final String; NAME_OBJECT_ID; ""Object ID"". qupath.lib.gui.tma.TMADataIO. Modifier and Type; Constant Field; Value; public static final String; TMA_DEARRAYING_DATA_EXTENSION; "".qptma"". qupath.lib.gui.viewer.recording.ViewTracker. Modifier and Type; Constant Field; Value; protected static final String; LOG_DELIMITER; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/constant-values.html:1864,log,logs,1864,javadoc/docs/constant-values.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html,1,['log'],['logs']
Testability,"lue=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2979,log,logLevel,2979,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logLevel']
Testability,"lues() - Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns an array containing the constants of this enum class, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1088559,log,logging,1088559,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"luginIJ. public abstract class AbstractInteractivePlugin<T>; extends AbstractPlugin<T>; implements PathInteractivePlugin<T>; Abstract class to help with implementing an interactive plugin. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected ParameterList; params;  . Constructor Summary; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected trans",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2030,log,logging,2030,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['log'],['logging']
Testability,"mageData to a new value. setImageJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:930571,log,logging,930571,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,mages; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePane.ObjectPreferences (QuPath 0.5.0); Preference,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14277,log,logging,14277,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['log'],['logging']
Testability,"mall tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageReg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:16787,log,logical,16787,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['log'],['logical']
Testability,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1162,log,log-rank,1162,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,4,"['log', 'test']","['log-rank', 'test']"
Testability,"mon.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Get a list containing the names of all constituent parts of a PathClass. SplitProjectTrainingCommand - Class in qupath.process.gui.commands. Divide a project into training, validation and test sets but flagging individual image entries. SplitProjectTrainingCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SplitProjectTrainingCommand. Constructor. splitROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Split a multi-part ROI into separate pieces. splitSelectedAnnotationAreasByLines() - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitSelectedAnnotationAreasByLines(double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSelectedAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:991851,test,test,991851,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"mpatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecting objects too; Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(ImageData<?> imageData); Remove objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144751,test,test,144751,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,"mponent). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2432,log,log,2432,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"n class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCVDnn. Initialize ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601380,log,logging,601380,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"nces - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102983,log,logging,1102983,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:6321,log,logged,6321,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['log'],['logged']
Testability,"ng created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static Bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29495,log,log,29495,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3213,log,log,3213,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"nlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3186,log,log,3186,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"ns.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand - Class in qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720182,log,logging,720182,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9693,test,test,9693,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['test'],['test']
Testability,nting the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInst,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1975,log,log,1975,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"num class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240373,log,logging,240373,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30841,log,logging,30841,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"od in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921640,log,logging,921640,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"odeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static Observabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50170,log,log,50170,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"ogger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3554,log,logger,3554,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"ole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the console. Specified by:; computeConsoleStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; logConsole - if true, the console prints to the log rather than directly; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:2518,log,logConsole,2518,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,9,['log'],"['log', 'logConsole']"
Testability,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10072,log,logs,10072,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logs']
Testability,"on<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2591,log,logger,2591,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"oncrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2397,log,log,2397,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['log'],['log']
Testability,"ons.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerMan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:861457,log,logging,861457,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ons;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125989,log,logs,125989,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logs']
Testability,"operty; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty(); Read-only property representing the currently-open project. Returns:; See Also:. getProject(); setProject(Project). getProject; public Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Parameters:; viewer - ; Returns:; True if the viewer no longer contains an open image (either because it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:31968,log,log,31968,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['log'],['log']
Testability,"ositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424204,log,logged,424204,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logged']
Testability,"per tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126365,log,log,126365,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"perty for the specified regions. setMissing(boolean) - Method in class qupath.lib.objects.TMACoreObject. Set the missing flag for this core, for example because insufficient tissue is present. setName(String) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the name of this ViewTracker. setName(String) - Method in class qupath.lib.objects.PathObject. Set the stored object name. setNumBins(int) - Method in class qupath.lib.gui.charts.HistogramDisplay. Set the number of bins for the histogram. setNumericParameterValue(String, Number) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set a numeric parameter value (either int or double). setNumericParameterValueRange(String, double, double) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the minimum and maximum value for a numeric parameter. setNumThreads(int) - Static method in class qupath.lib.common.Prefs. Set the requested number of threads. setOff() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.OFF. setOpacity(double) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set opacity between 0 (completely transparent) and 1 (completely opaque). setOpacity(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set global opacity for overlay drawing. setOptionalParameters(boolean, boolean, boolean, boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set optional parameters for this ViewTracker. setOverrideSystemMenuBar(boolean) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:938151,log,logging,938151,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"precated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1126,log,logging,1126,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:6834,test,testing,6834,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['test'],['testing']
Testability,"qupath); Show a dialog to track the viewed region of an image. Parameters:; qupath - . combineSelectedAnnotations; public static boolean combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op); Combine the selected annotations for the specified hierarchy. Parameters:; imageData - the image data to process; op - the RoiTools.CombineOp operation to apply; Returns:; true if changes were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20358,log,logging,20358,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1006,log,logLevel,1006,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logLevel']
Testability,"r of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18855,test,test,18855,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['test'],['test']
Testability,"r,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName); Prompt the user to create objects directly from the pixels of an ImageServer.; Often, the ImageServer has been created by applying a PixelClassifier. Parameters:; imageData - the ImageData to which objects should be added; classifier - the ImageServer used to generate objects; classifierName - the name of the classifier; if not null and the command runs to completion, it will be logged in the history ; workflow of the ImageData for later scripting.; Returns:; true if changes were made, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:4228,log,logged,4228,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['log'],['logged']
Testability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1254,test,test,1254,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,1,['test'],['test']
Testability,"r; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27625,log,log-rank,27625,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"rarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658905,log,logLevel,658905,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logLevel']
Testability,"rdRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1794,test,test,1794,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['test'],['test']
Testability,"rightnessContrastHistogramPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1030,log,logarithm,1030,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"ript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1056,test,test,1056,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['test'],['test']
Testability,"ription; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1997,log,log,1997,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"rts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810263,log,logging,810263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"rver. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibilit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27529,log,logging,27529,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logging']
Testability,"s. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measuremen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27757,log,logging,27757,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logging']
Testability,"s. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info loggin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1104,log,logging,1104,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,"s. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1105,log,log,1105,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['log'],['log']
Testability,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:4239,test,test,4239,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,2,['test'],['test']
Testability,"s; comparator - ; Returns:; a PathClass representing the same names sorted; See Also:. sortNames(PathClass). removeNames; public static PathClass removeNames(PathClass pathClass,; Collection<String> namesToRemove); Create a PathClass with specific name elements removed (if present) from an existing classification. Parameters:; pathClass - the input PathClass; namesToRemove - ; Returns:; a PathClass representing the classification with the required names removed; See Also:. removeNames(PathClass, String...). removeNames; public static PathClass removeNames(PathClass pathClass,; String... namesToRemove); Create a PathClass with specific name elements removed (if present) from an existing classification. Parameters:; pathClass - the input PathClass; namesToRemove - ; Returns:; a PathClass representing the classification with the required names removed; See Also:. removeNames(PathClass, Collection). mergeClasses; public static PathClass mergeClasses(PathClass baseClass,; PathClass additionalClass); Merge two classifications together.; Specifically, the name components of the additional class that are not already contained ; within the base class will be appended, deriving a new class as required.; ; Note that if the additional class contains duplicate names these will not automatically be stripped ; unless they are also present within the base class; use uniqueNames(PathClass) if this is required. Parameters:; baseClass - base class, all name components will be retained; additionalClass - ; Returns:; the merged classification, or null if both input classes are null. containsName; public static boolean containsName(PathClass pathClass,; String name); Query whether a PathClass or any of its ancestor classes contains a specified name.; ; For example a class ""CD3: CD8"" would return true for the name ""CD3"" or ""CD8"", but not anything else. Parameters:; pathClass - the classification to test; name - the name to search for; Returns:; true if the name is found, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:10009,test,test,10009,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,1,['test'],['test']
Testability,"scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659868,log,logging,659868,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.PathAnnotationObject. Set ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921673,log,log,921673,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"scription, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:2984,log,logical,2984,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['log'],['logical']
Testability,"ser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARIT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1079,log,logarithm,1079,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['log'],['logarithm']
Testability,"servers. Static methods helpful when dealing with ImageServers. ServerTools() - Constructor for class qupath.lib.images.servers.ServerTools;  ; setAccelerator(String, String) - Method in class qupath.lib.gui.QuPathGUI. Set an accelerator for the specified menu command. setAccelerator(MenuItem, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified menu item. setAccelerator(Action, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified action. setActiveHandlePosition(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. If a handle has been grabbed, update its displacement. setActiveTool(PathTool) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the active PathTool for input to this viewer. setActiveViewer(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the activeViewer property. setAll() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ALL. setAlphaComposite(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; setArgs(String[]) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set optional string args to pass to the script. setBatchIndex(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image index for batch processing (default is 0). setBatchProjectAndImage(Project<BufferedImage>, ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the Project and ImageData to use for batch processing for the current thread. setBatchSaveResult(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Specify whether the script that is running should save results or not. setBatchSize(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the batch size for batch processing (default is 1). setBioformatsEnabled(boolean) - Method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:913222,log,logging,913222,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:4585,log,log,4585,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['log'],['log']
Testability,"setMissing(boolean) - Method in class qupath.lib.objects.TMACoreObject. Set the missing flag for this core, for example because insufficient tissue is present. setName(String) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the name of this ViewTracker. setName(String) - Method in class qupath.lib.objects.PathObject. Set the stored object name. setNumBins(int) - Method in class qupath.lib.gui.charts.HistogramDisplay. Set the number of bins for the histogram. setNumericParameterValue(String, Number) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set a numeric parameter value (either int or double). setNumericParameterValueRange(String, double, double) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the minimum and maximum value for a numeric parameter. setNumThreads(int) - Static method in class qupath.lib.common.Prefs. Set the requested number of threads. setOff() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.OFF. setOpacity(double) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set opacity between 0 (completely transparent) and 1 (completely opaque). setOpacity(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set global opacity for overlay drawing. setOptionalParameters(boolean, boolean, boolean, boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set optional parameters for this ViewTracker. setOverrideSystemMenuBar(boolean) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:938184,log,log,938184,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"size for the location text in the viewer. locationUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658210,log,log,658210,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"splay in the QuPath viewer; Returns:; Throws:; IOException. extractOverlay; public static Overlay extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter); Extract an ImageJ overlay for the specified region. Parameters:; hierarchy - ; request - ; options - options to control which objects are being displayed; filter - optional additional filter used to determine which objects will be included (may be used in combination with options); Returns:. getImageJIcon; public static Image getImageJIcon(int width,; int height); Try to read the ImageJ icon from its jar. Parameters:; width - ; height - ; Returns:. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:7486,test,test,7486,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['test'],['test']
Testability,"ss qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:925118,log,logging,925118,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ss<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8090,log,logging,8090,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4538,test,test,4538,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['test'],['test']
Testability,"sting annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DirectServerChannelInfo(ImageData<BufferedImage>, int) - Constructor for class qupath.lib.display.DirectServerChannelInfo. Constructor. disabled(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the disabled property of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:260446,log,log,260446,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9037,test,test,9037,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['test'],['test']
Testability,"surements.MeasurementList (also extends java.io.Serializable); qupath.opencv.tools.MultiscaleFeatures.Hessian. qupath.lib.scripting.languages.AutoCompletions.Completion; qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer; java.util.function.BiPredicate<T,U>. qupath.lib.gui.viewer.RegionFilter. qupath.opencv.dnn.BlobFunction<T>; qupath.lib.display.ChannelDisplayInfo. qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo; qupath.lib.display.SingleChannelDisplayInfo. qupath.lib.color.ColorMaps.ColorMap; qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder; qupath.lib.color.ColorModels.ColorModelBuilder; qupath.lib.images.servers.ColorTransforms.ColorTransform; qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator; qupath.opencv.dnn.DnnModelBuilder; qupath.lib.gui.viewer.DragDropImportListener.DropHandler<T>; qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). java.util.EventListener. qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener; qupath.lib.objects.hierarchy.events.PathObjectSelectionListener; qupath.lib.gui.viewer.QuPathViewerListener. qupath.lib.scripting.languages.ExecutableLanguage. qupath.lib.gui.scripting.languages.HtmlRenderer. qupath.opencv.ml.objects.features.FeatureExtractor<T>; qupath.lib.images.servers.FileFormatInfo.ImageCheckType; qupath.lib.gui.extensions.GitHubProject; qupath.lib.gui.images.stores.ImageRegionRenderer; qupath.lib.gui.images.stores.ImageRenderer; qupath.lib.images.servers.ImageServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.ServerBuilder<T>; qupath.lib.experimental.pixels.ImageSupplier<S>; qupath.lib.images.writers.ImageWriter<T>; com.sun.jna.Library. qupath.lib.images.servers.openslide.jna.OpenSlideJNA. qupath.lib.experimental.pixels.MaskSupplier<S,T>; qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement<S,T>; qupath.lib.gui.actions.menus.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:39792,log,logging,39792,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability,"t of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; newValue - the value to use in the output image; Returns:. splitAdd; public static ImageOp splitAdd(ImageOp opLeft",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6445,log,log,6445,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,3,['log'],"['log', 'logarithm']"
Testability,t. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdire,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5033,log,logDirectory,5033,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,3,['log'],"['log', 'logDirectory', 'logDirectoryProperty']"
Testability,"tHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v0.4.0; replaced addPathObjectListener(PathObjectHierarchyListener). addPathObjectListener; @Deprecated; public void addPathObjectListener(PathObjectHierarchyListener listener); Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). Legacy method to add a hierarchy ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:8507,log,logic,8507,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['log'],['logic']
Testability,"tatic void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3012,log,log,3012,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"taxProperty(). Returns:; the currentSyntax property; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface Scr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10516,log,log,10516,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,"te event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659030,log,logging,659030,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"th.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659784,log,logToFile,659784,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logToFile']
Testability,"thin any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.Geometr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:956645,log,logging,956645,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"thod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1240,log,logDirectory,1240,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['logDirectory']
Testability,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6395,log,logged,6395,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['log'],['logged']
Testability,"ting cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240338,log,logging,240338,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"tions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658645,log,logDirectoryProperty,658645,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logDirectoryProperty']
Testability,"to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50407,log,log,50407,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of a PathImageServer. estimateStains(int[], flo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283991,log,logging,283991,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static var",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126160,log,log,126160,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,ull if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdirectory containing shared scripts. See Also:. Constant Field Values. DIR_COLORMAPS; public static final String DIR_COLORMAPS; Name of subdirector,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5228,log,logDirectoryProperty,5228,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['logDirectoryProperty']
Testability,"upath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3667,log,logging,3667,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['log'],['logging']
Testability,"urn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2097,log,logging,2097,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,vg.SvgTools.SvgBuilder.ImageIncludeType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Returns the,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1080039,log,logging,1080039,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:8326,stub,stubbornly,8326,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['stub'],['stubbornly']
Testability,"xpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:953113,log,logging,953113,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"y representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3645,log,log,3645,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"y(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:5563,log,log,5563,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,"y(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:22750,log,log,22750,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"y<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14698,log,log,14698,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"ylerProvider; extends Object; Class with static methods to fetch all the available ScriptStylers. Since:; v0.4.0; Author:; Melvin Gelbard. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:1532,log,logger,1532,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['log'],['logger']
Testability,"ys.PixelClassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject) - Method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944379,log,logging,944379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Propert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1282,log,logToFile,1282,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logToFile']
Testability," tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:5795,test,test,5795,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['test'],['test']
Testability," | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1234,log,log,1234,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Usability," - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:379608,user-friendly,user-friendly,379608,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['user-friendly'],['user-friendly']
Usability," ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1654,clear,clearMetadataMap,1654,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['clear'],['clearMetadataMap']
Usability," ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978391,simpl,simplified,978391,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplified']
Usability," Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:1128,simpl,simple,1128,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['simpl'],['simple']
Usability," Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreferences""); public final org.controlsfx.control.action.Action RESET_PREFERENCES. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html:1401,undo,undo,1401,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,1,['undo'],['undo']
Usability," Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:1341,clear,clearCache,1341,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['clear'],['clearCache']
Usability," Object; putMetadataValue(String key,; String value). Store a new metadata value. void; readExternal(ObjectInput in);  ; void; setCaseID(String caseID). Set the case ID metadata value. void; setMissing(boolean missing). Set the missing flag for this core, for example because insufficient tissue is present. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. LEGACY_KEY_UNIQUE_ID; @Deprecated; public static final String LEGACY_KEY_UNIQUE_ID; Deprecated.; The key used before v0.4.0 to represent a unique (usually patient) ID.; This was replaced by #KEY_CASE_ID. See Also:. Constant Field Values. KEY_CASE_ID; public static final String KEY_CASE_ID; Metadata key to store a case identify for the TMA core.; This can be used to group cores that belong to the same case. See Also:. Constant Field V",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:2766,clear,clearChildObjects,2766,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2061,simpl,simple,2061,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability," Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:1890,learn,learning,1890,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['learn'],['learning']
Usability," Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1137,simpl,simplifyPolygon,1137,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplifyPolygon']
Usability," a circular 2D sum filter to all channels of an image. static String; trackedMemory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13105,guid,guided,13105,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['guid'],['guided']
Usability," attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorting would leave the list unchanged.; ; Note: Currently this method considers only positive integer values, treating characters such as ; '+', '-', ',', '.' and 'e' as distinct elements of text. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); extractor - function used to convert each element of the collection to a String representation. smartStringComparator; public static Comparator<String> smartStringComparator(); Comparator for smart String sorting.; Note: This comparator is very inefficient. Where possible smartStringSort(Collection, Function) should ; be used instead. Returns:; a String comparator that parses integers from within the String so they may be compared by value. zapGremlins; public static String zapGremlins(String text); Remove non-prin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:22344,intuit,intuitive,22344,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8004,clear,clear,8004,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,3,['clear'],['clear']
Usability," class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976996,simpl,simple,976996,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability," class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5722,simpl,simple,5722,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['simpl'],['simple']
Usability," clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107872,clear,clearCache,107872,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCache']
Usability," confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:10594,clear,clearPathObjects,10594,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['clear'],['clearPathObjects']
Usability," coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simpli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2476,simpl,simplifyPolygon,2476,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,3,['simpl'],"['simplified', 'simplifyPolygon']"
Usability," detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5490,clear,clearAnnotations,5490,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAnnotations']
Usability," detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7129,clear,clearRootMeasurements,7129,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearRootMeasurements']
Usability," dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-proces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1769,simpl,simply,1769,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['simpl'],['simply']
Usability," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2808,simpl,simplify,2808,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,12,['simpl'],"['simple', 'simplified', 'simplify', 'simplifyPath', 'simplifyShape']"
Usability," extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99641,clear,clearRootMeasurements,99641,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearRootMeasurements']
Usability," for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1789,undo,undoOnce,1789,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undoOnce']
Usability," for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3808,simpl,simplifyTitledPane,3808,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['simpl'],['simplifyTitledPane']
Usability," from a specified Mat type (which also encodes depth). typeToDepth(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057246,undo,undo,1057246,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability," if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in Qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:5785,clear,clear,5785,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['clear'],['clear']
Usability," image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest); readRegion(double, int, int, int, int, int, int). getServerType; String getServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:11703,simpl,simply,11703,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['simpl'],['simply']
Usability," image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:4122,simpl,simple,4122,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['simpl'],['simple']
Usability," in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the cur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7042,clear,clearRootMeasurements,7042,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearRootMeasurements']
Usability," in microns. Parameters:; metadata - ; Throws:; IllegalArgumentException - if the metadata is incompatible (e.g. different image path, different bit-depth). getOriginalMetadata; ImageServerMetadata getOriginalMetadata(); Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. getMetadata(). getDefaultThumbnail; T getDefaultThumbnail(int z,; int t); throws IOException; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; TileRequestManager getTileRequestManager(); Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Returns:. getImageClass; Class<T> getImageClass(); Get the class of the image representation returned by this ImageServer. Returns:. getBuilder; default ImageServerBuilder.ServerBuilder<T> getBuilder(); Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:15509,simpl,simpler,15509,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['simpl'],['simpler']
Usability," in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1700,simpl,simple,1700,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simple']
Usability," in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5826,clear,clearDetectionMeasurements,5826,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearDetectionMeasurements']
Usability," insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertQPExImportAction;  ; protected org.controlsfx.control.action.Action; insertQPImportAction;  ; protected org.controlsfx.control.action.Action; killRunningScriptAction;  ; protected org.controlsfx.control.action.Action; pasteAction;  ; protected org.controlsfx.control.action.Action; pasteAndEscapeAction;  ; protected org.controlsfx.control.action.Action; redoAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:2904,undo,undoAction,2904,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['undo'],['undoAction']
Usability," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2892,feedback,feedback,2892,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,2,['feedback'],['feedback']
Usability," is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5122,clear,clearAllObjects,5122,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAllObjects']
Usability," its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5430,simpl,simplest,5430,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['simpl'],['simplest']
Usability," labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:56412,feedback,feedback,56412,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['feedback'],['feedback']
Usability," last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:4856,intuit,intuitive,4856,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['intuit'],['intuitive']
Usability," measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97299,clear,clearAnnotationMeasurements,97299,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearAnnotationMeasurements']
Usability," objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110843,clear,clearOutside,110843,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearOutside']
Usability," plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParameter<S>. Parameter that supports a list of choices. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. ClassifyMenuActions;  ; CodeAreaControl. Code area control using RichTextFX. CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. ColorDeconvMatrix3x3",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:6404,simpl,simple,6404,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability," preferred height of the dialog pane. Prefs - Class in qupath.lib.common. Core QuPath preferences. Prefs() - Constructor for class qupath.lib.common.Prefs;  ; prefWidth(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the preferred width of the dialog pane. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called after parsing the argument String, and immediately before creating & running any generated tasks. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; preprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from a collection. preprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from an array. Preprocessing - Class in qupath.opencv.ml.objects.features. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing() - Constructor for class qupath.opencv.ml.objects.features.Preprocessing;  ; Preprocessing.PCAProjector - Class in qupath.opencv.ml.objects.features. Helper class to apply PCA projection. preprocessor(FeaturePreprocessor) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a FeaturePreprocessor to pixels, considering each channel as features. PRETTY_JSON - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request pretty-printing for the JSON. previousSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property storing the previous tool that was selected. PROBABILITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. process(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.Processor. Processing method. PROCESSING ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:781873,learn,learning,781873,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability," public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1389,simpl,simplified,1389,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplified']
Usability," qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057648,undo,undoOnce,1057648,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undoOnce']
Usability," red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:1888,simpl,simplify,1888,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['simpl'],['simplify']
Usability," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:43590,simpl,simple,43590,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability," set status based upon Java version, with 17+ turning memoization off.; ; See https://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - . getReaderOptions; public Map<String,String> getReaderOptions(); Get a map representing additional arguments that should be passed to readers.; This method returns a copy of the map, and therefore changes will not automatically be reflected in ; the options until these are passed to setReaderOptions(Map). Returns:; the additional arguments currently requested when opening images; See Also:. clearReaderOptions(); setReaderOptions(Map). clearReaderOptions; public void clearReaderOptions(); Clear all reader options, returning these to their defaults. See Also:. getReaderOptions(); setReaderOptions(Map). setReaderOptions; public void setReaderOptions(Map<String,String> options); Set additional arguments that should be passed to readers.; Example:; ; BioFormatsServerOptions.setReaderOptions(Map.of(""zeissczi.autostitch"", ""false""));; ; Note: options are passed to every server, even when irrelevant for the particular server type.; Therefore they can end up being stored unnecessarily in projects and server paths.; For that reason it best practice to call clearReaderOptions() after options are no longer required. Parameters:; options - the arguments to pass when opening new readers; See Also:. clearReaderOptions(); getReaderOptions(). getInstance; public static BioFormatsServerOptions getInstance(); Get the static instance of BioFormatsServerOptions, available to servers being constructed. Returns:. bio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:4438,clear,clearReaderOptions,4438,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['clear'],['clearReaderOptions']
Usability," should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:5942,simpl,simply,5942,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['simpl'],['simply']
Usability," static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7133,user-friendly,user-friendly,7133,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['user-friendly'],['user-friendly']
Usability," static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6218,clear,clearMeasurements,6218,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearMeasurements']
Usability," static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29980,undo,undo,29980,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability," such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1110475,simpl,simply,1110475,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simply']
Usability," that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderPro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29637,undo,undo,29637,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability," the gamma slider. ObjectProperty<ImageDisplay>; imageDisplayProperty(). The image display to which the sliders are applied. DoubleProperty; maxValueProperty(). Value of the maximum slider. DoubleProperty; minValueProperty(). Value of the minimum slider. void; refreshSliders(). Refresh the sliders, to ensure they match with the current channel. void; resetAllSliders(). Reset all sliders to their default values. ObjectProperty<ChannelDisplayInfo>; selectedChannelProperty(). The channel to which the sliders are applied. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:4437,clear,clearConstraints,4437,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['clear'],['clearConstraints']
Usability," the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeedProperty(). Percentage to scale navigation speed. static IntegerProperty; numCommandThreadsProperty(). Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18535,undo,undo,18535,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability," to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel - package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops - package qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager - Class in qupath.lib.gui.viewer.tools. Helper class for managing pressure-sensitive input. QuPathPenManager() - Constructor for class qupath.lib.gui.viewer.tools.QuPathPenManager;  ; QuPathPenManager.PenInputManager - Interface in qupath.lib.gui.viewer.tools. Interface defining minimal behavior for a pen input device. QuPathResources - Class in qupath.lib.gui.localizat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:816738,learn,learning,816738,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability," type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057416,undo,undo,1057416,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability," values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5145,simpl,simplest,5145,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['simpl'],['simplest']
Usability," your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class RoiLabeling. java.lang.Object; qupath.imagej.processing.RoiLabeling. public class RoiLabeling; extends Object; Collection of static methods to help work with ROIs, binary & labelled images in ImageJ.; ; This enables switching between different methods of representing regions as required. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RoiLabeling();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; clearBoundary(ByteProcessor bp,; Roi roi,; double clearValue). Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. static void; clearOutside(ImageProcessor ip,; Roi roi). Clear (i.e. static void; fillHoles(ByteProcessor bp). Fill holes in a binary image. static void; fillOutside(ImageProcessor ip,; Roi roi,; double value). Fill in a region outside a specified ROI. static ByteProcessor; findDirectionalMaxima(ImageProcessor ip). Create a binary image for pixels that have a higher value than their neighbors. static ByteProcessor; findDirectionalMinima(ImageProcessor ip). Create a binary image for pixels that have a lower value than their neighbors. static List<PolygonRoi>; getFilledPolygonROIs(ImageProcessor ip,; int wandMode). Get filled PolygonRois for connected pixels with the same value in an image. static List<PolygonRoi>; getFilledPolygonROIsExperimental(ImageProcessor ip). Experimental 8-connected ROI creation; non-zero pixels considered within objects. static Map<Float,PolygonRoi>; getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode). Get filled Polygon ROIs using distinct labels, creating a map between labe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:1041,clear,clearOutside,1041,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['clear'],['clearOutside']
Usability,"  ; TMA_ADD_NOTE - Variable in class qupath.lib.gui.actions.CommonActions;  ; TMA_CORES - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept TMA cores. TMA_DEARRAYING_DATA_EXTENSION - Static variable in class qupath.lib.gui.tma.TMADataIO;  ; TMA_EXPORT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; TMA_GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TMA_IMPORT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; TMA_VIEWER - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; TmaActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The ai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1031226,simpl,simple,1031226,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:455709,usab,usable,455709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['usab'],['usable']
Usability,"(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3987,undo,undoOnce,3987,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undoOnce']
Usability,"(exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting positio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2956,clear,clear,2956,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['clear'],['clear']
Usability,", String, Collection<T>, T) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). showChoiceDialog(String, String, T[], T) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). showConfirmDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConfirmDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:963861,simpl,simple,963861,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,", USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:3544,clear,clearConstraints,3544,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['clear'],['clearConstraints']
Usability,", onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3013,clear,clearConstraints,3013,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['clear'],['clearConstraints']
Usability,",; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDownsamples; double[] getPreferredDownsamples(); Get an array of downsample factors supported by the server. Returns:. nResolutions; int nResolutions(); Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Returns:. getDownsampleForResolution; double getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:5587,simpl,simplest,5587,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['simpl'],['simplest']
Usability,- Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:451002,user-friendly,user-friendly,451002,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['user-friendly'],['user-friendly']
Usability,". A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:59243,undo,undo,59243,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['undo'],['undo']
Usability,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:656,learn,learning,656,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['learn'],['learning']
Usability,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:521,learn,learning,521,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,". All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:1455,clear,clear,1455,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['clear'],['clear']
Usability,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:950,simpl,simple,950,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['simpl'],['simple']
Usability,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html:541,learn,learning,541,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html,1,['learn'],['learning']
Usability,". BoundaryStrategy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class BoundaryStrategy. java.lang.Object; qupath.process.gui.commands.ml.BoundaryStrategy. public class BoundaryStrategy; extends Object; Helper class for handling the boundaries of training annotations when creating a pixel classifier.; ; The purpose of this is to provide a mechanism for learning the separation between densely packed objects (e.g. nuclei). Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:661,learn,learning,661,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,1,['learn'],['learning']
Usability,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:489,simpl,simple,489,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html,1,['simpl'],['simple']
Usability,". ChannelSettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelSettings. java.lang.Object; qupath.lib.display.settings.ChannelSettings. public class ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:501,simpl,simple,501,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,1,['simpl'],['simple']
Usability,". ColorTransforms.ColorTransform (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ColorTransforms.ColorTransform. Enclosing class:; ColorTransforms. public static interface ColorTransforms.ColorTransform; Interface defining a color transform that can extract a float values from a BufferedImage.; ; The simplest example of this is to extract a single channel (band) from an image. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels). Extract a (row-wise) array containing the pixels extracted from a BufferedImage. String; getName(). Get a displayable name for the transform. boolean; supportsImage(ImageServer<BufferedImage> server). Query whether this transform can be applied to the specified image. Method Details. extractChannel; float[] extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels); Extract a (row-wise) array containing the pixels extracted from a BufferedImage. Parameters:; server - the server from which the image was read; can be necessary for some transforms (e.g. to request color deconvolution stains); img - the image; pixels - optional preallocated array; will be used if it is long enough to hold the transformed pixels; Returns:. supportsImage; boolean supportsImage(ImageServer<BufferedImage> server); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; server - ; Returns:. getName; String getName(); Get a displayable name for the transform. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html:611,simpl,simplest,611,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,1,['simpl'],['simplest']
Usability,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:617,simpl,simply,617,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['simpl'],['simply']
Usability,". Commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measuremen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:489,simpl,simple,489,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['simpl'],['simple']
Usability,". ContourTracing.ChannelThreshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing.ChannelThreshold. java.lang.Object; qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Enclosing class:; ContourTracing. public static class ContourTracing.ChannelThreshold; extends Object; Helper class defining global thresholds to apply to a single image channel. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:887,simpl,simple,887,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,1,['simpl'],['simple']
Usability,". Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1212,clear,clearCachedOverlay,1212,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['clear'],['clearCachedOverlay']
Usability,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:561,learn,learning,561,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['learn'],['learning']
Usability,". DnnModelParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams.Builder. java.lang.Object; qupath.opencv.dnn.DnnModelParams.Builder. Enclosing class:; DnnModelParams. public static class DnnModelParams.Builder; extends Object; Builder for DnnModelParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModelParams; build(). Build the params. DnnModelParams.Builder; files(File... files). Specify the URIs as files. DnnModelParams.Builder; framework(String framework). Specify the deep learning framework that can use the model. DnnModelParams.Builder; input(String name,; long... shape). Specify the shape as a long array for a single input with a specified name. DnnModelParams.Builder; input(String name,; DnnShape shape). Specify the shape for a single input with a specified name. DnnModelParams.Builder; inputs(Map<String,DnnShape> inputs). Specify the shapes for one or more inputs. DnnModelParams.Builder; inputShape(long... shape). Specify the shape for a single input, with the default input name. DnnModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html:863,learn,learning,863,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,1,['learn'],['learning']
Usability,". DoGSuperpixelsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class DoGSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.DoGSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DoGSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:888,simpl,simple,888,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['simpl'],['simple']
Usability,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:952,clear,clear,952,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html,2,['clear'],['clear']
Usability,". FeaturePreprocessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor. public class FeaturePreprocessor; extends Object; Create a preprocessor for an image or training matrix.; This can include simple normalization (rescaling) and PCA projection. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html:566,simpl,simple,566,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,1,['simpl'],['simple']
Usability,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html:712,usab,usable,712,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,1,['usab'],['usable']
Usability,". Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4235,clear,clearConstraints,4235,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['clear'],['clearConstraints']
Usability,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:584,simpl,simply,584,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html,1,['simpl'],['simply']
Usability,". IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:22170,simpl,simple,22170,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,". ImageDisplaySettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the backgroun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:521,simpl,simple,521,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,1,['simpl'],['simple']
Usability,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:574,simpl,simple,574,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,1,['simpl'],['simple']
Usability,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:506,learn,learning,506,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,1,['learn'],['learning']
Usability,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:622,simpl,simplify,622,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['simpl'],['simplify']
Usability,". Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52586,simpl,simplify,52586,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simplify']
Usability,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:762,simpl,simple,762,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,2,['simpl'],['simple']
Usability,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:916,simpl,simply,916,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['simpl'],['simply']
Usability,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:634,simpl,simplify,634,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['simpl'],['simplify']
Usability,". Normalizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Normalizer. java.lang.Object; qupath.opencv.ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeatur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:510,simpl,simple,510,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,1,['simpl'],['simple']
Usability,". ObjectClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers. public class ObjectClassifiers; extends Object; Helper class for creating ObjectClassifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. static class ; ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Constructor Summary; Constructors. Constructor; Description; ObjectClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ObjectClassifier<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:743,simpl,simple,743,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,1,['simpl'],['simple']
Usability,". ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ClassifyByMeasurementBuilder<T>. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Type Parameters:; T - . Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ClassifyByMeasurementBuilder<T>; extends Object; Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. Constructor Summary; Constructors. Constructor; Description; ClassifyByMeasurementBuilder(String measurementName). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(String pathClassName). Set the classification ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:724,simpl,simple,724,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['simpl'],['simple']
Usability,". Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:1311,simpl,simple,1311,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['simpl'],['simple']
Usability,". PathObjectConnections (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectConnections. java.lang.Object; qupath.lib.objects.PathObjectConnections. All Implemented Interfaces:; Externalizable, Serializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:999,clear,clear,999,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,1,['clear'],['clear']
Usability,". PathObjectSelectionModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectSelectionModel. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. public class PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:983,clear,clearSelection,983,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['clear'],['clearSelection']
Usability,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:575,simpl,simple,575,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['simpl'],['simple']
Usability,". PlainLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that tak",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html:882,simpl,simple,882,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,1,['simpl'],['simple']
Usability,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:916,simpl,simple,916,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['simpl'],['simple']
Usability,". PredictionFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface PredictionFunction<T>. Type Parameters:; T - . public interface PredictionFunction<T>; Prediction function, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:505,learn,learning,505,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,2,['learn'],['learning']
Usability,". Preprocessing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the outpu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:552,learn,learning,552,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['learn'],['learning']
Usability,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:610,learn,learning,610,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['learn'],['learning']
Usability,". ProjectCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ProjectCommands. java.lang.Object; qupath.lib.gui.commands.ProjectCommands. public class ProjectCommands; extends Object; Helper class implementing simple 'single-method' commands related to projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectCommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type). Add a single image to a project. static BufferedImage; getThumbnailRGB(ImageServer<BufferedImage> server). Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. static boolean; promptToCheckURIs(Project<?> project,; boolean onlyIfMissing). Check the URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:517,simpl,simple,517,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,1,['simpl'],['simple']
Usability,". ProjectImageEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ProjectImageEntry<T>. Type Parameters:; T - Depends upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.Serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:859,clear,clearMetadata,859,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['clear'],['clearMetadata']
Usability,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:702,user-friendly,user-friendly,702,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,4,['user-friendly'],['user-friendly']
Usability,". RoiLabeling (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class RoiLabeling. java.lang.Object; qupath.imagej.processing.RoiLabeling. public class RoiLabeling; extends Object; Collection of static methods to help work with ROIs, binary & labelled images in ImageJ.; ; This enables switching between different methods of representing regions as required. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RoiLabeling();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; clearBoundary(ByteProcessor bp,; Roi roi,; double clearValue). Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. static void; clearOutside(ImageProcessor ip,; Roi roi). Clear (i.e. static void; fillHoles(ByteProcessor bp). Fill holes in a binary image. static void; fillOutside(ImageProcessor ip,; Roi roi,; double value). Fill in a region outside a specified ROI. static ByteProcessor; findDirectionalMaxima(ImageProcessor ip). Create a binary image for pixels that have a higher value than their neighbors. static ByteProcessor; findDirectionalMinima(ImageProcessor ip). Create a binary image for pixels that have a lower value than their neighbors. static List<PolygonRoi>; getFilledPolygonROIs(ImageProcessor ip,; int wandMode). Get filled PolygonRois for connected pixels with the same value in an image. static List<PolygonRoi>; getFilledPolygonROIsExperimental(ImageProcessor ip). Experimental 8-connected ROI creation; non-zero pixels considered within objects. static Map<Float,PolygonRoi>; getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode). Get filled Polygon R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:870,clear,clearBoundary,870,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,2,['clear'],"['clearBoundary', 'clearValue']"
Usability,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:492,simpl,simplifying,492,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,2,['simpl'],"['simplifyPath', 'simplifying']"
Usability,". SharedThreadPoolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SharedThreadPoolManager. java.lang.Object; qupath.lib.gui.SharedThreadPoolManager. All Implemented Interfaces:; AutoCloseable. public class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:586,simpl,simplify,586,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,1,['simpl'],['simplify']
Usability,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:495,simpl,simple,495,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['simpl'],['simple']
Usability,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:580,feedback,feedback,580,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,2,"['feedback', 'progress bar']","['feedback', 'progress bar']"
Usability,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:593,simpl,simple,593,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,". SlideLabelView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:607,simpl,simple,607,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,1,['simpl'],['simple']
Usability,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:501,simpl,simple,501,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html,1,['simpl'],['simple']
Usability,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:770,simpl,simply,770,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,1,['simpl'],['simply']
Usability,". TaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface TaskRunner. All Known Implementing Classes:; AbstractTaskRunner, CommandLineTaskRunner, TaskRunnerFX. public interface TaskRunner; A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; isCancelled(). Query if the plugin can be cancelled while running. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Method Details. isCancelled; boolean isCancelled(); Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Returns:. runTasks; void runTasks(Collection<? extends Runnable> tasks); Pass a collection of parallelizable tasks to run. Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html:571,feedback,feedback,571,javadoc/docs/qupath/lib/plugins/TaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html,1,['feedback'],['feedback']
Usability,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:637,simpl,simple,637,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['simpl'],['simple']
Usability,". UndoRedoManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:710,undo,undo,710,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undo']
Usability,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1701,user-friendly,user-friendly,1701,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,1,['user-friendly'],['user-friendly']
Usability,". WrappedBufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image til",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:787,simpl,simply,787,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['simpl'],['simply']
Usability,". clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109266,clear,clearDetectionMeasurements,109266,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearDetectionMeasurements']
Usability,". qupath.imagej.superpixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.superpixels. package qupath.imagej.superpixels. Classes to generate superpixels. Classes. Class; Description; DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/package-summary.html:470,simpl,simple,470,javadoc/docs/qupath/imagej/superpixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/package-summary.html,1,['simpl'],['simple']
Usability,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html:557,simpl,simple,557,javadoc/docs/qupath/imagej/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html,1,['simpl'],['simple']
Usability,. qupath.lib.analysis (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis. package qupath.lib.analysis. Classes to aid with analysis. Related Packages. Package; Description; qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DistanceTools. Static methods for calculating distances between objects. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html:863,simpl,simple,863,javadoc/docs/qupath/lib/analysis/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html,1,['simpl'],['simple']
Usability,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html:885,simpl,simple,885,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,1,['simpl'],['simple']
Usability,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:881,simpl,simple,881,javadoc/docs/qupath/lib/analysis/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html,1,['simpl'],['simple']
Usability,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html:881,simpl,simple,881,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,1,['simpl'],['simple']
Usability,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:877,simpl,simple,877,javadoc/docs/qupath/lib/analysis/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html,1,['simpl'],['simple']
Usability,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:394,simpl,simple,394,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html,1,['simpl'],['simple']
Usability,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:526,simpl,simple,526,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,1,['simpl'],['simple']
Usability,". qupath.lib.classifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers. package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers.; ; This was the main package in QuPath v0.1.2 and earlier.; Since v0.2.0, the new subpackages have been created for pixel and object classifiers. Related Packages. Package; Description; qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. Enum Classes. Class; Description; Normalization. Methods for normalizing features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html:417,learn,learning,417,javadoc/docs/qupath/lib/classifiers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html,1,['learn'],['learning']
Usability,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html:547,learn,learning,547,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html,2,"['learn', 'simpl']","['learning', 'simple']"
Usability,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html:538,learn,learning,538,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,1,['learn'],['learning']
Usability,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html:484,simpl,simple,484,javadoc/docs/qupath/lib/display/settings/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html,4,['simpl'],['simple']
Usability,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:423,simpl,simplify,423,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,1,['simpl'],['simplify']
Usability,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:870,simpl,simple,870,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,1,['simpl'],['simple']
Usability,". qupath.lib.roi.interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi.interfaces. package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs).; ; In the past, there were multiple interfaces to define ROIs of different types.; This has now been simplified with more methods added to ROI itself instead. Related Packages. Package; Description; qupath.lib.roi. Classes that define regions of interest (ROIs). All Classes and InterfacesInterfacesEnum Classes. Class; Description; ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html:535,simpl,simplified,535,javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,1,['simpl'],['simplified']
Usability,". qupath.opencv (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv. package qupath.opencv. Detection plugins using OpenCV. Related Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html:731,learn,learning,731,javadoc/docs/qupath/opencv/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html,1,['learn'],['learning']
Usability,". qupath.opencv.dnn (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:686,learn,learning,686,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,2,['learn'],['learning']
Usability,". qupath.opencv.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.features. package qupath.opencv.features. Classes for feature calculation using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/package-summary.html:696,learn,learning,696,javadoc/docs/qupath/opencv/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/package-summary.html,1,['learn'],['learning']
Usability,". qupath.opencv.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.io. package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/package-summary.html:684,learn,learning,684,javadoc/docs/qupath/opencv/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/package-summary.html,1,['learn'],['learning']
Usability,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:389,learn,learning,389,javadoc/docs/qupath/opencv/ml/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html,1,['learn'],['learning']
Usability,. qupath.opencv.ml.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects. package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Classes. Class; Description; OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html:511,learn,learning,511,javadoc/docs/qupath/opencv/ml/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html,1,['learn'],['learning']
Usability,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html:867,simpl,simple,867,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,2,"['learn', 'simpl']","['learning', 'simple']"
Usability,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html:504,learn,learning,504,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,1,['learn'],['learning']
Usability,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:748,learn,learning,748,javadoc/docs/qupath/opencv/ops/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html,3,"['learn', 'simpl']","['learning', 'simplify']"
Usability,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:767,learn,learning,767,javadoc/docs/qupath/opencv/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html,1,['learn'],['learning']
Usability,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html:408,learn,learning,408,javadoc/docs/qupath/process/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html,3,['learn'],['learning']
Usability,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:427,learn,learning,427,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,3,['learn'],['learning']
Usability,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html:556,learn,learning,556,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html,2,['learn'],['learning']
Usability,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:447,learn,learning,447,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,2,['learn'],['learning']
Usability,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html:557,learn,learning,557,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,2,['learn'],['learning']
Usability,". updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean). updatePlane; public static PathObject updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs); Update the ROI plane for a single object.; Any child objects are discarded; if these should also be copied (and updated), ; use updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean). Parameters:; pathObject - the original object (this will be unchanged); plane - the plane for the new ROIs; copyMeasurements - if true, measurements and metadata should be copied; this may not be suitable since ; intensity measurements probably aren't appropriate for the new plane; createNewIDs - if true, create new IDs for the object (recommended); Returns:; the new object, with ROIs on the requested plane; Since:; v0.4.0; See Also:. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean). getSuitableName; public static String getSuitableName(Class<? extends PathObject> cls,; boolean makePlural); Get a user-friendly name for a specific type of PathObject, based on its Java class. Parameters:; cls - ; makePlural - ; Returns:. containsObject; @Deprecated; public static boolean containsObject(PathObject parentObject,; PathObject childObject); Deprecated.; Test whether the ROI associated with one object can completely the ROI of a second object.; Returns false if either ROI is null. Parameters:; parentObject - ; childObject - ; Returns:. isAncestor; public static boolean isAncestor(PathObject pathObject,; PathObject possibleAncestor); Query if one object is the ancestor of another. Parameters:; pathObject - ; possibleAncestor - ; Returns:. getTMACoreObjects; public static List<TMACoreObject> getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores); Extract a list of TMA cores from an object hierarchy. If no cores are present, an empty list is returned. Parameters:; hierarchy - ; includeMissingCores - ; Returns:. getAncestorTMACore; public static T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:23117,user-friendly,user-friendly,23117,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['user-friendly'],['user-friendly']
Usability,".ColorTransformer.ColorTransformMethod. All pixels black. BLACK - Static variable in class qupath.lib.common.ColorTools. Packed int representing black. blankString(String, boolean) - Static method in class qupath.lib.common.GeneralTools. Check if a string is blank, i.e. blobFromImage(Mat) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a single mat. blobFromImages(Collection<Mat>, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. blobFromImages(Mat...) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from one or more mats. blobFromImages(Mat, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:59633,learn,learning,59633,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,".ImageJServerBuilder;  ; imageList(List<ProjectImageEntry<BufferedImage>>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the list of images (ProjectImageEntry) to export. imageNameProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property indicating the name of the image. ImageOp - Interface in qupath.opencv.ops. An operation that may be applied to a Mat. ImageOps - Class in qupath.opencv.ops. Create and use ImageOp and ImageDataOp objects. ImageOps() - Constructor for class qupath.opencv.ops.ImageOps;  ; ImageOps.Channels - Class in qupath.opencv.ops. Channel and color operations. ImageOps.Core - Class in qupath.opencv.ops. Core operations. ImageOps.Filters - Class in qupath.opencv.ops. Filtering operations. ImageOps.ML - Class in qupath.opencv.ops. Machine learning operations. ImageOps.Normalize - Class in qupath.opencv.ops. Normalization operations. ImageOps.PaddedOp - Class in qupath.opencv.ops. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold - Class in qupath.opencv.ops. Thresholding operations. ImagePlane - Class in qupath.lib.regions. Helper class to store z-slice and time point indices, optionally along with a channel index as well. imagePointToComponentPoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the the full-resolution image into the corresponding pixel coordinate in the viewer - optionally constraining it to any viewer component bounds. imageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the JavaFX image. ImageRegion - Class in qupath.lib.regions. Class for defining an image region. ImageRegionRenderer - Interface in qupath.lib.gui.images.stores. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory - Class in qupath.lib.gui.images.stores. Factory for creating an ImageRegionStore. ImageRegionStoreFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:591947,simpl,simplify,591947,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplify']
Usability,".PathTableData. Return an ordered list of all names, including both numeric measurements and String values. getAllNeighbors() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:326339,simpl,simple,326339,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,".classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). getType() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the type of path objects used in the export. getTypeAdapterFactory() - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Get a TypeAdapterFactory to handle ObjectClassifier instances. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the releas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:542426,clear,clear,542426,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,".gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978195,simpl,simplified,978195,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplified']
Usability,".imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978570,simpl,simplified,978570,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplified']
Usability,".imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features - package qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps - package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images - package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats - package qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival - package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object - package qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:807367,simpl,simple,807367,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,".lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object - package qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui - package qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions - package qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations - package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus - package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts - package qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:808514,simpl,simplify,808514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplify']
Usability,.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; ProjectBrowser - Class in qupath.lib.gui.panes. Component for previewing and selecting images within a project. ProjectBrowser(QuPathGUI) - Constructor for class qupath.lib.gui.panes.ProjectBrowser. Constructor. ProjectClassifierBindings - Class in qupath.process.gui.commands.ml. Class to help with formatting text fields for entering pixel and object classifier names. ProjectClassifierBindings() - Constructor for class qupath.process.gui.commands.ml.ProjectClassifierBindings;  ; ProjectCommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to projects. ProjectCommands() - Constructor for class qupath.lib.gui.commands.ProjectCommands;  ; ProjectDialogs - Class in qupath.lib.gui.dialogs. Dialogs specifically related to managing projects. ProjectDialogs() - Constructor for class qupath.lib.gui.dialogs.ProjectDialogs;  ; ProjectImageEntry<T> - Interface in qupath.lib.projects. Class to represent an image entry within a project. ProjectIO - Class in qupath.lib.projects. Read QuPath projects. ProjectIO() - Constructor for class qupath.lib.projects.ProjectIO;  ; projectProperty() - Method in class qupath.lib.gui.QuPathGUI. Read-only property representing the currently-open project. Projects - Class in qupath.lib.projects. Static methods to help when working with Projects. Projects() - Constructor for class qupath.lib.projects.Projects;  ; PROMPT - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Prompt the user to specified the image type. promptForDirectory(File) - Static ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:786643,simpl,simple,786643,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,".lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111253,clear,clearRootMeasurements,111253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearRootMeasurements']
Usability,". more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object, which may or may not refer to a file or directory that exists; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); buildPathInProject(String...). mkdirs; public static boolean mkdirs(String path); Ensure directories exist for the specified path, calling file.mkdirs() if not. Parameters:; path - the directory path; Returns:; true if a directory was created, false otherwise. fileExists; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:54027,usab,usable,54027,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['usab'],['usable']
Usability,"/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:15147,learn,learning,15147,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1016,learn,learning,1016,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['learn'],['learning']
Usability,":. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class AutoCompletions. java.lang.Object; qupath.lib.scripting.languages.AutoCompletions. public class AutoCompletions; extends Object; Class to deal with script auto-completions. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AutoCompletions.Completion. A single completion. static interface ; AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. Field Summary; Fields. Modifier and Type; Field; Description; static final AutoCompletions.CompletionTokenizer; JAVA_TOKENIZER. A completion tokenizer that extracts a token used to determine Java completions. static final AutoCompletions.CompletionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:1188,simpl,simply,1188,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,1,['simpl'],['simply']
Usability,":. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5320,simpl,simple,5320,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['simpl'],['simple']
Usability,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:1962,simpl,simple,1962,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,2,['simpl'],['simple']
Usability,"; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3330,undo,undo,3330,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['undo'],['undo']
Usability,"; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96903,clear,clearMeasurements,96903,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearMeasurements']
Usability,"; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7219,undo,undo,7219,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,3,['undo'],['undo']
Usability,"; the alpha, red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. packClippedRGB; public static int packClippedRGB(int r,; int g,; int b); Make a packed RGB value from specified input values, clipping to the range 0-255.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; // * @see #packRGB(int, int, int). makeRGBA; @Deprecated; public static int makeRGBA(int r,; int g,; int b,; int a); Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. Make a packed ARGB value from specified input values.; ; Input r, g, b and a should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are. Parameters:; r - ; g - ; b - ; a - ; Returns:; See Also:. packARGB(int, int, int, int). packARGB; public static int packARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values.; ; Input a, r, g, and b should be in the range 0-255; only the lower 8 bits are used.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:7886,simpl,simply,7886,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['simpl'],['simply']
Usability,"; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getFile; public File getFile(); Get the underlying file. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6737,simpl,simply,6737,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['simpl'],['simply']
Usability,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5937,intuit,intuitive,5937,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['intuit'],['intuitive']
Usability,"ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107211,clear,clearAnnotationMeasurements,107211,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAnnotationMeasurements']
Usability,"Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when saving/reloading this project. Returns:. getPreviousURI; URI getPreviousURI(); Sometimes projects move (unfortunately). This returns the previous URI, if known - ; which can be helpful for resolving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); Get a path to this project, or null if this project is not on a local file system.; ; If not null, the path may be a file or a directory. Returns:; See Also:. ProjectImageEntry.getEntryPath(). createSubProject; Project<T> createSubProject(String name,; Collection<ProjectImageEntry<T>> entries); Create a sub-project that provides a view on the specified entries.; ; The retains exactly the same references and data, i.e. it does not duplicate entries or data files - ; rather it is used to generate projects that provide access to a subset of the entries in the original project. Parameters:; name - the name of the sub-project; entries - the entries t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:4688,usab,usable,4688,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['usab'],['usable']
Usability,"Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the ellipse",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:1230,simpl,simple,1230,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['simpl'],['simple']
Usability,"Convert a traced outline from the ImageJ Wand into a PolygonRoi. Parameters:; wand - ; Returns:. fillHoles; public static void fillHoles(ByteProcessor bp); Fill holes in a binary image.; ; Assumes 255 is foreground, 0 is background.; ; Based on code in ImageJ's Binary class. Parameters:; bp - . labelROIs; public static ImageProcessor labelROIs(ImageProcessor ipLabels,; List<? extends Roi> rois); Label ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. Parameters:; ipLabels - ; rois - ; Returns:. labelImage; public static ImageProcessor labelImage(ImageProcessor ip,; float threshold,; boolean conn8); Create a labelled image from above-threshold pixels for an image. Parameters:; ip - ; threshold - ; conn8 - ; Returns:; labelled image, as a ShortProcessor (if possible) or FloatProcessor (if necessary). removeSmallAreas; public static void removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8); Remove objects having small areas, defined in terms of pixels. Parameters:; bp - ; minPixels - minimum number of pixels in an object that should be kept; conn8 - . removeByAreas; public static int removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8); Remove objects containing < minPixels or > maxPixels. Parameters:; bp - ; minPixels - ; maxPixels - ; conn8 - ; Returns:; the number of connected objects remaining. fillOutside; public static void fillOutside(ImageProcessor ip,; Roi roi,; double value); Fill in a region outside a specified ROI. Parameters:; ip - ; roi - ; value - . clearOutside; public static void clearOutside(ImageProcessor ip,; Roi roi); Clear (i.e. set pixels to zero) in a region outside a specified ROI. Parameters:; ip - ; roi - . clearBoundary; public static void clearBoundary(ByteProcessor bp,; Roi roi,; double clearValue); Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. Parameters:; bp - ; roi - ; clearValue - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:8613,clear,clearOutside,8613,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,6,['clear'],"['clearBoundary', 'clearOutside', 'clearValue']"
Usability,"Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1591,clear,clearChildObjects,1591,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['clear'],['clearChildObjects']
Usability,"Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:1639,simpl,simple,1639,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['simpl'],['simple']
Usability,"ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:3960,simpl,simplest,3960,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['simpl'],['simplest']
Usability,"Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerOptions. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerOptions. public class BioFormatsServerOptions; extends Object; Container for various options that can customize the behavior of the BioFormatsImageServer. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; ALLOW_MEMOIZATION_PROPERTY. System property controlling whether memoization is allowed or not. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; allowMemoization(). Check whether memoization should be allowed or not. boolean; bioformatsEnabled(). Returns true if Bio-Formats is enabled and may be used to read images. void; clearReaderOptions(). Clear all reader options, returning these to their defaults. boolean; getFilesOnly(). Returns true if Bio-Formats is restricted to support only local files, not other URLs. static BioFormatsServerOptions; getInstance(). Get the static instance of BioFormatsServerOptions, available to servers being constructed. int; getMemoizationTimeMillis(). Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. String; getPathMemoization(). Get the path to the directory where memoization files should be written, or null if no path is set. Map<String,String>; getReaderOptions(). Get a map representing additional arguments that should be passed to readers. Set<String>; getSkipAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should not be used. Set<String>; getUseAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should always be used. boolean; requestParallelization(). Returns tru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:1147,clear,clearReaderOptions,1147,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['clear'],['clearReaderOptions']
Usability,"L - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floating point Mat. CELL - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region. CELL_NUCLEI_BOTH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CELL_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CellCountsCV - Class in qupath.opencv. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:85059,undo,undoOnce,85059,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undoOnce']
Usability,"MEASURE_DETECTIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_TMA_CORES - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_TMA - Variable in class qupath.lib.gui.actions.CommonActions;  ; measureHaralick(SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Compute mean Haralick features from a SimpleImage, with optional masking. measurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Extract the specified measurement from a PathObject. Measurement - Interface in qupath.lib.measurements. Basic interface to define a measurement. MeasurementExportCommand - Class in qupath.lib.gui.commands. Dialog box to export measurements. MeasurementExportCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.MeasurementExportCommand. Creates a simple GUI for MeasurementExporter. MeasurementExporter - Class in qupath.lib.gui.tools. Helper class for exporting the measurements of one or more entries in a project. MeasurementExporter() - Constructor for class qupath.lib.gui.tools.MeasurementExporter;  ; MeasurementFactory - Class in qupath.lib.measurements. Deprecated. MeasurementFactory() - Constructor for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType - Enum Class in qupath.lib.measurements. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory - Class in qupath.lib.measurements. Factory for creating new measurement lists. MeasurementMapPane - Class in qupath.lib.gui.panes. Component used for displaying measurement maps, whereby detection objects are recolored ; ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:682274,simpl,simple,682274,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:112087,clear,clearTileMeasurements,112087,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearTileMeasurements']
Usability,"Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1152,simpl,simplify,1152,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['simpl'],['simplify']
Usability,"OI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:45479,learn,learning,45479,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"Objects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60731,clear,clearDetections,60731,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearDetections']
Usability,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22445,clear,clearMetadataMap,22445,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,2,['clear'],['clearMetadataMap']
Usability,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1169,clear,clearCache,1169,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['clear'],['clearCache']
Usability,"Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxExc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13648,simpl,simple,13648,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['simpl'],['simple']
Usability,"PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111987,clear,clearThresholds,111987,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearThresholds']
Usability,"PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97885,clear,clearDetectionMeasurements,97885,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearDetectionMeasurements']
Usability,"Processor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111841,clear,clearSelection,111841,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearSelection']
Usability,"RCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107515,clear,clearBoundary,107515,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearBoundary']
Usability,"See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScriptAction. runSelectedAction; protected org.controlsfx.control.action.Action runSelectedAction. runProjectScriptAction; protected org.controlsfx.control.action.Action runProjectScriptAction. runProjectScriptNoSaveAction; protected org.controlsfx.control.action.Action runProjectScriptNoSaveAction. killRunningScriptAction; protected org.controlsfx.control.action.Action killRunningScriptAction. insertMuAction; protected org.controlsfx.control.action.Action insertMuAction. insertQPImportAction; protected org.controlsfx.control.action.Action insertQPImportAction. insertQPExImportAction; protected org.controlsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action inser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:6361,undo,undoAction,6361,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['undo'],['undoAction']
Usability,"Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057327,undo,undo,1057327,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the specified ScriptLanguage. ; If the language cannot be matched, PlainStyler is returned. Parameters:; language - ; Returns:; corresponding stylers, or PlainStyler if no match. getPlainStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getPlainStyling(String text); Get simple styling that does not apply any classes. Parameters:; text - the text to process styling for; Returns:. getLogStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getLogStyling(String text); Get styling for use with a logger. Parameters:; text - the text to process styling for; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:3144,simpl,simple,3144,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['simpl'],['simple']
Usability,"TMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99009,clear,clearCellMeasurements,99009,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearCellMeasurements']
Usability,"Timepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3346,simpl,simple,3346,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['simpl'],['simple']
Usability,"Updated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15765,simpl,simply,15765,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['simpl'],['simply']
Usability,"a map representing additional arguments that should be passed to readers.; This method returns a copy of the map, and therefore changes will not automatically be reflected in ; the options until these are passed to setReaderOptions(Map). Returns:; the additional arguments currently requested when opening images; See Also:. clearReaderOptions(); setReaderOptions(Map). clearReaderOptions; public void clearReaderOptions(); Clear all reader options, returning these to their defaults. See Also:. getReaderOptions(); setReaderOptions(Map). setReaderOptions; public void setReaderOptions(Map<String,String> options); Set additional arguments that should be passed to readers.; Example:; ; BioFormatsServerOptions.setReaderOptions(Map.of(""zeissczi.autostitch"", ""false""));; ; Note: options are passed to every server, even when irrelevant for the particular server type.; Therefore they can end up being stored unnecessarily in projects and server paths.; For that reason it best practice to call clearReaderOptions() after options are no longer required. Parameters:; options - the arguments to pass when opening new readers; See Also:. clearReaderOptions(); getReaderOptions(). getInstance; public static BioFormatsServerOptions getInstance(); Get the static instance of BioFormatsServerOptions, available to servers being constructed. Returns:. bioformatsEnabled; public boolean bioformatsEnabled(); Returns true if Bio-Formats is enabled and may be used to read images. Returns:. setBioformatsEnabled; public void setBioformatsEnabled(boolean bioformatsEnabled); Set whether Bio-Formats should be enabled or disabled (in favor of other readers). Parameters:; bioformatsEnabled - . setFilesOnly; public void setFilesOnly(boolean filesOnly); Set whether Bio-Formats should support only local files (rather than any URL). Parameters:; filesOnly - . getFilesOnly; public boolean getFilesOnly(); Returns true if Bio-Formats is restricted to support only local files, not other URLs. Returns:. getMemoizatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:5106,clear,clearReaderOptions,5106,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['clear'],['clearReaderOptions']
Usability,"a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7615,clear,clearTileMeasurements,7615,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearTileMeasurements']
Usability,"a. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green component from a packed (A)RGB int value. MASK_BLUE; public static final Integer MASK_BLUE; Mask for use when extracting the blue component from a packed (A)RGB int value. Method Details. makeRGB; @Deprecated; public static int makeRGB(int r,; int g,; int b); Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. Make a packed RGB value from specified input values.; ; Input r, g and b should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are.; ; The alpha value is 255. Parameters:; r - ; g - ; b - ; Returns:. packRGB; public static int packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, int). unpackRGB; public static int[] unpackRGB(int rgb); Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackRGB; public static int[] unpackRGB(int rgb,; int[] array); Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the red, green and blue values in array if provided and long enough, ; otherwise a new ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:5406,simpl,simply,5406,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['simpl'],['simply']
Usability,"abels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5836,simpl,simple,5836,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['simpl'],['simple']
Usability,"able(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:1914,clear,clearChildObjects,1914,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"acy method to path object as descendant of the requested parent. Parameters:; pathObjectParent - ; pathObject - ; fireUpdate - ; Returns:. addObjectBelowParent; public boolean addObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate); Add path object as descendant of the requested parent. Parameters:; pathObjectParent - ; pathObject - ; fireUpdate - ; Returns:; Since:; v0.4.0 (replaces addPathObjectBelowParent(PathObject, PathObject, boolean). addObjects; public boolean addObjects(Collection<? extends PathObject> pathObjects); Add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:; Since:; v0.4.0; replaces addPathObjects(Collection). addPathObjects; @Deprecated; public boolean addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0; use addObjects(Collection) instead. Legacy method to add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:. clearAll; public void clearAll(); Remove all objects from the hierarchy. getPointObjects; public Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); Get objects that contain Point ROIs. Parameters:; cls - ; Returns:. getCellObjects; public Collection<PathObject> getCellObjects(); Get all cell objects in the hierarchy. Returns:. getTileObjects; public Collection<PathObject> getTileObjects(); Get all tile objects in the hierarchy. Returns:. getDetectionObjects; public Collection<PathObject> getDetectionObjects(); Get all detection objects in the hierarchy (including sub-classes of detections). Returns:. getAnnotationObjects; public Collection<PathObject> getAnnotationObjects(); Get all annotation objects in the hierarchy. Returns:. getObjects; public Collection<PathObject> getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class.; Note that this method returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:15550,clear,clearAll,15550,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['clear'],['clearAll']
Usability,"ageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDownsamples; double[] getPreferredDownsamples(); Get an array of downsample factors supported by the server. Returns:. nResolutions; int nResolutions(); Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Returns:. getDownsampleForResolution; double getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int getHeight(); Height of the full-resolution image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:5879,simpl,simple,5879,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['simpl'],['simple']
Usability,"all undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2785,undo,undoOnce,2785,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undoOnce']
Usability,"ally be reflected in ; the options until these are passed to setReaderOptions(Map). Returns:; the additional arguments currently requested when opening images; See Also:. clearReaderOptions(); setReaderOptions(Map). clearReaderOptions; public void clearReaderOptions(); Clear all reader options, returning these to their defaults. See Also:. getReaderOptions(); setReaderOptions(Map). setReaderOptions; public void setReaderOptions(Map<String,String> options); Set additional arguments that should be passed to readers.; Example:; ; BioFormatsServerOptions.setReaderOptions(Map.of(""zeissczi.autostitch"", ""false""));; ; Note: options are passed to every server, even when irrelevant for the particular server type.; Therefore they can end up being stored unnecessarily in projects and server paths.; For that reason it best practice to call clearReaderOptions() after options are no longer required. Parameters:; options - the arguments to pass when opening new readers; See Also:. clearReaderOptions(); getReaderOptions(). getInstance; public static BioFormatsServerOptions getInstance(); Get the static instance of BioFormatsServerOptions, available to servers being constructed. Returns:. bioformatsEnabled; public boolean bioformatsEnabled(); Returns true if Bio-Formats is enabled and may be used to read images. Returns:. setBioformatsEnabled; public void setBioformatsEnabled(boolean bioformatsEnabled); Set whether Bio-Formats should be enabled or disabled (in favor of other readers). Parameters:; bioformatsEnabled - . setFilesOnly; public void setFilesOnly(boolean filesOnly); Set whether Bio-Formats should support only local files (rather than any URL). Parameters:; filesOnly - . getFilesOnly; public boolean getFilesOnly(); Returns true if Bio-Formats is restricted to support only local files, not other URLs. Returns:. getMemoizationTimeMillis; public int getMemoizationTimeMillis(); Returns the number of milliseconds that must elapse when opening an image before a memoization file i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:5247,clear,clearReaderOptions,5247,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['clear'],['clearReaderOptions']
Usability,"alue. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6848,clear,clearMetadata,6848,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,2,['clear'],['clearMetadata']
Usability,"alues. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10238,simpl,simple,10238,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"alysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105884,clear,clear,105884,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5006,clear,clearAllObjects,5006,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAllObjects']
Usability,"ance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2505,undo,undone,2505,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undone']
Usability,"an keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60102,clear,clearAllObjects,60102,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearAllObjects']
Usability,"arBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108485,clear,clearCacheForRequestOverlap,108485,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCacheForRequestOverlap']
Usability,"archy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6711,clear,clearMeasurements,6711,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearMeasurements']
Usability,"area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1637,clear,clear,1637,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['clear'],['clear']
Usability,"as changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3643,clear,clear,3643,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,3,"['clear', 'undo']","['clear', 'undo']"
Usability,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:6789,intuit,intuitive,6789,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['intuit'],['intuitive']
Usability,"ashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:3821,simpl,simple,3821,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['simpl'],['simple']
Usability,"ass qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057721,undo,undo,1057721,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1778,simpl,simple,1778,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,2,['simpl'],['simple']
Usability,"assification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:1612,clear,clearChildObjects,1612,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"asurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7509,clear,clearTileMeasurements,7509,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearTileMeasurements']
Usability,"ata, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCachedOverlay; public void clearCachedOverlay(); Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion; public void clearCachedOverlayForRegion(ImageRegion region); Clear previously-cached tiles for a specified region of this overlay. Parameters:; region - the region for which tiles should be removed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:4012,clear,clearCachedOverlay,4012,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,4,['clear'],"['clearCachedOverlay', 'clearCachedOverlayForRegion']"
Usability,"ate one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24517,simpl,simplification,24517,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['simpl'],['simplification']
Usability,"ated:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:31151,simpl,simple,31151,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"ath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Til",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267943,simpl,simple,267943,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"ath.lib.gui.prefs.PathPrefs. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. maxObjectsToClipboardProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The maximum number of objects that can be copied to the system clipboard. maxOutputChannelLimit(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the maximum number of output channels allowed before QuPath will throw an exception. maxUndoHierarchySize - Variable in class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; maxUndoHierarchySizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. maxUndoLevels - Variable in class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; maxUndoLevelsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The requested maximum number of undo levels that QuPath should support. maxValue(Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the maximum value supported by this image. maxValueProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. The maximum value displayed on the histogram. maxValueProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Value of the maximum slider. maxWidth(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; maybeCellLabels(Raster, int, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. maybeCellLabels(SimpleImage, SimpleImage, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. mean() - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:678698,undo,undo,678698,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"athObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97498,clear,clearAnnotationMeasurements,97498,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearAnnotationMeasurements']
Usability,"atic methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:2436,simpl,simplify,2436,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['simpl'],['simplify']
Usability,"ator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:268376,simpl,simple,268376,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"at mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise, treat each column as a feature. apply; public void apply(Mat mat); Apply preprocessing in-place.; If the Mat has multiple channels, each channel is treated as a feature.; Otherwise, each row is treated as a feature. Parameters:; mat - . doesFeatureTransform; public boolean doesFeatureTransform(); Returns true if this preprocessor transforms the features beyond a simple normalization.; In practice, for the current implementation this means PCA. Returns:. doesSomething; public boolean doesSomething(); Returns true if this preprocessor has any effect. Returns:. getInputLength; public int getInputLength(); Get the number of features required of the input. Returns:. getOutputLength; public int getOutputLength(); Get the number of features expected in the output. Returns:. builder; public static FeaturePreprocessor.Builder builder(); Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html:2368,simpl,simple,2368,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,1,['simpl'],['simple']
Usability,"aultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3054,simpl,simplest,3054,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['simpl'],['simplest']
Usability,"ava.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:3297,simpl,simple,3297,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['simpl'],['simple']
Usability,"bject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111376,clear,clearRootMeasurements,111376,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearRootMeasurements']
Usability,"bject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105838,undo,undo,105838,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"bjects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107715,clear,clearCache,107715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCache']
Usability,"brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8678,simpl,simple,8678,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['simpl'],['simple']
Usability,"c.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8837,clear,clear,8837,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['clear'],['clear']
Usability,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1621,clear,clear,1621,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['clear'],['clear']
Usability,"cate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29882,undo,undo,29882,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"cation. PixelClassifierTools() - Constructor for class qupath.opencv.ml.pixel.PixelClassifierTools;  ; PixelClassifierTools.CreateObjectOptions - Enum Class in qupath.opencv.ml.pixel. Options when creating objects from a pixel classifier. PixelClassifierTraining - Class in qupath.process.gui.commands.ml. Helper class for training a pixel classifier. PixelClassifierTraining(ImageDataOp) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierTraining. Create a new pixel classifier helper, to support generating training data. PixelClassifierTraining.ClassifierTrainingData - Class in qupath.process.gui.commands.ml. Wrapper for training data. PixelClassifierUI - Class in qupath.process.gui.commands.ml. Helper class for generating standardized UI components for pixel classification. PixelClassifierUI() - Constructor for class qupath.process.gui.commands.ml.PixelClassifierUI;  ; PixelImageIJ - Class in qupath.imagej.tools. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelImageIJ(ImageProcessor) - Constructor for class qupath.imagej.tools.PixelImageIJ. Constructor. PixelProcessor<S,T,U> - Class in qupath.lib.experimental.pixels. A class for tiled image processing. PixelProcessor.Builder<S,T,U> - Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:766180,simpl,simple,766180,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"channel.; In v0.3+ it should return all pixels. Parameters:; mat - ; pixels - ; Returns:. extractPixels; public static double[] extractPixels(Mat mat,; double[] pixels); Extract pixels as a double array. Parameters:; mat - ; pixels - ; Returns:. extractDoubles; public static double[] extractDoubles(Mat mat); Extract pixels as a double array. Parameters:; mat - ; Returns:. extractFloats; public static float[] extractFloats(Mat mat); Extract pixels as a float array. Parameters:; mat - ; Returns:. matToSimpleImage; public static SimpleImage matToSimpleImage(Mat mat,; int channel); Convert a Mat to a SimpleImage. Parameters:; mat - ; channel - ; Returns:. fillSmallHoles; public static void fillSmallHoles(Mat matBinary,; double maxArea); Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. Parameters:; matBinary - ; maxArea - . watershedIntensitySplit; public static void watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius); Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Parameters:; matBinary - thresholded, 8-bit unsigned integer binary image; matWatershedIntensities - optional intensity image for applying watershed transform; if not set, distance transform of binary will be used; threshold - ; maximaRadius - . matToImageProcessor; public static ImageProcessor matToImageProcessor(Mat mat); Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. Parameters:; mat - ; Returns:. matToImagePlus; public static ImagePlus matToImagePlus(Mat mat,; String title); Convert an OpenCV Mat into an ImageJ ImagePlus. Parameters:; mat - ; title - ; Returns:. matToImagePlus; public static ImagePlus matToImagePlus(String title,; Mat... mats); Convert an OpenCV MatVector into an ImageJ ImagePlus. Parameters:; title - ; mats - ; Returns:. getGaussianDeriv; public static double[] getGaussianDeriv(double sigma,; int order,; int ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:28535,guid,guided,28535,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['guid'],['guided']
Usability,"checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5088,clear,clear,5088,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clear']
Usability,"chy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98649,clear,clearMeasurements,98649,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearMeasurements']
Usability,"cified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7245,undo,undo,7245,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['undo'],['undo']
Usability,"class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108726,clear,clearCellMeasurements,108726,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCellMeasurements']
Usability,"clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98385,clear,clearMeasurements,98385,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearMeasurements']
Usability,"clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7860,clear,clearTMACoreMeasurements,7860,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearTMACoreMeasurements']
Usability,"crons(); Get the pixel height in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthUnit; public String getPixelWidthUnit(); Get a String representation of the preferred pixel width unit. Returns:; See Also:. getPixelWidthMicrons(); PIXEL; MICROMETER. unitsMatch2D; public boolean unitsMatch2D(); Returns true if the units for pixel width and height are the same. Returns:. unitsMatch3D; public boolean unitsMatch3D(); Returns true if the units for pixel width, height and z-spacing are the same. Returns:. getPixelHeightUnit; public String getPixelHeightUnit(); Get a String representation of the preferred pixel height unit. Returns:; See Also:. getPixelHeightMicrons(); PIXEL; MICROMETER. getZSpacingUnit; public String getZSpacingUnit(); Get a String representation of the preferred z-spacing unit. Returns:; See Also:. getZSpacing(); PIXEL; MICROMETER. getAveragedPixelSize; public Number getAveragedPixelSize(); Get an average of getPixelWidth() and getPixelHeight().; No check is made to ensure that these are returned in the same units; rather, the numbers are simply averaged. Returns:. getPixelWidth; public Number getPixelWidth(); Get the numeric value representing the pixel width, in the stored units. Returns:; See Also:. getPixelWidthUnit(). getPixelHeight; public Number getPixelHeight(); Get the numeric value representing the pixel height, in the stored units. Returns:; See Also:. getPixelHeightUnit(). getZSpacing; public Number getZSpacing(); Get the numeric value representing the z-spacing, in the stored units. Returns:; See Also:. getZSpacingUnit(). toString; public String toString(). Overrides:; toString in class Object. getDefaultInstance; public static PixelCalibration getDefaultInstance(); Get the default PixelCalibration.; This isn't terribly informative, giving pixel sizes in pixel units. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:6748,simpl,simply,6748,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['simpl'],['simply']
Usability,"ction; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.positiveCellDetection""); public final org.controlsfx.control.action.Action actionPositiveCellDetection. SEP_2; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); public final org.controlsfx.control.action.Action SEP_2. actionSubcellularDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.subcellularDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionSubcellularDetection; Deprecated. SEP_2B; @ActionMenu(""Menu.Analyze""); public final org.controlsfx.control.action.Action SEP_2B. actionPixelCount; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.pixelCount""); @Deprecated; public final org.controlsfx.control.action.Action actionPixelCount; Deprecated. actionSimpleTissueDetection; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.simpleTissueDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionSimpleTissueDetection; Deprecated. actionCellMembraneDetection; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.cellAndMembraneDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionCellMembraneDetection; Deprecated. actionExtractRegion; @ActionIcon(EXTRACT_REGION); @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.extractRegion""); public final org.controlsfx.control.action.Action actionExtractRegion. actionSnapshot; @ActionIcon(SCREENSHOT); @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.extractRegionSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. actionImportROIs; @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.importRois""); public final org.controlsfx.control.action.Action actionImportROIs. SEP_3; @ActionMenu({""Menu.Extensions"",""ImageJ>""}); public final org.con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html:4107,simpl,simpleTissueDetection,4107,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,1,['simpl'],['simpleTissueDetection']
Usability,"ctions in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110186,clear,clearMeasurements,110186,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMeasurements']
Usability,"cy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51012,undo,undo,51012,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"d assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:265757,learn,learning,265757,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"d objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7999,clear,clearTMAGrid,7999,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearTMAGrid']
Usability,"d. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:1181,simpl,simplified,1181,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['simpl'],['simplified']
Usability,"dText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2243,undo,undo,2243,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['undo'],['undo']
Usability,"dinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2419,simpl,simplify,2419,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplify']
Usability,"dsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measurements. CHANGE_OTHER; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_OTHER; A change was made to one or more objects that is more complex than the other changes allow for. Method Details. values; public static PathObjectHierarchyEvent.HierarchyEventType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectHierarchyEvent.HierarchyEventType valueOf(String name); Returns the enum constant of this class with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:2692,simpl,simply,2692,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,1,['simpl'],['simply']
Usability,"dually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2840,simpl,simplest,2840,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['simpl'],['simplest']
Usability,"e Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SUBSTRING_TOKENIZER; public static final AutoCompletions.CompletionTokenizer SUBSTRING_TOKENIZER; A completion tokenizer that simply takes the first part of the text up to the caret position. JAVA_TOKENIZER; public static final AutoCompletions.CompletionTokenizer JAVA_TOKENIZER; A completion tokenizer that extracts a token used to determine Java completions. Constructor Details. AutoCompletions; public AutoCompletions(). Method Details. getComparator; public static Comparator<AutoCompletions.Completion> getComparator(); Get a comparator to order completions. Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText); Create a new completion with fixed display and completion text. Parameters:; declaringClass - the declaring class; choose null for static imports; displayText - the text to display; completionText - the text to use in the completion; Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> cls); Create a new completion for a class. Parameters:; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:2387,simpl,simply,2387,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,1,['simpl'],['simply']
Usability,"e all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hiera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107986,clear,clearCache,107986,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCache']
Usability,"e intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5437,simpl,simple,5437,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['simpl'],['simple']
Usability,"e used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:4065,simpl,simple,4065,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"e v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11715,clear,clearChildObjects,11715,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,2,['clear'],['clearChildObjects']
Usability,"ea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.fl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7330,undo,undo,7330,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['undo'],['undo']
Usability,"ean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape to a JTS Geometry. SharedThreadPoolManager - Class in qupath.lib.gui. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. show() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.commands.LogViewerCommand;  ; show() - Method in class qupath.lib.gui.commands.PathObjectGridView. Create the stage and show the grid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:957387,simpl,simplifying,957387,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifying']
Usability,"earMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMAC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111518,clear,clearSelectedObjects,111518,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearSelectedObjects']
Usability,"eate a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum threshold to apply; Returns:. createBelow; public static ContourTracing.ChannelThreshold createBelow(int channel,; double maxThreshol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:2031,simpl,simple,2031,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,1,['simpl'],['simple']
Usability,"eate an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:4674,simpl,simple,4674,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['simpl'],['simple']
Usability,"eaturesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SmoothFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Default constructor. smoothImage(BufferedImage) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). smoothMeasurements(List<PathObject>, List<String>, double, String, boolean, boolean) - Static method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. smoothPoints(List<Point2>) - Static method in class qupath.lib.roi.ShapeSimplifier. Apply a simple 3-point moving average to a list of points. SNAPSHOT_VIEWER_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SOLIDITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Ratio of the area to the convex area. sortNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with name elements sorted alphabetically. sortNames(PathClass, Comparator<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with name elements sorted using an arbitrary Comparator. SOURCE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; SparseImageServer - Class in qupath.lib.images.servers. An ImageServer tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:984572,simpl,simple,984572,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"ectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60712,clear,clearAllObjects,60712,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAllObjects']
Usability,"ectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScriptAction. runSelectedAction; protected org.controlsfx.control.action.Action runSelectedAction. runProjectScriptAction; protected org.controlsfx.control.action.Action runProjectScriptAction. runProjectScriptNoSaveAction; protected org.controlsfx.control.action.Action runProjectScriptNoSaveAction. killRunningScriptAction; protected org.controlsfx.control.action.Action killRunningScriptAction. insertMuAction; protected org.controlsfx.control.action.Action insertMuAction. insertQPImportAction; protected org.controlsfx.control.action.Action insertQPImportAction. insertQPExImportAction; protected org.controlsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; prot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:6302,undo,undoAction,6302,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['undo'],['undoAction']
Usability,"ects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60549,clear,clearAnnotations,60549,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearAnnotations']
Usability,"ed for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:5259,undo,undo,5259,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"ed text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3316,undo,undo,3316,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['undo'],['undo']
Usability,"ed | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1210,simpl,simplified,1210,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplified']
Usability,"egion; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:3800,clear,clearConstraints,3800,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['clear'],['clearConstraints']
Usability,"el. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'redo' the last 'undone' hierarchy change for the current active viewer. RefineAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. RefineAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; refineAreas(Geometry, double, double) - Static method in class qupath.lib.roi.GeometryTools. Remove small fragments and fill small interior rings within a Geometry. refineColorDeconvolutionStains(int[], ColorDeconvolutionStains, double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Attempt to automatically refine color deconvolution stains based upon pixel values. refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.process.gui.WandToolEven",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:833029,undo,undone,833029,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undone']
Usability,"el.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105699,clear,clear,105699,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"elClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5701,clear,clearCellMeasurements,5701,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearCellMeasurements']
Usability,"electionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Details. setText; void setText(String text); Set all the text in the editor. Parameters:; text - . getText; String getText(); Get all the text in the editor;. Returns:. appendText; void appendText(String text); Append the specified text. Parameters:; text - the text to be appended. replaceSelection; void replaceSelection(String text); Insert the specified text, replacing any existing selection. Parameters:; text - the text to insert. clear; void clear(); Request clear the contents of the control. getCaretPosition; int getCaretPosition(); Get the current caret position. Returns:. insertText; void insertText(int pos,; String text); Request inserting the specified text. Parameters:; pos - position to insert the text; text - the text to insert. deleteText; void deleteText(int startIdx,; int endIdx); Request deleting the text within the specified range. Parameters:; startIdx - ; endIdx - . positionCaret; void positionCaret(int index); Set the caret position to the specified index. Parameters:; index - . deselect; default void deselect(); Deselect any currently-selected text. getSelectedText; String getSelectedText(); Get the selected text as a string. Returns:. selectRange; void selectRange(int startIdx,; int endIdx); Set the range of the selected text. Parameters:; startIdx - ; endIdx - . getSelectionStart; int getSelectionStart(); Get the starting position for any selection (inclusive). Returns:. getSelectionEnd; int getSelectionEnd(); Get the endi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:2435,clear,clear,2435,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html,3,['clear'],['clear']
Usability,"elevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50914,undo,undo,50914,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"emory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending request",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106891,clear,clear,106891,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"enCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is ready to predict. isTranslating() - Method in class qupath.lib.roi.RoiEditor. Query if a ROI is currently being translated through this editor. isTransparent() - Method in class qupath.lib.images.servers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:636442,undo,undo,636442,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"encv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel - package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops - package qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:816365,learn,learning,816365,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"erarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109961,clear,clearMeasurements,109961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMeasurements']
Usability,"erver<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109604,clear,clearMeasurements,109604,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMeasurements']
Usability,"es, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1487,simpl,simplifyShape,1487,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplifyShape']
Usability,"es.ImageData.ImageType. Fluorescence image. FLUORESCENCE - Static variable in class qupath.lib.scripting.QP. Fluorescence image type. fontProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected font. fontSizeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:312952,learn,learning,312952,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"essing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:2468,clear,clearChildObjects,2468,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"esultsBuilder. Set all Gaussian sigma values for the vertical filter. sigmaZ(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975705,simpl,simple,975705,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"eters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). L",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11809,clear,clearPathObjects,11809,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,2,['clear'],['clearPathObjects']
Usability,"ethod. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor. public class FeaturePreprocessor; extends Object; Create a preprocessor for an image or training matrix.; This can include simple normalization (rescaling) and PCA projection. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise, treat each column as a feature. apply; public void apply(Mat mat); Apply preprocessing in-place.; If the Mat has multiple channels, each channel is treated as a feature.; Otherwise, each row is treated as a feature. Parameters:; mat - . doesFeatureTransform; public boolean doesFeatureTransform(); Returns true if thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html:1343,simpl,simple,1343,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,1,['simpl'],['simple']
Usability,"ets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3346,undo,undo,3346,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['undo'],['undo']
Usability,"fiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5544,simpl,simplest,5544,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['simpl'],['simplest']
Usability,"fining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand - Class in qupath.process.gui.commands. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierCommand. Constructor. ObjectClassifierLoadCommand - Class in qupath.process.gui.commands. Command to apply a pre-trained object classifier to an image. ObjectClassifierLoadCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:717375,simpl,simple,717375,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"gPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:46278,simpl,simple,46278,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"ge qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:2291,learn,learning,2291,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,1,['learn'],['learning']
Usability,"geServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:3830,simpl,simplest,3830,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['simpl'],['simplest']
Usability,"geServers. Helper class for working with ImageServer objects. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelType. Image bit-depths and types. RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. ServerTools. Static methods helpful when dealing with ImageServers. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:6034,simpl,simply,6034,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['simpl'],['simply']
Usability,"generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:7977,simpl,simply,7977,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['simpl'],['simply']
Usability,"ging MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(Obser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1017816,feedback,feedback,1017816,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['feedback'],['feedback']
Usability,"gions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCom",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978654,simpl,simplifyTitledPane,978654,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifyTitledPane']
Usability,"h visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, Colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978093,simpl,simplifyPolygon,978093,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifyPolygon']
Usability,"h, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current activ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2809,undo,undo,2809,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undo']
Usability,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:2178,simpl,simplify,2178,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,2,"['simpl', 'undo']","['simplify', 'undo']"
Usability,"h.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978281,simpl,simplifyPolygonPoints,978281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifyPolygonPoints']
Usability,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3338,simpl,simple,3338,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['simpl'],['simple']
Usability,"hClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9178,simpl,simple,9178,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['simpl'],['simple']
Usability,"hartBuilder;  ; createNewChart() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; createNewChart() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; createNewChart(Axis<Number>, Axis<Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; createNewChart(Axis<String>, Axis<Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; createNewROI(MouseEvent, double, double, ImagePlane) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; createNode(int, int, IconFactory.PathIcons) - Static method in class qupath.lib.gui.tools.IconFactory. Create a node from a default icon glyph. createNormalizer(double[], double[], double) - Static method in class qupath.opencv.ml.objects.features.Normalizer. Create a Normalizer with the specified parameters. createNormalizer(Normalization, Mat, double) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Create a simple normalizer to rescale input data. createNormalizingFeatureExtractor(FeatureExtractor<T>, Normalizer) - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Wrap an existing FeatureExtractor to apply normalization prior to returning the values. createNumberedObjectFunction(Function<ROI, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. createNumericMeasurement(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Deprecated. createObjectAddedEvent(Object, PathObjectHierarchy, PathObject, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicated objects were added. createObjectConverter(Class<U>, Function<ROI, PathObject>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an Output",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:200154,simpl,simple,200154,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"hat makes use of a selected property. createCheckMenuItem(Action, ToggleGroup) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action that makes use of a selected property. createClassificationMap(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Create a mapping between PathObjects and their current PathClasses. createClassifier(OpenCVClassifiers.OpenCVStatModel, ImageDataOp, PixelClassifierMetadata, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:167965,simpl,simple,167965,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"he current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8702,clear,clear,8702,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,3,['clear'],['clear']
Usability,"he image data for which to show measurements. promptToEstimateStainVectors; public static void promptToEstimateStainVectors(ImageData<BufferedImage> imageData); Prompt to estimate stain vectors for the specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Returns:; the action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on deman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14466,simpl,simple,14466,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['simpl'],['simple']
Usability,"he object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105505,clear,clear,105505,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99506,clear,clearTileMeasurements,99506,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearTileMeasurements']
Usability,"hod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1261,clear,clearCache,1261,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,2,['clear'],"['clearCache', 'clearThumbnails']"
Usability,"hodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getRO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1710,clear,clearChildObjects,1710,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"hresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:977915,simpl,simplifyPath,977915,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifyPath']
Usability,"ht, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, comp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:3305,clear,clearThresholds,3305,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['clear'],['clearThresholds']
Usability,"hy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7740,clear,clearTMACoreMeasurements,7740,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearTMACoreMeasurements']
Usability,"ib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109019,clear,clearChildObjects,109019,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearChildObjects']
Usability,"ib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106642,clear,clearAll,106642,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAll']
Usability,"ib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel - package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops - package qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:815715,learn,learning,815715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"ib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and maximum. clip255(double) - Static method in class qupath.lib.common.ColorTools. Convert a double value to an int, flooring and clipping to the range 0-255. clipROIsForHierarchy - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; clipROIsForHierarchyProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:112536,clear,clearTMACoreMeasurements,112536,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearTMACoreMeasurements']
Usability,"ibute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96894,clear,cleared,96894,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['cleared']
Usability,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1472,clear,clearAssertionStatus,1472,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['clear'],['clearAssertionStatus']
Usability,"ic class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:1957,learn,learning,1957,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['learn'],['learning']
Usability,"ic method in class qupath.lib.gui.actions.ActionTools. Create a checkbox from an action. createCheckMenuItem(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action that makes use of a selected property. createCheckMenuItem(Action, ToggleGroup) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action that makes use of a selected property. createClassificationMap(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Create a mapping between PathObjects and their current PathClasses. createClassifier(OpenCVClassifiers.OpenCVStatModel, ImageDataOp, PixelClassifierMetadata, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:167777,simpl,simple,167777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"icate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Original image. OTHER - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Other image type, not covered by any of the alternatives above. OTHER - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Other classification. OTHER - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Other classification. OTHER - Static variable in class qupath.lib.scripting.QP. Any other image type (neither brightfield nor fluorescence). OTHER_STRUCTURE_CHANGE - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A more complex structural change was made than simply either adding or removing objects. output(String, long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape as a long array for a single named output. output(String, DnnShape) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single named output. outputChannels(Collection<ImageChannel>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify channels for output. outputChannels(ImageChannel...) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify channels for output. outputChannelType(ImageServerMetadata.ChannelType) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the channel type for the output. outputClasses(Map<Integer, PathClass>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as a map. outputClasses(PathClass...) - Method in class qupath.opencv.ml.PatchClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:732606,simpl,simply,732606,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simply']
Usability,"id clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60910,clear,clearTMAGrid,60910,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearTMAGrid']
Usability,"ierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and maximum. clip255(double) - Static method in class qupath.lib.common.ColorTools. Convert a double value to an int, flooring and clipping to the range 0-255. clipROIsForHierarchy - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; clipROIsForHierarchyProperty() - Stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:112380,clear,clearTMACoreMeasurements,112380,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearTMACoreMeasurements']
Usability,"iewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:5341,undo,undo,5341,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"ifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5595,clear,clearCellMeasurements,5595,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearCellMeasurements']
Usability,"in output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape to a JTS Geometry. SharedThreadPoolManager - Class in qupath.lib.gui. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. show() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.commands.LogViewerCommand;  ; show() - Method in class qupath.lib.gui.commands.PathObjectGridView. Create the stage and show the grid view. show() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Show the dialog. SHOW_ANALYSIS_PANE - Variable in class qupath.lib.gui.actions.CommonActions;  ; SHOW_ANALYSIS_PANEL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SHOW_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:957763,simpl,simplify,957763,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplify']
Usability,"info about an image, e.g. ImageDetailsPane(ObservableValue<ImageData<BufferedImage>>) - Constructor for class qupath.lib.gui.panes.ImageDetailsPane. Constructor. ImageDisplay - Class in qupath.lib.display. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplay() - Constructor for class qupath.lib.display.ImageDisplay. Constructor. imageDisplayObjectProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. The current image display. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Property for the image display that should be shown and managed by this pane. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The image display to which the sliders are applied. ImageDisplaySettings - Class in qupath.lib.display.settings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageDisplaySettings() - Constructor for class qupath.lib.display.settings.ImageDisplaySettings;  ; imageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the original pixels, which determines the export file format. imageFunction(ImageSupplier<S>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used ot lazily read the image. ImageInterpolation - Enum Class in qupath.lib.gui.viewer. Supported interpolation methods when displaying images. ImageJMacroRunner - Class in qupath.imagej.gui. QuPath plugin for running ImageJ macros & returning detected regions. ImageJMacroRunner(QuPathGUI) - Constructor for class qupath.imagej.gui.ImageJMacroRunner. Constructor. imageJPathProperty() - Static method in class qupath.imagej.gui.IJExtension. Property representing the path to a local ImageJ installation, or null if no path has been set. ImageJProcessor - Class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:589272,simpl,simple,589272,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"ing from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108603,clear,clearCacheForServer,108603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCacheForServer']
Usability,"ing method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See referenc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1970,simpl,simplifyPolygonPoints,1970,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,3,['simpl'],"['simplified', 'simplifyPolygonPoints']"
Usability,"ing.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and maximum. clip255(double) - Static method in class qupath.lib.common.ColorTools. Convert a double value to an int, flooring and clipping to the range 0-255. clipROIsForHierarchy - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; clipROIsForHierarchyProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). clipToAllowed - Variable in class qupath.lib.display.DirectServerChannelInfo;  ; clipToROI(ROI, Collection<? extends",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:112701,clear,clearTMAGrid,112701,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearTMAGrid']
Usability,"ion of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5942,clear,clearDetectionMeasurements,5942,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearDetectionMeasurements']
Usability,"ion; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:1180,learn,learning,1180,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,1,['learn'],['learning']
Usability,"ions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.Hi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107374,clear,clearAnnotations,107374,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAnnotations']
Usability,"ip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1064,simpl,simple,1064,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['simpl'],['simple']
Usability,"iptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52851,simpl,simple,52851,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"is method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(Buff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12045,clear,cleared,12045,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['clear'],['cleared']
Usability,"ist. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106912,clear,clearAllObjects,106912,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAllObjects']
Usability,"ixel location.; ; For area ROIs, this means the ROI should contain the pixel. For non-area ROIs an ; optional vertex distance can be used to define a distance tolerance to the nearest vertex ; or line segment. Parameters:; hierarchy - object hierarchy within which to find the object; x - x-coordinate of the pixel; y - y-coordinate of the pixel; zPos - z-slice number; tPos - time-point number; vertexDistance - for non-area ROIs, the distance from the closest vertex or line segment (or < 0 to ignore non-area ROIs).; Returns:. getAncestorList; public static List<PathObject> getAncestorList(PathObject pathObject); Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:30435,simpl,simple,30435,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['simpl'],['simple']
Usability,"ized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDisplayedName(). Request an object name in a form suitable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1774,clear,clearChildObjects,1774,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['clear'],['clearChildObjects']
Usability,"java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2771,simpl,simplify,2771,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplify']
Usability,"ject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11911,clear,clearChildObjects,11911,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['clear'],['clearChildObjects']
Usability,"jects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111091,clear,clearReaderOptions,111091,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearReaderOptions']
Usability,"k whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5235,clear,clearAnnotationMeasurements,5235,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAnnotationMeasurements']
Usability,"kes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1982,clear,clear,1982,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['clear'],['clear']
Usability,"l used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.Defau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:22953,learn,learning,22953,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"lCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a Serv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:4469,simpl,simple,4469,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['simpl'],['simple']
Usability,"lapsBySize; public static Collection<PathObject> removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance); Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. Parameters:; pathObjects - input object collection, which may contain overlapping objects; overlapTolerance - amount of overlap to permit; recommended value is 0, see removeOverlaps(Collection, Comparator, double); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlapsByLocation; public static Collection<PathObject> removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance); Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away.; Note that this is determined using first the bounding box, then the centroid.; This is a simpler (and faster) criterion than measuring distance to the original from the ROI itself. Parameters:; pathObjects - input object collection, which may contain overlapping objects; overlapTolerance - amount of overlap to permit; recommended value is 0, see removeOverlaps(Collection, Comparator, double); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlaps; public static Collection<PathObject> removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance); Resolve overlaps, discarding one and keeping the other.; It assumes that the objects have been sorted so that 'preferred' objects occur first.; ; 'How overlapping' can be controlled by the overlapTolerance, where an overlap will be removed; ; if overlapTolerance > 0 and the area of the intersection between ROIs is < overlapTolerance (an absolute comparison); if overlapTolerance < 0 and the proportion of the smaller ROI intersecting the larger ROI is < -over",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:46891,simpl,simpler,46891,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['simpl'],['simpler']
Usability,"lass in qupath.imagej.images.servers. Builder for ImageServers that use ImageJ to read images. ImageJServerBuilder() - Constructor for class qupath.imagej.images.servers.ImageJServerBuilder;  ; imageList(List<ProjectImageEntry<BufferedImage>>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the list of images (ProjectImageEntry) to export. imageNameProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property indicating the name of the image. ImageOp - Interface in qupath.opencv.ops. An operation that may be applied to a Mat. ImageOps - Class in qupath.opencv.ops. Create and use ImageOp and ImageDataOp objects. ImageOps() - Constructor for class qupath.opencv.ops.ImageOps;  ; ImageOps.Channels - Class in qupath.opencv.ops. Channel and color operations. ImageOps.Core - Class in qupath.opencv.ops. Core operations. ImageOps.Filters - Class in qupath.opencv.ops. Filtering operations. ImageOps.ML - Class in qupath.opencv.ops. Machine learning operations. ImageOps.Normalize - Class in qupath.opencv.ops. Normalization operations. ImageOps.PaddedOp - Class in qupath.opencv.ops. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold - Class in qupath.opencv.ops. Thresholding operations. ImagePlane - Class in qupath.lib.regions. Helper class to store z-slice and time point indices, optionally along with a channel index as well. imagePointToComponentPoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the the full-resolution image into the corresponding pixel coordinate in the viewer - optionally constraining it to any viewer component bounds. imageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the JavaFX image. ImageRegion - Class in qupath.lib.regions. Class for defining an image region. ImageRegionRenderer - Interface in qupath.lib.gui.images.stores. Interface for painting regions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:591783,learn,learning,591783,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"lass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5268,simpl,simpler,5268,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['simpl'],['simpler']
Usability,"lateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableNumberValue addThreshold(double x); Add a threshold value. Parameters:; x - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(double x,; Color color); Add a threshold value with its display color. Parameters:; x - ; color - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(ObservableNumberValue d); Add a threshold value. Parameters:; d - ; Returns:. lineWidthProperty; public DoubleProperty lineWidthProperty(); Line width property used for displaying threshold lines. Returns:; See Also:. getLineWidth(); setLineWidth(double). getLineWidth; public double getLineWidth(); Get the threshold line width. Returns:. setLineWidth; public void setLineWidth(double width); Set the threshold line width. Parameters:; width - . isInterac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12956,clear,clearThresholds,12956,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,2,['clear'],['clearThresholds']
Usability,"lear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111070,clear,clearChildObjects,111070,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearChildObjects']
Usability,"ll Gaussian sigma values (x, y) to the same value. sigmaY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the vertical filter. sigmaZ(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975544,simpl,simple,975544,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"ls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99813,clear,clearRootMeasurements,99813,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearRootMeasurements']
Usability,"ls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97290,clear,cleared,97290,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['cleared']
Usability,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53312,feedback,feedback,53312,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['feedback'],['feedback']
Usability,"ltThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3812,clear,clearing,3812,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['clear'],['clearing']
Usability,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61806,simpl,simply,61806,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simply']
Usability,"m interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6745,undo,undo,6745,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['undo'],['undo']
Usability,"mage. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976905,feedback,feedback,976905,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['feedback'],['feedback']
Usability,"measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shoul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1841,clear,clearChildObjects,1841,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7245,clear,clearSelectedObjects,7245,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearSelectedObjects']
Usability,"ments(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110952,clear,clearPathObjects,110952,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearPathObjects']
Usability,"mepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:4177,simpl,simplest,4177,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['simpl'],['simplest']
Usability,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:9462,simpl,simplifyTitledPane,9462,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,3,['simpl'],"['simplify', 'simplifyTitledPane']"
Usability,"mplemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1410,clear,clearCacheForRequestOverlap,1410,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,2,['clear'],"['clearCacheForRequestOverlap', 'clearCacheForServer']"
Usability,"mplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2382,simpl,simplify,2382,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplify']
Usability,"ms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:23059,simpl,simplify,23059,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simplify']
Usability,"n interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6710,simpl,simple,6710,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['simpl'],['simple']
Usability,"n the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6881,clear,clearMeasurements,6881,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearMeasurements']
Usability,"n:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6786,undo,undo,6786,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['undo'],['undo']
Usability,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:3493,simpl,simple,3493,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html,1,['simpl'],['simple']
Usability,"nalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. files; public DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework that can use the model.; ; It is recommended to use one of the default names available as static variables; in DnnModelParams.; However, an extension might use some other unique identifier to ensure that it is ; used in preference to some other implementation. Parameters:; framework - ; Returns:. layout; public DnnModelParams.Builder layout(String layout); Specify a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Parameters:; layout - ; Returns:. inputShape; public DnnModelParams.Builder inputShape(long... shape); Specify the shape for a single input, with the default input name. Parameters:; shape - ; Returns:. input; public DnnModelParams.Builder input(String name,; long... shape); Specify the shape as a long array for a single input with a specified name. Parameters:; name - ; shape - ; Returns:. input; public DnnModelParams.Builder input(String n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html:3369,learn,learning,3369,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,1,['learn'],['learning']
Usability,"navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:1108,learn,learning,1108,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,1,['learn'],['learning']
Usability,"nd can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:1712,simpl,simple,1712,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['simpl'],['simple']
Usability,"ndoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer who",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3792,undo,undone,3792,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undone']
Usability,"nfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:2714,simpl,simple,2714,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,1,['simpl'],['simple']
Usability,"ng ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:1641,simpl,simple,1641,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['simpl'],['simple']
Usability,"ng the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3300,undo,undo,3300,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['undo'],['undo']
Usability,"ng.Object; qupath.lib.plugins.workflow.Workflow. All Implemented Interfaces:; Externalizable, Serializable. public class Workflow; extends Object; implements Externalizable; A collection of steps that relate to how an image has been - or should be - processed.; ; This can also be used to implement a 'command history'.; ; Where the WorkflowSteps contained in the Workflow are scriptable, then a ; script can be created automatically. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Workflow();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addStep(WorkflowStep step). Append a new step to the end of the workflow, firing an update event. void; addSteps(Collection<WorkflowStep> steps). Append multiple steps to the end of the workflow, firing a single update event. void; addWorkflowListener(WorkflowListener listener). Add a listener for changes to the workflow. void; clear(). Remove all steps, firing an update event if the workflow was not previously empty. String; createScript(). Generate a script from the current workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the mos",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:1383,clear,clear,1383,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,1,['clear'],['clear']
Usability,"ng.richtextfx.CodeAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:1438,clear,clear,1438,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['clear'],['clear']
Usability,"ngle packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in microns, if available - or Double.NaN otherwise. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel width in microns, or Double.NaN if this is unknown. getPixelWidthUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel width unit. getPlaceholderText() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. getPlainStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get simple styling that does not apply any classes. getPlane() - Method in class qupath.lib.images.servers.TileRequest. Deprecated.; v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). getPlane() - Method in class qupath.lib.regions.ImageRegion. Deprecated.; v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). getPlane(int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. getPlane(ImageRegion) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. getPlane(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, and z and t set from an existing ROI. getPlaneWithChannel(int, int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane, where the channel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:485632,simpl,simple,485632,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"nnections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107057,clear,clearAnnotationMeasurements,107057,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAnnotationMeasurements']
Usability,"ns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObject; public void deselectObject(PathObject pathObject); Ensure that the specified object is removed from the selection. Parameters:; pathObject - . deselectObjects; public void deselectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are deselected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . selectObjects; public void selectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are selected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . setSelectedObject; public void setSelectedObject(PathObject pathObject); Set the specified object to be selected, deselecting all others. Parameters:; pathObject - . getSelectedObject; public PathObject getSelectedObject(); Get the current primary selected object. Returns:. isSelected; public boolean isSelected(PathObject pathObject); Query whether a specific object is selected. Parameters:; pathObject - ; Returns:. getSelectedROI; public ROI getSelectedROI(); Get the ROI of the selected object, if available, or null. Returns:. clearSelection; public void clearSelection(); Clear selection so that no objects are selected. addPathObjectSelectionListener; public void addPathObjectSelectionListener(PathObjectSelectionListener listener); Add listener for selection changes. Parameters:; listener - . removePathObjectSelectionListener; public void removePathObjectSelectionListener(PathObjectSelectionListener listener); Remove listener for selection changes. Parameters:; listener - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:5018,clear,clearSelection,5018,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,2,['clear'],['clearSelection']
Usability,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9706,simpl,simple,9706,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['simpl'],['simple']
Usability,"nt (rather than int) type. Parameters:; mat - ; Returns:. floor; public static void floor(Mat mat); Floor values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Parameters:; mat - . ceil; public static void ceil(Mat mat); Ceil values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.ceil(double) except that non-finite values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:18548,simpl,simpler,18548,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['simpl'],['simpler']
Usability,"nt has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1692,learn,learning,1692,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"nts(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110740,clear,clearMetadataMap,110740,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMetadataMap']
Usability,"o save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:5814,simpl,simple,5814,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"od in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106760,clear,clearAllObjects,106760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearAllObjects']
Usability,"od in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.lib.images.servers. Image bit-depths and types. placeholderTextProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.wri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769152,simpl,simple,769152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"od. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor; qupath.lib.gui.scripting.richtextfx.RichScriptEditor. All Implemented Interfaces:; ScriptEditor. public class RichScriptEditor; extends DefaultScriptEditor; Rich script editor for QuPath, which can be used for handling different languages.; ; Makes use of RichTextFX, Copyright (c) 2013-2017, Tomas Mikula and contributors (BSD 2-clause license). Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; currentLanguage, currentSyntax, sendLogToConsole. Field Summary. Fields inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; beautifySourceAction, comboPasteEscape, completionCodeCombination, compressSourceAction, copyAction, cutAction, findAction, insertAllDefaultImportAction, insertDetectionMeasurementsAction, insertMuAction, insertObjectClassifiersAction, insertPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:1578,undo,undoAction,1578,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,1,['undo'],['undoAction']
Usability,"oid; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6115,clear,clearDetections,6115,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearDetections']
Usability,"ollection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105998,clear,clear,105998,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"olorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96516,clear,clearMeasurements,96516,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearMeasurements']
Usability,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10065,simpl,simply,10065,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simply']
Usability,"olutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:4499,simpl,simplest,4499,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['simpl'],['simplest']
Usability,"omputing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:31815,simpl,simple,31815,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"on(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2795,undo,undo,2795,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['undo'],['undo']
Usability,"on.Objects.Annotation.transform""); public final org.controlsfx.control.action.Action RIGID_OBJECT_EDITOR. ANNOTATION_DUPLICATE; @ActionAccelerator(""shift+d""); @ActionConfig(""Action.Objects.Annotation.duplicate""); public final org.controlsfx.control.action.Action ANNOTATION_DUPLICATE. ANNOTATION_COPY_TO_PLANE; @ActionAccelerator(""shortcut+shift+v""); @ActionConfig(""Action.Objects.Annotation.copyToCurrentPlane""); public final org.controlsfx.control.action.Action ANNOTATION_COPY_TO_PLANE. TRANSFER_ANNOTATION; @ActionAccelerator(""shift+e""); @ActionConfig(""Action.Objects.Annotation.transferLast""); public final org.controlsfx.control.action.Action TRANSFER_ANNOTATION. SEP_7; public final org.controlsfx.control.action.Action SEP_7. EXPAND_ANNOTATIONS; @ActionConfig(""Action.Objects.Annotation.expand""); public final org.controlsfx.control.action.Action EXPAND_ANNOTATIONS. SPLIT_ANNOTATIONS; @ActionConfig(""Action.Objects.Annotation.split""); public final org.controlsfx.control.action.Action SPLIT_ANNOTATIONS. SPLIT_ANNOTATIONS_BY_LINES; @ActionConfig(""Action.Objects.Annotation.splitByLines""); public final org.controlsfx.control.action.Action SPLIT_ANNOTATIONS_BY_LINES. REMOVE_FRAGMENTS; @ActionConfig(""Action.Objects.Annotation.removeFragmentsFillHoles""); public final org.controlsfx.control.action.Action REMOVE_FRAGMENTS. FILL_HOLES; @ActionConfig(""Action.Objects.Annotation.fillHoles""); public final org.controlsfx.control.action.Action FILL_HOLES. SEP_8; public final org.controlsfx.control.action.Action SEP_8. MAKE_INVERSE; @ActionConfig(""Action.Objects.Annotation.makeInverse""); public final org.controlsfx.control.action.Action MAKE_INVERSE. MERGE_SELECTED; @ActionConfig(""Action.Objects.Annotation.mergeSelected""); public final org.controlsfx.control.action.Action MERGE_SELECTED. SIMPLIFY_SHAPE; @ActionConfig(""Action.Objects.Annotation.simplify""); public final org.controlsfx.control.action.Action SIMPLIFY_SHAPE. Constructor Details. AnnotationActions; public AnnotationActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html:5005,simpl,simplify,5005,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,1,['simpl'],['simplify']
Usability,"on<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:3141,simpl,simply,3141,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['simpl'],['simply']
Usability,"onally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59929,clear,clearAllObjects,59929,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,['clear'],"['clear', 'clearAllObjects']"
Usability,"ons;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125982,simpl,simply,125982,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simply']
Usability,"ools.OpenCVTools. Get the mean of an image channel, ignoring NaNs. channelMinimum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channels(int...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. channels(int...) - Method in class qupath.lib.images.writers.TileExporter. Export only specified channels. channels(String...) - Method in class qupath.lib.images.writers.TileExporter. Export only specified channels, identified by name. channels(Collection<ImageChannel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the image channels. Channels() - Constructor for class qupath.opencv.ops.ImageOps.Channels;  ; ChannelSettings - Class in qupath.lib.display.settings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelSettings() - Constructor for class qupath.lib.display.settings.ChannelSettings;  ; channelsImages() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that channels are written as separate images. channelsInterleaved() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that channels are written interleaved within a single image plane. channelSoftmax(double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Apply softmax, with the specified output maxValue. channelsPlanar() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that channels are written as separate image planes. channelStdDev(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the standard deviation of image channels, ignoring NaNs. channelSum(double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:94969,simpl,simple,94969,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"or all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108307,clear,clearCachedOverlayForRegion,108307,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCachedOverlayForRegion']
Usability,"or all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasureme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110369,clear,clearMeasurements,110369,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMeasurements']
Usability,"or for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. Helper class for creating a WebView in a standardized way. WebViews() - Constructor for class qupath.lib.gui.tools.WebViews;  ; WEIGHTED_STD_DEV - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Weighted standard deviation. weightedStdDev(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate a Gaussian-weighted standard deviation. WelcomeStage - Class in qupath.lib.gui. Welcome page when launching QuPath. WelcomeStage() - Constructor for class qupath.lib.gui.WelcomeStage;  ; White - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. All pixels white. WHITE - Static variable in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1105315,guid,guided,1105315,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['guid'],['guided']
Usability,"ort for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between 0 and 4. The following is a guide to its interpretation:; ; 4 - 'ideal' support, e.g. the image was written by the library behind the ImageServer; 3 - good support; 2 - unknown support, i.e. worth a try; 1 - partial/poor support, i.e. there are known limitations and all higher-scoring possibilities should be tried first; 0 - no support. The use of floating point enables subclasses to make more subtle evaluations of performance, e.g. if an ImageServer; is particularly strong for RGB images, but falls short of guaranteeing ideal performance.; ; In practice, this is used to rank potential builders so that the 'best' ones; are tried first for new image paths, and those with 0 support may be ignored. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:3902,guid,guide,3902,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['guid'],['guide']
Usability,"ory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorting would leave the list unchanged.; ; Note: Currently this method considers only positive integer values, treating characters such as ; '+', '-', ',', '.' and 'e' as distinct elements of text. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); extractor - function used to convert each element of the collection to a String representation. smartStringComparator; public static Comparator<String> smartStringComparator(); Comparator for smart String sorting.; Note: This comparator is very inefficient. Where possible smartStringSort(Collection, Function) should ; be used instead. Returns:; a String comparator that parses integers from within the String so they may be compared by value. zapGremlins; public static String zapGremlins(String text); Remove non-printable characters from a String. Parameters:; text - ; Returns:; the modified String, or the original if no changes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:22461,simpl,simple,22461,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['simpl'],['simple']
Usability,"ownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:3529,simpl,simplest,3529,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['simpl'],['simplest']
Usability,"o info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11992,clear,cleared,11992,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['clear'],['cleared']
Usability,"p(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841220,simpl,simple,841220,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"path.lib.gui.prefs.PathPrefs.FontSize. Get the font size as a CSS-compatible string. getFontSize() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFormat() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). getFrame(int) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the frame at the specified index. getFrameForTime(long) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the frame visible at the specified timestamp (in ms). getFrameIndexForTime(long) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the index of the frame visible at the specified timestamp (in ms). getFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return an unmodifiable list of all the frames stored by this view tracker. getFramework() - Method in class qupath.opencv.dnn.DnnModelParams. Get the name of the deep learning framework that may be used. getFramework() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the framework used to create the model. getFullLocationString(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. getFullMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the full magnification for the image. getGamma() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the requested vamma value for the viewer. getGamma() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the gamma value used for this viewer. getGammaOp() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a LookupOp that can perform any requested gamma correction in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) k",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:396165,learn,learning,396165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"path.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108868,clear,clearCellMeasurements,108868,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCellMeasurements']
Usability,"path.lib.images.servers.ImageServerMetadata.Builder. Specify the number of time points. sizeZ(int) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the number of z-slices. skipExtensions - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; skipMissingCores - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; skipMissingCoresProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Skip ('jump over') missing cores when navigating through TMA grids. SLICSuperpixelsPlugin - Class in qupath.imagej.superpixels. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SLICSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; SLIDE_LABEL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SlideLabelView - Class in qupath.lib.gui.panes. A simple viewer for a slide label, tied to the current viewer. SlideLabelView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.SlideLabelView. Constructor. SMALL - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; SMALL - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; smartEditing - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartEditingAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartStringComparator() - Static method in class qupath.lib.common.GeneralTools. Comparator for smart String sorting. smartStringSort(Collection<T>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection using the Object.toString() method applied to each element. smartStringSort(Collection<T>, Function<T, String>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection after extracting a String representation of each element. SMOOTHED_FEATURES - Variable in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:982496,simpl,simple,982496,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"path.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:111652,clear,clearSelectedObjects,111652,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearSelectedObjects']
Usability,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97651,clear,clearDetectionMeasurements,97651,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearDetectionMeasurements']
Usability,"pencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel - package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops - package qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager - Class in qupath.lib.gui.viewer.tools. Helper class for managing pressure-sensitive input. QuPathPenManager() - Constructo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:816488,learn,learning,816488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"ping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109114,clear,clearDetectionMeasurements,109114,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearDetectionMeasurements']
Usability,"plements MetadataStore; A special PathObject used exclusively to represent TMA cores.; ; Currently, these only contain circular (or elliptical) ROIs. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final String; KEY_CASE_ID. Metadata key to store a case identify for the TMA core. static final String; KEY_OS_CENSORED. Metadata key for an overall survival censored flag. static final String; KEY_OVERALL_SURVIVAL. Metadata key for an overall survival (temporal) value. static final String; KEY_RECURRENCE_FREE_SURVIVAL. Metadata key for an recurrence-free survival (temporal) value. static final String; KEY_RFS_CENSORED. Metadata key for an recurrence-free survival censored flag. static final String; LEGACY_KEY_UNIQUE_ID. Deprecated. Constructor Summary; Constructors. Constructor; Description; TMACoreObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearMetadata(). Clear all associated metadata. String; getCaseID(). Get the case ID metadata value. Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. boolean; isMissing(). Query the 'missing' flag for this core. Object; putMetadataValue(String key,; String value). Store a new metadata value. void; readExternal(ObjectInput in);  ; void; setCaseID(String caseID). Set the case ID metadata value. void; setMissing(boolean missing). Set the missing flag for this core, for example because insufficient tissue is present. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:1637,clear,clearMetadata,1637,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['clear'],['clearMetadata']
Usability,"pport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<T>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. default boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Method Details. checkImageSupport; ImageServerBuilder.UriImageSupport<T> checkImageSupport(URI uri,; String... args); throws IOException; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. buildServer; ImageServer<T> buildServer(URI uri,; String... args); throws Exception; Attempt to create ImageServer<T> from the specified path. Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; String getName(); Get a human-readable name for the kind of ImageServer this builds. Returns:. getDescription; String getDescription(); Get a short, human-readable description for display in a GUI. Returns:. getImageType; Class<T> getImageType(); Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Returns:. matchClassName; default boolean matchClassName(String... classNames); Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html:3434,simpl,simple,3434,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:2666,clear,clear,2666,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,2,['clear'],['clear']
Usability,"pting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelecte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110642,clear,clearMetadata,110642,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMetadata']
Usability,"quals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framework that may be used.; If null, consumers may try to infer this from any URIs. Returns:. getURIs; public List<URI> getURIs(); Get the URIs associated with the model (e.g. weights and/or config files). Returns:. getInputs; public Map<String,DnnShape> getInputs(); Get the requested inputs and their shapes. Returns:; the inputs, if known, or null otherwise. getOutputs; public Map<String,DnnShape> getOutputs(); Get the expected outputs and their shapes. Returns:; the outputs, if known, or null otherwise. getLayout; public String getLayout(); Get a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Returns:. requestLazyInitialize; public boolean requestLazyInitialize(); Request that any model is loaded lazily on demand.; ; This can be useful to avoid blocking at some inopportune point in the code, ; but means that any exceptions associated with model ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:3471,learn,learning,3471,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['learn'],['learning']
Usability,"quest clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:2440,undo,undo,2440,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['undo'],['undo']
Usability,"qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106098,clear,clear,106098,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_THREE_PLUS. Default name for a class representing ""3+"" staining intensity (i.e. static final String; NAME_TWO_PLUS. Default name for a class representing ""2+"" staining intensity (i.e. static final PathClass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:1300,simpl,simplify,1300,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['simpl'],['simplify']
Usability,"r for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978477,simpl,simplifyShape,978477,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplifyShape']
Usability,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1779,user-friendly,user-friendly,1779,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,1,['user-friendly'],['user-friendly']
Usability,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitude",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1035,simpl,simplified,1035,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplified']
Usability,"r.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between 0 and 4. The following is a guide to its interpretation:; ; 4 - 'ideal' support, e.g. the image was written by the library behind the ImageServer; 3 - good support; 2 - unknown support, i.e. worth a try; 1 - partial/poor support, i.e. there are known limitations and all higher-scoring possibilities should be tried first; 0 - no support. The use of floating point enables subclasses to make more subtle evaluations of performance, e.g. if an ImageServer; is particularly strong for RGB images, but falls short of guaranteeing ideal performance.; ; In practice, this is used to rank potential builders so that the 'best' ones; are tried first fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:3484,simpl,simple,3484,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['simpl'],['simple']
Usability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html:1541,simpl,simple,1541,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,1,['simpl'],['simple']
Usability,"rCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measure",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109465,clear,clearDetections,109465,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearDetections']
Usability,"rList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:5675,simpl,simply,5675,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['simpl'],['simply']
Usability,"rediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:45788,learn,learning,45788,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2811,undo,undo,2811,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['undo'],['undo']
Usability,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9343,clear,clear,9343,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,2,['clear'],['clear']
Usability,"res, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1715,clear,clearPathObjects,1715,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['clear'],['clearPathObjects']
Usability,"rgs - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:3982,simpl,simple,3982,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,4,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"ring value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedPare",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:524329,user-friendly,user-friendly,524329,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['user-friendly'],['user-friendly']
Usability,"ription copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10712,simpl,simply,10712,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['simpl'],['simply']
Usability,"ription; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:1624,usab,usable,1624,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['usab'],['usable']
Usability,"rited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3632,simpl,simply,3632,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['simpl'],['simply']
Usability,"roid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.acti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105582,clear,clear,105582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"rom a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:4226,learn,learning,4226,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"roperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4689,undo,undo,4689,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['undo'],['undo']
Usability,"rst value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:14288,simpl,simple,14288,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['simpl'],['simple']
Usability,"runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScriptEditor(ScriptEditor scriptEditor); Set a new ScriptEditor, which will be used from now on. Parameters:; scriptEditor - . getOverlayOptions; public OverlayOptions getOverlayOptions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:28091,clear,clear,28091,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['clear'],['clear']
Usability,"s PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7343,clear,clearSelectedObjects,7343,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearSelectedObjects']
Usability,"s in a collection with a specified class or base class. countProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing any count associated with the text (may be null). countReplacements() - Method in class qupath.lib.io.UriUpdater. Get a count of the number of replacements for missing items. countsTransformProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how counts should be transformed before being; shown in the histogram. cpu() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CPU backend and target, if available. create() - Static method in class qupath.lib.gui.SharedThreadPoolManager. Create a new instance. create() - Static method in class qupath.lib.gui.ToolManager. Create a new instance. create(boolean) - Static method in class qupath.lib.gui.tools.WebViews. Create a new WebView. create(int) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a simple channel threshold. create(int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values between a minimum and maximum (inclusive). create(Gson, TypeToken<R>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; create(String, double, boolean, List<ChannelSettings>) - Static method in class qupath.lib.display.settings.ImageDisplaySettings. Create a new image display settings object. create(String, float, float, ChannelColor, boolean) - Static method in class qupath.lib.display.settings.ChannelSettings. Create a new channel settings object. create(String, String, String) - Static method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Create a ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:152669,simpl,simple,152669,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"s in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. getDefaultLocationString; public static String getDefaultLocatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:10204,clear,clearCache,10204,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,2,['clear'],['clearCache']
Usability,"s label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a subtype using the default label (the simple name of the class).; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:3540,simpl,simple,3540,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['simpl'],['simple']
Usability,"s that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52435,simpl,simplifying,52435,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simplifying']
Usability,"s. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features - package qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps - package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images - package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats - package qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival - package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object - package qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:807726,learn,learning,807726,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"s.BufferedImageOverlay;  ; changeMaxValues(double, double, double) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but new max (background) values. changeName(String) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but a new name. changeStain(StainVector, int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object, identical to this one but for one StainVector having been changed. changeTimestampProperty() - Method in class qupath.lib.display.ImageDisplay. Timestamp for the most recent change. CHANNEL_ALL_OBJECTS - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Channel name for the channel with all object counts (not always present). CHANNEL_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ChannelColor - Class in qupath.lib.display.settings. A simple class to store the color of an image channel. ChannelColor() - Constructor for class qupath.lib.display.settings.ChannelColor;  ; ChannelDisplayInfo - Interface in qupath.lib.display. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo - Interface in qupath.lib.display. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode - Enum Class in qupath.lib.display. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer - Class in qupath.lib.gui.images.servers. ImageServer that applies a color transform to an image. channelMaximum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channelMean(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the mean of an im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:93053,simpl,simple,93053,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"s.Builder. Deprecated.; Specify that the dialog should be non-modal. Normalization - Enum Class in qupath.lib.classifiers. Methods for normalizing features. normalize(Mat, Normalizer) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Apply a Normalizer to new training data samples. normalize(Normalization) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Define normalization type. Normalize() - Constructor for class qupath.opencv.ops.ImageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Normalized bin counts, so that the sum of all counts is 1.0. normalizeFeature(int, double) - Method in class qupath.opencv.ml.objects.features.Normalizer. Normalize a single feature. normalizeFloats(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:713471,simpl,simple,713471,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"s; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99325,clear,clearTileMeasurements,99325,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearTileMeasurements']
Usability,"s; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the resul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99190,clear,clearCellMeasurements,99190,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearCellMeasurements']
Usability,"sByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5353,clear,clearAnnotationMeasurements,5353,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAnnotationMeasurements']
Usability,"scaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Subtract a collection of ROIs from another ROI. subtract(ROI, ROI...) - Static method in class qupath.lib.roi.RoiTools. Subtract one or more ROIs from another ROI. SUBTRACT - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Subtract from first ROI. suggestNeighbor(ParallelTileObject) - Method in class qupath.lib.plugins.ParallelTileObject. Register a neighboring tile, if it intersects with the bounds of this one. sum() - Static method in class qupath.opencv.ops.ImageOps.Channels. Add all channels together, to give a single-channel output. sum(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circula",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1001530,simpl,simply,1001530,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simply']
Usability,"scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109747,clear,clearMeasurements,109747,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMeasurements']
Usability,"se of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2001,undo,undo,2001,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['undo'],['undo']
Usability,"shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50685,undo,undo,50685,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"sic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1654,clear,clear,1654,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['clear'],['clear']
Usability,"sification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:978010,simpl,simplified,978010,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simplified']
Usability,"splaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:15847,simpl,simple,15847,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"ss PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, remov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1357,simpl,simple,1357,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['simpl'],['simple']
Usability,"ss qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777646,learn,learning,777646,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"st) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. createDisk(int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Create a disk filter. createDocument() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a String representation of the SVG document. createDoubleArrowEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createEllipseEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createEllipseROI(double, double, double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an ellipse ROI defined by its bounding box. createEmptyMeasurementList() - Method in class qupath.lib.objects.PathDetectionObject. Default to a simple, float measurement list. createEmptyMeasurementList() - Method in class qupath.lib.objects.PathObject. Create a new MeasurementList of the preferred type for this object. createEmptyROI() - Static method in class qupath.lib.roi.ROIs. Create an 'empty' ROI with no length or area. createExactly(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values that are exactly equal to a specified threshold. createExtendedTool(PathTool...) - Static method in class qupath.lib.gui.viewer.tools.PathTools;  ; createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Deprecated.; Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. createFloatImage(float[], int, int) - Static method in class qupath.lib.analysis.images.SimpleImages. Create a SimpleI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:178052,simpl,simple,178052,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color decon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:54125,simpl,simple,54125,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"structor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:4382,simpl,simplest,4382,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['simpl'],['simplest']
Usability,"structor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. missing) feature values; Returns:; a Normalizer that may be applied to new data. normalize; public static void normalize(Mat samples,; Normalizer normalizer); Apply a Normalizer to new training data samples.; Features may be either columns or channels. Parameters:; samples - the input data; normalizer - the normalizer to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:2220,simpl,simple,2220,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['simpl'],['simple']
Usability,"t (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15916,resume,resumed,15916,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['resume'],['resumed']
Usability,"t a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1552,simpl,simplified,1552,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplified']
Usability,"t hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the curren",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83216,clear,clearSelectedObjects,83216,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearSelectedObjects']
Usability,"t the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1960,simpl,simple,1960,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['simpl'],['simple']
Usability,"tHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the current hierarchy, excluding the root object. Since:; v0.4.0. selectObjectsByPlane; public static void selectObjectsByPlane(int z,; int t); Selected objects in the cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83342,clear,clearSelectedObjects,83342,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearSelectedObjects']
Usability,"taValue; String removeMetadataValue(String key); Remove a metadata value. Parameters:; key - ; Returns:. getMetadataValue; String getMetadataValue(String key); Request a metadata value.; ; Note that this may return null. Parameters:; key - ; Returns:. putMetadataValue; String putMetadataValue(String key,; String value); Store a metadata value.; ; This is intended as storage of short key-value pairs.; Extended text should be stored under setDescription. Parameters:; key - ; value - ; Returns:. containsMetadata; boolean containsMetadata(String key); Check if a metadata value is present for a specified key. Parameters:; key - ; Returns:; true if getDescription() does not return null or an empty string, false otherwise. getDescription; String getDescription(); Get a description; this is free text describing the image. Returns:. setDescription; void setDescription(String description); Set the description. Parameters:; description - ; See Also:. getDescription(). clearMetadata; void clearMetadata(); Remove all metadata. getMetadataMap; Map<String,String> getMetadataMap(); Get an unmodifiable view of the underlying metadata map. Returns:. getMetadataKeys; Collection<String> getMetadataKeys(); Get an unmodifiable collection of the metadata map's keys. Returns:. getServerBuilder; ImageServerBuilder.ServerBuilder<T> getServerBuilder(); Get a ImageServerBuilder.ServerBuilder that can be used to open this image. Returns:. readImageData; ImageData<T> readImageData(); throws IOException; Read the ImageData associated with this entry, or create a new ImageData if none is currently present.; ; If the full data is not needed, but rather only the objects readHierarchy() can be much faster. Returns:; Throws:; IOException; See Also:. readHierarchy(). saveImageData; void saveImageData(ImageData<T> imageData); throws IOException; Save the ImageData for this entry using the default storage location for the project. Parameters:; imageData - ; Throws:; IOException. readHierarchy; PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:5376,clear,clearMetadata,5376,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,2,['clear'],['clearMetadata']
Usability,"tant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request pretty-printing for the JSON. previousSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property storing the previous tool that was selected. PROBABILITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. process(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.Processor. Processing method. PROCESSING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile currently being processed. ProcessingCV - Class in qupath.opencv.tools. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingCV() - Constructor for class qupath.opencv.tools.ProcessingCV;  ; ProcessingExtension - Class in qupath.process.gui. General-purpose processing and machine learning commands. ProcessingExtension() - Constructor for class qupath.process.gui.ProcessingExtension;  ; ProcessingExtension.ObjectClassificationCommands - Class in qupath.process.gui;  ; ProcessingExtension.OpenCVCommands - Class in qupath.process.gui. Commands based on OpenCV. ProcessingExtension.OtherCommands - Class in qupath.process.gui;  ; ProcessingExtension.PixelClassificationCommands - Class in qupath.process.gui;  ; processObjects(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using the default TaskRunner. processObjects(TaskRunner, ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using the specified TaskRunner. processor(Processor<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the processor. Processor<S,T,U> - Interface in qupath.lib.exper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:783316,learn,learning,783316,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['learn'],['learning']
Usability,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4943,undo,undo,4943,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,3,['undo'],['undo']
Usability,"tationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98233,clear,clearTMACoreMeasurements,98233,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearTMACoreMeasurements']
Usability,"te). Add path object as descendant of the requested parent. boolean; addObjects(Collection<? extends PathObject> pathObjects). Add multiple objects to the hierarchy. boolean; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0; use addObject(PathObject) instead (for naming consistency). boolean; addPathObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate). Deprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). void; addPathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fir",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:3348,clear,clearAll,3348,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['clear'],['clearAll']
Usability,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:1599,clear,clearChildObjects,1599,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"teringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:455517,simpl,simple,455517,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"th caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<Buffered",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:4791,simpl,simple,4791,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['simpl'],['simple']
Usability,"th from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057410,undo,undo,1057410,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeedProperty(). Percentage to scale navigation speed. static IntegerProperty; numCommandThreadsProperty(). Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18627,undo,undo,18627,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['undo'],['undo']
Usability,"tic method in class qupath.opencv.tools.OpenCVTools. Apply a 2D maximum filter (dilation) to all channels of an image. maxMemoryGB - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maxMemoryMBProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. maxObjectsToClipboardProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The maximum number of objects that can be copied to the system clipboard. maxOutputChannelLimit(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the maximum number of output channels allowed before QuPath will throw an exception. maxUndoHierarchySize - Variable in class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; maxUndoHierarchySizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. maxUndoLevels - Variable in class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; maxUndoLevelsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The requested maximum number of undo levels that QuPath should support. maxValue(Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the maximum value supported by this image. maxValueProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. The maximum value displayed on the histogram. maxValueProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Value of the maximum slider. maxWidth(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; maybeCellLabels(Raster, int, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:678480,undo,undo,678480,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"tic void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6325,clear,clearMeasurements,6325,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearMeasurements']
Usability,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:7440,learn,learning,7440,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,8,['learn'],['learning']
Usability,"tion of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:4252,simpl,simple,4252,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['simpl'],['simple']
Usability,"tion of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105770,clear,clear,105770,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"tion<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteAct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105617,clear,clear,105617,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clear']
Usability,"tionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98877,clear,clearMeasurements,98877,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearMeasurements']
Usability,"to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:10651,clear,clearChildObjects,10651,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['clear'],['clearChildObjects']
Usability,"tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.Kapl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126575,simpl,simple,126575,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['simpl'],['simple']
Usability,"topped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation of the Timeit's status. Overrides:; toString in class Object. main; public static void main(String[] args). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8268,simpl,simply,8268,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['simpl'],['simply']
Usability,"tps://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - . getReaderOptions; public Map<String,String> getReaderOptions(); Get a map representing additional arguments that should be passed to readers.; This method returns a copy of the map, and therefore changes will not automatically be reflected in ; the options until these are passed to setReaderOptions(Map). Returns:; the additional arguments currently requested when opening images; See Also:. clearReaderOptions(); setReaderOptions(Map). clearReaderOptions; public void clearReaderOptions(); Clear all reader options, returning these to their defaults. See Also:. getReaderOptions(); setReaderOptions(Map). setReaderOptions; public void setReaderOptions(Map<String,String> options); Set additional arguments that should be passed to readers.; Example:; ; BioFormatsServerOptions.setReaderOptions(Map.of(""zeissczi.autostitch"", ""false""));; ; Note: options are passed to every server, even when irrelevant for the particular server type.; Therefore they can end up being stored unnecessarily in projects and server paths.; For that reason it best practice to call clearReaderOptions() after options are no longer required. Parameters:; options - the arguments to pass when opening new readers; See Also:. clearReaderOptions(); getReaderOptions(). getInstance; public static BioFormatsServerOptions getInstance(); Get the static instance of BioFormatsServerOptions, available to servers being constructed. Returns:. bioformatsEnabled; public boolean bioformatsEnabled(); Returns true if Bio-Formats ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:4483,clear,clearReaderOptions,4483,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,2,['clear'],['clearReaderOptions']
Usability,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1605,clear,clearChildObjects,1605,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,3,['clear'],"['clearChildObjects', 'clearMetadataMap', 'clearPathObjects']"
Usability,"tr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt ve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1288,clear,clearCachedOverlayForRegion,1288,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['clear'],['clearCachedOverlayForRegion']
Usability,"ts from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110543,clear,clearMetadata,110543,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearMetadata']
Usability,"ts from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6507,clear,clearMeasurements,6507,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearMeasurements']
Usability,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7134,undo,undo,7134,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,3,['undo'],['undo']
Usability,"ue if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60891,clear,clearAllObjects,60891,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['clear'],['clearAllObjects']
Usability,"uest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Parameters:; server - ; request - ; cache - ; ensureTileReturned - ; Returns:. createTileWorker; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage> createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). getThumbnail; public BufferedImage getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache). clearCache; public void clearCache(); Clear the cache, including thumbnails, and cancel any pending requests. clearCache; public void clearCache(boolean clearThumbnails,; boolean stopWaiting); Clear the cache, optionally including thumbnails and stopping any pending requests. Parameters:; clearThumbnails - ; stopWaiting - . clearCacheForServer; public void clearCacheForServer(ImageServer<BufferedImage> server). clearCacheForRequestOverlap; public void clearCacheForRequestOverlap(RegionRequest request). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:8911,clear,clearCache,8911,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,10,['clear'],"['clearCache', 'clearCacheForRequestOverlap', 'clearCacheForServer', 'clearThumbnails']"
Usability,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1900,clear,clear,1900,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['clear'],['clear']
Usability,"um constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057856,undo,undo,1057856,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undo']
Usability,"urements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelectedObjects(boolean) - Static method in class qupath.lib.scripting.QP. Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. clearSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Clear selection so that no objects are selected. clearThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Clear all thresholds. clearTileMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in the current hierarchy. clearTileMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all tiles in a hierarchy. clearTMACoreMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in the current hierarchy. clearTMACoreMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all TMA core objects in a hierarchy. clearTMAGrid() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and maximum. clip255(double) - Static method in class qupath.lib.common.ColorTools. Convert a double value to an int, flooring and clipping to the range 0-",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:112229,clear,clearTileMeasurements,112229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearTileMeasurements']
Usability,"urrent hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108171,clear,clearCachedOverlay,108171,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['clear'],['clearCachedOverlay']
Usability,"useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo). setSwitchToGrayscaleChannel; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:10175,intuit,intuitive,10175,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['intuit'],['intuitive']
Usability,"user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057568,undo,undoAction,1057568,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['undo'],['undoAction']
Usability,"using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:58140,simpl,simple,58140,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['simpl'],['simple']
Usability,"utoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:5360,simpl,simply,5360,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['simpl'],['simply']
Usability,"ve more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsNamedMeasurement(String name). Deprecated.; since v0.4.0; replaced by containsKey(String). double; get(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:1780,clear,clear,1780,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['clear'],['clear']
Usability,"ventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:1563,simpl,simply,1563,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,1,['simpl'],['simply']
Usability,"vigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObserva",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1036,simpl,simple,1036,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['simpl'],['simple']
Usability,"visible,; i.e. BooleanProperty; disableToggleMenuItemsProperty(). Property to disable options to toggle the visibility of channels. MultipleSelectionModel<ChannelDisplayInfo>; getSelectionModel(). Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is hidden. void; setShowChannel(ChannelDisplayInfo channel). Request that the specified channel is shown. void; toggleShowHideChannel(ChannelDisplayInfo channel). Toggle the visibility of the specified channel. void; updateTable(). Ensure the table is up-to-date. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:4493,clear,clearConstraints,4493,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['clear'],['clearConstraints']
Usability,"void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8139,clear,clear,8139,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['clear'],['clear']
Usability,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:8192,simpl,simply,8192,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['simpl'],['simply']
Usability,"wStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> steps); Remove a collection of steps, firing an update event if the workflow was changed. Parameters:; steps - . replaceLastStep; public void replaceLastStep(WorkflowStep step); Replace the most recently added step with this one. Parameters:; step - . size; public int size(); Total number of steps in the workflow. Returns:. isEmpty; public boolean isEmpty(); Returns true if the workflow does not contain any steps. Returns:. clear; public void clear(); Remove all steps, firing an update event if the workflow was not previously empty. fireWorkflowUpdatedEvent; protected void fireWorkflowUpdatedEvent(). addWorkflowListener; public void addWorkflowListener(WorkflowListener listener); Add a listener for changes to the workflow. Parameters:; listener - . removeWorkflowListener; public void removeWorkflowListener(WorkflowListener listener); Remove a listener for changes to the workflow. Parameters:; listener - . createScript; public String createScript(); Generate a script from the current workflow steps. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:4029,clear,clear,4029,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,2,['clear'],['clear']
Usability,"within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3368,undo,undoOnce,3368,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,3,['undo'],"['undo', 'undoOnce']"
Usability,"x; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1148,simpl,simple,1148,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,1,['simpl'],['simple']
Usability,"xelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. Pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:44824,learn,learning,44824,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['learn'],['learning']
Usability,"y - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98035,clear,clearTMACoreMeasurements,98035,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['clear'],['clearTMACoreMeasurements']
Usability,"y(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:2576,undo,undo,2576,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['undo'],['undo']
Usability,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1490,simpl,simple,1490,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,1,['simpl'],['simple']
Usability,"ying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53364,simpl,simple,53364,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html:1944,simpl,simplifying,1944,javadoc/docs/qupath/lib/roi/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html,1,['simpl'],['simplifying']
Usability,"ypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one channel of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); abo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:3582,simpl,simple,3582,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['simpl'],['simple']
Usability," qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/reso",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1309,simpl,simplifyPolygonPoints,1309,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['simpl'],['simplifyPolygonPoints']
