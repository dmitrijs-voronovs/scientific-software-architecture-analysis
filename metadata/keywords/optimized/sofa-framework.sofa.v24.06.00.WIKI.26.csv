quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Testability," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:893,log,logging,893,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['log'],['logging']
Testability," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html:801,log,logging,801,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,1,['log'],['logging']
Testability," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:897,log,logging,897,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['log'],['logging']
Testability," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collision",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:889,log,logging,889,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,1,['log'],['logging']
Testability," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:891,log,logging,891,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,1,['log'],['logging']
Testability," ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::Point",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html:916,log,logging,916,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability," AbstractTransformMatrixEngine()sofa::component::engine::transform::AbstractTransformMatrixEngineprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html:1147,log,logging,1147,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,1,['log'],['logging']
Testability," AbstractTransformMatrixEngine()sofa::component::engine::transform::AbstractTransformMatrixEngineprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html:1145,log,logging,1145,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,1,['log'],['logging']
Testability," AbstractTransformMatrixEngine()sofa::component::engine::transform::AbstractTransformMatrixEngineprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html:1141,log,logging,1141,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html,2,['log'],['logging']
Testability," AbstractTransformMatrixEngine()sofa::component::engine::transform::AbstractTransformMatrixEngineprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html:1139,log,logging,1139,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,1,['log'],['logging']
Testability," Advice enum valuesofa::helper::logging::Message; AnyTypessofa::helper::logging::Messagestatic; CEmpty enum valuesofa::helper::logging::Message; Class enum namesofa::helper::logging::Message; ClassCount enum valuesofa::helper::logging::Message; componentInfo() constsofa::helper::logging::Messageinline; context() constsofa::helper::logging::Messageinline; Deprecated enum valuesofa::helper::logging::Message; Dev enum valuesofa::helper::logging::Message; empty() constsofa::helper::logging::Message; emptyMsgsofa::helper::logging::Messagestatic; Error enum valuesofa::helper::logging::Message; Fatal enum valuesofa::helper::logging::Message; fileInfo() constsofa::helper::logging::Messageinline; Info enum valuesofa::helper::logging::Message; Log enum valuesofa::helper::logging::Message; m_classsofa::helper::logging::Messageprotected; m_componentinfosofa::helper::logging::Messageprotected; m_fileInfosofa::helper::logging::Messageprotected; m_idsofa::helper::logging::Messageprotected; m_streamsofa::helper::logging::Messageprotected; m_typesofa::helper::logging::Messageprotected; message() constsofa::helper::logging::Messageinline; Message()sofa::helper::logging::Messageinline; Message(const Message &msg)sofa::helper::logging::Message; Message(Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::Message; messageAsString() constsofa::helper::logging::Messageinline; operator<<(const T &x)sofa::helper::logging::Messageinline; operator<<(const FileInfo::SPtr &fi)sofa::helper::logging::Message; operator=(const Message &msg)sofa::helper::logging::Message; Runtime enum valuesofa::helper::logging::Message; sender() constsofa::helper::logging::Messagei",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html:282,log,logging,282,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,21,"['Log', 'log']","['Log', 'logging']"
Testability," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:340,test,testing,340,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,9,"['Test', 'test']","['TestSparseMatrixProduct', 'testing']"
Testability," Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizesofa::gui::component::AttachBodyButtonSetting; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showFactorSizesofa::gui::component::AttachBodyButtonSetting; d_stiffnesssofa::gui::component::AttachBodyButtonSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:2349,log,logging,2349,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,1,['log'],['logging']
Testability," Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html:2266,log,logging,2266,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,6,['log'],['logging']
Testability," BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) overridesofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >protectedvirtual; draw(const co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:5555,log,logging,5555,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logging']
Testability," BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix)=0sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:5428,log,logging,5428,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['log'],['logging']
Testability," BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collision::Pipelineprotectedpure virtual; doCollisionReset()=0sofa::core::collision::Pipelineprotectedpure virtual; doCollisionResponse()=0sofa::core::collision::Pipelineprotectedpure virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html:2580,log,logging,2580,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,1,['log'],['logging']
Testability," BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dumpStatesofa::component::setting::StatsSetting; d_exportStatesofa::component::setting::StatsSetting; d_logTimesofa::component::setting::StatsSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpStatesofa::component::setting::StatsSetting; exportStatesofa::component::setting::StatsSetting; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:2202,log,logging,2202,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,1,['log'],['logging']
Testability," BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_gnuplotPathsofa::component::setting::SofaDefaultPathSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:2222,log,logging,2222,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['log'],['logging']
Testability," BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html:2216,log,logging,2216,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,1,['log'],['logging']
Testability," BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(SquareMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, false))sofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, false >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:17971,test,testMechanicalState,17971,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['test'],['testMechanicalState']
Testability," BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::VisualGrid; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::VisualGrid; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSubdivsofa::component::visual::VisualGrid; d_planesofa::component::visual::VisualGrid; d_sizesofa::component::visual::VisualGrid; d_thicknesssofa::component::visual::VisualGrid; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:2745,log,logging,2745,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['log'],['logging']
Testability," BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::engine::transform::SmoothMeshEngine< DataTypes >virtual; Coord typedefsofa::component::engine::transform::SmoothMeshEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html:3066,log,logging,3066,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html,1,['log'],['logging']
Testability, Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162558,Log,LoggerStream,162558,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Log'],['LoggerStream']
Testability," ConstMultiMatrixDerivId id, type::vector< const InDataMatrixDeriv * > &v) const;  ; void getVecOutCoord (const MultiVecCoordId id, type::vector< OutDataVecCoord * > &v) const;  ; void getConstVecOutCoord (const ConstMultiVecCoordId id, type::vector< const OutDataVecCoord * > &v) const;  ; void getVecOutDeriv (const MultiVecDerivId id, type::vector< OutDataVecDeriv * > &v) const;  ; void getConstVecOutDeriv (const ConstMultiVecDerivId id, type::vector< const OutDataVecDeriv * > &v) const;  ; void getMatOutDeriv (const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) const;  ; void getConstMatOutDeriv (const ConstMultiMatrixDerivId id, type::vector< const OutDataMatrixDeriv * > &v) const;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:22300,test,testMechanicalState,22300,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,2,['test'],['testMechanicalState']
Testability," Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LocalMinDistance, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection) override;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:3409,test,testIntersection,3409,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability," DataTypes >inline; getElementMass(sofa::Index index) const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const overridesofa::core::behavior::Mass< DataTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *, const DataVecDeriv &) const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getMomentum(const MechanicalParams *, const DataVecCoord &, const DataVecDeriv &) constsofa::core::behavior::Mass< DataTypes >virtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:16930,log,logging,16930,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,2,['log'],['logging']
Testability," DataTypes >protected; _outputCoordsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _scalarFieldsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _vertexPlotedsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html:1702,log,logging,1702,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,1,['log'],['logging']
Testability," DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; applyStiffnessLarge(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:3499,log,logging,3499,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,2,['log'],['logging']
Testability," Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax].; Example usage: double randomValue = generateInRange(10.0, 20.0);; sofa::testing::LinearCongruentialRandomGenerator::generateInRangedouble generateInRange(double rmin, double rmax)Generates a pseudo-random double value within a specified range.Definition: LinearCongruentialRandomGenerator.cpp:41. ◆ generateInRange() [2/2]. float sofa::testing::LinearCongruentialRandomGenerator::gene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:1336,test,testing,1336,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,1,['test'],['testing']
Testability," Elem1 , class Elem2 , class T > . sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::MemberElementIntersector ; (; T * ; ptr). inline . Function details. ◆ beginIntersect(). template<class Elem1 , class Elem2 , class T > . int sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::beginIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector *& ; contacts . ). inlineoverridevirtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIntersector. ◆ canIntersect() [1/2]. template<class Elem1 , class Elem2 , class T > . bool sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). virtualdelete . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Reimplemented from sofa::core::collision::ElementIntersector. ◆ canIntersect() [2/2]. template<class Elem1 , class Elem2 , class T > . bool sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). inlineoverridevirtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implements sofa::core::collision::ElementIntersector. ◆ endIntersect(). template<class Elem1 , class Elem2 , class T > . int sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::endIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector * ; contacts . ). inlineoverridevirtual . End intersection tests betw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html:3331,Test,Test,3331,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,1,['Test'],['Test']
Testability, ForceFeedback()sofa::component::haptics::ForceFeedbackprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:5234,log,logging,5234,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,3,['log'],['logging']
Testability, ForceFeedback()sofa::component::haptics::ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:4876,log,logging,4876,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['log'],['logging']
Testability, ForceFeedback()sofa::component::haptics::ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmod,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['log'],['logging']
Testability," Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1221,test,testing,1221,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,1,['test'],['testing']
Testability," GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefault()sofa::core::objectmodel::BaseContextstatic; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDt() const overridesofa::core::objectmodel::Contextvirtual; getGravity() const overridesofa::core::objectmodel::Contextvirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMass() constsofa::core::objectmodel::BaseContextvirtual; getMechanicalState() constsofa::core::objectmodel::BaseContextvirtual; getMeshTopology(SearchDirection dir=SearchUp) constsofa::core::objectmodel::BaseContextvirtual; getMeshTopologyLink(SearchDirection dir=SearchUp) constsofa::core::objectmodel::BaseContextvirtual; getName() constsofa::core::objectmodel::Baseinline; getNameHelper()sofa::core::objectmodel::BaseContextinline; getNameSpaceName() constsofa::core::objectmodel::Base; getObject(const ClassInfo &class_info, SearchDirection dir=SearchUp) constsofa::core::objectmodel::BaseContextvirtual; getObject(const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) constsofa::core::objectmodel::BaseContextvirtual; getObject(const ClassInfo &class_info, const std::string &path) constsofa::core::objectmodel::BaseContextvirtual; getObjects(const ClassInfo &class_info, GetObjectsCallBack &container, Sear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html:5712,log,logging,5712,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,1,['log'],['logging']
Testability," Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2852,test,tests,2852,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['tests']
Testability," Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:241812,test,testing,241812,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability," ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ posi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5125,test,testing,5125,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability," Parameters. swapModelsoutput value set to true if the collision models must be swapped before calling the intersector. . Implemented in sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ getAlarmDistance(). virtual SReal sofa::core::collision::Intersection::getAlarmDistance ; (; ); const. inlinevirtual . Return the alarm distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ getContactDistance(). virtual SReal sofa::core::collision::Intersection::getContactDistance ; (; ); const. inlinevirtual . Return the contact distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ isSupported(). bool sofa::core::collision::Intersection::isSupported ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). virtual . Test if intersection between 2 types of elements is supported, i.e. an intersection test is implemented for this combinaison of types. Note that this method is deprecated in favor of findIntersector . ◆ setAlarmDistance(). virtual void sofa::core::collision::Intersection::setAlarmDistance ; (; SReal ; ). inlinevirtual . Set the alarm distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ setContactDistance(). virtual void sofa::core::collision::Intersection::setContactDistance ; (; SReal ; ). inlinevirtual . Set the contact distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::collision::Intersection::SOFA_ABSTRACT_CLASS ; (; Intersection ; , . objectmodel::BaseObject ;  . ). ◆ useContinuous(). virtual bool sofa::core::collision::Intersection::useContinuous ; (; ); const. inlinevirtual . r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html:16742,Test,Test,16742,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,1,['Test'],['Test']
Testability," PointID &ind1, PointID &ind2)sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; triangleNumericalIntegrationsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleSetGeometryAlgorithms()sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inlineprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:32998,log,logErrors,32998,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['log'],['logErrors']
Testability," PointID v6, PointID v7, PointID v8)sofa::core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberConnectedComponents(sofa::type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:12606,log,logging,12606,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,3,['log'],['logging']
Testability," PointID v6, PointID v7, PointID v8)sofa::core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberOfConnectedComponent()sofa::core::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:9997,log,logging,9997,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['log'],['logging']
Testability," PointID v6, PointID v7, PointID v8)sofa::core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() constsofa::core::topology::Topologyinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberOfConnectedComponent()sofa::core::topology::BaseMeshTopologyinlinevirtual; getPathName() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:8642,log,logging,8642,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,2,['log'],['logging']
Testability," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:620,test,testIntersection,620,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,6,['test'],['testIntersection']
Testability," Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:654,test,testIntersection,654,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,3,['test'],['testIntersection']
Testability, SOFA - Topic Tag: HDMI. /headers; . /feed; ; headers – SOFA. SOFA - Topic Tag: headers. /heat-diffusion; . /feed; ; Heat diffusion – SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:448658,test,testing,448658,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability," SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > C",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:194985,test,testing,194985,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability," SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1052,test,tests,1052,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['test'],['tests']
Testability," Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference bet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:1913,test,testing,1913,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['test'],['testing']
Testability," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:866,test,test,866,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,3,['test'],"['test', 'tests']"
Testability," Tetrahedron to vertices cross container concistency. . ◆ checkTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTopology ; (; ). ◆ checkTriangleContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleContainer ; (; ). Method to test Triangle container concistency. . ◆ checkTriangleToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToEdgeCrossContainer ; (; ). Method to test triangles to edges cross container concistency. . ◆ checkTriangleTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleTopology ; (; ). } ; Triangle methods { Full method to check Triangle Topology. Will call See alsocheckTriangleContainer, . checkTriangleToEdgeCrossContainer and . checkTriangleToVertexCrossContainer . ◆ checkTriangleToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToVertexCrossContainer ; (; ). Method to test triangles to vertices cross container concistency. . ◆ draw(). void sofa::component::topology::utility::TopologyChecker::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ handleEvent(). void sofa::component::topology::utility::TopologyChecker::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::topology::utility::TopologyChecker::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::component::topology::utility::TopologyChecker::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:21651,test,test,21651,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability, Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - Topic Tag: The Legged Robot with Flexible Passive Trunk. /theory; . /feed; ;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:485693,test,test,485693,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['test']
Testability, Topic Tag: transform. /tree; . /feed; ; tree – SOFA. SOFA - Topic Tag: tree. /triangles; . /feed; ; triangles – SOFA. SOFA - Topic Tag: triangles. /triangularfem; . /feed; ; TriangularFEM – SOFA. SOFA - Topic Tag: TriangularFEM. /tutorials; . /feed; ; tutorials – SOFA. SOFA - Topic Tag: tutorials. /two-haptic-devices; . /feed; ; two haptic devices – SOFA. SOFA - Topic Tag: two haptic devices. /two-haptic-forcefeedback; . /feed; ; two haptic forcefeedback – SOFA. SOFA - Topic Tag: two haptic forcefeedback. /two-rigid-parts; . /feed; ; two rigid parts – SOFA. SOFA - Topic Tag: two rigid parts. /ubuntu; . /feed; ; ubuntu – SOFA. SOFA - Topic Tag: ubuntu. /ubuntu16-04-lts; . /feed; ; UBUNTU(16.04 LTS) – SOFA. SOFA - Topic Tag: UBUNTU(16.04 LTS). /unable-to-determine-the-path; . /feed; ; Unable to determine the path – SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:488838,test,testing,488838,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability," VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ setIndependentOnly(). void sofa::component::odesolver::testing::GetAssembledSizeVisitor::setIndependentOnly ; (; bool ; b). inline . ◆ velocitySize(). unsigned sofa::component::odesolver::tes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5756,test,testing,5756,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability," [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16924,test,testIntersection,16924,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability," _Esofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _epsilonsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _poissonRatiosofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _previousVonMisesStrainsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _sigmasofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _youngModulussofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html:1333,log,logging,1333,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,1,['log'],['logging']
Testability," _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7450,test,testing,7450,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['test'],['testing']
Testability," _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test::Mapping_test< _Mapping >; mappingsofa::mapping_test::Mapping_test< _Mapping >; Mapping_test()sofa::mapping_test::Mapping_test< _Mapping >inline; Mapping_test(std::string fileName)sofa::mapping_test::Mapping_test< _Mapping >inline; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Mapping::In::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Out typedefsofa::mapping_test::Mapping_test< _Mapping >; OutCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; outDofssofa::mapping_test::Mapping_test< _Mapping >; OutMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; preTreatment(const OutVecDeriv &f)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; ReadInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecCoord typedefsofa::mapping_tes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2983,test,testing,2983,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,1,['test'],['testing']
Testability," _contextsofa::simulation::Nodeprotected; _descendancysofa::simulation::graph::DAGNodeprotected; _precomputedTraversalOrdersofa::simulation::graph::DAGNodeprotected; actionStacksofa::simulation::Nodeprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node) finalsofa::simulation::Nodevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addListener(MutationListener *obj)sofa::simulation::Nodevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd) finalsofa::simulation::Nodevirtual; sofa::core::objectmodel::Context::addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html:1044,log,logging,1044,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,1,['log'],['logging']
Testability," _contextsofa::simulation::Nodeprotected; actionStacksofa::simulation::Nodeprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node) finalsofa::simulation::Nodevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addListener(MutationListener *obj)sofa::simulation::Nodevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd) finalsofa::simulation::Nodevirtual; sofa::core::objectmodel::Context::addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html:900,log,logging,900,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,1,['log'],['logging']
Testability," _drawColorsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html:1020,log,logging,1020,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:1146,log,logging,1146,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['log'],['logging']
Testability," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html:1138,log,logging,1138,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html:1126,log,logging,1126,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability," _drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addIndex(Index index)sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:1034,log,logging,1034,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['log'],['logging']
Testability," _drawSizesofa::component::engine::select::PairBoxROI< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html:1087,log,logging,1087,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,1,['log'],['logging']
Testability," _drawSizesofa::component::engine::select::PlaneROI< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:1081,log,logging,1081,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['log'],['logging']
Testability," _drawSizesofa::component::engine::select::ProximityROI< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html:1093,log,logging,1093,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,1,['log'],['logging']
Testability," _drawSizesofa::component::engine::select::SubsetTopology< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html:1099,log,logging,1099,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,1,['log'],['logging']
Testability," _higher_mstatesofa::component::collision::geometry::TriangleModelInRegularGrid; _higher_toposofa::component::collision::geometry::TriangleModelInRegularGrid; _topologysofa::component::collision::geometry::TriangleModelInRegularGrid; AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:1110,log,logging,1110,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['log'],['logging']
Testability," _levelsofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:1268,log,logging,1268,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['log'],['logging']
Testability," _timersofa::component::haptics::LCPForceFeedback< TDataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::haptics::LCPForceFeedback< TDataTypes >inlinestatic; sofa::component::haptics::MechanicalStateForceFeedback::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:825,log,logging,825,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['log'],['logging']
Testability," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:1170,log,logging,1170,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['log'],['logging']
Testability," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:1188,log,logging,1188,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,1,['log'],['logging']
Testability," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::RayTraceNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html:1185,log,logging,1185,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,1,['log'],['logging']
Testability," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair)=0sofa::core::collision::NarrowPhaseDetectionpure virtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection-members.html:1105,log,logging,1105,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection-members.html,1,['log'],['logging']
Testability," abosofa::gl::component::shader::OglShaderVisualModelprotected; accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:922,log,logging,922,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,1,['log'],['logging']
Testability," accFromF(const MechanicalParams *mparams, MultiVecDerivId aid)=0sofa::core::behavior::BaseMasspure virtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGravityToV(const MechanicalParams *mparams, MultiVecDerivId vid)=0sofa::core::behavior::BaseMasspure virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor)=0sofa::core::behavior::BaseMasspure virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)=0sofa::core::behavior::BaseMasspure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMass()sofa::core::behavior::BaseMassprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildMassMatrix(sofa::core::behavior::MassMatrixAccumulator *matric",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:1041,log,logging,1041,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,1,['log'],['logging']
Testability," accumulateMatrixDeriv(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allVerifiedsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; applyCorrection(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; applyCorrectionTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; applyProjectiveConstraintOnConstraintMatrix(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:924,log,logging,924,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logging']
Testability," accumulateMatrixDeriv(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyCorrection(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; applyCorrectionTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; applyProjectiveConstraintOnConstraintMatrix(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html:918,log,logging,918,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,1,['log'],['logging']
Testability," accumulateMatrixDeriv(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyCorrection(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::LCPConstraintSolvervirtual; applyCorrectionTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; applyProjectiveConstraintOnConstraintMatrix(const core::ConstraintParams *cparams)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:916,log,logging,916,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['log'],['logging']
Testability," accumulateMatrixDeriv(sofa::core::ConstraintParams cparams) constsofa::simulation::DefaultAnimationLoopprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::DefaultAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; beginIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; behaviorUpdatePosition(const sofa::core::ExecParams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html:830,log,logging,830,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html:805,log,logging,805,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html:777,log,logging,777,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:863,log,logging,863,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visual::VisualModelImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html:845,log,logging,845,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visual::VisualModelImplvirtual; applyUVScale(const Real su, const Real sv)sofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:841,log,logging,841,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:861,log,logging,861,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:851,log,logging,851,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,1,['log'],['logging']
Testability," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; chang",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html:752,log,logging,752,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,1,['log'],['logging']
Testability," accumulationShader()sofa::gl::component::shader::OglOITShader; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Basep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:987,log,logging,987,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,1,['log'],['logging']
Testability," activate()sofa::component::visual::BaseCamera; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; CAMERA_LOOKAT_PIVOT enum valuesofa::component::visual::InteractiveCamera; CAMERA_POSITION_PIVOT enum valuesofa::component::visual::InteractiveCamera; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html:771,log,logging,771,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,1,['log'],['logging']
Testability," activate()sofa::component::visual::BaseCamera; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; Camera()sofa::component::visual::Cameraprotected; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html:749,log,logging,749,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,1,['log'],['logging']
Testability," activate()sofa::component::visual::BaseCamera; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:765,log,logging,765,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['log'],['logging']
Testability," activate()sofa::component::visual::BaseCamera; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:757,log,logging,757,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,1,['log'],['logging']
Testability," activateMappers()sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protectedvirtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:1032,log,logging,1032,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['log'],['logging']
Testability," activateMappers()sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:989,log,logging,989,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['log'],['logging']
Testability," activeFlagssofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >virtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *matrix) overridesofa::component::constraint::proje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html:893,log,logging,893,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,1,['log'],['logging']
Testability," activesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChannel(unsigned int jointIndex, Coord channel, double time)sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animationSpeedsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >virtual; applyConstrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:1078,log,logging,1078,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['log'],['logging']
Testability," activesofa::gl::component::rendering3d::ClipPlane; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:848,log,logging,848,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:929,log,logging,929,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:911,log,logging,911,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html:755,log,logging,755,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html:930,log,logging,930,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html:918,log,logging,918,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:811,log,logging,811,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:795,log,logging,795,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html:793,log,logging,793,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:789,log,logging,789,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::sha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:803,log,logging,803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:821,log,logging,821,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:781,log,logging,781,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html:817,log,logging,817,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html:815,log,logging,815,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:813,log,logging,813,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:811,log,logging,811,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html:809,log,logging,809,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,8,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html:805,log,logging,805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,5,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:803,log,logging,803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html:801,log,logging,801,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:799,log,logging,799,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:797,log,logging,797,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html:795,log,logging,795,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html:785,log,logging,785,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:777,log,logging,777,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html:773,log,logging,773,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html:771,log,logging,771,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:793,log,logging,793,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:801,log,logging,801,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndepend",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:839,log,logging,839,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:803,log,logging,803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:791,log,logging,791,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:801,log,logging,801,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html:799,log,logging,799,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:787,log,logging,787,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:779,log,logging,779,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backupFlagssofa::component::visual::VisualStyleprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *) overridesofa::component::visual::VisualStylevirtual; bwdInit()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:783,log,logging,783,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node)=0sofa::core::objectmodel::BaseNodepure virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:784,log,logging,784,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:1035,log,logging,1035,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm)=0sofa::core::collision::BroadPhaseDetectionpure virtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html:949,log,logging,949,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addComplianceInConstraintSpace(const ConstraintParams *, linearalgebra::BaseMatrix *W)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; addConstraintDisplacement(SReal *, int, int)sofa::core::behavior::BaseConstraintCorrectionvirtual; addConstraintSolver(ConstraintSolver *s)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyContactForce(const linearalgebra::BaseVector *f)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; applyMotionCorrection(const ConstraintParams *cparams, MultiVecCoordId x, MultiVecDerivId v, MultiVecDerivId dx, ConstMultiVecDerivId correction)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; applyPositionCorrection(const ConstraintParams *cparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html:1081,log,logging,1081,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addComplianceInConstraintSpace(const ConstraintParams *, linearalgebra::BaseMatrix *W)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; addConstraintDisplacement(SReal *, int, int)sofa::core::behavior::BaseConstraintCorrectionvirtual; addConstraintSolver(core::behavior::ConstraintSolver *s) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyContactForce(const linearalgebra::BaseVector *f)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; applyMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecCoordId x, core::MultiVecDerivId v, core::MultiVecDerivId dx, core::ConstMultiVecDerivId correction) overridesofa::core::behavior::Constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html:1129,log,logging,1129,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addComplianceInConstraintSpace(const core::ConstraintParams *cparams, linearalgebra::BaseMatrix *W) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; addConstraintDisplacement(SReal *, int, int)sofa::core::behavior::BaseConstraintCorrectionvirtual; addConstraintSolver(core::behavior::ConstraintSolver *s) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyContactForce(const linearalgebra::BaseVector *f) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; applyMotionCorrection(const core::ConstraintParams *cpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:1250,log,logging,1250,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addComplianceInConstraintSpace(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *W) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; addConstraintDisplacement(SReal *d, int begin, int end) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; addConstraintSolver(core::behavior::ConstraintSolver *s) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyContactForce(const linearalgebra::BaseVector *f) overridesofa::component::constraint::lagra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:1362,log,logging,1362,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addComplianceInConstraintSpace(const sofa::core::ConstraintParams *cparams, sofa::linearalgebra::BaseMatrix *W) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; addConstraintDisplacement(SReal *d, int begin, int end) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; addConstraintSolver(core::behavior::ConstraintSolver *s) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyContactForce(const linearalgebra::BaseVector *f) overridesofa::component::constraint::lagrangian:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html:1356,log,logging,1356,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AffineMovementProjectiveConstraint()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >protected; AffineMovementProjectiveConstraintInternalData< DataTypes > classsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >friend; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:935,log,logging,935,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:917,log,logging,917,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *mparams, const MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >virtual; applyConstraint(const MechanicalParams *mparams, BaseVector *vect, const MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >virtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *matrix) overridesofa::component::constraint::projective::FixedPlaneProjectiveConstraint<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:920,log,logging,920,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vect, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *matrix) overridesofa::component::constrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html:905,log,logging,905,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *matrix) over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:919,log,logging,919,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:902,log,logging,902,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:944,log,logging,944,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichlet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:905,log,logging,905,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(Index index)sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >virtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *matrix) overridesofa::component::constra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:905,log,logging,905,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(unsigned index)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:932,log,logging,932,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(unsigned index)sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:920,log,logging,920,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addConstraint(unsigned index, const Coord &mean, const Deriv &amplitude, Real pulsation, Real phase)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:997,log,logging,997,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; AddFrameButtonSetting()sofa::gui::component::AddFrameButtonSettingprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html:803,log,logging,803,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:1161,log,logging,1161,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html:1153,log,logging,1153,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:1093,log,logging,1093,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:1093,log,logging,1093,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:1053,log,logging,1053,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTopologyHandler(TopologyHandler *_TopologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainer; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:987,log,logging,987,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:985,log,logging,985,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addRemovedTetraIndex(sofa::type::vector< TetrahedronID > &tetrahedra)sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:1113,log,logging,1113,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:1107,log,logging,1107,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addElt(const Coord &elt, VecCoord beginElts=VecCoord(), const double &distMax=0)sofa::component::engine::analyze::Distances< DataTypes >; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:1158,log,logging,1158,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addFinalTetra(SeqTetrahedra &outT, SeqPoints &outP, int p1, int p2, int p3, int p4, bool flip=false, int line=0)sofa::component::engine::generate::MeshTetraStuffing; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(SeqTetrahedra &outT, SeqPoints &outP, int p1, int p2, int p3, int p4, int line=0)sofa::component::engine::generate::MeshTetraStuffing; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:1178,log,logging,1178,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addHexahedron(type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p)sofa::core::loader::VoxelLoader; addHexahedron(type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7)sofa::core::loader::VoxelLoader; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:1057,log,logging,1057,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addIndex(Index index)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; addKeyMovement(Real time, Deriv movement)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:1062,log,logging,1062,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addIndex(Index index)sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; addKeyVelocity(Real time, Deriv movement)sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; sofa::core::behav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:1062,log,logging,1062,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addIndex(Index index)sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; addKeyMovement(Real time, Deriv movement)sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >virtual; applyConstraint(const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:1090,log,logging,1090,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPointInCube(const sofa::Index cubeIndex, const SReal *baryCoords)sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; addPointInLine(const sofa::Index lineIndex, const SReal *baryCoords)sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; addPointInQuad(const sofa::Index quadIndex, const SReal *baryCoords)sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; addPointInTetra(const sofa::Index tetraIndex, const SReal *baryCoords, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html:1058,log,logging,1058,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AFFINE enum valuesofa::component::engine::transform::TransformPosition< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:1040,log,logging,1040,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AverageCoord()sofa::component::engine::analyze::AverageCoord< DataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html:1026,log,logging,1026,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:1028,log,logging,1028,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protected; BaseTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html:1018,log,logging,1018,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protected; BaseType ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:1014,log,logging,1014,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html:1084,log,logging,1084,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html:1068,log,logging,1068,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html:1062,log,logging,1062,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html:1060,log,logging,1060,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html:1056,log,logging,1056,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html:1054,log,logging,1054,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html:1050,log,logging,1050,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html:1046,log,logging,1046,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html:1040,log,logging,1040,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:1038,log,logging,1038,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,7,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html:1036,log,logging,1036,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html:1034,log,logging,1034,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:1032,log,logging,1032,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,4,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:1030,log,logging,1030,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:1028,log,logging,1028,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:1026,log,logging,1026,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html:1024,log,logging,1024,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html:1022,log,logging,1022,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html:1020,log,logging,1020,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html:1018,log,logging,1018,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html:1016,log,logging,1016,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html:1014,log,logging,1014,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html:1008,log,logging,1008,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html:1006,log,logging,1006,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html:1004,log,logging,1004,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html:992,log,logging,992,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html:952,log,logging,952,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; afIntegralsofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; Base()sofa::core::objectmodel::Baseprotected; Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:1058,log,logging,1058,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; affineRatiosofa::component::engine::analyze::ShapeMatching< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html:1028,log,logging,1028,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(Value &v, const MapIndex &m)sofa::component::engine::transform::MapIndices< T >inline; apply(Value &v, const MapIndex &m)sofa::component::engine::transform::MapIndices< T >inline; apply(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html:1010,log,logging,1010,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(const core::BaseState *fromModel, int index)sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; addPoint(int fromModel, int index)sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, const type::vector< OutDataVecCoord * > &dataVecOutPos, const type::vector< const InDataVecCoord * > &dataVecInPos) overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >inlinevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:878,log,logging,878,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::MultiMapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< OutDataVecCoord * > &dataVecOutPos, const type::vector< const InDataVecCoord * > &dataVecInPos)=0sofa::core::MultiMapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId out",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html:812,log,logging,812,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel1(State< In1 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addInputModel2(State< In2 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(State< Out > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< DataVecCoord_t< Out > * > &dataVecOutPos, const type::vector< const DataVecCoord_t< In1 > * > &dataVecIn1Pos, const type::vector< const DataVecCoord_t< In2 > * > &dataVecIn2Pos)=0s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:954,log,logging,954,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addJMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; addJMInvJtLocal(Matrix *, ResMatrixType *result, const JMatrixType *J, SReal fact)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; addMInvJtLocal(Matrix *, ResMatrixType *result, const JMatrixType *J, SReal fact)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:1172,log,logging,1172,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addJMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraintForce(const sofa::core::ConstraintParams *, sofa::core::MultiVecDerivId, const linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:918,log,logging,918,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addJMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMInvJt(linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraintForce(const sofa::core::ConstraintParams *, sofa::core::MultiVecDerivId, const linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact)sofa::core::behavior::LinearSolverinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html:844,log,logging,844,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMappedMatrixToGlobalMatrixEigen(sofa::type::fixed_array< core::behavior::BaseMechanicalState *, 2 > mstatePair, TMatrix *mappedMatrix, sofa::type::fixed_array< MappingJacobians< TMatrix >, 2 > jacobians, const MappingGraph &mappingGraph, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html:1144,log,logging,1144,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMappedMatrixToGlobalMatrixEigen(sofa::type::fixed_array< core::behavior::BaseMechanicalState *, 2 > mstatePair, TMatrix *mappedMatrix, sofa::type::fixed_array< MappingJacobians< TMatrix >, 2 > jacobians, const MappingGraph &mappingGraph, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html:1124,log,logging,1124,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() constsofa::core::objectmodel::BaseContextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:712,log,logging,712,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html:704,log,logging,704,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AddRecordedCameraButtonSetting()sofa::gui::component::AddRecordedCameraButtonSettinginlineprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html:744,log,logging,744,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(const OutCoord &c)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; addPoint(const OutCoord &c, sofa::Index indexFrom)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, Data< OutVecCoord > &out, const Data< InVecCoord > &in) overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; sofa::core::Mapping::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; sofa::core::Mapping::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:764,log,logging,764,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotected; addPointsWarning(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html:782,log,logging,782,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSeparateGravity(sofa::simulation::common::MechanicalOperations *mop, SReal dt, core::MultiVecDerivId v)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; assembleSystemMatrix(sofa::simulation::common::MechanicalOperations *mop) constsofa::component::odesolver::forward::EulerExplicitSolverprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html:752,log,logging,752,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addTag(Tag t)sofa::core::objectmodel::Base; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html:716,log,logging,716,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTrack",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html:682,log,logging,682,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:730,log,logging,730,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:726,log,logging,726,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BarycentricPenalityContact(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html:900,log,logging,900,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BarycentricStickContact(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:894,log,logging,894,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html:752,log,logging,752,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutili",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html:740,log,logging,740,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutility::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:736,log,logging,736,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:750,log,logging,750,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:750,log,logging,750,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:748,log,logging,748,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:746,log,logging,746,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv1 &c1, DataMatrixDeriv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:792,log,logging,792,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< TDataTypes >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:762,log,logging,762,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *be",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:734,log,logging,734,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const core::ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) overridesofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html:816,log,logging,816,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv &c, unsigned int &cIndex, const DataVecCoord &x)=0sofa::core::behavior::Constraint< DataTypes >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:730,log,logging,730,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:712,log,logging,712,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const core::ConstraintParams *cParams, DataMatrixDeriv &c_d, unsigned int &cIndex, const DataVecCoord &x) overridesofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html:812,log,logging,812,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const core::ConstraintParams *cParams, DataMatrixDeriv &c_d, unsigned int &cIndex, const DataVecCoord &x) overridesofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigne",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:816,log,logging,816,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const sofa::core::ConstraintParams *cParams, DataMatrixDeriv &c, unsigned int &cIndex, const DataVecCoord &x) overridesofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, uns",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:816,log,logging,816,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:786,log,logging,786,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::SceneLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html:702,log,logging,702,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:702,log,logging,702,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:700,log,logging,700,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:788,log,logging,788,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; change",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html:776,log,logging,776,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html:710,log,logging,710,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseRayContact(CollisionModel1 *model1, core::collision::Intersection *instersectionMethod)sofa::component::collision::response::contact::BaseRayContactprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:768,log,logging,768,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseRayContact(CollisionModel1 *model1, core::collision::Intersection *instersectionMethod)sofa::component::collision::response::contact::BaseRayContactprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:762,log,logging,762,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; clea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:782,log,logging,782,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:780,log,logging,780,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:750,log,logging,750,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader-members.html:724,log,logging,724,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:778,log,logging,778,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:710,log,logging,710,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collisio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:774,log,logging,774,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:702,log,logging,702,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html:700,log,logging,700,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html:744,log,logging,744,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html:742,log,logging,742,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html:740,log,logging,740,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html:728,log,logging,728,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareStateinlinestatic; sofa::component::playback::ReadState::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html:712,log,logging,712,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::ContactListenerinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:764,log,logging,764,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareTopologyinlinestatic; sofa::component::playback::ReadTopology::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html:724,log,logging,724,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteStateinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:714,log,logging,714,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteTopologyinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::utility::TopologicalChangeProcessorinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html:764,log,logging,764,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CenterPointTopologicalMapping()sofa::component::topology::mapping::CenterPointTopologicalMappingprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:770,log,logging,770,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html:786,log,logging,786,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html:784,log,logging,784,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html:774,log,logging,774,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html:768,log,logging,768,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html:766,log,logging,766,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html:764,log,logging,764,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:760,log,logging,760,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CentralDifferenceSolver()sofa::component::odesolver::forward::CentralDifferenceSolverprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html:760,log,logging,760,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::component::collision::response::contact::CollisionResponseprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:780,log,logging,780,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::component::collision::response::contact::CollisionResponseprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html:768,log,logging,768,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::CollisionGroupManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:728,log,logging,728,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::ContactManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:714,log,logging,714,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:704,log,logging,704,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance)=0sofa::core::collision::CollisionAlgorithmprotectedpure virtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:722,log,logging,722,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkEdgeContainer()sofa::component::topology::utility::TopologyChecker; checkEdgeTopology()sofa::component::topology::utility::TopologyChecker; checkEdgeToVertexCrossContainer()sofa::component::to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html:742,log,logging,742,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; clearLoggedMessages() constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html:754,log,logging,754,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:822,log,logging,822,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:794,log,logging,794,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:784,log,logging,784,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:778,log,logging,778,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:776,log,logging,776,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html:774,log,logging,774,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html:770,log,logging,770,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html:764,log,logging,764,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; comput",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:762,log,logging,762,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:758,log,logging,758,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html:756,log,logging,756,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:750,log,logging,750,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html:748,log,logging,748,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,4,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:744,log,logging,744,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::Exec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:740,log,logging,740,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html:738,log,logging,738,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:736,log,logging,736,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html:730,log,logging,730,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html:726,log,logging,726,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,3,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor-members.html:724,log,logging,724,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:716,log,logging,716,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html:712,log,logging,712,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html:706,log,logging,706,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html:704,log,logging,704,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html:702,log,logging,702,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:700,log,logging,700,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html:692,log,logging,692,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisib",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html:710,log,logging,710,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html:796,log,logging,796,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:794,log,logging,794,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,2,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; angleConesofa::component::collision::detection::intersection::LocalMinDistance; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::colli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:778,log,logging,778,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem() overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protectedvirtual; assembleSystem(const core::MechanicalParams *) overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:784,log,logging,784,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; applyProjectiveConstraints(const core::MechanicalParams *mparams) overridesofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >virtual; assembleMappedMatrices(const core::MechanicalParams *mparams)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protectedvirtual; assemblePrecomputedMappedMassMatrix(const core::MechanicalParams *mparams, linearalgebra::BaseMatrix *destination)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; assembleSystem(const core::MechanicalParams *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html:800,log,logging,800,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; applyProjectiveConstraints(const core::MechanicalParams *mparams)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protectedvirtual; assembleMappedMatrices(const core::MechanicalParams *mparams)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protectedvirtual; assemblePrecomputedMappedMassMatrix(const core::MechanicalParams *mparams, linearalgebra::BaseMatrix *destination)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; assembleSystem(const core::MechanicalParams *mparams) overridesofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:778,log,logging,778,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; assembleSystem(const core::MechanicalParams *) overridesofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >inlinevirtual; associateLocalMatrixToComponents(const core::MechanicalParams *) overridesofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >inlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html:774,log,logging,774,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; assembleSystem(const core::MechanicalParams *)sofa::core::behavior::BaseMatrixLinearSystemprotectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:820,log,logging,820,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; assembleSystem(const core::MechanicalParams *)sofa::core::behavior::BaseMatrixLinearSystemprotectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::Mechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html:814,log,logging,814,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; allocateSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protectedvirtual; assembleSystem(const core::MechanicalParams *)sofa::core::behavior::BaseMatrixLinearSystemprotectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:788,log,logging,788,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply() overridesofa::component::mechanicalload::Gravityvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html:720,log,logging,720,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html:716,log,logging,716,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *, MultiVecDerivId, ConstMultiVecDerivId) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId outVel, ConstMultiVecDerivId inVel) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:704,log,logging,704,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >virtual; applyJ(const core::MechanicalParams *mparams, DataVecDeriv_t< Out > &out, const DataVecDeriv_t<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:846,log,logging,846,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecCoordId outPos=VecCoordId::position(), ConstMultiVecCoordId inPos=ConstVecCoordId::position())=0sofa::core::BaseMappingpure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecDerivId outVel=VecDerivId::velocity(), ConstMultiVecDerivId inVel=ConstVecDerivId::velocity())=0sofa::core::BaseMappingpure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJT(const ConstraintParams *mparams, MultiMatrixDerivId inConst,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html:686,log,logging,686,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:762,log,logging,762,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:790,log,logging,790,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html:770,log,logging,770,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:782,log,logging,782,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, false >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, false >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:766,log,logging,766,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) overridesofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; BaseNonLinearMapping< TIn, TOut, true >::apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html:766,log,logging,766,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html:760,log,logging,760,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html:738,log,logging,738,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinevirtual; sofa::core::behavior::BaseInteractionProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:788,log,logging,788,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html:830,log,logging,830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:814,log,logging,814,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyConstraint(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; applyConstraint(const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:756,log,logging,756,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyController(void)sofa::component::controller::MechanicalStateController< DataTypes >; applyController()sofa::component::controller::MechanicalStateController< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BtLeft enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; BtMiddle enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; BtRight enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; buttonDevicesofa::component::controller::MechanicalStateController< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html:774,log,logging,774,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyCorrection(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; applyCorrectionTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:716,log,logging,716,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransform()sofa::component::io::mesh::SphereLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; assembleSystem(const core::MechanicalParams *)sofa::core::behavior::BaseMatrixLinearSystemprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html:728,log,logging,728,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:734,log,logging,734,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html:824,log,logging,824,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html:740,log,logging,740,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html:718,log,logging,718,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html:698,log,logging,698,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,1,['log'],['logging']
Testability," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addedTriangleIndexsofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:873,log,logging,873,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability," addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDxToVector(linearalgebra::BaseVector *resVect, const VecDeriv *dx, SReal mFact, unsigned int &offset)sofa::component::mass::UniformMass< DataTypes >; addMDxToVector(linearalgebra::BaseVector *resVect, const VecDeriv *dx, SReal mFact, unsigned int &offset)sofa::component::mass::UniformMass< DataTypes >; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:3940,log,logging,3940,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability," all the names of its ancestors and itself) . ◆ getName(). std::string sofa::core::objectmodel::BaseObjectDescription::getName ; (; ). virtual . Get the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ getObject(). Base * sofa::core::objectmodel::BaseObjectDescription::getObject ; (; ). virtual . Get the associated object (or nullptr if it is not created yet) ; Reimplemented in sofa::simulation::xml::BaseElement, sofa::simulation::xml::Element< Object >, sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >, sofa::simulation::xml::Element< core::objectmodel::BaseObject >, and sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >. ◆ getParent(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::getParent ; (; ); const. virtual . Get the parent node. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ logError(). virtual void sofa::core::objectmodel::BaseObjectDescription::logError ; (; const std::string & ; s). inlinevirtual . ◆ logErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::logErrors ; (; const std::vector< std::string > & ; e). inlinevirtual . ◆ removeAttribute(). bool sofa::core::objectmodel::BaseObjectDescription::removeAttribute ; (; const std::string & ; attr). virtual . Remove an attribute given its name. ; Remove an attribute given its name, returns false if the attribute was not there. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ setAttribute(). void sofa::core::objectmodel::BaseObjectDescription::setAttribute ; (; const std::string & ; attr, . const std::string & ; val . ). virtual . Set an attribute. Override any existing value. . ◆ setName(). void sofa::core::objectmodel::BaseObjectDescription::setName ; (; const std::string & ; name). virtual . Set the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. sofacoreobjectmodelBaseObjectDescription; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:7096,log,logErrors,7096,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,2,['log'],['logErrors']
Testability," an object given a context and a description. More...;  ; void dump (std::ostream &out=std::cout);  Dump the content of the factory to a text stream. More...;  ; void dumpXML (std::ostream &out=std::cout);  Dump the content of the factory to a XML stream. More...;  ; void dumpHTML (std::ostream &out=std::cout);  Dump the content of the factory to a HTML stream. More...;  ; void setCallback (OnCreateCallback cb);  ; bool registerObjectsFromPlugin (const std::string &pluginName);  ; bool registerObjects (ObjectRegistrationData &ro);  . Static Public Member Functions; static ObjectFactory * getInstance ();  Get the ObjectFactory singleton instance. More...;  ; static objectmodel::BaseObject::SPtr CreateObject (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Create an object given a context and a description. More...;  ; static bool AddAlias (std::string name, std::string result, bool force=false, ClassEntry::SPtr *previous=nullptr);  ; static void ResetAlias (std::string name, ClassEntry::SPtr previous);  ; static bool HasCreator (std::string classname);  Test if a creator exists for a given classname. More...;  ; static std::string ShortName (std::string classname);  . Attribute details. ◆ m_callbackOnCreate. OnCreateCallback sofa::core::ObjectFactory::m_callbackOnCreate. protected . ◆ m_registeredPluginSet. RegisteredPluginSet sofa::core::ObjectFactory::m_registeredPluginSet. protected . ◆ registry. ClassEntryMap sofa::core::ObjectFactory::registry. protected . Main class registry. . Constructor details. ◆ ~ObjectFactory(). sofa::core::ObjectFactory::~ObjectFactory ; (; ). Function details. ◆ AddAlias(). static bool sofa::core::ObjectFactory::AddAlias ; (; std::string ; name, . std::string ; result, . bool ; force = false, . ClassEntry::SPtr * ; previous = nullptr . ). inlinestatic . Add an alias name for an already registered class; Parameters. namename of the new alias ; targetclass pointed to by the new alias ; forceset to true if thi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html:3237,Test,Test,3237,api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,1,['Test'],['Test']
Testability," b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4662,test,testing,4662,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['test'],['testing']
Testability," be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::help",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2112,log,logging,2112,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['log'],['logging']
Testability," beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:3552,log,logging,3552,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,1,['log'],['logging']
Testability," bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::TetrahedronCollisionModel; Deriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; Element typedefsofa::component::collision::geometry::TetrahedronCollisio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:3528,log,logging,3528,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,1,['log'],['logging']
Testability," buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:2913,log,logging,2913,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,2,['log'],['logging']
Testability," bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareStateinlinestatic; sofa::component::playback::ReadState::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CompareState()sofa::component::playback::CompareStateprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; dofError_Vsofa::component::playback::CompareStateprotected; dofError_Xsofa::component::playback::CompareStateprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::playback::CompareStatevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html:2407,log,logging,2407,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,1,['log'],['logging']
Testability," bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_triangleInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_useAngularSpringssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html:5942,log,logging,5942,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,1,['log'],['logging']
Testability," bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html:2991,log,logging,2991,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,1,['log'],['logging']
Testability," canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies() overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_flipNormalssofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_noInitialTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_noNewTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:2615,log,logging,2615,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability," canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; directionssofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >protected; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html:3066,log,logging,3066,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,1,['log'],['logging']
Testability," changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; sofa::changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; sofa::core::collision::NarrowPhaseDetection::changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; sofa::draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::collision::NarrowPhaseDetection::draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; EndPointList typedefsofa::component::collision::detection::algorithm::IncrSAP; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html:3624,log,logging,3624,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,1,['log'],['logging']
Testability," checkForces(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForceFromForcesVector(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromSingleForce(const Deriv singleForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromTotalForce(const Deriv &totalForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; ConstantForceField()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::mechanicalload::ConstantForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::ConstantForceField< DataTypes >; d_forcessofa::component::mechanicalload::ConstantForceField< DataTypes >; d_indexFromEndsofa::component::mechanicalload::ConstantForceField< DataTypes >; d_indicessofa::component::mechanicalload::ConstantForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showArrowSizesofa::component::mechanicalload::ConstantForceField< DataTypes >; d_totalForcesofa::component::mechanicalload::ConstantForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:5828,log,logging,5828,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['log'],['logging']
Testability," checkInputData()sofa::component::engine::select::MeshROI< DataTypes >protected; checkSameOrder(const CPos &A, const CPos &B, const CPos &pt, const CPos &norm) constsofa::component::engine::select::MeshROI< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; computeBoundingBox()sofa::component::engine::select::MeshROI< DataTypes >protected; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_boxsofa::component::engine::select::MeshROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTemplateTrianglessofa::component::engine::select::MeshROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engine::select::BaseROI< DataTypes >; d_doUpdatesofa::component::engine::select::BaseROI< DataTypes >; d_drawBoxsofa::component::engine::select::MeshROI< DataTypes >; d_drawEdgessofa::component::engine::select::BaseROI< DataTypes >; d_drawHexahedrasofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:3400,log,logging,3400,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['log'],['logging']
Testability," clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionResponse()sofa::component::collision::response::contact::CollisionResponseprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contactCreationError(std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed)sofa::component::collision::response::contact::CollisionResponseprotected; ContactManager()sofa::core::collision::ContactManagerinlineprotected; ContactMap typedefsofa::component::collision::response::contact::CollisionResponseprotected; contactMapsofa::component::collision::response::contact::CollisionResponseprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::CollisionResponseinlinestatic; createContacts(const DetectionOutputMap &outputs) overridesofa::component::collision::response::contact::CollisionResponsevirtual; createNewContacts(const DetectionOutputMap &outputsMap, Size &nbContact)sofa::component::collision::response::contact::CollisionResponseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_responsesofa::component::collision::response::contact::CollisionResponse; d_responseParamssofa::component::collision::response::contact::CollisionResponse; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::respo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html:3096,log,logging,3096,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,1,['log'],['logging']
Testability," clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionResponse()sofa::component::collision::response::contact::CollisionResponseprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contactCreationError(std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed)sofa::component::collision::response::contact::CollisionResponseprotected; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactMapsofa::component::collision::response::contact::CollisionResponseprotected; ContactMap typedefsofa::component::collision::response::contact::CollisionResponseprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::CollisionResponseinlinestatic; createContacts(const DetectionOutputMap &outputs) overridesofa::component::collision::response::contact::CollisionResponsevirtual; createNewContacts(const DetectionOutputMap &outputsMap, Size &nbContact)sofa::component::collision::response::contact::CollisionResponseprotected; createVariableData(std::string variable)sofa::component::collision::response::contact::RuleBasedContactManager; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_responsesofa::component::collision::response::contact::CollisionResponse; d_responseParamssofa::component::collision::response::contact::CollisionResponse; d_rulessofa::component::collision::response::contact::RuleBasedContactManager; d_variablessofa::component::collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:3108,log,logging,3108,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['log'],['logging']
Testability," collision models. Return the number of contacts written in the contacts vector. More...;  ; std::string name () const override;  ; bool canIntersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2) override=delete;  ; int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, core::collision::DetectionOutputVector *contacts) override=delete;  ;  Public Member Functions inherited from sofa::core::collision::ElementIntersector; virtual ~ElementIntersector ();  . Attribute details. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::MirrorIntersector::intersector { nullptr }. Function details. ◆ beginIntersect(). int sofa::component::collision::detection::algorithm::MirrorIntersector::beginIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . core::collision::DetectionOutputVector *& ; contacts . ). inlineoverridevirtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIntersector. ◆ canIntersect() [1/2]. bool sofa::component::collision::detection::algorithm::MirrorIntersector::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). overridevirtualdelete . Reimplemented from sofa::core::collision::ElementIntersector. ◆ canIntersect() [2/2]. bool sofa::component::collision::detection::algorithm::MirrorIntersector::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). inlineoverridevirtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implements sofa::core::collision::ElementIntersector. ◆ endIntersect(). int s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html:2509,test,tests,2509,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,1,['test'],['tests']
Testability," concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Method to test Tetrahedron to vertices cross container concistency. More...;  ; bool checkHexahedronTopology ();  } More...;  ; bool checkHexahedronContainer ();  Method to test Hexahedron container concistency. More...;  ; bool checkHexahedronToQuadCrossContainer ();  Method to test Hexahedron to quads cross container concistency. More...;  ; bool checkHexahedronToEdgeCrossContainer ();  Method to test Hexahedron to edges cross container concistency. More...;  ; bool checkHexahedronToVertexCrossContainer ();  Method to test Hexahedron to vertices cross container concistency. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:5894,test,test,5894,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability," const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::component::engine::generate::MeshTetraStuffing; snapssofa::component::engine::generate::MeshTetraStuffing; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(MeshTetraStuffing, core::objectmodel::BaseObject)sofa::component::engine::generate::MeshTetraStuffing; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; splitPointssofa::component::engine::generate::MeshTetraStuffing; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::generate::MeshTetraStuffing; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshTetraStuffing; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vbboxsofa::component::engine::generate::MeshTetraStuffing; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshTetraStuffing() overridesofa::component::engine::generate::MeshTetraStuffingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:16040,log,logErrors,16040,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,1,['log'],['logErrors']
Testability," const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::info ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ log(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::log ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ null(). static const NullLoggerStream& sofa::helper::logging::MessageDispatcher::null ; (; ). inlinestatic . ◆ process(). void sofa::helper::logging::MessageDispatcher::process ; (; sofa::helper::logging::Message & ; m). static . Process the Message by all the Message handlers. Called in the destructor of LoggerStream and can be called manually on a hand-made (possibly predefined) Message . ◆ rmHandler(). int sofa::helper::logging::MessageDispatcher::rmHandler ; (; MessageHandler * ; o). static . to remove a MessageHandler . ◆ warning(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::warning ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . sofahelperloggingMessageDispatcher; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:3800,log,logging,3800,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,7,"['Log', 'log']","['LoggerStream', 'logging']"
Testability," const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:11532,Test,TestPair,11532,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,2,['Test'],['TestPair']
Testability," const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:1886,test,testIntersection,1886,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability," constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKd() constsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inlinevirtual; getKs() constsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &d_x) const overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:9819,log,logging,9819,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['log'],['logging']
Testability," constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() constsofa::core::collision::Intersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:7570,log,logging,7570,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['log'],['logging']
Testability, constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() constsofa::core::collision::Intersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:4864,log,logging,4864,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['log'],['logging']
Testability, constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFBO() overridesofa::gl::component::shader::VisualManagerSecondaryPassinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputName()sofa::gl::component::shader::VisualManagerPass; getOutputTags()sofa::gl::component::shader::VisualManagerSecondaryPassinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *) overridesofa::gl::component::shader::VisualManagerPassvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjecti,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:6271,log,logging,6271,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['log'],['logging']
Testability," constsofa::core::objectmodel::Basevirtual; getCollisionModels() overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >inlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:6794,log,logging,6794,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['log'],['logging']
Testability," constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDrawMode() constsofa::component::solidmechanics::spring::SpringForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::Pai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:10759,log,logging,10759,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,4,['log'],['logging']
Testability," constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomTemplateName()sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >static; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:6564,log,logging,6564,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['log'],['logging']
Testability," core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:2198,test,testIntersection,2198,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability," defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createVertexBuffer()sofa::gl::component::rendering3d::OglModel; cullFacesofa::gl::component::rendering3d::OglModelprotected; d_componentStatesofa::core::objectmodel::Base; d_computeTangentssofa::component::visual::VisualModelImpl; d_edgessofa::component::visual::VisualModelImpl; d_enablesofa::core::visual::VisualModel; d_fileMeshsofa::component::visual::VisualModelImpl; d_fixMergedUVSeamssofa::component::visual::VisualModelImpl; d_groupssofa::component::visual::VisualModelImpl; d_handleDynamicTopologysofa::component::visual::VisualModelImpl; d_initRestPositionssofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:4851,log,logging,4851,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,1,['log'],['logging']
Testability," difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4387,test,testing,4387,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['testing']
Testability," double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9074,test,tested,9074,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['tested']
Testability," each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv differe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3965,test,testing,3965,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['testing']
Testability," from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [4/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [6/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/22]. bool sofa::component::collision::detect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:33678,test,testIntersection,33678,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability," from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::loggi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3475,log,logging,3475,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['log'],['logging']
Testability," function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_borderssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawBoxsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >virtual; edgeModifiersofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tags",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:2237,log,logging,2237,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['log'],['logging']
Testability," getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistances(VVD &distances, VecVecCoord &gradients, const VecCoord &goals)sofa::component::engine::analyze::Distances< DataTypes >; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:8185,log,logging,8185,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['log'],['logging']
Testability, getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDx() constsofa::core::behavior::ConstraintSolverinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() constsofa::core::behavior::ConstraintSolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:5191,log,logging,5191,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,1,['log'],['logging']
Testability," getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomTemplateName()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinearSystem() constsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixInvertData(linearalgebra::BaseMatrix *m)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSystemBaseMatrix() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; getSystemInverseBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemLHBaseVector() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inlinevirtual; getSystemLHVector()so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:7837,log,logging,7837,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logging']
Testability," getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInteractionIdentifiers() override finalsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlineprotectedvirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; getMixedInteractionIdentifiers()sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:8718,log,logging,8718,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['log'],['logging']
Testability," getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKd() constsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inlinevirtual; getKs() constsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &d_x) const overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:9861,log,logging,9861,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['log'],['logging']
Testability," getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDOF() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html:6591,log,logging,6591,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability," i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getHexahedronNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; getHexahedronVertexCoordinates(const HexaID h, Coord[8]) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointPositionInHexahedron(const HexaID h, const LocalCoord &baryC) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; getPointPositionInHexahedron(const HexaID h, const Real baryC[3]) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCent",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:17228,log,logging,17228,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,2,['log'],['logging']
Testability, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1290,Log,LoggingMessageHandler,1290,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,2,['Log'],['LoggingMessageHandler']
Testability," in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The parent coordinates are transferred in the parent states, then the scene is initialized, then various mapping functions are applied. The parent states are resized based on the size of the parentCoords vectors. The child state is not resized. Its should be already sized, or its size set automatically during initialization.; Parameters. parentCoordsParent positions (one InVecCoord per parent) ; expectedChildCoordsexpected position of the child corresponding to the parent positions . ◆ setupScene(). template<class _MultiMapping > . void sofa::MultiMapping_test< _MultiMapping >::setupScene ; (; int ; numParents). inline . Create scene with given number of parent states. Currently, only one child state is handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:6922,Test,Test,6922,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['Test'],['Test']
Testability," inlinevirtual . Reimplemented in sofa::core::topology::BaseMeshTopology, sofa::component::topology::container::grid::GridTopology, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::constant::MeshTopology, and sofa::component::topology::container::constant::CubeTopology. ◆ hasPos(). virtual bool sofa::core::topology::Topology::hasPos ; (; ); const. inlinevirtual . Reimplemented in sofa::core::topology::BaseMeshTopology, sofa::component::topology::container::grid::SparseGridTopology, sofa::component::topology::container::grid::GridTopology, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::constant::MeshTopology, and sofa::component::topology::container::constant::CubeTopology. ◆ insertInNode(). bool sofa::core::topology::Topology::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::topology::Topology::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setNbPoints(). virtual void sofa::core::topology::Topology::setNbPoints ; (; Size ; ). inlinevirtual . Reimplemented in sofa::component::topology::container::dynamic::PointSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ SOFA_CLASS(). sofa::core::topology::Topology::SOFA_CLASS ; (; Topology ; , . core::objectmodel::BaseObject ;  . ). sofacoretopologyTopology; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html:17343,test,test,17343,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,2,['test'],['test']
Testability," int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInteractionIdentifiers() override finalsofa::core::behavior::PairInteractionConstraint< DataTypes >inlineprotectedvirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html:8852,log,logging,8852,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,2,['log'],['logging']
Testability," int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AMDOrderingMethod, BaseEigenOrderingMethod< Eigen::AMDOrdering< int >>)sofa::component::linearsolver::ordering::AMDOrderingMethod; BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:10507,log,logErrors,10507,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['log'],['logErrors']
Testability," is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4261,test,testing,4261,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['test'],['testing']
Testability," is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2271,test,tests,2271,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['test'],['tests']
Testability," j, int k) constsofa::component::topology::container::grid::GridTopology; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMax() constsofa::component::topology::container::grid::RegularGridTopologyinline; getMin() constsofa::component::topology::container::grid::RegularGridTopologyinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::grid::GridTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:17887,log,logging,17887,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['log'],['logging']
Testability," j, int k) constsofa::component::topology::container::grid::GridTopology; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::grid::GridTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles() overridesofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:16176,log,logging,16176,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,3,['log'],['logging']
Testability," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2337,test,testLinearElasticityInTraction,2337,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,6,['test'],"['testLinearElasticityInTraction', 'testing']"
Testability," nodes? More...;  . Public Member Functions;  FindByTypeVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  For each component, if it is of the given type, then put it in the list. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html:1845,test,testTags,1845,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,1,['test'],['testTags']
Testability," of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getSecondPosition ; (; unsigned ; idx). pure virtual . Const iterator end to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ release(). virtual void sofa::core::collision::DetectionOutputVector::release ; (; ). inlinevirtual . Delete this vector from memory once the contact pair is no longer active. . ◆ size(). virtual unsigned int sofa::core::collision::DetectionOutputVector::size ; (; ); const. pure virtual . Current size (number of detected contacts. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. sofacorecollisionDetectionOutputVector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:1684,Test,Test,1684,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['Test'],['Test']
Testability," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24744,test,testIntersection,24744,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,4,['test'],['testIntersection']
Testability," point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:5355,test,test,5355,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,1,['test'],['test']
Testability," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1484,test,testing,1484,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html,17,['test'],['testing']
Testability," setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(ClipPlane, core::visual::VisualModel)sofa::gl::component::rendering3d::ClipPlane; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; wasActivesofa::gl::component::rendering3d::ClipPlaneprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ClipPlane() overridesofa::gl::component::rendering3d::ClipPlaneprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:11630,log,logErrors,11630,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['log'],['logErrors']
Testability," sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PairBoxROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PairBoxROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html:3261,log,logging,3261,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,1,['log'],['logging']
Testability," sofa::helper::WriteAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::WriteAccessor< T, Enable > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::WriteAccessor< T, Enable >; A WriteAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within some containers.; Other advantadges of using a WriteAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; container_type * vref;  . Public Member Functions;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);  . Attribute details. ◆ vref. template<class T , class Enable = void> . container_type* sofa::helper::WriteAccessor< T, Enable >::vref. protected . Constructor details. ◆ WriteAccessor(). template<class T , class Enable = void> . sofa::helper::WriteAccessor< T, Enable >::WriteAccess",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html:996,log,logged,996,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,1,['log'],['logged']
Testability," static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4920,test,testedRotation,4920,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,1,['test'],['testedRotation']
Testability," std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadTopology; d_intervalsofa::component::playback::ReadTopology; d_loopsofa::component::playback::ReadTopology; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shiftsofa::component::playback::ReadTopology; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; edgessofa::component::playback::ReadTopology; f_bboxsofa::core::objectmodel::Base; f_filenamesofa::component::playback::ReadTopology; f_intervalsofa::component::playback::ReadTopology; f_listeningsofa::core::objectmodel::BaseObject; f_loopsofa::component::playback::ReadTopology; f_printLogsofa::core::objectmodel::Base; f_shiftsofa::component::playback::ReadTopology; f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html:2181,log,logging,2181,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,1,['log'],['logging']
Testability," std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::ContactManagerinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContactManager, CollisionAlgorithm)sofa::core::collision::ContactManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedContactssofa::core::collision::ContactManagerprotected; storedIntersectionMethodsofa::core::collision::ContactManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContactManager() overridesofa::core::collision::ContactManagerinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:11229,log,logErrors,11229,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['log'],['logErrors']
Testability," std::string &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; GetVectorVisitor(const sofa::core::ExecParams *params, linearalgebra::BaseVector *vec, core::ConstVecId src)sofa::component::odesolver::testing::GetVectorVisitorinline; independentOnlysofa::component::odesolver::testing::GetVectorVisitorprotected; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; offsetsofa::component::odesolver::testing::GetVectorVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *gnode) overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setIndependentOnly(bool b)sofa::component::odesolver::testing::GetVectorVisitorinline; setTags(const TagSet &t)sofa::simulation::Visit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html:3165,test,testing,3165,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,1,['test'],['testing']
Testability," std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; SOFA_CLASS(GenerateRigidMass, core::DataEngine)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; volumesofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateRigidMass() overridesofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:14492,log,logErrors,14492,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['log'],['logErrors']
Testability," std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html:13913,test,testIntersection,13913,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability," std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GenerateGrid, DataTypes), core::DataEngine)sofa::component::engine::generate::GenerateGrid< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; Vec3Int typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; VecCoord typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateGrid() overridesofa::component::engine::generate::GenerateGrid< DataTypes >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:13684,log,logErrors,13684,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,1,['log'],['logErrors']
Testability," t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FileMessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::FileMessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~FileMessageHandlerComponent() overridesofa::component::sceneutility::FileMessageHandlerComponent.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:10227,log,logErrors,10227,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,1,['log'],['logErrors']
Testability," test Edge to vertex cross container concistency. More...;  ; bool checkTriangleTopology ();  } More...;  ; bool checkTriangleContainer ();  Method to test Triangle container concistency. More...;  ; bool checkTriangleToEdgeCrossContainer ();  Method to test triangles to edges cross container concistency. More...;  ; bool checkTriangleToVertexCrossContainer ();  Method to test triangles to vertices cross container concistency. More...;  ; bool checkQuadTopology ();  } More...;  ; bool checkQuadContainer ();  Method to test quad container concistency. More...;  ; bool checkQuadToEdgeCrossContainer ();  Method to test quads to edges cross container concistency. More...;  ; bool checkQuadToVertexCrossContainer ();  Method to test quads to vertices cross container concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Method to test Tetrahedron to vertices cross container concistency. More...;  ; bool checkHexahedronTopology ();  } More...;  ; bool checkHexahedronContainer ();  Method to test Hexahedron container concistency. More...;  ; bool checkHexahedronToQuadCrossContainer ();  Method to test Hexahedron to quads cross container concistency. More...;  ; bool checkHexahedronToEdgeCrossContainer ();  Method to test Hexahedron to edges cross container concistency. More...;  ; bool checkHexahedronToVertexCrossContainer ();  Method to test Hexahedron to vertices cross container concistency. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecPar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:5124,test,test,5124,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability, tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; ). inline . ◆ Mapping_test() [2/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; std::string ; fileName). inline . ◆ ~Mapping_test(). template<c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:10369,test,testing,10369,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['testing']
Testability," the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< T::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ m_modelMatrix. template<class T > . sofa::type::Mat<NbRows, NbCols, Real> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_modelMatrix. protected . ◆ m_testedMatrix. template<class T > . std::unique_ptr<sofa::linearalgebra::BaseMatrix> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_testedMatrix {nullptr}. protected . ◆ NbCols. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbCols = T::NbCols. staticconstexpr . ◆ NbRows. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbRows = T::NbRows. staticconstexpr . Function details. ◆ checkAddBloc(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddBloc ; (; sofa::linearalgebra::BaseMatrix::Index ; posRow, . sofa::linearalgebra::BaseMatrix::Index ; posCol . ). inline . A 3x3 matrix is added into the matrix using the corresponding function overload This assumes the matrix is big enough to contain a 3x3 matrix at the requested position Parameters. posRowrow index at which the 3x3 matrix is added ; posColcolumn index at which the 3x3 matrix is added . ◆ checkAddScalar(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddScalar ; (; ). inline . ◆ checkResize(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkResize ; (; ). inline . ◆ onSetUp(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::onSetUp ; (; ). inlineoverridevirtual . Reimplemented from sofa::testing::BaseTest. ◆ onTearDown(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::onTearDown ; (; ). inlineoverridevirtual . Reimplemented from sofa::tes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:4105,test,testing,4105,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,2,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability, through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1728,log,logging,1728,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,4,"['Log', 'log']","['LoggingMessageHandler', 'logging', 'loggingmessagehandler']"
Testability," transpose, const GLfloat *value);  ; void SetMatrix3 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix4 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix2x3 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix2x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x3 (GLint, GLsizei, GLboolean, const GLfloat *);  . void TurnOn ();  ; void TurnOff ();  . Static Public Member Functions; static bool InitGLSL ();  This is used to load all of the extensions and checks compatibility. More...;  ; static GLhandleARB GetActiveShaderProgram ();  ; static void SetActiveShaderProgram (GLhandleARB s);  . Protected Member Functions; bool CompileShader (GLint target, const ShaderContents &shaderContent, const std::string &header);  This function compiles a shader and check the log. More...;  . Attribute details. ◆ header. std::string sofa::gl::GLSLShader::header. protected . ◆ m_filelistener. std::shared_ptr<sofa::helper::system::FileEventListener> sofa::gl::GLSLShader::m_filelistener. protected . ◆ m_hProgramObject. GLhandleARB sofa::gl::GLSLShader::m_hProgramObject. protected . This handle stores our program information which encompasses our shader. . ◆ m_hShaderContents. std::map<GLint, ShaderContents> sofa::gl::GLSLShader::m_hShaderContents. protected . ◆ m_hShaders. std::map<GLint, GLhandleARB> sofa::gl::GLSLShader::m_hShaders. protected . Constructor details. ◆ GLSLShader(). sofa::gl::GLSLShader::GLSLShader ; (; ). ◆ ~GLSLShader(). sofa::gl::GLSLShader::~GLSLShader ; (; ). Function details. ◆ AddDefineMacro(). void sofa::gl::GLSLShader::AddDefineMacro ; (; const std::string & ; name, . const std::string & ; value . ). ◆ AddHeader(). void sofa::gl::GLSLShader::AddHeader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:5036,log,log,5036,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,1,['log'],['log']
Testability," type::Vec< 3, Real > &stress)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeStressAcrossDirection(Real &stress_across_dir, Index elementIndex, const Coord &direction)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeStressAlongDirection(Real &stress_along_dir, Index elementIndex, const Coord &direction, const type::Vec< 3, Real > &stress)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeStressAlongDirection(Real &stress_along_dir, Index elementIndex, const Coord &direction)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeStressPerVertex()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTriangleInfo(Index triangleIndex, TriangleFiberDirection &, const core::topology::BaseMeshTopology::Triangle &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; createTriangleInformation(Index triangleIndex, TriangleInformation &, const core::topology::BaseMeshTopology::Triangle &t, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; criteriaValuesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computePrincipalStresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:8703,log,logging,8703,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,1,['log'],['logging']
Testability," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1793,test,testing,1793,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,3,['test'],['testing']
Testability," value. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ drawStep(). virtual void sofa::core::visual::VisualLoop::drawStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Render the scene. ; Reimplemented in sofa::gl::component::shader::CompositingVisualLoop, and sofa::simulation::DefaultVisualManagerLoop. ◆ initStep(). virtual void sofa::core::visual::VisualLoop::initStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Initialize the textures. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ insertInNode(). bool sofa::core::visual::VisualLoop::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::visual::VisualLoop::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::core::visual::VisualLoop::SOFA_CLASS ; (; VisualLoop ; , . VisualModel ;  . ). ◆ updateContextStep(). virtual void sofa::core::visual::VisualLoop::updateContextStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Update contexts. Required before drawing the scene if root flags are modified. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ updateStep(). virtual void sofa::core::visual::VisualLoop::updateStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Update the Visual Models: triggers the Mappings. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. sofacorevisualVisualLoop; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:17200,test,test,17200,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,1,['test'],['test']
Testability, |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::grid::SparseGridRamificationTopology Class Reference . #include <SparseGridRamificationTopology.h>; a SparseGridTopology where each resulting cube contains only one independent connexe component (nodes can be multiplied by using virtual nodes) ; More... Inheritance diagram for sofa::component::topology::container::grid::SparseGridRamificationTopology:. [legend]; Detailed Description; a SparseGridTopology where each resulting cube contains only one independent connexe component (nodes can be multiplied by using virtual nodes) . Classes; struct  Connexion;  a connection corresponds to a connexe component in each regular hexa (each non-void hexa has at less one connection) More...;  . Public Attributes; sofa::core::objectmodel::RenamedData< bool > _finestConnectivity;  ; Data< bool > d_finestConnectivity;  Test for connectivity at the finest level? (more precise but slower by testing all intersections between the model mesh and the faces between boundary cubes) More...;  ; HierarchicalCubeMapRamification _hierarchicalCubeMapRamification;  ;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; HierarchicalCubeMap _hierarchicalCubeMap;  ; InverseHierarchicalCubeMap _inverseHierarchicalCubeMap;  ; HierarchicalPointMap _hierarchicalPointMap;  ; InverseHierarchicalPointMap _inverseHierarchicalPointMap;  ; PointMap _pointMap;  a coarse point indice -> corresponding point in finer level More...;  ; PointMap _inversePointMap;  a fine point indice -> corresponding point in coarser level More...;  ; NodeAdjacency _nodeAdjacency;  ; NodeCubesAdjacency _nodeCubesAdjacency;  ; NodeCornersAdjacency _nodeCornersAdjacency;  ; type::vector< SparseGridTopology::SPtr > _virtualFinerLevels;  saving the virtual levels (cf nbVirtualFinerLevels) More...;  ; sofa::core::sptr< RegularGr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:1167,Test,Test,1167,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,2,"['Test', 'test']","['Test', 'testing']"
Testability,"  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  . Public Member Functions;  SOFA_CLASS (DAGNode, simulation::Node);  ; virtual Node::SPtr createChild (const std::string &nodeName) override;  Pure Virtual method from Node. More...;  ; void detachFromGraph () override;  Remove the current node from the graph: consists in removing the link to its parent. More...;  ; Parents getParents () const override;  Get a list of parent node. More...;  ; size_t getNbParents () const override;  returns number of parents More...;  ; BaseNode * getFirstParent () const override;  return the first parent (returns nullptr if no parent) More...;  ; bool hasParent (const BaseNode *node) const override;  Test if the given node is a parent of this node. More...;  ; bool hasParent (const BaseContext *context) const;  Test if the given context is a parent of this context. More...;  ; bool hasAncestor (const BaseNode *node) const override;  ; bool hasAncestor (const BaseContext *context) const override;  ; void * getObject (const sofa::core::objectmodel::ClassInfo &class_info, const sofa::core::objectmodel::TagSet &tags, SearchDirection dir=SearchUp) const override;  ; void * getObject (const sofa::core::objectmodel::ClassInfo &class_info, const std::string &path) const override;  ; void getObjects (const sofa::core::objectmodel::ClassInfo &class_info, GetObjectsCallBack &container, const sofa::core::objectmodel::TagSet &tags, SearchDirection dir=SearchUp) const override;  ; sofa::core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const override;  ; void initVisualContext () override;  Called during initialization to correctly propagate the visual context to the children. More...;  ; void updateContext () override;  Update the whole context values, based on parent ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:2814,Test,Test,2814,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['Test'],['Test']
Testability,"  ; sofa::type::Vec< 3, Real > computeBaryTrianglePoint (Triangle &t, sofa::type::Vec< 3, Real > &coord_p) const;  ; sofa::type::Vec< 3, Real > computeTriangleNormal (const TriangleID ind_t) const;  Computes the normal vector of a triangle indexed by ind_t (not normed) More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p_q1, const typename DataTypes::Coord &p_q2, QuadID ind_q3, QuadID ind_q4);  Tests how to triangularize a quad whose vertices are defined by (p_q1, p_q2, ind_q3, ind_q4) according to the Delaunay criterion. More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p1, const typename DataTypes::Coord &p2, const typename DataTypes::Coord &p3, const typename DataTypes::Coord &p4);  Tests how to triangularize a quad whose vertices are defined by (p1, p2, p3, p4) according to the Delaunay criterion. More...;  ; bool isDiagonalsIntersectionInQuad (const typename DataTypes::Coord triangle1[3], const typename DataTypes::Coord triangle2[3]);  Given two triangles, test if the intersection of the diagonals of the quad composed by the triangles is inside the quad or not. (test if triangles form a quad) More...;  ; sofa::type::Vec< 3, Real > getOppositePoint (PointID ind_p, const Edge &indices, Real coord_p) const;  Computes the opposite point to ind_p. More...;  ; bool isTriangleInPlane (const TriangleID ind_t, const PointID ind_p, const sofa::type::Vec< 3, Real > &plane_vect) const;  Tests if a triangle indexed by ind_t (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; void prepareVertexDuplication (const PointID ind_p, const TriangleID ind_t_from, const TriangleID ind_t_to, const Edge &indices_from, const Real &coord_from, const Edge &indices_to, const Real &coord_to, sofa::type::vector< TriangleID > &triangles_list_1, sofa::type::vector< TriangleID > &triangles_list_2) const;  Prepares the duplication of a vertex. More...;  ; bool computeSegmentTrian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:14332,test,test,14332,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['test'],['test']
Testability,"  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::info ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ log(). M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2470,Log,LoggerStream,2470,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,2,"['Log', 'log']","['LoggerStream', 'logging']"
Testability,"  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< T::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ m_modelMatrix. template<class T > . sofa::type::Mat<NbRows, NbCols, Real> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_modelMatrix. protected . ◆ m_testedMatrix. template<class T > . std::unique_ptr<sofa::linearalgebra::BaseMatrix> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_testedMatrix {nullptr}. protected . ◆ NbCols. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbCols = T::NbCols. staticconstexpr . ◆ NbRows. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbRows = T::NbRows. staticconstexpr . Function details. ◆ checkAddBloc(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddBloc ; (; sofa::linearalgebra::BaseMatrix::Index ; posRow, . sofa::linearalgebra::BaseMatrix::Index ; posCol . ). inline . A 3x3 matrix is added into the matrix using the corresponding function overload This assumes the matrix is big enough to contain a 3x3 matrix at the requested position Parameters. posRowrow index at which the 3x3 matrix is added ; posColcolumn index at which the 3x3 matrix is added . ◆ checkAddScalar(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddScalar ; (; ). inline . ◆ checkResize(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkResize ; (; ). inline . ◆ onSetUp().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:3812,test,testing,3812,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,2,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,"  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4047,test,testIntersection,4047,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:14888,test,testMechanicalState,14888,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['test'],['testMechanicalState']
Testability,"  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::gene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:4742,test,testing,4742,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['test'],['testing']
Testability," ◆ checkHexahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToVertexCrossContainer ; (; ). Method to test Hexahedron to vertices cross container concistency. . ◆ checkQuadContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadContainer ; (; ). Method to test quad container concistency. . ◆ checkQuadToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToEdgeCrossContainer ; (; ). Method to test quads to edges cross container concistency. . ◆ checkQuadTopology(). bool sofa::component::topology::utility::TopologyChecker::checkQuadTopology ; (; ). } ; Quad methods { Full method to check Quad Topology. Will call See alsocheckQuadContainer, . checkQuadToEdgeCrossContainer and . checkQuadToVertexCrossContainer . ◆ checkQuadToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToVertexCrossContainer ; (; ). Method to test quads to vertices cross container concistency. . ◆ checkTetrahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronContainer ; (; ). Method to test Tetrahedron container concistency. . ◆ checkTetrahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToEdgeCrossContainer ; (; ). Method to test Tetrahedron to edges cross container concistency. . ◆ checkTetrahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronTopology ; (; ). } ; Tetrahedron methods { Full method to check Tetrahedron Topology. Will call See alsocheckTetrahedronContainer, . checkTetrahedronToTriangleCrossContainer . checkTetrahedronToEdgeCrossContainer and . checkTetrahedronToVertexCrossContainer . ◆ checkTetrahedronToTriangleCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToTriangleCrossContainer ; (; ). Method to test Tetrahedron to triangles cross container concis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:19481,test,test,19481,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability," ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21029,Test,TestPair,21029,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['Test'],['TestPair']
Testability,"""type""));  . Attribute details. ◆ canAccessSleepingNode. bool sofa::simulation::Visitor::canAccessSleepingNode. Can the visitor access sleeping nodes? . ◆ params. const sofa::core::ExecParams* sofa::simulation::Visitor::params. protected . ◆ subsetsToManage. TagSet sofa::simulation::Visitor::subsetsToManage. list of the subsets . Constructor details. ◆ Visitor(). sofa::simulation::Visitor::Visitor ; (; const sofa::core::ExecParams * ; params). explicit . ◆ ~Visitor(). sofa::simulation::Visitor::~Visitor ; (; ). virtualdefault . Function details. ◆ addTag(). Visitor& sofa::simulation::Visitor::addTag ; (; Tag ; t). inline . ◆ begin() [1/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Node * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ begin() [2/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Visitor::VisitorContext * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ childOrderReversed(). virtual bool sofa::simulation::Visitor::childOrderReversed ; (; simulation::Node * ; ). inlinevirtual . Return true to reverse the order of traversal of child nodes. ; Reimplemented in sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv. ◆ debug_write_state_after(). void sofa::simulation::Visitor::debug_write_state_after ; (; sofa::core::objectmodel::BaseObject * ; obj). protected . ◆ debug_write_state_before(). void sofa::simulation::Visitor::debug_write_state_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:5530,log,logging,5530,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,1,['log'],['logging']
Testability,"&M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; computeForce(Displacement &F, const Displacement &Depl, const ElementStiffness &K)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMaterialStiffness(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeRotationLarge(Transformation &r, Coord &edgex, Coord &edgey)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeRotationPolar(Transformation &r, type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createHexahedronInformation(Index, HexahedronInformation &t, const core::topology::BaseMeshTopology::Hexahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_hexahedronInfosofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_methodsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_poissonRatiosofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; d_youngModulussofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; DataTypes typedefsofa::core::behavior::Forc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:7422,log,logging,7422,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"&d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< _DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeSpring &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; applyPointDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:2920,log,logging,2920,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"&msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2422,log,logging,2422,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['log'],['logging']
Testability,"&offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned n) const overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behavior::BaseMechanicalStatepure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::MechanicalState< TDataTypes >; Deriv typedefsofa::core::behavior::MechanicalState< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endIntegration(const ExecParams *params, SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; exportGnuplot(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html:5944,log,logging,5944,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,1,['log'],['logging']
Testability,"&p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6165,test,testIntersection,6165,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"& ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3805,test,testIntersection,3805,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"& ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14368,test,testIntersection,14368,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"() DeprecatedAndRemoved centersofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved vradiussofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved stiffnesssofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved dampingsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved colorsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~EllipsoidForceField() overridesofa::component::mechanicalload::EllipsoidForceField< DataTypes >protected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html:17018,log,logErrors,17018,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,1,['log'],['logErrors']
Testability,() constsofa::core::CollisionModelinline; getExternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getLast()sofa::core::CollisionModel; getLeafEndIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLeafIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberCells() constsofa::component::collision::geometry::CubeCollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:7803,log,logging,7803,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,1,['log'],['logging']
Testability,"() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile() overridesofa::simulation::xml::BaseElementvirtual; getClass() const =0sofa::simulation::xml::BaseElementpure virtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getIncludeNodeType() constsofa::simulation::xml::BaseElementinline; getName() overridesofa::simulation::xml::BaseElementinlinevirtual; getObject() override=0sofa::simulation::xml::BaseElementpure virtual; getParent() const overridesofa::simulation::xml::BaseElementinlinevirtual; getParentElement() constsofa::simulation::xml::BaseElementinline; getSrcFile() constsofa::simulation::xml::BaseElement; getSrcLine() constsofa::simulation::xml::BaseElement; getType()sofa::simulation::xml::BaseElementinline; init()sofa::simulation::xml::BaseElementvirtual; initNode()=0sofa::simulation::xml::BaseElementpure virtual; isFileRoot()sofa::simulation::xml::BaseElement; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; NodeFactory typedefsofa::simulation::xml::BaseElement; presenceAttribute(const std::string &s)sofa::simulation::xml::BaseElementvirtual; pushNamedObjects(Map &result)sofa::simulation::xml::BaseElementinline; pushObjects(Sequence &result)sofa::simulation::xml::BaseElementinline; removeAttribute(const std::string &attr) overridesofa::simulation::xml::BaseElementvirtual; removeChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; replaceAttributesofa::simulation::xml::BaseElementprotected; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setBaseFile(const std::string &newBaseFile)sofa::simulation::xml::BaseElementvirtual; setIncludeNodeType(IncludeNodeType t)sofa::simulation::xml::BaseElementinline; setName(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html:3142,log,logError,3142,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,1,['log'],['logError']
Testability,"();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ Shader(). sofa::core::visual::Shader::Shader ; (; ). inlineprotected . ◆ ~Shader(). sofa::core::visual::Shader::~Shader ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ insertInNode(). bool sofa::core::visual::Shader::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::gl::component::shader::OglShader. ◆ isActive(). virtual bool sofa::core::visual::Shader::isActive ; (; ). pure virtual . Tells if it must be activated automatically(value false : the visitor will switch the shader) or manually (value true : useful when another component wants to use it for itself only) ; Implemented in sofa::gl::component::shader::OglShader. ◆ removeInNode(). bool sofa::core::visual::Shader::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::gl::component::shader::OglShader. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::visual::Shader::SOFA_ABSTRACT_CLASS ; (; Shader ; , . objectmodel::BaseObject ;  . ). ◆ start(). virtual void sofa::core::visual::Shader::start ; (; ). pure virtual . Start the shader. ; Implemented in sofa::gl::component::shader::OglShader. ◆ stop(). virtual void sofa::core::visual::Shader::stop ; (; ). pure virtual . Stop the shader. ; Implemented in sofa::gl::component::shader::OglShader. sofacorevisualShader; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html:14264,test,test,14264,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,1,['test'],['test']
Testability,"()sofa::component::visual::Cameraprotected; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fieldOfViewsofa::component::visual::BaseCamera; d_fixedLookAtPointsofa::component::visual::BaseCamera; d_heightViewportsofa::component::visual::BaseCamera; d_lookAtsofa::component::visual::BaseCamera; d_maxBBoxsofa::component::visual::BaseCamera; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minBBoxsofa::component::visual::BaseCamera; d_modelVie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html:2624,log,logging,2624,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,1,['log'],['logging']
Testability,"()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem classsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >friend; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemSolution(core::MultiVecDerivId v)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:3472,log,logging,3472,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['log'],['logging']
Testability,"()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:2253,log,logging,2253,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['log'],['logging']
Testability,"(; ); const. inlineoverridevirtual . Returns the contact distance (must returns 0 if useProximity() is false) ; Reimplemented from sofa::core::collision::Intersection. ◆ setAlarmDistance(). void sofa::component::collision::detection::intersection::BaseProximityIntersection::setAlarmDistance ; (; SReal ; v). inlineoverridevirtual . Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ setContactDistance(). void sofa::component::collision::detection::intersection::BaseProximityIntersection::setContactDistance ; (; SReal ; v). inlineoverridevirtual . Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_ABSTRACT_CLASS ; (; BaseProximityIntersection ; , . DiscreteIntersection ;  . ). ◆ testIntersection() [1/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:23397,test,testIntersection,23397,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:10088,log,logErrors,10088,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,1,['log'],['logErrors']
Testability,"(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMechanicalMatricesByCondensation(ElementStiffness &K, ElementMass &M, Real &totalMass, const int elementIndex)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeParticleMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; computeRotationLarge(Transformation &r, Coord &edgex, Coord &edgey)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeRotationPolar(Transformation &r, type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createHexahedronInformation(Index, HexahedronInformation &t, const core::topology::BaseMeshTopology::Hexahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_densitysofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementTotalMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_hexahedronInfosofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_lumpedMassessofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:11415,log,logging,11415,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"(Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  LocalMinDistance ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:21109,test,testIntersectionSphere,21109,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersectionSphere']
Testability,"(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PenalityContactForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairInteractionForceField() overridesofa::core::behavior::PairInteractionForceField< DataTypes >protected; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:18727,log,logErrors,18727,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['log'],['logErrors']
Testability,"(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PatchTestMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; xfsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:18490,log,logErrors,18490,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetVectorVisitor::independentOnly {false}. protected . ◆ offset. unsigned sofa::component::odesolver::testing::GetVectorVisitor::offset {0}. protected . ◆ src. core::ConstVecId sofa::component::odesolver::testing::GetVectorVisitor::src. protected . ◆ vec. linearalgebra::BaseVector* sofa::component::odesolver::testing::GetVectorVisitor::vec. protected . Constructor details. ◆ GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::GetVectorVisitor ; (; const sofa::core::ExecParams * ; params, . linearalgebra::BaseVector * ; vec, . core::ConstVecId ; src . ). inline . ◆ ~GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::~GetVectorVisitor ; (; ). overridedefault . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetVectorVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetVectorVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ setIndependentOnly(). void sofa::component::odesolver::testing::GetVectorVisitor::setIndependentOnly ; (; bool ; b). inline . If true, proc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:5509,test,testing,5509,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['test'],['testing']
Testability,"(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:3008,log,logging,3008,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['log'],['logging']
Testability,"(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFirstObjectIndices() constsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:9023,log,logging,9023,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logging']
Testability,"(const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const InCoord &a, const InCoord &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:21049,test,testMechanicalState,21049,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['test'],['testMechanicalState']
Testability,"(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swap() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; swapT(T t, int nestedDataSize)sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >inline; write(ofstream &out, int n, int groups, int binary) overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseVTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; ~VTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:10934,log,logErrors,10934,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['log'],['logErrors']
Testability,"(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BackgroundSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::BackgroundSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:10340,log,logErrors,10340,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,1,['log'],['logErrors']
Testability,"(const type::Mat< 3, 3, Real > &A, type::Vec< 3, Real > &w);  ; template<class Real > ; void dsytrd3 (const type::Mat< 3, 3, Real > &A, type::Mat< 3, 3, Real > &Q, type::Vec< 3, Real > &d, type::Vec< 3, Real > &e);  ; template<class Real > ; int dsyevq3 (const type::Mat< 3, 3, Real > &A, type::Mat< 3, 3, Real > &Q, type::Vec< 3, Real > &w);  ; template<class Real > ; void dsyev2 (Real A, Real B, Real C, Real &rt1, Real &rt2, Real &cs, Real &sn);  ; std::vector< std::tuple< std::string, SReal > > SOFA_HELPER_API getClosestMatch (const std::string &needle, const std::vector< std::string > &haystack, const Size numEntries=5, const SReal threshold=0.5_sreal);  Search for the the closest match to the string passed in the ""needle"" argument within the vector of ""haystack"" arguments. More...;  ; SOFA_HELPER_API std::string gettypename (const std::type_info &t);  Decode the type's name to a more readable form if possible. More...;  ; SOFA_HELPER_API std::string & getFactoryLog ();  ; SOFA_HELPER_API void printFactoryLog (std::ostream &out);  Print factory log. More...;  ; template SOFA_HELPER_API void logFactoryRegister< std::string > (const std::string &baseclass, const std::string &classname, std::string key, bool multi);  ; template<class TKey > ; void logFactoryRegister (const std::string &baseclass, const std::string &classname, TKey key, bool multi);  Log classes registered in the factory. More...;  ; template SOFA_HELPER_API void logFactoryRegister (const std::string &baseclass, const std::string &classname, std::string key, bool multi);  ; template<typename Rigid3MassType > ; void generateRigid (Rigid3MassType &mass, type::Vec3 &center, const helper::io::Mesh *mesh);  base function to compute center of mass, mass and inertia tensor from a mesh More...;  ; template<typename Rigid3MassType > ; void generateRigid (Rigid3MassType &mass, type::Vec3 &center, io::Mesh *mesh, SReal density, const type::Vec3 &scale=type::Vec3(1, 1, 1), const type::Vec3 &rotation=type::Vec3(0, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:6571,log,log,6571,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['log'],['log']
Testability,"(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::SphereForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; sphereCentersofa::component::mechanicalload::SphereForceField< DataTypes >; SphereForceField()sofa::component::mechanicalload::SphereForceField< DataTypes >protected; sphereRadiussofa::component::mechanicalload::SphereForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; stiffnesssofa::component::mechanicalload::SphereForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStiffness(const VecCoord &x)sofa::component::mechanicalload::SphereForceField< DataTypes >virtual; VecCoord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:16805,log,logErrors,16805,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['log'],['logErrors']
Testability,"(linearalgebra::BaseMatrix *m) const =0sofa::core::behavior::BaseConstraintCorrectionpure virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *, std::vector< int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMState() constsofa::core::behavior::ConstraintCorrection< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html:7988,log,logging,7988,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,1,['log'],['logging']
Testability,"(linearalgebra::BaseMatrix *m) const =0sofa::core::behavior::BaseConstraintCorrectionpure virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *, std::vector< int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasConstraintNumber(int)sofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html:6345,log,logging,6345,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,1,['log'],['logging']
Testability,"(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ressofa::simulation::mechanicalvisitor::MechanicalResetForceVisitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor-members.html:10478,test,testTags,10478,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor-members.html,1,['test'],['testTags']
Testability,"(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; tsofa::simulation::mechanicalvisitor::MechanicalProjectPositionAndVelocityVisitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; velsofa::simulation::mechanicalvisitor::MechanicalProjectPositionAndVelocityVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor-members.html:10896,test,testTags,10896,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor-members.html,1,['test'],['testTags']
Testability,") constsofa::core::objectmodel::Base; getElementMass(Index index) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getElementMass(Index index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *, const DataVecDeriv &v) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMassCount() constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >inline; getMassDensity()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getMassTopologyType() constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getMomentum(const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:13076,log,logging,13076,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logging']
Testability,") constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:11279,Test,TestPair,11279,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['Test'],['TestPair']
Testability,") constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getUseSurfaceNormals() constsofa::component::collision::detection::intersection::MinProximityIntersection; handleEvent(Event *)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:8295,log,logging,8295,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['log'],['logging']
Testability,") constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html:7433,log,logging,7433,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,2,['log'],['logging']
Testability,") constsofa::simulation::Visitorinlinevirtual; InitVisitor(const core::ExecParams *params)sofa::simulation::InitVisitorinline; isThreadSafe() const overridesofa::simulation::InitVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::InitVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::InitVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootNodesofa::simulation::InitVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html:3984,test,testTags,3984,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html,1,['test'],['testTags']
Testability,")(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() constsofa::simulation::Visitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html:3733,test,testTags,3733,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html,1,['test'],['testTags']
Testability,"), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; GetAssembledSizeVisitor(const sofa::core::ExecParams *params=sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance()))sofa::component::odesolver::testing::GetAssembledSizeVisitorinline; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::component::odesolver::testing::GetAssembledSizeVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; independentOnlysofa::component::odesolver::testing::GetAssembledSizeVisitorprotected; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; positionSize() constsofa::component::odesolver::testing::GetAssembledSizeVisitorinline; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *gnode) overridesofa::component::odesolver::testing::GetAssembledSizeVisitorinlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html:2572,test,testing,2572,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html,1,['test'],['testing']
Testability,");  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:6895,test,testValidity,6895,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testValidity']
Testability,");  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TriangleSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles);  Effectively Add some triangles. Test precondition and apply: More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; virtual void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of triangles. Eventually remove isolated edges and vertices. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:18208,Test,Test,18208,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['Test'],['Test']
Testability,");  ; template<typename DataTypes > ; CylinderTractionStruct< DataTypes > createCylinderTractionScene (int resolutionCircumferential, int resolutionRadial, int resolutionHeight, int maxIter);  ;  TYPED_TEST_SUITE (LinearElasticity_test, DataTypes);  ;  TYPED_TEST (LinearElasticity_test, testTractionTensorMass);  ;  TYPED_TEST (LinearElasticity_test, testTractionCorotational);  ; template<class DataTypes > ; PatchTestStruct< DataTypes > createRegularGridScene (simulation::Node::SPtr root, typename DataTypes::Coord startPoint, typename DataTypes::Coord endPoint, int numX, int numY, int numZ, sofa::type::Vec< 6, SReal > entireBoxRoi, sofa::type::Vec< 6, SReal > inclusiveBox, sofa::type::Vec< 6, SReal > includedBox);  Create a scene with a regular grid and an affine constraint for patch test. More...;  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initSofaConfig ();  ;  TEST_F (TemplateAliasTest, Register);  ;  TEST_F (AdvancedTimerTest, IsEnabled);  ;  TEST_F (AdvancedTimerTest, SetOutputType);  ;  TEST_F (AdvancedTimerTest, End);  ; template<class mat > ; helper::OwnershipSPtr< mat > convertSPtr (const linearalgebra::BaseMatrix *m);  ;  TEST_F (DefaultAnimationLoop_test, testOneStep);  . Variables; const double pressureArray [] = {0.6, 0.2, -0.2, -0.6};  ; const size_t sizePressureArray = sizeof(pressureArray)/sizeof(pressureArray[0]);  ; const double youngModulusArray [] = {1.0,2.0};  ; const size_t sizeYoungModulusArray = sizeof(youngModulusArray)/sizeof(youngModulusArray[0]);  ; const double poissonRatioArray [] = {0.0,0.3,0.49};  ; const size_t sizePoissonRatioArray = sizeof(poissonRatioArray)/sizeof(poissonRatioArray[0]);  . Typedef Documentation. ◆ Coord_t. template<typename DataTypes > . using sofa::Coord_t = typedef typename DataTypes::Coord. ◆ DataMatrixDeriv_t. template<typename DataTypes > . using sofa::DataMatrixDeriv_t = typedef core::objectmodel::Data<MatrixDeriv_t<DataTypes> >. ◆ DataTypes. typedef Types< Vec3Types > sofa::DataTypes. ◆ DataVecCoord_t. template<typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html:4097,test,testOneStep,4097,api/master/sofa/html/namespacesofa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html,1,['test'],['testOneStep']
Testability,");  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8194,test,test,8194,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['test']
Testability,")=0sofa::core::behavior::ForceField< TDataTypes >pure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< TDataTypes >virtual; addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0sofa::core::behavior::ForceField< TDataTypes >pure virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< TDataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< TDataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< TDataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:2622,log,logging,2622,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logging']
Testability,")=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4910,test,testIntersection,4910,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,")sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_springssofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; datasofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:5038,log,logging,5038,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['log'],['logging']
Testability,")sofa::core::behavior::LinearSolver; sofa::core::behavior::BaseLinearSolver::SOFA_ABSTRACT_CLASS(BaseLinearSolver, objectmodel::BaseObject)sofa::core::behavior::BaseLinearSolver; SOFA_CLASS(SOFA_TEMPLATE2(BaseMatrixLinearSolver, Matrix, Vector), sofa::core::behavior::LinearSolver)sofa::component::linearsolver::BaseMatrixLinearSolver< Matrix, Vector >; sofa::core::behavior::LinearSolver::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(Matrix &M, Vector &solution, Vector &rh) override=0sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >pure virtual; solveSystem() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; supportNonSymmetricSystem() constsofa::core::behavior::LinearSolverinlinevirtual; ThreadManager typedefsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateSystemMatrix()sofa::core::behavior::LinearSolverinlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeFile(std::ostream &)sofa::core::behavior::LinearSolverinlinevirtual; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~LinearSolver() overridesofa::core::behavior::LinearSolverprotected; ~MatrixLinearSolver() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:18721,log,logErrors,18721,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logErrors']
Testability,")sofa::core::collision::Contact; SOFA_CLASS(SOFA_TEMPLATE3(FrictionContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact)sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; sofa::core::collision::Contact::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tolsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; TOutputVector typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TVec1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; TVec2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected; ~ContactIdentifier()=defaultsofa::component::collision::response::contact::ContactIdentifiervirtual; ~FrictionContact() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:16216,log,logErrors,16216,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['log'],['logErrors']
Testability,")sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:9993,log,logErrors,9993,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,1,['log'],['logErrors']
Testability,")sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GroupFilterYoungModulus, DataTypes), core::DataEngine)sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GroupFilterYoungModulus() overridesofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html:13036,log,logErrors,13036,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,1,['log'],['logErrors']
Testability,")sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(OdeSolver, objectmodel::BaseObject)sofa::core::behavior::OdeSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(NewmarkImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor)sofa::component::odesolver::backward::NewmarkImplicitSolver; solve(const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) overridesofa::component::odesolver::backward::NewmarkImplicitSolvervirtual; sofa::core::behavior::OdeSolver::solve(const core::ExecParams *params, SReal dt)sofa::core::behavior::OdeSolverinlinevirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OdeSolver() overridesofa::core::behavior::OdeSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:11985,log,logErrors,11985,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['log'],['logErrors']
Testability,")sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; computeOrientedBoxes()sofa::component::engine::select::boxroi::BoxROI< DataTypes >protected; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alignedBoxessofa::component::engine::select::boxroi::BoxROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engine::select::BaseROI< DataTypes >; d_doUpdatesofa::component::engine::select::BaseROI< DataTypes >; d_drawEdgessofa::component::engine::select::BaseROI< DataTypes >; d_drawHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_drawPointssofa::component::engine::se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:3232,log,logging,3232,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['log'],['logging']
Testability,")sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection()=0sofa::core::collision::Pipelinepure virtual; computeCollisionReset()=0sofa::core::collision::Pipelinepure virtual; computeCollisionResponse()=0sofa::core::collision::Pipelinepure virtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collision::Pipelineprotectedpure virtual; doCollisionReset()=0sofa::core::collision::Pipelineprotectedpure virtual; doCollisionResponse()=0sofa::core::collision::Pipelineprotectedpure virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:2621,log,logging,2621,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,1,['log'],['logging']
Testability,")sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::NaturalOrderingMethodvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html:2462,log,logging,2462,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,1,['log'],['logging']
Testability,")sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt)=0sofa::core::behavior::BaseAnimationLooppure virtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html:10195,log,logErrors,10195,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,1,['log'],['logErrors']
Testability,")sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *) overridesofa::component::visual::VisualStylevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displayFlagssofa::component::visual::VisualStyle; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DisplayFlags typedefsofa::component::visual::VisualStyle; displayFlagssofa::component::visual::VisualStyle; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:2765,log,logging,2765,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['log'],['logging']
Testability,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1156,test,testing,1156,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,12,['test'],['testing']
Testability,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1347,test,testing,1347,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,11,['test'],['testing']
Testability,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:1966,test,testing,1966,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,10,['test'],['testing']
Testability,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1397,test,testing,1397,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,11,['test'],['testing']
Testability,"* > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html:2224,log,logging,2224,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,6,['log'],['logging']
Testability,"*)sofa::core::objectmodel::BaseObjectinlinestatic; centerssofa::component::engine::select::SubsetTopology< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::engine::select::SubsetTopology< DataTypes >virtual; Coord typedefsofa::component::engine::select::SubsetTopology< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::SubsetTopology< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_tetrahedraInputsofa::component::engine::select::SubsetTopology< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; directionsofa::component::engine::select::SubsetTopology< DataTypes >; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html:3497,log,logging,3497,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,1,['log'],['logging']
Testability,"*)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkInput()sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_curveEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_curveVerticessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_directionsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedQuadssofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedVerticessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSectionssofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_thicknesssofa::component::engine::genera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html:3111,log,logging,3111,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,1,['log'],['logging']
Testability,"*, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; Edges",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:4028,log,logging,4028,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['log'],['logging']
Testability,"*, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyVelocitiessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; DataVecCoord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3681,log,logging,3681,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['log'],['logging']
Testability,"*attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~GeometryAlgorithms() overridesofa::core::topology::GeometryAlgorithmsinlineprotected; ~PointSetGeometryAlgorithms() overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html:14593,log,logErrors,14593,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,1,['log'],['logErrors']
Testability,"*before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::core::behavior::Constraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::Constraint< DataTypes >; DataVecCoord typedefsofa::core::behavior::Constraint< DataTypes >; DataVecDeriv typedefsofa::core::behavior::Constraint< DataTypes >; Deriv typedefsofa::core::behavior::Constraint< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::Constraint< DataTypes >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:3278,log,logging,3278,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logging']
Testability,"* ; contacts, . const SReal ; alarmDist, . const SReal ; contactDist . ). inlineprotected . ◆ findIntersector(). ElementIntersector * sofa::component::collision::detection::intersection::DiscreteIntersection::findIntersector ; (; core::CollisionModel * ; object1, . core::CollisionModel * ; object2, . bool & ; swapModels . ). overridevirtual . Return the intersector class handling the given pair of collision models, or nullptr if not supported. ; Return the intersector class handling the given pair of collision models, or nullptr if not supported. Parameters. swapModeloutput value set to true if the collision models must be swapped before calling the intersector. . Implements sofa::core::collision::Intersection. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_CLASS ; (; DiscreteIntersection ; , . sofa::core::collision::Intersection ;  . ). ◆ testIntersection() [1/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:23623,test,testIntersection,23623,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"* ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generate",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3920,test,testIntersection,3920,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,", . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; , . collision::geometry::Cube & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [4/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [6/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:33414,test,testIntersection,33414,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,", . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24416,test,testIntersection,24416,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,", 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2557,Test,Tested,2557,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['Test'],['Tested']
Testability,", BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAcceleration(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc, core::ConstMultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_symplecticsofa::component::odesolver::forward::EulerExplicitSolver; d_threadSafeVisitorsofa::component::odesolver::forward::EulerExplicitSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; EulerExplicitSolver()sofa::component::odesolver::forward::EulerExplicitSolverprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html:2960,log,logging,2960,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,1,['log'],['logging']
Testability,", BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; update()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecElementMass typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:32656,log,logErrors,32656,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,1,['log'],['logErrors']
Testability,", BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; update()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; VecElementMass typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecSlaves typedefsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:39389,log,logErrors,39389,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,1,['log'],['logErrors']
Testability,", BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; update()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; VecElementMass typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; VecSlaves typedefsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html:35143,log,logErrors,35143,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,1,['log'],['logErrors']
Testability,", BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(DistanceMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html:19314,test,testMechanicalState,19314,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,1,['test'],['testMechanicalState']
Testability,", BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::ContactManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createContacts(const DetectionOutputMap &outputs)=0sofa::core::collision::ContactManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:2485,log,logging,2485,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['log'],['logging']
Testability,", BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html:3708,log,logging,3708,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,1,['log'],['logging']
Testability,", BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:2527,log,logging,2527,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['log'],['logging']
Testability,", DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(SOFA_TEMPLATE(ShapeMatching, DataTypes), core::DataEngine)sofa::component::engine::analyze::ShapeMatching< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; targetPositionsofa::component::engine::analyze::ShapeMatching< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VD typedefsofa::component::engine::analyze::ShapeMatching< DataTypes >; VecCoord typedefsofa::component::engine::analyze::ShapeMatching< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VI typedefsofa::component::engine::analyze::ShapeMatching< DataTypes >; VVI typedefsofa::component::engine::analyze::ShapeMatching< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ShapeMatching() overridesofa::component::engine::analyze::ShapeMatching< DataTypes >inline; ~SingleSta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html:14981,log,logErrors,14981,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,1,['log'],['logErrors']
Testability,", LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ressofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitorinlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; Wsofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor-members.html:10744,test,testTags,10744,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor-members.html,1,['test'],['testTags']
Testability,", ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createResponse(core::objectmodel::BaseContext *group) overridesofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionMode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html:3618,log,logging,3618,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,1,['log'],['logging']
Testability,", SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SparseMatrix typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateJacobian()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >protected; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~LineProjectiveConstraint()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:18459,log,logErrors,18459,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['log'],['logErrors']
Testability,", TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:242014,test,testing,242014,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,", bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; logTimesofa::component::setting::StatsSetting; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFiel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:7312,log,logTimesofa,7312,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,1,['log'],['logTimesofa']
Testability,", class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetVectorVisitor::independentOnly {false}. protected . ◆ offset. unsigned sofa::component::odesolver::testing::GetVectorVisitor::offset {0}. protected . ◆ src. core::ConstVecId sofa::component::odesolver::testing::GetVectorVisitor::src. protected . ◆ vec. linearalgebra::BaseVector* sofa::component::odesolver::testing::GetVectorVisitor::vec. protected . Constructor details. ◆ GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::GetVectorVisitor ; (; const sofa::core::ExecParams * ; params, . linearalgebra::BaseVector * ; vec, . core::ConstVecId ; src . ). inline . ◆ ~GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::~GetVectorVisitor ; (; ). overridedefault . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetVectorVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetVectorVisitor::processNodeTopDow",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:5185,test,testing,5185,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['test'],['testing']
Testability,", double poissonRatio)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMechanicalMatricesByCondensation(ElementStiffness &K, ElementMass &M, Real &totalMass, const int elementIndex)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeParticleMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; computeRotationLarge(Transformation &r, Coord &edgex, Coord &edgey)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeRotationPolar(Transformation &r, type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createHexahedronInformation(Index, HexahedronInformation &t, const core::topology::BaseMeshTopology::Hexahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_densitysofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementTotalMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_hexahedronInfosofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_lumpedMassessofa::component::solidmechanics::fem::elastic::Hex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:11457,log,logging,11457,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(SOFA_TEMPLATE3(BarycentricStickContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact)sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; sofa::core::collision::Contact::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TOutputVector typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~BarycentricStickContact() overridesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:15730,log,logErrors,15730,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,1,['log'],['logErrors']
Testability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeSurface< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeSurface() overridesofa::component::engine::generate::ExtrudeSurface< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:13086,log,logErrors,13086,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['log'],['logErrors']
Testability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(RayTraceNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::RayTraceNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html:12569,log,logErrors,12569,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,1,['log'],['logErrors']
Testability,", objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_anisotropySetsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_materialNamesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parameterSetsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_stiffnessMatrixRegularizationWeightsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html:5373,log,logging,5373,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,", or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3705,test,testing,3705,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['test'],['testing']
Testability,", std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeDerivateHermiteCoefs(const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; computeHermiteCoefs(const Real u, Real &H00, Real &H10, Real &H01, Real &H11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dx0sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_dx1sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_sx0sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_sx1sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_tBeginsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_tEndsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; d_x0sofa::component::constraint::projective::HermiteSplineProj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:3781,log,logging,3781,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['log'],['logging']
Testability,", std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::RayCollisionModel; defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; directionsofa::component::collision::geometry::RayCollisionModelprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::RayCollisionModelvirtual; draw(const core::visual::VisualParams *vparams) overridesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:3671,log,logging,3671,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,1,['log'],['logging']
Testability,-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSy,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:382728,log,logger,382728,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logger']
Testability,". ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1626,test,test,1626,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['test'],['test']
Testability,". Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:5068,Test,Test,5068,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,1,['Test'],['Test']
Testability,". More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyChecker, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool checkTopology ();  ; bool checkEdgeTopology ();  ; bool checkEdgeContainer ();  Method to test Edge container concistency. More...;  ; bool checkEdgeToVertexCrossContainer ();  Method to test Edge to vertex cross container concistency. More...;  ; bool checkTriangleTopology ();  } More...;  ; bool checkTriangleContainer ();  Method to test Triangle container concistency. More...;  ; bool checkTriangleToEdgeCrossContainer ();  Method to test triangles to edges cross container concistency. More...;  ; bool checkTriangleToVertexCrossContainer ();  Method to test triangles to vertices cross container concistency. More...;  ; bool checkQuadTopology ();  } More...;  ; bool checkQuadContainer ();  Method to test quad container concistency. More...;  ; bool checkQuadToEdgeCrossContainer ();  Method to test quads to edges cross container concistency. More...;  ; bool checkQuadToVertexCrossContainer ();  Method to test quads to vertices cross container concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:4271,test,test,4271,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,". More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html:1614,test,testTags,1614,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,2,['test'],['testTags']
Testability,". Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIntersector. ◆ canIntersect() [1/2]. template<class Elem1 , class Elem2 , class T > . bool sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). virtualdelete . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Reimplemented from sofa::core::collision::ElementIntersector. ◆ canIntersect() [2/2]. template<class Elem1 , class Elem2 , class T > . bool sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). inlineoverridevirtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implements sofa::core::collision::ElementIntersector. ◆ endIntersect(). template<class Elem1 , class Elem2 , class T > . int sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::endIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector * ; contacts . ). inlineoverridevirtual . End intersection tests between two collision models. Return the number of contacts written in the contacts vector. ; Implements sofa::core::collision::ElementIntersector. ◆ intersect() [1/2]. template<class Elem1 , class Elem2 , class T > . int sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::intersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . DetectionOutputVector * ; contacts . ). virtualdelete . Compute the intersection between 2 elements. ; Reimplemented from sofa::core::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html:3852,Test,Test,3852,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,1,['Test'],['Test']
Testability,". bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17431,test,testIntersection,17431,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,". const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [4/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [6/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:33988,test,testIntersection,33988,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,". inline . Constructor. In most cases it will be used by the CollisionModel to create interators to its elements (such as in the begin() and end() methods). . ◆ TCollisionElementIterator() [2/3]. template<class TModel > . sofa::core::TCollisionElementIterator< TModel >::TCollisionElementIterator ; (; Model * ; model, . Index ; index, . VIterator ; it, . VIterator ; itend . ). inline . Constructor. This constructor should be used in case a vector of indices is used. . ◆ TCollisionElementIterator() [3/3]. template<class TModel > . sofa::core::TCollisionElementIterator< TModel >::TCollisionElementIterator ; (; Model * ; model, . VIterator ; it, . VIterator ; itend . ). inline . Constructor. This constructor should be used in case a vector of indices is used. . Function details. ◆ canCollideWith(). template<class TModel > . bool sofa::core::TCollisionElementIterator< TModel >::canCollideWith ; (; const TCollisionElementIterator< Model > & ; elem); const. inline . Test if this element can collide with another element.; See alsoCollisionModel::canCollideWithElement . ◆ draw(). template<class TModel > . void sofa::core::TCollisionElementIterator< TModel >::draw ; (; const core::visual::VisualParams * ; vparams). inline . Render this element.; See alsoCollisionModel::draw . ◆ getCollisionModel(). template<class TModel > . Model* sofa::core::TCollisionElementIterator< TModel >::getCollisionModel ; (; ); const. inline . Return the CollisionModel containing the referenced element. . ◆ getContactFriction(). template<class TModel > . SReal sofa::core::TCollisionElementIterator< TModel >::getContactFriction ; (; ); const. inline . Contact friction (damping) coefficient. . ◆ getContactStiffness(). template<class TModel > . SReal sofa::core::TCollisionElementIterator< TModel >::getContactStiffness ; (; ); const. inline . Contact stiffness. . ◆ getExternalChildren(). template<class Model > . std::pair< CollisionElementIterator, CollisionElementIterator > sofa::core::TCollisionElement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html:5628,Test,Test,5628,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,1,['Test'],['Test']
Testability,". should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ; ClassCount . ◆ Type. enum sofa::helper::logging::Message::Type. possible levels ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3644,log,logging,3644,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['log'],['logging']
Testability,". template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::mstate. protected . ◆ needsUpdate. template<class TDataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::needsUpdate. protected . ◆ topology. template<class TDataTypes > . Topology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::topology. protected . Constructor details. ◆ LineCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::LineCollisionModel< DataTypes >::LineCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<cla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:24677,test,tests,24677,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['test'],['tests']
Testability,". template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFiel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6511,test,test,6511,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['test'],['test']
Testability,"...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3618,test,testing,3618,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['test'],['testing']
Testability,"..;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene3DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 3D regular grid and an affin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:5082,test,testedTranslation,5082,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,1,['test'],['testedTranslation']
Testability,".;  ; virtual BaseNode * getFirstParent () const =0;  return the first parent (returns nullptr if no parent) More...;  ; virtual BaseNode * getRoot () const;  returns the root by following up the first parent for multinodes More...;  ; virtual void addChild (BaseNode::SPtr node)=0;  Add a child node. More...;  ; virtual void removeChild (BaseNode::SPtr node)=0;  Remove a child node. More...;  ; virtual void moveChild (BaseNode::SPtr node, BaseNode::SPtr prev_parent)=0;  Move a node from another node. More...;  ; virtual void moveChild (BaseNode::SPtr node)=0;  Move a node in this & remove it from its parents. More...;  ; virtual bool addObject (BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0;  Add a generic object. More...;  ; virtual bool removeObject (BaseObject::SPtr obj)=0;  Remove a generic object. More...;  ; virtual void moveObject (BaseObject::SPtr obj)=0;  Move an object from a node to another node. More...;  ; virtual bool hasParent (const BaseNode *node) const =0;  Test if the given node is a parent of this node. More...;  ; virtual bool hasAncestor (const BaseNode *node) const =0;  ; virtual void detachFromGraph ()=0;  ; virtual BaseContext * getContext ()=0;  Get this node context. More...;  ; virtual const BaseContext * getContext () const =0;  Get this node context. More...;  ; virtual std::string getPathName () const override;  Return the full path name of this node. More...;  ; virtual std::string getRootPath () const;  Return the path from this node to the root node. More...;  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override=0;  . Solvers and main algorithms; virtual core::behavior::BaseAnimationLoop * getAnimationLoop () const;  ; virtual core::behavior::OdeSolver * getOdeSolver () const;  ; virtual core::collision::Pipeline * getCollisionPipeline () const;  ; virtual core::visual::VisualLoop * getVisualLoop () const;  . Additional Inherited Members;  Public Attributes i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:9406,Test,Test,9406,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['Test'],['Test']
Testability,"/3]. template<typename FReal , unsigned int FN> . std::ostream& sofa::helper::operator<< ; (; std::ostream & ; out, . const Monomial_LD< FReal, FN > & ; m_monomial . ). inline . ◆ operator<<() [3/3]. template<typename FReal , unsigned int FN> . std::ostream& sofa::helper::operator<< ; (; std::ostream & ; stream, . const Polynomial_LD< FReal, FN > & ; m_polynomial . ). inline . ◆ operator>>() [1/3]. template<typename FReal , unsigned int FN> . std::istream& sofa::helper::operator>> ; (; std::istream & ; in, . Monomial_LD< FReal, FN > & ; m_monomial . ). inline . ◆ operator>>() [2/3]. std::istream& sofa::helper::operator>> ; (; std::istream & ; in, . OptionsGroup & ; m_trick . ). inline . ◆ operator>>() [3/3]. template<typename FReal , unsigned int FN> . std::istream& sofa::helper::operator>> ; (; std::istream & ; stream, . Polynomial_LD< FReal, FN > & ; m_polynomial . ). inline . ◆ printFactoryLog(). SOFA_HELPER_API void sofa::helper::printFactoryLog ; (; std::ostream & ; out). Print factory log. . ◆ printLCP() [1/2]. SOFA_HELPER_API void sofa::helper::printLCP ; (; SReal * ; q, . SReal ** ; M, . int ; dim . ). ◆ printLCP() [2/2]. SOFA_HELPER_API void sofa::helper::printLCP ; (; SReal * ; q, . SReal ** ; M, . SReal * ; f, . int ; dim . ). ◆ printLibraryNotCleanedUpWarning(). SOFA_HELPER_API void sofa::helper::printLibraryNotCleanedUpWarning ; (; const std::string & ; library, . const std::string & ; cleanupFunction . ). Print a warning about a library not being cleaned up (meant for internal use). . ◆ printNoVal(). void sofa::helper::printNoVal ; (; std::ostream & ; out). ◆ printSyst(). SOFA_HELPER_API void sofa::helper::printSyst ; (; SReal * ; q, . SReal ** ; M, . int * ; base, . SReal ** ; mat, . int ; dim . ). ◆ printTime(). void sofa::helper::printTime ; (; std::ostream & ; out, . ctime_t ; t, . int ; niter = 1 . ). ◆ printUninitializedLibraryWarning(). SOFA_HELPER_API void sofa::helper::printUninitializedLibraryWarning ; (; const std::string & ; library, . const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:35533,log,log,35533,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['log'],['log']
Testability,"/import-urdf-models; ; SOFA - Topic: Import urdf models. /imposing-velocity-and-position; ; SOFA - Topic: Imposing velocity and position. /incise-without-mouse; ; SOFA - Topic: [SOLVED] Incise without mouse. /indices-of-roi-in-python-scene; ; SOFA - Topic: [SOLVED] indices of ROI in python scene. /informations-about-the-calculated-actuation-forces; ; SOFA - Topic: Informations about the calculated actuation forces. /init-and-cleanup-methods-in-simulation-tree; ; SOFA - Topic: [SOLVED] init and cleanup methods in simulation tree. /initialize-and-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /insta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:334176,test,test,334176,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['test']
Testability,"1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; virtual int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useProximity () const;  returns true if algorithm uses proximity detection More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:3857,test,testIntersection,3857,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,2,['test'],['testIntersection']
Testability,"1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() constsofa::core::collision::Intersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:14984,test,testIntersection,14984,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersection']
Testability,"10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:321265,test,test,321265,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],['test']
Testability,"18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geome",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17148,test,testIntersection,17148,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"2/4]. int sofa::component::collision::detection::intersection::MeshDiscreteIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::MeshDiscreteIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::MeshDiscreteIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Triangle & ; triangle, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MeshDiscreteIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MeshDiscreteIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::MeshDiscreteIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::MeshDiscreteIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Triangle & ; triangle, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshDiscret",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html:4002,test,testIntersection,4002,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html,1,['test'],['testIntersection']
Testability,": Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, fals",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:241136,Test,TestSparseMatrixProduct,241136,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Test'],['TestSparseMatrixProduct']
Testability,: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::thread::AlignPow2< N > Struct Template Reference; SOFA API: sofa::helper::system::thread::AlignPo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:236593,log,logging,236593,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,": sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163723,Log,LogMessage,163723,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Log'],['LogMessage']
Testability,": sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163925,log,loggingmessagehandler,163925,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['loggingmessagehandler']
Testability,: sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::AttributeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Ref,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:194201,test,testing,194201,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:2865,log,logging,2865,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,1,['log'],['logging']
Testability,"::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:2970,log,logging,2970,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['log'],['logging']
Testability,"::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:2970,log,logging,2970,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['log'],['logging']
Testability,"::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_hexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_indicessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputEdgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputHexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputPositionsofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputQuadssofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTetrahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTrianglessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemuta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:2970,log,logging,2970,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['log'],['logging']
Testability,"::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel1 typedefsofa::component::collision::response::contact::RayContact< CM2 >; CollisionModel2 typedefsofa::component::collision::response::contact::RayContact< CM2 >; collisionssofa::component::collision::response::contact::BaseRayContactprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *) overridesofa::component::collision::response::contact::BaseRayContactinlinevirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:2613,log,logging,2613,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['log'],['logging']
Testability,"::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementMass(sofa::Index index) const overridesofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; getElementMass(sofa::Index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *mparams, const DataVecDeriv &v) const overridesofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMassCount()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >inline; getMassDensity() constsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >inline; getMassDensity()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; getMassTopologyType() constsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; getMomentum(const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) constsofa::component::mass::DiagonalMass< DataTypes, Geometrical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:12830,log,logging,12830,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['log'],['logging']
Testability,"::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LightManager, core::visual::VisualManager)sofa::gl::component::shader::LightManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~LightManager() overridesofa::gl::component::shader::LightManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:12514,log,logErrors,12514,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['log'],['logErrors']
Testability,"::BaseElementvirtual; getClass() const overridesofa::simulation::xml::DataElementvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getIncludeNodeType() constsofa::simulation::xml::BaseElementinline; getName() overridesofa::simulation::xml::BaseElementinlinevirtual; getObject() overridesofa::simulation::xml::Element< core::objectmodel::BaseObject >virtual; getParent() const overridesofa::simulation::xml::BaseElementinlinevirtual; getParentElement() constsofa::simulation::xml::BaseElementinline; getSrcFile() constsofa::simulation::xml::BaseElement; getSrcLine() constsofa::simulation::xml::BaseElement; getType()sofa::simulation::xml::BaseElementinline; getTypedObject()sofa::simulation::xml::Element< core::objectmodel::BaseObject >; init()sofa::simulation::xml::BaseElementvirtual; initNode() overridesofa::simulation::xml::DataElementvirtual; isFileRoot()sofa::simulation::xml::BaseElement; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; NodeFactory typedefsofa::simulation::xml::BaseElement; presenceAttribute(const std::string &s)sofa::simulation::xml::BaseElementvirtual; pushNamedObjects(Map &result)sofa::simulation::xml::BaseElementinline; pushObjects(Sequence &result)sofa::simulation::xml::BaseElementinline; removeAttribute(const std::string &attr) overridesofa::simulation::xml::BaseElementvirtual; removeChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; replaceAttributesofa::simulation::xml::BaseElementprotected; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setBaseFile(const std::string &newBaseFile)sofa::simulation::xml::BaseElementvirtual; setIncludeNodeType(IncludeNodeType t)sofa::simulation::xml::BaseElementinline; setName(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html:3608,log,logError,3608,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html,1,['log'],['logError']
Testability,"::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype >inlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vsofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype >; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor-members.html:11165,test,testTags,11165,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor-members.html,1,['test'],['testTags']
Testability,"::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(SquareDistanceMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; SquareDistanceMapping()sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:18804,test,testMechanicalState,18804,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['test'],['testMechanicalState']
Testability,"::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)))sofa::gl::component::shader::OglUInt2Attribute; OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:16125,log,logErrors,16125,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,1,['log'],['logErrors']
Testability,"::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)))sofa::gl::component::shader::OglUInt3Attribute; OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:16125,log,logErrors,16125,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,1,['log'],['logErrors']
Testability,"::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)))sofa::gl::component::shader::OglUInt4Attribute; OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:16125,log,logErrors,16125,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,1,['log'],['logErrors']
Testability,"::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementMass(sofa::Index index) const =0sofa::core::behavior::BaseMasspure virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const =0sofa::core::behavior::BaseMasspure virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:5412,log,logging,5412,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,1,['log'],['logging']
Testability,"::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(CenterPointTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::CenterPointTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::CenterPointTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CenterPointTopologicalMapping() overridesofa::component::topology::mapping::CenterPointTopologicalMappinginlineprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:12453,log,logErrors,12453,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataTypes typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::PairIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:3451,log,logging,3451,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['log'],['logging']
Testability,"::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataMatrixDeriv2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataTypes1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataVecCoord2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:3405,log,logging,3405,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['log'],['logging']
Testability,"::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showArrowSizesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_springssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_springsIndi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:6430,log,logging,6430,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['log'],['logging']
Testability,"::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_hexahedronsofa::component::engine::generate::GenerateGrid< DataTypes >; d_maxCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_outputXsofa::component::engine::generate::GenerateGrid< DataTypes >; d_quadsofa::component::engine::generate::GenerateGrid< DataTypes >; d_resolutionsofa::component::engine::generate::GenerateGrid< DataTypes >; d_tetrahedronsofa::component::engine::generate::GenerateGrid< DataTypes >; d_trianglesofa::component::engine::generate::GenerateGrid< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:3006,log,logging,3006,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,1,['log'],['logging']
Testability,"::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawConstrainedPointssofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_endConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_meshIndicessofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_quaternionsofa::component::constraint::pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:3809,log,logging,3809,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['log'],['logging']
Testability,"::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_relativeMovementssofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_showMovementsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; datasofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:3734,log,logging,3734,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['log'],['logging']
Testability,::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEndTime()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >inline; getGroup() constsofa::core::behavior::BaseProjectiveConstraintSetinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getModels() overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objec,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:7709,log,logging,7709,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['log'],['logging']
Testability,"::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFinalPositions(VecCoord &finalPos, DataVecCoord &xData)sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; getGroup() constsofa::core::behavior::BaseProjectiveConstraintSetinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getModels() overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:7992,log,logging,7992,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['log'],['logging']
Testability,"::Cube &, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:19243,test,testIntersection,19243,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"::DeleteVisitor:. [legend]. Public Member Functions;  DeleteVisitor (const core::ExecParams *params);  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html:1288,test,testTags,1288,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,1,['test'],['testTags']
Testability,"::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool checkTopology ();  ; bool checkEdgeTopology ();  ; bool checkEdgeContainer ();  Method to test Edge container concistency. More...;  ; bool checkEdgeToVertexCrossContainer ();  Method to test Edge to vertex cross container concistency. More...;  ; bool checkTriangleTopology ();  } More...;  ; bool checkTriangleContainer ();  Method to test Triangle container concistency. More...;  ; bool checkTriangleToEdgeCrossContainer ();  Method to test triangles to edges cross container concistency. More...;  ; bool checkTriangleToVertexCrossContainer ();  Method to test triangles to vertices cross container concistency. More...;  ; bool checkQuadTopology ();  } More...;  ; bool checkQuadContainer ();  Method to test quad container concistency. More...;  ; bool checkQuadToEdgeCrossContainer ();  Method to test quads to edges cross container concistency. More...;  ; bool checkQuadToVertexCrossContainer ();  Method to test quads to vertices cross container concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Method to test Tetrahedron to vertices cross container concistency. More...;  ; bool checkHexahedronTopology ();  } More...;  ; bool checkHexahedronContainer ();  Method to test Hexahedron container concistency. More...;  ; bool checkHexahedronToQuadCrossContainer ();  Method to test Hexahedron to quads cross container concistency. More...;  ; bool checkHexahedronTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:4739,test,test,4739,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; finalCollisionPairs(const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:3937,Test,TestPair,3937,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['Test'],['TestPair']
Testability,"::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16575,test,testIntersectionSphere,16575,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersectionSphere']
Testability,"::LinearSolverConstraintCorrection< TDataTypes >virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *, std::vector< int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMState() constsofa::core::behavior::ConstraintCorrection< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:9384,log,logging,9384,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['log'],['logging']
Testability,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:305,test,testing,305,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,5,['test'],['testing']
Testability,"::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeSecondDerivativeArea(const sofa::type::fixed_array< sofa::type::Vec3, 3 > &triangleVertices)sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) overridesofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >protectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:5836,log,logging,5836,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['log'],['logging']
Testability,"::MixedInteractionForceField< TDataTypes1, TDataTypes2 >pure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >virtual; addForce(const MechanicalParams *mparams, DataVecDeriv1 &f1, DataVecDeriv2 &f2, const DataVecCoord1 &x1, const DataVecCoord2 &x2, const DataVecDeriv1 &v1, const DataVecDeriv2 &v2)=0sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >pure virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:2295,log,logging,2295,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['log'],['logging']
Testability,"::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(RotationMatrixSystem, TMatrix, TVector), SOFA_TEMPLATE2(linearsystem::TypedMatrixLinearSystem, TMatrix, TVector))sofa::component::linearsolver::preconditioner::RotationMatrixSystem< TMatrix, TVector >; sofa::component::linearsystem::TypedMatrixLinearSystem::SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html:15139,log,logErrors,15139,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,1,['log'],['logErrors']
Testability,"::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [3/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [4/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [5/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [6/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [7/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::inters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:25411,test,testIntersection,25411,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html:1835,test,testTags,1835,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,1,['test'],['testTags']
Testability,"::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualInitVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm) overridesofa::simulation::VisualInitVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualInitVisitor(core::visual::VisualParams *params)sofa::simulation::VisualInitVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html:4065,test,testTags,4065,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html,1,['test'],['testTags']
Testability,"::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTetrahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTriangleArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundEdgeArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createOrientedQuadsAr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html:4196,log,logging,4196,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,3,['log'],['logging']
Testability,"::Sphere &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection) override;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *, const core::collision::Intersection *currentIntersection) override;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection) override;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:4933,test,testIntersection,4933,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36265,test,testIntersection,36265,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  SOFA_CLASS (SOFA_TEMPLATE(TriangleCollisionModel, sofa::defaulttype::Vec3Types), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const core::behavior::MechanicalState< DataTypes > * getMechanicalState () const;  ; const VecCoord & getX () const;  ; const sofa::core::topology::BaseMeshTopology::SeqTriangles & getTriangles () const;  ; const VecDeriv & getNormals () const;  ; int getTriangleFlags (sofa::core::topology::BaseMeshTopology::TriangleID i);  ; Deriv velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:4031,Test,Test,4031,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,2,['Test'],['Test']
Testability,"::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::simulation::CleanupVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(Node *node) overridesofa::simulation::CleanupVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(Node *node) overridesofa::simulation::CleanupVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor-members.html:3907,test,testTags,3907,api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor-members.html,1,['test'],['testTags']
Testability,"::behavior::Mass< DataTypes >; ForceField< DataTypes >::SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; WDataRefVecDeriv typedefsofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:30449,log,logErrors,30449,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logErrors']
Testability,"::behavior::Mass< DataTypes >; ForceField< DataTypes >::SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useMBKsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; Vec3i typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; VecCoord typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecReal typedefsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:32573,log,logErrors,32573,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logErrors']
Testability,"::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(StandardTetrahedralFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StandardTetrahedralFEMForceField()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testDerivatives()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronInfosofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronRestInfoVector typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecElement typedefsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html:19438,test,testDerivatives,19438,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,1,['test'],['testDerivatives']
Testability,"::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:35891,test,testIntersection,35891,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,::collision::response::contact::CollisionResponsevirtual; getContacts()sofa::core::collision::ContactManagerinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefaultResponseType() constsofa::component::collision::response::contact::CollisionResponseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::ContactManagerinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html:6376,log,logging,6376,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,1,['log'],['logging']
Testability,"::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_activatesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_keepOrientDiffsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_m1sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_m2sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numericalTolerancesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_restVectorsofa::component::constraint::lagr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:5760,log,logging,5760,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,::component::odesolver::backward::NewmarkImplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::StaticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::VariationalSymplecticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::DampVelocitySolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta2Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta4Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetAssembledSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetVectorVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareState Class Reference; SOFA API: sofa::component::playback::CompareStateCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareStateResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopology Class Reference; SOFA API: sofa::component::playback::CompareTopologyCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopologyResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::InputEventReader Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::ReadState Class Reference; SOFA API: sofa::component::playback::ReadStateActivator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::ReadStateCreator Class Reference; SOFA API: Member List; SOFA API: sofa:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:67427,test,testing,67427,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:2544,log,logging,2544,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,1,['log'],['logging']
Testability,"::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Tri typedefsofa::helper::TriangleOctreeRoot; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; TriangleOctreeModel()sofa::component::collision::geometry::TriangleOctreeModelprotected; TriangleOctreeRoot()sofa::helper::TriangleOctreeRoot; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; userDatasofa::core::CollisionModelprotected; TriangleCollisionModel< sofa::VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; sofa::helper::TriangleOctreeRoot::VecCoord typedefsofa::helper::TriangleOctreeRoot; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html:21349,log,logErrors,21349,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,1,['log'],['logErrors']
Testability,"::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(sofa::Index stiffnessIndex, sofa::Index springIndex)sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_external_pointssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_polynomialDegreesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_polynomialStiffnesssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_recomputeIndicessofa::component::solidmechanics::spring::PolynomialRestShapeSpringsFor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:5548,log,logging,5548,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,"::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFractureCriteria(int element, Deriv &direction, Real &value)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMethod()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >inline; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &x) const overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >vir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html:14275,log,logging,14275,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"::core::collision::ContactManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(RuleBasedContactManager, CollisionResponse)sofa::component::collision::response::contact::RuleBasedContactManager; sofa::component::collision::response::contact::CollisionResponse::SOFA_CLASS(CollisionResponse, sofa::core::collision::ContactManager)sofa::component::collision::response::contact::CollisionResponse; sofa::core::collision::ContactManager::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedContactMapsofa::component::collision::response::contact::CollisionResponseprotected; storedContactssofa::core::collision::ContactManagerprotected; storedIntersectionMethodsofa::core::collision::ContactManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; variablesDatasofa::component::collision::response::contact::RuleBasedContactManagerprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionResponse() override=defaultsofa::component::collision::response::contact::CollisionResponseprotected; ~ContactManager() overridesofa::core::collision::ContactManagerinlineprotected; ~RuleBasedContactManager() overridesofa::component::collision::response::contact::RuleBasedContactManagerprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:14589,log,logErrors,14589,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['log'],['logErrors']
Testability,"::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:3586,log,logging,3586,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:3586,log,logging,3586,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:3586,log,logging,3586,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:6049,log,logging,6049,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::visual::VisualGrid; SOFA_CLASS(VisualGrid, VisualModel)sofa::component::visual::VisualGrid; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateGrid()sofa::component::visual::VisualGrid; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualGrid()sofa::component::visual::VisualGrid; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualGrid() override=defaultsofa::component::visual::VisualGrid; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:12127,log,logErrors,12127,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['log'],['logErrors']
Testability,"::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemSolution(core::MultiVecDerivId v)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:3395,log,logging,3395,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,3,['log'],['logging']
Testability,"::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engine::select::BaseROI< DataTypes >; d_doUpdatesofa::component::engine::select::BaseROI< DataTypes >; d_drawEdgessofa::component::engine::select::BaseROI< DataTypes >; d_drawHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_drawPointssofa::component::engine::select::BaseROI< DataTypes >; d_drawQuadssofa::component::engine::select::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:3046,log,logging,3046,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(DetectionOutputVector *outputs)=0sofa::core::collision::Contactpure virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool)sofa::core::collision::Contactinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:10546,log,logErrors,10546,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,1,['log'],['logErrors']
Testability,"::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getFromModels1()sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; getFromModels2()sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs()sofa::core::BaseMappinginlinevirtual; getK()sofa::core::BaseMappinginlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatIn1Deriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< In1 > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMatIn2Deriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< In2 > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMatOutDeriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< Out > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMechFrom() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getMechTo() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:10577,log,logging,10577,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['log'],['logging']
Testability,::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getData() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:4869,log,logging,4869,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['log'],['logging']
Testability,"::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_firstOrdersofa::component::odesolver::backward::EulerImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::EulerImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::EulerImplicitSolver; d_solveConstraintsofa::component::odesolver::backward::EulerImplicitSolver; d_threadSafeVisitorsofa::component::odesolver::backward::EulerImplicitSolver; d_trapezoidalSchemesofa::component::odesolver::backward::EulerImplicitSolver; d_velocityDampingsofa::component::odesolver::backward::EulerImplicitSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html:2303,log,logging,2303,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,1,['log'],['logging']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,1,['log'],['logErrors']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,1,['log'],['logErrors']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,1,['log'],['logErrors']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,1,['log'],['logErrors']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,1,['log'],['logErrors']
Testability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x3Variable() overridesofa::gl::component::shader::OglMatrix4x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html:13960,log,logErrors,13960,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,1,['log'],['logErrors']
Testability,"::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [4/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [5/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [6/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [7/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [8/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:25740,test,testIntersection,25740,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeLumpedMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; computeMaterialStiffness(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeParticleMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; computeRotationLarge(Transformation &r, Coord &edgex, Coord &edgey)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeRotationPolar(Transformation &r, type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createHexahedronInformation(Index, HexahedronInformation &t, const core::topology::BaseMeshTopology::Hexahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_densitysofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_elementTotalMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; d_hexahedronInfosofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; d_lumpedMassessofa::component::solidmechanics::fem::elastic::Hex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:10936,log,logging,10936,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11249,test,testIntersection,11249,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DirectionalLight, Light)sofa::gl::component::shader::DirectionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectionalLight() overridesofa::gl::component::shader::DirectionalLight; ~Light() overridesofa::gl::component::shader::Lightprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:15172,log,logErrors,15172,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['log'],['logErrors']
Testability,"::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShado",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:3628,log,logging,3628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShado",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:3628,log,logging,3628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShado",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:3628,log,logging,3628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"::gui::common::ColourPickingVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processCollisionModel(simulation::Node *node, core::CollisionModel *)sofa::gui::common::ColourPickingVisitor; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::gui::common::ColourPickingVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html:4393,test,testTags,4393,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html,1,['test'],['testTags']
Testability,::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: M,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:161822,log,logging,161822,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth)=0sofa::core::loader::VoxelLoaderpure virtual; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:2524,log,logging,2524,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['log'],['logging']
Testability,"::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:2167,log,logging,2167,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['log'],['logging']
Testability,"::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() constsofa::core::collision::Intersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:15349,test,testIntersectionSphere,15349,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersectionSphere']
Testability,"::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36845,test,testIntersection,36845,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"::istream &in)=0sofa::core::behavior::BaseMechanicalStatepure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; constraintBlocks(const std::list< unsigned int > &) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; copyFromBaseVector(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behavior::BaseMechanicalStatepure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endIntegration(const ExecParams *params, SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; exportGnuplot(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:4757,log,logging,4757,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['log'],['logging']
Testability,"::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _Othe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:242106,test,testing,242106,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::core::objectmodel::Base * ; t). inline . ◆ operator<<() [1/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). ◆ operator<<() [2/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). ◆ operator<<() [3/3]. SOFA_HELPER_API std::ostream & sofa::helper::logging::operator<< ; (; std::ostream & ; s, . const Message & ; m . ). ◆ simpleFormat(). void sofa::helper::logging::simpleFormat ; (; size_t ; jsize, . const std::string & ; text, . size_t ; line_length, . std::ostream & ; wrapped . ). simpleFormat a text containing our markdown 'tags' ; Parameters. jsizesize of the line prefix to fill with space (for left side alignment) ; textthe text to format ; line_lengthnumber of column to render to to ; wrappedthe destination stream where to write the formatted text. . ◆ toString(). SOFA_HELPER_API const std::string sofa::helper::logging::toString ; (; const Message::Ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:4774,log,logging,4774,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['log'],['logging']
Testability,"::nonlinear::SquareDistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; SquareDistanceMapping()sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected; ~SquareDistanceMapping() overridesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:19258,log,logErrors,19258,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['log'],['logErrors']
Testability,"::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; computeMechanicalMatricesRecursively(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; computeMechanicalMatricesRecursivelyWithRamifications(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; computeRotationLarge(Transformation &r, Coord &edgex, Coord &edgey)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; computeRotationPolar(Transformation &r, type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_completeInterpolationsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_densitysofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; d_drawColorsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; d_drawingsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; d_drawPercentageOffsetsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; d_drawSizesofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; d_drawTypesofa::component::solidmechanics::fem::nonuniform::HexahedronComp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:14311,log,logging,14311,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::NewmarkImplicitSolverprotected; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_betasofa::component::odesolver::backward::NewmarkImplicitSolver; d_componentStatesofa::core::objectmodel::Base; d_gammasofa::component::odesolver::backward::NewmarkImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::NewmarkImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::NewmarkImplicitSolver; d_threadSafeVisitorsofa::component::odesolver::backward::NewmarkImplicitSolver; d_velocityDampingsofa::component::odesolver::backward::NewmarkImplicitSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:2276,log,logging,2276,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::VariationalSymplecticSolver; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeHamiltoniansofa::component::odesolver::backward::VariationalSymplecticSolver; d_explicitsofa::component::odesolver::backward::VariationalSymplecticSolver; d_fileNamesofa::component::odesolver::backward::VariationalSymplecticSolver; d_hamiltonianEnergysofa::component::odesolver::backward::VariationalSymplecticSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newtonErrorsofa::component::odesolver::backward::VariationalSymplecticSolver; d_newtonStepssofa::component::odesolver::backward::VariationalSymplecticSolver; d_rayleighMasssofa::component::odesolver::backward::VariationalSymplecticSolver; d_rayleighStiffnesssofa::component::odesolver::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html:2288,log,logging,2288,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_absolute_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_absolute_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newton_iterationssofa::component::odesolver::backward::StaticSolverprotected; d_relative_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_relative_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_should_diverge_when_residual_is_growingsofa::component::odesolver::backward::StaticSolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:2258,log,logging,2258,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_ratesofa::component::odesolver::forward::DampVelocitySolver; d_thresholdsofa::component::odesolver::forward::DampVelocitySolver; DampVelocitySolver()sofa::component::odesolver::forward::DampVelocitySolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:2268,log,logging,2268,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html:2266,log,logging,2266,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,3,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; GIDM,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:9360,log,logging,9360,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; hand,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:9298,log,logging,9298,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,4,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:4809,log,logging,4809,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,2,['log'],['logging']
Testability,"::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState1() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState2()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState2() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getName() constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:7391,log,logging,7391,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointsFromOrientedBox(const Vec10 &box, type::vector< type::Vec3 > &points) constsofa::component::engine::select::boxroi::BoxROI< DataTypes >protected; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; h",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:9863,log,logging,9863,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransfoFromTfm()sofa::component::engine::transform::TransformPosition< DataTypes >protected; getTransfoFromTrm()sofa::component::engine::transform::TransformPosition< DataTypes >protected; getTransfoFromTxt()sofa::component::engine::transform::TransformPosition< Data,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:7607,log,logging,7607,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; GroupFilterYoungModulus()sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >protected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::Ba,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html:6352,log,logging,6352,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:7083,log,logging,7083,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,32,['log'],['logging']
Testability,::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *event) overridesofa::component::engine::analyze::HausdorffDistance< DataTypes >protectedvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html:7069,log,logging,7069,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,1,['log'],['logging']
Testability,"::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; disable()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:3506,log,logging,3506,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; Grid,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:9298,log,logging,9298,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; hand,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:10273,log,logging,10273,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,6,['log'],['logging']
Testability,::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:4482,log,logging,4482,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,2,['log'],['logging']
Testability,::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmode,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html:6516,log,logging,6516,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,1,['log'],['logging']
Testability,::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html:6257,log,logging,6257,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,22,['log'],['logging']
Testability,"::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LineAxis, VisualModel)sofa::component::visual::LineAxis; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLine()sofa::component::visual::LineAxis; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:11725,log,logErrors,11725,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,1,['log'],['logErrors']
Testability,"::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(COLAMDOrderingMethod, BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int >>)sofa::component::linearsolver::ordering::COLAMDOrderingMethod; BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:10534,log,logErrors,10534,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['log'],['logErrors']
Testability,"::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergeVectors, VecT), core::DataEngine)sofa::component::engine::generate::MergeVectors< VecT >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Value typedefsofa::component::engine::generate::MergeVectors< VecT >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecValue typedefsofa::component::engine::generate::MergeVectors< VecT >; vf_inputssofa::component::engine::generate::MergeVectors< VecT >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergeVectors() overridesofa::component::engine::generate::MergeVectors< VecT >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html:12445,log,logErrors,12445,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,1,['log'],['logErrors']
Testability,"::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; bool display (Node *node, const char **color=nullptr);  Test if a node should be displayed. More...;  ; bool display (core::objectmodel::BaseObject *obj, const char **color=nullptr);  Test if an object should be displayed. More...;  ; std::string getParentName (core::objectmodel::BaseObject *obj);  ; std::string getName (core::objectmodel::Base *o, std::string prefix);  Compute the name of a given node or object. More...;  ; std::string getName (core::objectmodel::BaseNode *node);  Compute the name of a given node. More...;  ; std::string getName (core::objectmodel::BaseObject *obj);  Compute the name of a given object. More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, Object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:4436,Test,Test,4436,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,1,['Test'],['Test']
Testability,"::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:17558,test,testMechanicalState,17558,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['test'],['testMechanicalState']
Testability,"::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getIncludeNodeType() constsofa::simulation::xml::BaseElementinline; getName() overridesofa::simulation::xml::BaseElementinlinevirtual; getObject() overridesofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >virtual; getParent() const overridesofa::simulation::xml::BaseElementinlinevirtual; getParentElement() constsofa::simulation::xml::BaseElementinline; getSrcFile() constsofa::simulation::xml::BaseElement; getSrcLine() constsofa::simulation::xml::BaseElement; getType()sofa::simulation::xml::BaseElementinline; getTypedObject()sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; init() overridesofa::simulation::xml::ObjectElementvirtual; initNode() overridesofa::simulation::xml::ObjectElementvirtual; isFileRoot()sofa::simulation::xml::BaseElement; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; NodeFactory typedefsofa::simulation::xml::BaseElement; ObjectElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::ObjectElement; presenceAttribute(const std::string &s)sofa::simulation::xml::BaseElementvirtual; pushNamedObjects(Map &result)sofa::simulation::xml::BaseElementinline; pushObjects(Sequence &result)sofa::simulation::xml::BaseElementinline; removeAttribute(const std::string &attr) overridesofa::simulation::xml::BaseElementvirtual; removeChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; replaceAttributesofa::simulation::xml::BaseElementprotected; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setBaseFile(const std::string &newBaseFile)sofa::simulation::xml::BaseElementvirtual; setIncludeNodeType(IncludeNodeType t)sofa::simulation::xml::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html:3616,log,logErrors,3616,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,1,['log'],['logErrors']
Testability,"::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(const VecCoord &state, VecDeriv &forces)=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:2798,log,logging,2798,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,1,['log'],['logging']
Testability,"::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_binormalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_dminsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgeIndicessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgePressureMapsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_intensitysofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:5202,log,logging,5202,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['log'],['logging']
Testability,"::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_pressuresofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadListsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadPressureMapsofa::component::mechanicalload::QuadPressureForceField< DataTypes >protected; d_showForcessofa::component::mechanicalload::QuadPressureForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; DataVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html:5056,log,logging,5056,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,1,['log'],['logging']
Testability,"::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dmaxsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dminsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:3283,log,logging,3283,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['log'],['logging']
Testability,"::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; cellsizesofa::component::engine::generate::MeshTetraStuffing; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alphaLongsofa::component::engine::generate::MeshTetraStuffing; d_alphaShortsofa::component::engine::generate::MeshTetraStuffing; d_bDrawsofa::component::engine::generate::MeshTetraStuffing; d_bSnapPointssofa::component::engine::generate::MeshTetraStuffing; d_bSplitTetrahedrasofa::component::engine::generate::MeshTetraStuffing; d_componentStatesofa::core::objectmodel::Base; d_inputPointssofa::component::engine::generate::MeshTetraStuffing; d_inputQuadssofa::component::engine::generate::MeshTetraStuffing; d_inputTrianglessofa::component::engine::generate::MeshTetraStuffing; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outputPointssofa::component::engine::generate::MeshTetraStuffing; d_outputTetrahedrasofa::component::engine::generate::MeshTetraStuffing; d_sizesofa::component::engine::generate::MeshTetraStuf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:3608,log,logging,3608,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,1,['log'],['logging']
Testability,"::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglOITShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglOITShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglOITShader() overridesofa::gl::component::shader::OglOITShaderprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:16899,log,logErrors,16899,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,1,['log'],['logErrors']
Testability,::objectmodel::Basevirtual; getCollisionPipeline() constsofa::core::objectmodel::BaseNodevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext()=0sofa::core::objectmodel::BaseNodepure virtual; getContext() const =0sofa::core::objectmodel::BaseNodepure virtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFirstParent() const =0sofa::core::objectmodel::BaseNodepure virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbParents() const =0sofa::core::objectmodel::BaseNodepure virtual; getOdeSolver() constsofa::core::objectmodel::BaseNodevirtual; getParents() const =0sofa::core::objectmodel::BaseNodepure virtual; getPathName() const overridesofa::core::objectmodel::BaseNodevirtual; getRoot() constsofa::core::objectmodel::BaseNodevirtual; getRootPath() constsofa::core::objectmodel::BaseNodevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTypeName() constsofa::core::objectmodel::Base; getVisualLoop() constsofa::core::objectmodel::BaseNodevirtual; hasAncestor(const BaseNode *node) const =0sofa::core::objectmodel::BaseNodepure virtual; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasParent(const BaseNode *node) const =0so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:4071,log,logging,4071,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['log'],['logging']
Testability,"::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &d_x) const overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< _DataTypes >virtual; getSlave(const std::string &name) constsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:9740,log,logging,9740,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"::rendering3d::OglModel. ◆ init(). void sofa::component::visual::VisualModelImpl::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::gl::component::shader::OglShaderVisualModel, sofa::gl::component::rendering3d::OglModel, and sofa::gl::component::rendering3d::MergeVisualModels. ◆ initFromFileMesh(). void sofa::component::visual::VisualModelImpl::initFromFileMesh ; (; ). ◆ initFromTopology(). void sofa::component::visual::VisualModelImpl::initFromTopology ; (; ). ◆ initPositionFromVertices(). void sofa::component::visual::VisualModelImpl::initPositionFromVertices ; (; ). ◆ insertInNode(). bool sofa::component::visual::VisualModelImpl::insertInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ internalDraw(). virtual void sofa::component::visual::VisualModelImpl::internalDraw ; (; const core::visual::VisualParams * ; , . bool ;  . ). inlinevirtual . Rendering method. ; Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ isUsingTopology(). bool sofa::component::visual::VisualModelImpl::isUsingTopology ; (; ); const. inline . ◆ load(). bool sofa::component::visual::VisualModelImpl::load ; (; const std::string & ; filename, . const std::string & ; loader, . const std::string & ; textureName . ). ◆ loadTexture(). virtual bool sofa::component::visual::VisualModelImpl::loadTexture ; (; const std::string & ; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ loadTextures(). virtual bool sofa::component::visual::VisualModelImpl::loadTextures ; (; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:45217,test,test,45217,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['test'],['test']
Testability,::response::contact::ContactListener; getContactPoints() constsofa::component::collision::response::contact::ContactListener; getContactsVector() constsofa::component::collision::response::contact::ContactListener; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistances() constsofa::component::collision::response::contact::ContactListener; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNumberOfContacts() constsofa::component::collision::response::contact::ContactListener; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *event) overridesofa::component::collision::response::contact::ContactListenervirtual; handleTopologyChange()sofa::core::objectmodel::Base,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:5154,log,logging,5154,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['log'],['logging']
Testability,"::simulation::Visitorinlinevirtual; isThreadSafe() const overridesofa::simulation::UpdateContextVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html:3933,test,testTags,3933,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html,1,['test'],['testTags']
Testability,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:12161,log,logErrors,12161,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logErrors']
Testability,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(WriteState, core::objectmodel::BaseObject)sofa::component::playback::WriteState; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; timeToTestEnergyIncreasesofa::component::playback::WriteStateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; validInitsofa::component::playback::WriteStateprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteState()sofa::component::playback::WriteStateprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~WriteState() overridesofa::component::playback::WriteStateprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:11081,log,logErrors,11081,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['log'],['logErrors']
Testability,"::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(GenericConstraintCorrection, core::behavior::BaseConstraintCorrection)sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection; sofa::core::behavior::BaseConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintCorrection() overridesofa::core::behavior::BaseConstraintCorrectionprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~GenericConstraintCorrection() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:14266,log,logErrors,14266,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['log'],['logErrors']
Testability,"::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html:11298,log,logErrors,11298,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,1,['log'],['logErrors']
Testability,"::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited)sofa::component::engine::generate::MeshClosingEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; trianglessofa::component::engine::generate::MeshClosingEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSeqIndex typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshClosingEngine() overridesofa::component::engine::generate::MeshClosingEngine< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:13753,log,logErrors,13753,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,1,['log'],['logErrors']
Testability,"::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SpotLight, PositionalLight)sofa::gl::component::shader::SpotLight; sofa::gl::component::shader::PositionalLight::SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SpotLight()sofa::gl::component::shader::SpotLight; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Light() overridesofa::gl::component::shader::Lightprotected; ~PositionalLight() overridesofa::gl::component::shader::PositionalLight; ~SpotLight() overridesofa::gl::component::shader::SpotLight; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:15599,log,logErrors,15599,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,1,['log'],['logErrors']
Testability,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13917,log,logErrors,13917,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,1,['log'],['logErrors']
Testability,"::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVariable, OglVariable< float >)sofa::gl::component::shader::OglFloatVariable; OglVariable< float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< float >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< float >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVariable()sofa::gl::component::shader::OglFloatVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< float >inlineprotected; ~ShaderElement() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:13382,log,logErrors,13382,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,1,['log'],['logErrors']
Testability,":BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21452,Test,TestPair,21452,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['Test'],['TestPair']
Testability,":Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutility::BaseAddResourceRepositoryvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_repositoryPathsofa::component::sceneutility::BaseAddResourceRepository; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:2268,log,logging,2268,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,3,['log'],['logging']
Testability,":Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecCoord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Deriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::ProjectiveConstraintSet< DataTypes >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:3083,log,logging,3083,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['log'],['logging']
Testability,":Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PointsFromIndices< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html:2973,log,logging,2973,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,1,['log'],['logging']
Testability,:Base; firstExportsofa::component::playback::WriteStateprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::playback::WriteStatevirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:5077,log,logging,5077,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['log'],['logging']
Testability,":Base; setReferencePosition(sofa::type::Transform< SReal > &) overridesofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >inlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ForceFeedback, core::behavior::BaseController)sofa::component::haptics::ForceFeedback; sofa::core::behavior::BaseController::SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >)sofa::component::haptics::NullForceFeedbackT< TDataTypes >; sofa::component::haptics::MechanicalStateForceFeedback::SOFA_CLASS(SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback)sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >; sofa::component::haptics::ForceFeedback::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html:11482,log,logErrors,11482,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,1,['log'],['logErrors']
Testability,":BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingsofa::core::objectmodel::Context; d_messageLogCountsofa::core::objectmodel::Basemutable; dt_sofa::core::objectmodel::Context; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html:1850,log,logging,1850,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,1,['log'],['logging']
Testability,":BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(SReal time)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:4010,log,logging,4010,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logging']
Testability,":BaseMeshTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ insertInNode(). bool sofa::core::topology::BaseMeshTopology::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ load(). bool sofa::core::topology::BaseMeshTopology::load ; (; const char * ; filename). virtual . Load the topology from a file.; The default implementation supports the following formats: obj, gmsh, mesh (custom simple text file), xs3 (deprecated description of mass-springs networks). . ◆ removeInNode(). bool sofa::core::topology::BaseMeshTopology::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ reOrientateTriangle(). void sofa::core::topology::BaseMeshTopology::reOrientateTriangle ; (; TriangleID ; id). virtual . Will change order of vertices in triangle: t[1] <=> t[2]. ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::topology::BaseMeshTopology::SOFA_ABSTRACT_CLASS ; (; BaseMeshTopology ; , . core::topology::Topology ;  . ). sofacoretopologyBaseMeshTopology; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:56614,test,test,56614,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['test'],['test']
Testability,:BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMassCoef(Index elementIdx)sofa::component::topology::container::grid::SparseGridTopologyvirtual; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMax()sofa::component::topology::container::grid::SparseGridTopologyinline; getMesh(sofa::helper::io::Mesh &m)sofa::component::topology::container::grid::SparseGridTopology; getMin()sofa::component::topology::container::grid::SparseGridTopologyinline; getN() constsofa::component::topology::container::grid::SparseGridTopologyinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::grid::SparseGridTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::Base,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:23058,log,logging,23058,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,3,['log'],['logging']
Testability,:BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMax() constsofa::component::topology::container::constant::CubeTopologyinline; getMin() constsofa::component::topology::container::constant::CubeTopologyinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesofa::component::topology::container::constant:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html:15225,log,logging,15225,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,2,['log'],['logging']
Testability,:BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles() overridesofa::component::topology::container::constant::Mes,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html:14022,log,logging,14022,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,1,['log'],['logging']
Testability,":BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:18047,test,testMechanicalState,18047,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['test'],['testMechanicalState']
Testability,":BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:3741,log,logging,3741,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['log'],['logging']
Testability,":BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DilateEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distancesofa::component::engine::transform::DilateEngine< DataTypes >protected; d_inputXsofa::component::engine::transform::DilateEngine< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minThicknesssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_normalssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_outputXsofa::component::engine::transform::DilateEngine< DataTypes >protected; d_quadssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_thicknesssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_trianglessofa::component::engine::transform::DilateEngine< DataTypes >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html:3009,log,logging,3009,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html,1,['log'],['logging']
Testability,":BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyVelocitiessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; DataVecCoord typedefsofa::component::constraint::proj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3639,log,logging,3639,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['log'],['logging']
Testability,":BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< DataTypes >; sofa::core::behavior::BaseMechanicalState::addFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToBaseVector(linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; sofa::addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; State< DataTypes >::addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html:2455,log,logging,2455,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,1,['log'],['logging']
Testability,":Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getCurrentSide()sofa::component::visual::BaseCamerainlinevirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistance()sofa::component::visual::BaseCamerainline; getFieldOfView()sofa::component::visual::BaseCamerainline; getHorizontalFieldOfView()sofa::component::visual::BaseCamera; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getLookAt()sofa::component::visual::BaseCamerainline; getLookAtFromOrientation(const type::Vec3 &pos, const double &distance, const Quat &orientation)sofa::component::visual::BaseCamera; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getModelViewMatrix(double mat[16])sofa::component::visual::BaseCameravirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix(double mat[16])sofa::component::visual::BaseCamera; getOpenGLProjectionMatrix(double mat[16])sofa::component::visual::BaseCamera; getOrientation()sofa::component::visual::BaseCamera; getOrientationFromLookAt(const type::Vec3 &pos, const type::Vec3 &lookat)sofa::component::visual::BaseCamera; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::component::visual::BaseCamerainline; getPositionFromOrien",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:6634,log,logging,6634,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,4,['log'],['logging']
Testability,:Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getData()=0sofa::core::loader::VoxelLoaderpure virtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDataSize() const =0sofa::core::loader::VoxelLoaderpure virtual; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getHexaIndicesInGrid() const =0sofa::core::loader::VoxelLoaderpure virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getROI() const =0sofa::core::loader::VoxelLoaderpure virtual; getSegmentID()=0sofa::core::loader::VoxelLoaderpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVoxelSize() const =0sofa::core::loader::VoxelLoaderpure virtual; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseOb,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:5218,log,logging,5218,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['log'],['logging']
Testability,":Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getFromModel()sofa::core::Mapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; getK() finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo() overridesofa::core::Mapping< TIn, TOut >virtual; getToModel()sofa::core::Mapping< TIn, TOut >; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyCha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:9144,log,logging,9144,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logging']
Testability,":Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getFromModels()sofa::core::MultiMapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; getK() overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatInDeriv(const MultiMatrixDerivId id, type::vector< InDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMatOutDeriv(const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMechFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getMechTo() overridesofa::core::MultiMapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:13281,log,logging,13281,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['log'],['logging']
Testability,:Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFileRepository() overridesofa::component::sceneutility::AddDataRepositoryinlineprotectedvirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:4626,log,logging,4626,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,1,['log'],['logging']
Testability,":Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >inlinevirtual; sofa::component::solidmechanics::fem::elas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:12197,log,logging,12197,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['log'],['logging']
Testability,":Cube &cube2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:4550,log,logging,4550,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['log'],['logging']
Testability,":DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [22/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testValidity() [1/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Line & ; l, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [2/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Point & ; p, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [3/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Sphere & ; , . const type::Vec3 & ;  . ); const. inline . These methods check the validity of a found intersection. According to the local configuration around the found intersected primitive, we build a ""Region Of Interest"" geometric cone. Pertinent intersections have to belong to this cone, others are not taking into account anymore. . ◆ testValidity() [4/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Triangle & ; t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:38192,test,testValidity,38192,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testValidity']
Testability,":ExecParams *params, bool active);  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool getState () const;  ; void setState (bool active);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html:1613,test,testTags,1613,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html,2,['test'],['testTags']
Testability,":ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; createVertexBuffer()sofa::gl::component::rendering3d::OglModel; cullFacesofa::gl::component::rendering3d::OglModelprotected; d_componentStatesofa::core::objectmodel::Base; d_computeTangentssofa::component::visual::VisualModelImpl; d_edgessofa::component::visual::VisualModelImpl; d_enablesofa::core::visual::VisualModel; d_fileMeshsofa::component::visual::VisualModelImpl; d_fixMergedUVSeamssofa::component::visual::VisualModelImpl; d_groupssofa::component::visual::VisualModelImpl; d_handleDynamicTopologysofa::component::visual::VisualModelImpl; d_initRestPositionssofa::component::visual::VisualModelImpl; d_keepL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:4655,log,logging,4655,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,2,['log'],['logging']
Testability,":ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeTangentssofa::component::visual::VisualModelImpl; d_edgessofa::component::visual::VisualModelImpl; d_enablesofa::core::visual::VisualModel; d_fileMeshsofa::component::visual::VisualModelImpl; d_fixMergedUVSeamssofa::component::visual::VisualModelImpl; d_groupssofa::component::visual::VisualModelImpl; d_handleDynamicTopologysofa::component::visual::VisualModelImpl; d_initRestPositionssofa::component::visual::VisualModelImpl; d_keepLinessofa::component::visual::VisualModelImpl; d_materialsofa::component::visual::VisualModelImpl; d_materialssofa::component::visual::VisualModelImpl; d_messageLogCountsofa::core::objectmodel::Basemutable; d_putOnlyTexCoordssofa::component::visual::VisualModelImpl; d_quadssofa::component::visual::VisualModelImpl; d_rotationsofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:4317,log,logging,4317,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['log'],['logging']
Testability,":ExportDotVisitor::showMechanicalMapping. ◆ showMechanicalState. bool sofa::simulation::graph::ExportDotVisitor::showMechanicalState. ◆ showNode. bool sofa::simulation::graph::ExportDotVisitor::showNode. ◆ showObject. bool sofa::simulation::graph::ExportDotVisitor::showObject. ◆ showSolver. bool sofa::simulation::graph::ExportDotVisitor::showSolver. ◆ showTopology. bool sofa::simulation::graph::ExportDotVisitor::showTopology. ◆ showVisualModel. bool sofa::simulation::graph::ExportDotVisitor::showVisualModel. Constructor details. ◆ ExportDotVisitor(). sofa::simulation::graph::ExportDotVisitor::ExportDotVisitor ; (; const sofa::core::ExecParams * ; params, . std::ostream * ; out . ). ◆ ~ExportDotVisitor(). sofa::simulation::graph::ExportDotVisitor::~ExportDotVisitor ; (; ). override . Function details. ◆ display() [1/2]. bool sofa::simulation::graph::ExportDotVisitor::display ; (; core::objectmodel::BaseObject * ; obj, . const char ** ; color = nullptr . ). protected . Test if an object should be displayed. . ◆ display() [2/2]. bool sofa::simulation::graph::ExportDotVisitor::display ; (; Node * ; node, . const char ** ; color = nullptr . ). protected . Test if a node should be displayed. . ◆ getClassName(). const char* sofa::simulation::graph::ExportDotVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ getName() [1/3]. std::string sofa::simulation::graph::ExportDotVisitor::getName ; (; core::objectmodel::Base * ; o, . std::string ; prefix . ). protected . Compute the name of a given node or object. . ◆ getName() [2/3]. std::string sofa::simulation::graph::ExportDotVisitor::getName ; (; core::objectmodel::BaseNode * ; node). protected . Compute the name of a given node. . ◆ getName() [3/3]. std::string sofa::simulation::graph::ExportDotVisitor::getName ; (; core::objectmodel::BaseObject * ; obj). protected . Compute the name of a ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:8850,Test,Test,8850,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,1,['Test'],['Test']
Testability,":ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(sofa::Index stiffnessIndex, sofa::Index springIndex)sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_external_pointssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_polynomialDegreesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_polynomialStiffnesssofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_recomputeIndicessofa::component::solidmechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:5506,log,logging,5506,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,":Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collisio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html:5391,test,testIntersection,5391,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,":Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::interse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:20068,test,testIntersection,20068,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,":Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:20272,test,testIntersection,20272,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,":LinearSolverprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSystemBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemInverseBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemLHBaseVector()sofa::core::behavior::LinearSolverinlinevirtual; getSystemMatrix()=0sofa::component::linearsolver::BaseMatrixLinearSolver< Matrix, Vector >pure virtual; getSystemRHBaseVector()sofa::core::behavior::LinearSolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:5259,log,logging,5259,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,1,['log'],['logging']
Testability,:LinearSolverprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSystemBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemInverseBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemLHBaseVector()sofa::core::behavior::LinearSolverinlinevirtual; getSystemRHBaseVector()sofa::core::behavior::LinearSolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html:5185,log,logging,5185,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver-members.html,1,['log'],['logging']
Testability,":MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &)sofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html:3455,log,logging,3455,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,1,['log'],['logging']
Testability,":MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const Coord_t< In > &a, const Coord_t< In > &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:20784,test,testMechanicalState,20784,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,2,['test'],['testMechanicalState']
Testability,":NbCols;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Protected Attributes; sofa::type::Mat< NbRows, NbCols, Real > m_modelMatrix;  ; std::unique_ptr< sofa::linearalgebra::BaseMatrix > m_testedMatrix {nullptr};  . Public Member Functions; void onSetUp () override;  ; void onTearDown () override;  ; void checkResize ();  ; void checkAddScalar ();  ; void checkAddBloc (sofa::linearalgebra::BaseMatrix::Index posRow, sofa::linearalgebra::BaseMatrix::Index posCol);  ;  Public Member Functions inherited from sofa::testing::NumericTest< T::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< T::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:1794,test,testing,1794,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,1,['test'],['testing']
Testability,":OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVectorVariable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglFloatVectorVariable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVectorVariable()sofa::gl::component::shader::OglFloatVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html:13612,log,logErrors,13612,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,1,['log'],['logErrors']
Testability,":PlaneProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SparseMatrix typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~PlaneProjectiveConstraint()sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:18398,log,logErrors,18398,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['log'],['logErrors']
Testability,":RandomPointDistributionInSurface< DataTypes >::f_vertices. Vertices. . ◆ initialized. template<class DataTypes > . bool sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::initialized. ◆ isVisible. template<class DataTypes > . Data<bool> sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::isVisible. is Visible ? . ◆ minDistanceBetweenPoints. template<class DataTypes > . Data<Real> sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::minDistanceBetweenPoints. Min Distance between 2 points (-1 for true randomness) . ◆ numberOfInPoints. template<class DataTypes > . Data<unsigned int> sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::numberOfInPoints. Number of points inside. . ◆ numberOfTests. template<class DataTypes > . Data<unsigned int> sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::numberOfTests. Number of tests to find if the point is inside or not (odd number) . ◆ randomSeed. template<class DataTypes > . Data<unsigned int> sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::randomSeed. Set a specified seed for random generation (0 for ""true pseudo-randomness"". . ◆ rg. template<class DataTypes > . helper::RandomGenerator sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::rg. ◆ safeCounter. template<class DataTypes > . unsigned int sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::safeCounter. ◆ safeLimit. template<class DataTypes > . unsigned int sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::safeLimit. ◆ trianglesOctree. template<class DataTypes > . helper::TriangleOctreeRoot sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::trianglesOctree. protected . Constructor details. ◆ RandomPointDistributionInSurface(). template<class DataTypes > . sofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:19611,test,tests,19611,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['test'],['tests']
Testability,":SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(OscillatorProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~OscillatorProjectiveConstraint() overridesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; ~ProjectiveConstraintSet() overridesofa::core::behavior::Project",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:16637,log,logErrors,16637,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['log'],['logErrors']
Testability,":Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:6975,test,testValidity,6975,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testValidity']
Testability,":Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:8158,test,testIntersection,8158,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,":TriangularQuadraticSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; TriangularQuadraticSpringsForceField()sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAcce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html:19370,log,logErrors,19370,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,1,['log'],['logErrors']
Testability,":Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *) overridesofa::component::playback::CompareTopologyCreatorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; sceneNamesofa::component::playback::CompareTopologyCreatorprotected; setCounter(int c)sofa::component::playback::CompareTopologyCreatorinline; setCreateInMapping(bool b)sofa::component::playback::CompareTopologyCreatorinline; setSceneName(std::string &n)sofa::component::playback::CompareTopologyCreatorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator-members.html:4870,test,testTags,4870,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator-members.html,1,['test'],['testTags']
Testability,":Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *) overridesofa::component::playback::ReadStateActivatorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; ReadStateActivator(const core::ExecParams *params, bool active)sofa::component::playback::ReadStateActivatorinline; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setState(bool active)sofa::component::playback::ReadStateActivatorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; statesofa::component::playback::ReadStateActivatorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state_activator-members.html:4287,test,testTags,4287,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state_activator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state_activator-members.html,1,['test'],['testTags']
Testability,":behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInteractionIdentifiers() override finalsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlineprotectedvirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:8676,log,logging,8676,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['log'],['logging']
Testability,":behavior::Mass< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor)sofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal mFact, unsigned int &offset)sofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html:3408,log,logging,3408,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,1,['log'],['logging']
Testability,":collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:14405,test,testIntersection,14405,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersection']
Testability,":collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:14160,Test,TestPair,14160,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['Test'],['TestPair']
Testability,":collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has chang",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:16306,test,testIntersectionSphere,16306,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['test'],['testIntersectionSphere']
Testability,":collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; testValidity(collision::geometry::Sphere &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistanceinline; testValidity(collision::geometry::Point &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistance; testValidity(collision::geometry::Line &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistance; testValidity(collision::geometry::Triangle &, const type::Vec3 &) constsofa::component::collision::detect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:21883,test,testIntersection,21883,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,":component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21408,Test,TestPair,21408,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['Test'],['TestPair']
Testability,":component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [6/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:34461,test,testIntersection,34461,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,":component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html:16439,log,logErrors,16439,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,1,['log'],['logErrors']
Testability,":component::visual::VisualModelImpl::loadTexture ; (; const std::string & ; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ loadTextures(). virtual bool sofa::component::visual::VisualModelImpl::loadTextures ; (; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ parse(). void sofa::component::visual::VisualModelImpl::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base.; Reimplemented in sofa::gl::component::rendering3d::MergeVisualModels, and sofa::gl::component::rendering3d::OglModel. ◆ removeInNode(). bool sofa::component::visual::VisualModelImpl::removeInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setCastShadow(). void sofa::component::visual::VisualModelImpl::setCastShadow ; (; bool ; val). inline . ◆ setColor() [1/2]. void sofa::component::visual::VisualModelImpl::setColor ; (; float ; r, . float ; g, . float ; b, . float ; a . ). ◆ setColor() [2/2]. void sofa::component::visual::VisualModelImpl::setColor ; (; std::string ; color). ◆ setEdges(). void sofa::component::visual::VisualModelImpl::setEdges ; (; VecVisualEdge * ; e). inline . ◆ setFilename(). void sofa::component::visual::VisualModelImpl::setFilename ; (; std::string ; s). inline . ◆ setMesh(). void sofa::component::visual::VisualModelImpl::setMesh ; (; helper::io::Mesh & ; m, . bool ; tex = false . ). ◆ setQuads(). void sofa::component::visual::VisualModelImpl::setQuads ; (; VecVisualQuad * ; q). inline . ◆ setRotation(). void sofa::component::visual::VisualModelImpl::setRotation ; (; SReal ; rx",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:46897,test,test,46897,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['test'],['test']
Testability,":container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html:3211,log,logging,3211,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,":container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::TriangleSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html:3202,log,logging,3202,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,1,['log'],['logging']
Testability,":container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTetrahedronArray()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; createTetrahedraAroundEdgeArray()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createTetrahedraAroundTriangleArray()sofa::component::topology::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:6181,log,logging,6181,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['log'],['logging']
Testability,":container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; createTrianglesAroundEdgeArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createTrianglesAroundVertexArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createTriangleSetArray()sofa::component::topology::container::dynamic::Tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:5149,log,logging,5149,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['log'],['logging']
Testability,:container::grid::GridTopology; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMax() constsofa::component::topology::container::grid::RegularGridTopologyinline; getMin() constsofa::component::topology::container::grid::RegularGridTopologyinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::grid::GridTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesofa::component::topology::container::constan,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:17929,log,logging,17929,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['log'],['logging']
Testability,:container::grid::GridTopology; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalEdgesInTetrahedron(const HexahedronID i) const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbHexahedra() overridesofa::component::topology::container::grid::GridTopologyvirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbQuads() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetrahedra() overridesofa::component::topology::container::constant::MeshTopologyvirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles() overridesofa::component::topology::container::constant::MeshTop,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:16218,log,logging,16218,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,3,['log'],['logging']
Testability,":core::behavior::SingleStateAccessor< TDataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, TDataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ForceField< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< TDataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< TDataTypes >protected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:14451,log,logErrors,14451,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logErrors']
Testability,":core::collision::Intersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() constsofa::core::collision::Intersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:10602,log,logErrors,10602,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['log'],['logErrors']
Testability,":core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bppsofa::component::io::mesh::VoxelGridLoaderprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::VoxelGridLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::VoxelGridLoadervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth) overridesofa::component::io::mesh::VoxelGridLoadervirtual; d_activeValuesofa::component::io::mesh::VoxelGridLoader; d_backgroundValuesofa::component::io::mesh::VoxelGridLoader; d_componentStatesofa::core::objectmodel::Base; d_dataResolutionsofa::component::io::mesh::VoxelGridLoader; d_filenamesofa::core::loader::BaseLoader; d_generateHexasofa::component::io::mesh::VoxelGridLoader; d_headerSizesofa::component::io::mesh::VoxelGridLoader; d_idxInRegularGridsofa::component::io::mesh::VoxelGridLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_roisofa::component::io::mesh::VoxelGridLoader; d_segmentationHeaderSizesofa::component::io::mesh::VoxelGridLoader; d_voxelSizesofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:2953,log,logging,2953,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['log'],['logging']
Testability,":core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::CenterPointTopologicalMappinginlinevirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::topology::mapping::CenterPointTopologicalMappinginlinevirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:5647,log,logging,5647,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['log'],['logging']
Testability,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:10134,log,logErrors,10134,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,1,['log'],['logErrors']
Testability,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMaterial() overridesofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:10390,log,logErrors,10390,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,1,['log'],['logErrors']
Testability,":core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFiberDir(int element, Deriv &dir)sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; getFractureCriteria(int element, Deriv &direction, Real &value)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMethod()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >inline; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &x) const overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >vir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:15763,log,logging,15763,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int inputDerivative, int outputDerivative) const overridesofa::component::odesolver::backward::StaticSolverinlinevirtual; getIntegrationFactor(int inputDerivative, int outputDerivative, SReal dt) constsofa::component::odesolver::backward::StaticSolverinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() const overridesofa::component::odesolver::backward::StaticSolverinlinevirtual; getPositionIntegrationFactor(SReal dt) constsofa::component::odesolver::backward::StaticSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int outputDerivative) const overridesofa::component::odesolver::backward::StaticSolverinlinevirtual; getSolutionIntegrationFactor(int outputDerivative, SReal dt) constsofa::component::odesolver::backward::StaticSolverinline; getTags() constsofa::core::objectmodel::Baseinline; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:5392,log,logging,5392,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(type::Vec3 &, type::Vec3 &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(type::Vec3 &, type::Vec3 &, unsigned int &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(unsigned int)=0sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:2686,log,logging,2686,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::TrailRenderer< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::TrailRenderer< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbStepssofa::component::visual::TrailRenderer< DataTypes >; d_positionsofa::component::visual::TrailRenderer< DataTypes >; d_thicknesssofa::component::visual::TrailRenderer< DataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visual::TrailRenderer< DataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:2795,log,logging,2795,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteStateinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_DOFsVsofa::component::playback::WriteState; d_DOFsXsofa::component::playback::WriteState; d_filenamesofa::component::playback::WriteState; d_keperiodsofa::component::playback::WriteState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::playback::WriteState; d_stopAtsofa::component::playback::WriteState; d_timesofa::component::playback::WriteState; d_writeFsofa::component::playback::WriteState; d_writeVsofa::component::playback::WriteState; d_writeXsofa::component::playback::WriteState; d_writeX0sofa::component::playback::WriteState; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listenings",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:2316,log,logging,2316,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeQRRotation(Mat3x3 &r, const Coord *dp)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protectedstatic; Coord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_drawColor1sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; d_drawColor2sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; d_drawColor3sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; d_drawColor4sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:6100,log,logging,6100,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['log'],['logging']
Testability,":core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::TorsionForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::mechanicalload::TorsionForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::mechanicalload::TorsionForceField< DataTypes >; d_torquesofa::component::mechanicalload::TorsionForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; Deriv typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html:5675,log,logging,5675,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture() overridesofa::gl::component::shader::SpotLightvirtual; getDirection() overridesofa::gl::component::shader::SpotLightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType() overridesofa::gl::component::shader::SpotLightinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition() overridesofa::gl::component::shader::PositionalLightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTim,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:7435,log,logging,7435,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,1,['log'],['logging']
Testability,":core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFinalPositions(VecCoord &finalPos, DataVecCoord &xData)sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; getGroup() constsofa::core::behavior::BaseProjectiveConstraintSetinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getModels() overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:7714,log,logging,7714,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; GridMeshCreator()sofa::component::io::mesh::Gr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:9340,log,logging,9340,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::B,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:10315,log,logging,10315,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,5,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *ev,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:9258,log,logging,9258,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:4524,log,logging,4524,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,2,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::o,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html:7429,log,logging,7429,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Ev,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html:6558,log,logging,6558,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &da,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html:7720,log,logging,7720,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,25,['log'],['logging']
Testability,":core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualMo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:2972,log,logging,2972,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,3,['log'],['logging']
Testability,:core::objectmodel::Basevirtual; getCollisionModels() overridesofa::component::collision::response::contact::RayContact< CM2 >inlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::component::collision::response::contact::BaseRayContactinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:5554,log,logging,5554,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['log'],['logging']
Testability,:core::objectmodel::Basevirtual; getCollisionModels()=0sofa::core::collision::Contactpure virtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::component::collision::response::contact::BaseRayContactinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:5456,log,logging,5456,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['log'],['logging']
Testability,":core::topology::TopologyContainer::linkTopologyHandlerToData ; (; TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). virtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ removeInNode(). bool sofa::core::topology::TopologyContainer::removeInNode ; (; objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ removeTopologyHandler(). void sofa::core::topology::TopologyContainer::removeTopologyHandler ; (; TopologyHandler * ; _TopologyHandler, . sofa::geometry::ElementType ; elementType . ). Remove a TopologyHandler, linked to a certain type of Element. . ◆ resetStateChangeList(). void sofa::core::topology::TopologyContainer::resetStateChangeList ; (; ). virtual . Free each State changes in the list and remove them from the list. . ◆ resetTopologyChangeList(). void sofa::core::topology::TopologyContainer::resetTopologyChangeList ; (; ). virtual . Free each Topology changes in the list and remove them from the list. . ◆ resetTopologyHandlerList(). void sofa::core::topology::TopologyContainer::resetTopologyHandlerList ; (; ). Free each Topology changes in the list and remove them from the list. . ◆ SOFA_CLASS2(). sofa::core::topology::TopologyContainer::SOFA_CLASS2 ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:33792,test,test,33792,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['test'],['test']
Testability,":detection::intersection::LocalMinDistance::computeIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ init(). void sofa::component::collision::detection::intersection::LocalMinDistance::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::LocalMinDistance::SOFA_CLASS ; (; LocalMinDistance ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; , . collision::geometry::Cube & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [4/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:32777,test,testIntersection,32777,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,":detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11134,test,testIntersection,11134,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,":geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNew",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15749,test,testIntersection,15749,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,":geometry::Ray &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeInters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:7591,test,testIntersection,7591,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,":geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::coll",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:35307,test,testIntersection,35307,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,:gl::component::shader::Lightinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture()sofa::gl::component::shader::Lightinlinevirtual; getDirection()sofa::gl::component::shader::Lightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType()=0sofa::gl::component::shader::Lightpure virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::gl::component::shader::Lightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmod,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:6948,log,logging,6948,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['log'],['logging']
Testability,":linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:241716,test,testing,241716,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,":nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:15947,test,testMechanicalState,15947,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['test'],['testMechanicalState']
Testability,":objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::SceneLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html:2221,log,logging,2221,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,1,['log'],['logging']
Testability,":objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; TriangleCollisionModel< sofa::Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; sofa::helper::TriangleOctreeRoot::Coord typedefsofa::helper::TriangleOctreeRoot; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CUBE_SIZEsofa::helper::TriangleOctreeRootstatic; cubeSizesofa::helper::TriangleOctreeRoot; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Deriv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html:4155,log,logging,4155,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,1,['log'],['logging']
Testability,":objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMass, StateAccessor)sofa::core::behavior::BaseMass; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMass() override=defaultsofa::core::behavior::BaseMassprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:11669,log,logErrors,11669,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,1,['log'],['logErrors']
Testability,":objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ConstraintSolver, objectmodel::BaseObject)sofa::core::behavior::ConstraintSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solveConstraint(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())sofa::core::behavior::ConstraintSolvervirtual; solveSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; solveSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConstraintSolver() overridesofa::core::behavior::ConstraintSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:11705,log,logErrors,11705,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,1,['log'],['logErrors']
Testability,":objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualStyle, sofa::core::visual::VisualModel)sofa::component::visual::VisualStyle; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualParams typedefsofa::component::visual::VisualStyle; VisualStyle()sofa::component::visual::VisualStyleprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:11363,log,logErrors,11363,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['log'],['logErrors']
Testability,":objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(Spiral, DataTypes), core::DataEngine)sofa::component::engine::generate::Spiral< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spiral()sofa::component::engine::generate::Spiral< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec6 typedefsofa::component::engine::generate::Spiral< DataTypes >; VecCoord typedefsofa::component::engine::generate::Spiral< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~Spiral() overridesofa::component::engine::generate::Spiral< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html:12476,log,logErrors,12476,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,1,['log'],['logErrors']
Testability,":objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(Tetra2TriangleTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra2TriangleTopologicalMapping()sofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Tetra2TriangleTopologicalMapping() override=defaultsofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:13221,log,logErrors,13221,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logErrors']
Testability,":objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ClusteringEngine()sofa::component::engine::analyze::ClusteringEngine< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_clustersofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_fixedPositionsofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_fixedRadiussofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbClusterssofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_positionsofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_radiussofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_useToposofa::component::engine::analyze::ClusteringEngine< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html:3098,log,logging,3098,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,1,['log'],['logging']
Testability,":objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDistanceMap(VecCoord beginElts=VecCoord(), const double &distMax=0)sofa::component::engine::analyze::Distances< DataTypes >; Coord typedefsofa::component::engine::analyze::Distances< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::analyze::Distances< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distanceTypesofa::component::engine::analyze::Distances< DataTypes >; d_harmonicMaxValuesofa::component::engine::analyze::Distances< DataTypes >; d_initTargetsofa::component::engine::analyze::Distances< DataTypes >; d_initTargetStepsofa::component::engine::analyze::Distances< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_offsetsofa::component::engine::analyze::Distances< DataTypes >; d_showDistanceMapsofa::component::engine::analyze::Distances< DataTypes >; d_showGoalDistanceMapsofa::component::engine::analyze::Distances< DataTypes >; d_showGradientMapsofa::component::engine::analyze::Distances< DataTypes >; d_showGradientsScaleFactorsofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:3422,log,logging,3422,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['log'],['logging']
Testability,":objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglTexturevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2777,log,logging,2777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,2,['log'],['logging']
Testability,":objectmodel::BaseObjectprotected; cidsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_activatesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_keepOrientDiffsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_m1sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_m2sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numericalTolerancesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; d_r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:5718,log,logging,5718,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,":objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem classsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >friend; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemRHS(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; dispatchSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; dispa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:3430,log,logging,3430,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['log'],['logging']
Testability,":objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:3783,log,logging,3783,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['log'],['logging']
Testability,":objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() constsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMu() constsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inlinevirtual; getPotentialEnergy(const core::MechanicalParams *mparams) const overridesofa::component::solidmechanics::tensormass::Tetra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:10026,log,logging,10026,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFBO() overridesofa::gl::component::shader::VisualManagerSecondaryPassinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputName()sofa::gl::component::shader::VisualManagerPass; getOutputTags()sofa::gl::component::shader::VisualManagerSecondaryPassinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *) overridesofa::gl::component::shader::VisualManagerPassvirtual; handleTopologyCh,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:6229,log,logging,6229,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; GIDMeshLoader()sofa::component::io::mesh::GIDM,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:9402,log,logging,9402,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRotation() constsofa::core::loader::MeshLoaderinlinevirtual; getScale() constsofa::core::loader::MeshLoaderinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::B,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:9340,log,logging,9340,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,4,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:4851,log,logging,4851,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,2,['log'],['logging']
Testability,":objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState1() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState2()sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getMState2() constsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:7433,log,logging,7433,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['log'],['logging']
Testability,":objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointsFromOrientedBox(const Vec10 &box, type::vector< type::Vec3 > &points) constsofa::component::engine::select::boxroi::BoxROI< DataTypes >protected; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:9905,log,logging,9905,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransfoFromTfm()sofa::component::engine::transform::TransformPosition< DataTypes >protected; getTransfoFromTrm()sofa::component::engine::transform::TransformPosition< DataTypes >protected; getTransfoFromTxt()sofa::component::engine::transform::TransformPosition< DataTypes >protected; getTypeName() constsofa:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:7649,log,logging,7649,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; GroupFilterYoungModulus()sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >protected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChang,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html:6394,log,logging,6394,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,1,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &da,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:6751,log,logging,6751,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,36,['log'],['logging']
Testability,:objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *event) overridesofa::component::engine::analyze::HausdorffDistance< DataTypes >protectedvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html:7111,log,logging,7111,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,1,['log'],['logging']
Testability,":simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; showBehaviorModelsofa::simulation::graph::ExportDotVisitor; showCollisionModelsofa::simulation::graph::ExportDotVisitor; showCollisionPipelinesofa::simulation::graph::ExportDotVisitor; showConstraintsofa::simulation::graph::ExportDotVisitor; showContextsofa::simulation::graph::ExportDotVisitor; showForceFieldsofa::simulation::graph::ExportDotVisitor; showInteractionForceFieldsofa::simulation::graph::ExportDotVisitor; showMappingsofa::simulation::graph::ExportDotVisitor; showMasssofa::simulation::graph::ExportDotVisitor; showMechanicalMappingsofa::simulation::graph::ExportDotVisitor; showMechanicalStatesofa::simulation::graph::ExportDotVisitor; showNodesofa::simulation::graph::ExportDotVisitor; showObjectsofa::simulation::graph::ExportDotVisitor; showSolversofa::simulation::graph::ExportDotVisitor; showTopologysofa::simulation::graph::ExportDotVisitor; showVisualModelsofa::simulation::graph::ExportDotVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~ExportDotVisitor() overridesofa::simulation::graph::ExportDotVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor-members.html:6021,test,testTags,6021,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor-members.html,1,['test'],['testTags']
Testability,":solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:6318,log,logging,6318,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,":string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; GetVectorVisitor(const sofa::core::ExecParams *params, linearalgebra::BaseVector *vec, core::ConstVecId src)sofa::component::odesolver::testing::GetVectorVisitorinline; independentOnlysofa::component::odesolver::testing::GetVectorVisitorprotected; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; offsetsofa::component::odesolver::testing::GetVectorVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *gnode) overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html:2571,test,testing,2571,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,1,['test'],['testing']
Testability,":string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(NormalsFromPoints, DataTypes), core::DataEngine)sofa::component::engine::generate::NormalsFromPoints< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglessofa::component::engine::generate::NormalsFromPoints< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useAnglessofa::component::engine::generate::NormalsFromPoints< DataTypes >; VecCoord typedefsofa::component::engine::generate::NormalsFromPoints< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~NormalsFromPoints() overridesofa::component::engine::generate::NormalsFromPoints< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html:12830,log,logErrors,12830,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,1,['log'],['logErrors']
Testability,":testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17547,test,testIntersection,17547,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,":testing Namespace Reference . Classes; class  GetVectorVisitor;  ; class  GetAssembledSizeVisitor;  ; struct  ODESolverSpringTest;  . Functions; Eigen::VectorXd getVector (simulation::Node::SPtr root, core::ConstVecId id, bool indep=true);  ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, const std::string &stiffness, const std::string &mass, const std::string &restLength, const std::string &xFixedPoint, const std::string &vFixedPoint, const std::string &xMass, const std::string &vMass);  Create a mass spring system. More...;  ; template<typename DataTypes > ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, double stiffness, double mass, double restLength, typename DataTypes::VecCoord xFixedPoint, typename DataTypes::VecDeriv vFixedPoint, typename DataTypes::VecCoord xMass, typename DataTypes::VecDeriv vMass);  . Function Documentation. ◆ createMassSpringSystem() [1/2]. simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . const std::string & ; stiffness, . const std::string & ; mass, . const std::string & ; restLength, . const std::string & ; xFixedPoint, . const std::string & ; vFixedPoint, . const std::string & ; xMass, . const std::string & ; vMass . ). inline . Create a mass spring system. . ◆ createMassSpringSystem() [2/2]. template<typename DataTypes > . simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . double ; stiffness, . double ; mass, . double ; restLength, . typename DataTypes::VecCoord ; xFixedPoint, . typename DataTypes::VecDeriv ; vFixedPoint, . typename DataTypes::VecCoord ; xMass, . typename DataTypes::VecDeriv ; vMass . ). inline . ◆ getVector(). Eigen::VectorXd sofa::component::odesolver::testing::getVector ; (; simulation::Node::SPtr ; root, . core::ConstVecId ; id, . bool ; indep = true . ). inline . sofacomponentodesolvertesting; Generated on Mon Nov 1",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html:1186,test,testing,1186,api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html,1,['test'],['testing']
Testability,":topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CenterPointTopologicalMapping()sofa::component::topology::mapping::CenterPointTopologicalMappingprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:2630,log,logging,2630,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['log'],['logging']
Testability,":topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_edgesofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4412,log,logging,4412,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['log'],['logging']
Testability,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; doub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3690,test,testing,3690,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,1,['test'],['testing']
Testability,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5067,test,test,5067,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['test'],['test']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~DynamicSparseGridTopologyModifier() overridesofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierinlineprotected; ~PointSetTopologyMo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html:26916,log,logErrors,26916,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,1,['log'],['logErrors']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~QuadSetTopologyModifier() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html:26293,log,logErrors,26293,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~QuadSetTopologyModifier() overridesofa::component::topology::container::dynamic::QuadSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html:22878,log,logErrors,22878,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,"; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . DiscreteIntersection::OutputVector * ; contacts, . const SReal ; alarmDist, . const SReal ; contactDist . ). inlineprotected . ◆ findIntersector(). ElementIntersector * sofa::component::collision::detection::intersection::DiscreteIntersection::findIntersector ; (; core::CollisionModel * ; object1, . core::CollisionModel * ; object2, . bool & ; swapModels . ). overridevirtual . Return the intersector class handling the given pair of collision models, or nullptr if not supported. ; Return the intersector class handling the given pair of collision models, or nullptr if not supported. Parameters. swapModeloutput value set to true if the collision models must be swapped before calling the intersector. . Implements sofa::core::collision::Intersection. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_CLASS ; (; DiscreteIntersection ; , . sofa::core::collision::Intersection ;  . ). ◆ testIntersection() [1/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:23509,test,testIntersection,23509,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . core::collision::DetectionOutputVector *& ; contacts . ). inlineoverridevirtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIntersector. ◆ canIntersect() [1/2]. bool sofa::component::collision::detection::algorithm::MirrorIntersector::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). overridevirtualdelete . Reimplemented from sofa::core::collision::ElementIntersector. ◆ canIntersect() [2/2]. bool sofa::component::collision::detection::algorithm::MirrorIntersector::canIntersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). inlineoverridevirtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implements sofa::core::collision::ElementIntersector. ◆ endIntersect(). int sofa::component::collision::detection::algorithm::MirrorIntersector::endIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . core::collision::DetectionOutputVector * ; contacts . ). inlineoverridevirtual . End intersection tests between two collision models. Return the number of contacts written in the contacts vector. ; Implements sofa::core::collision::ElementIntersector. ◆ intersect() [1/2]. int sofa::component::collision::detection::algorithm::MirrorIntersector::intersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . core::collision::DetectionOutputVector * ; contacts . ). overridevirtualdelete . Reimplemented from sofa::core::collision::ElementIntersector. ◆ intersect() [2/2]. int sofa::component::collision::detection::algorith",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html:3318,Test,Test,3318,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,1,['Test'],['Test']
Testability,; ; SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:485591,test,test,485591,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['test']
Testability,"; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cameraModesofa::component::setting::ViewerSetting; d_componentStatesofa::core::objectmodel::Base; d_fullscreensofa::component::setting::ViewerSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; d_objectPickingMethodsofa::component::setting::ViewerSetting; d_resolutionsofa::component::setting::ViewerSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:2255,log,logging,2255,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['log'],['logging']
Testability,"; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; double getTotalError ();  ; double getErrorByDof ();  ; unsigned int getNumCompareState ();  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html:1661,test,testTags,1661,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,1,['test'],['testTags']
Testability,"; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ; int getLevel () const;  ; void setLevel (int l);  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html:1765,test,testTags,1765,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,1,['test'],['testTags']
Testability,; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingm,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163063,log,logging,163063,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163691,log,logging,163691,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205884,test,testing,205884,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],['testing']
Testability,"; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vec3, sofa::type::Vec3)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedProjectiveConstraint()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html:17934,log,logErrors,17934,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:2538,log,logging,2538,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['log'],['logging']
Testability,"; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgeRestInformation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_youngModulussofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:5781,log,logging,5781,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,"; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< TDataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; Deriv typedefsofa::core::behavior::ForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:4732,log,logging,4732,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logging']
Testability,"; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_cameraUpsofa::component::visual::RecordedCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_drawRotationsofa::component::visual::RecordedCamera; d_drawTranslationsofa::component::visual::RecordedCamera; d_endTimesofa::component::visual::RecordedCamera; d_fieldOfViewsofa::component::visual::BaseCamera; d_fixedLookAtPointsofa::component::visual::BaseCamera; d_heightViewportsofa::component::visual::BaseCamera; d_lookAtsofa::component::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:2632,log,logging,2632,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['log'],['logging']
Testability,"; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fieldOfViewsofa::component::visual::BaseCamera; d_fixedLookAtPointsofa::component::visual::BaseCamera; d_heightViewportsofa::component::visual::BaseCamera; d_lookAtsofa::component::visual::BaseCamera; d_maxBBoxsofa::component::visual::BaseCamera; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minBBoxsofa::component::visual::BaseCamera; d_modelViewMatrixsofa::component::visual::BaseCamera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:2624,log,logging,2624,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,3,['log'],['logging']
Testability,"; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_displayFreePositionsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; sofa::core::Coll",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:3825,log,logging,3825,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,1,['log'],['logging']
Testability,"; const SOFA_HELPER_API std::string toString (const Message::Type type);  ; std::ostream & operator<< (std::ostream &s, const Message &m);  ; std::vector< MessageHandler * > getDefaultMessageHandlers ();  ; MessageDispatcherImpl * getMainInstance ();  . Detailed Description; This allow Base object to interact with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:3796,log,logging,3796,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['log'],['logging']
Testability,"; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). pure virtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ canIntersect() [2/2]. virtual bool sofa::core::collision::ElementIntersector::canIntersect ; (; core::CollisionElementIterator ; , . core::CollisionElementIterator ;  . ). virtualdelete . Reimplemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ endIntersect(). virtual int sofa::core::collision::ElementIntersector::endIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector * ; contacts . ). pure virtual . End intersection tests between two collision models. Return the number of contacts written in the contacts vector. ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ intersect() [1/2]. virtual int sofa::core::collision::ElementIntersector::intersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . DetectionOutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). pure virtual . Compute the intersection between 2 elements. Return the number of contacts written in the contacts vector. ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ intersect() [2/2]. virtual int sofa::core::collision::ElementIntersector::intersect ; (; core::CollisionElementIterator ; , . core::CollisionElementIterator ; , . DetectionOutputVector * ;  . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html:3536,test,tests,3536,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,1,['test'],['tests']
Testability,"; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDrawMode() constsofa::component::solidmechanics::spring::SpringForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:10801,log,logging,10801,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,4,['log'],['logging']
Testability,; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture()sofa::gl::component::shader::Lightinlinevirtual; getDirection()sofa::gl::component::shader::Lightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType()=0sofa::gl::component::shader::Lightpure virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::gl::component::shader::Lightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:6990,log,logging,6990,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['log'],['logging']
Testability,; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdges() constsofa::component::visual::VisualModelImplinline; getFilename()sofa::component::visual::VisualModelImplinline; getGLenum(const char *c) constsofa::gl::component::rendering3d::OglModelprotected; getIboEdges()sofa::gl::component::rendering3d::OglModelinline; getIboQuads()sofa::gl::component::rendering3d::OglModelinline; getIboTriangles()sofa::gl::component::rendering3d::OglModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getQuads() constsofa::component::visual::VisualModelImplinline; getSize() const overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTex() constsofa::gl::component::rendering3d::OglModelinline; getTextures() constsofa::gl::component::rendering3d::OglModelinline; getTime() constsofa::core::objectmodel::BaseObject; getTriangles() constsof,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:11111,log,logging,11111,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,3,['log'],['logging']
Testability,"; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; getHexaBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromEdge() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromHexa() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromPoint() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromQuad() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromTetra() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html:6912,log,logging,6912,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,1,['log'],['logging']
Testability,"; getNumCompareState()sofa::component::playback::CompareStateResultinline; getTotalError()sofa::component::playback::CompareStateResultinline; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; numCompareStatesofa::component::playback::CompareStateResultprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *) overridesofa::component::playback::CompareStateResultvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html:4362,test,testTags,4362,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html,1,['test'],['testTags']
Testability,"; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Inters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14868,test,testIntersection,14868,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, core::BaseMapping *) overridesofa::component::constraint::lagrangian::solver::MechanicalGetConstraintViolationVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html:10317,test,testTags,10317,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html,1,['test'],['testTags']
Testability,"; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SphereROI()sofa::component::engine::select::SphereROI< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testEdgeAngle(const Edge &e) constsofa::component::engine::select::SphereROI< DataTypes >protected; testTriangleAngle(const Triangle &t) constsofa::component::engine::select::SphereROI< DataTypes >protected; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triAnglesofa::component::engine::select::SphereROI< DataTypes >; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html:19573,log,logErrors,19573,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,1,['log'],['logErrors']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getStopperIdentifiers()sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >inlineprotectedvirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:8377,log,logging,8377,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getStopperIdentifiers()sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >inlineprotectedvirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:8310,log,logging,8310,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupsofa::core::behavior::BaseConstr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:7532,log,logging,7532,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logging']
Testability,"; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  ; const ComponentInfo::SPtr getComponentInfo (const std::string &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; const ComponentInfo::SPtr getComponentInfo (const ComponentInfo::SPtr &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; bool notMuted (const ComponentInfo::SPtr &);  ; bool notMuted (const std::string &);  This function is used in the msg_* macro to handle string based on string. More...;  ; const SOFA_HELPER_API std::string toString (const Message::Type type);  ; std::ostream & operator<< (std::ostream &s, const Message &m);  ; std::vector< MessageHandler * > getDefaultMessageHandlers ();  ; MessageDispatcherImpl * getMainInstance ();  . Detailed Description; This allow Base object to interact with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:3248,log,logging,3248,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['log'],['logging']
Testability,"; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36949,test,testIntersection,36949,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:21262,test,testIntersection,21262,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5492,test,testing,5492,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability,";  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5709,test,test,5709,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['test'],['test']
Testability,";  ; virtual bool testIntersection (collision::geometry::Cube &cube1, collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:1943,test,testIntersection,1943,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,3,['test'],['testIntersection']
Testability,";  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html:1900,test,testTags,1900,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,1,['test'],['testTags']
Testability,";  ;  ~ExportDotVisitor () override;  ; void processObject (Node *node, core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:2732,test,testTags,2732,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,1,['test'],['testTags']
Testability,";  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container ,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html:1836,test,testTags,1836,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,1,['test'],['testTags']
Testability,";  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2604,log,logs,2604,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,1,['log'],['logs']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; DynamicSparseGridTopologyModifier()sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html:8861,log,logging,8861,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetGeometryAlgorithms classsofa::component::topology::container::dynamic::EdgeSetTopologyModifierfriend; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlinep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html:6041,log,logging,6041,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInHexahedron typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyModifi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html:8639,log,logging,8639,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInQuad typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html:7246,log,logging,7246,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html:9829,log,logging,9829,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInTriangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html:8420,log,logging,8420,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html:3888,log,logging,3888,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html:2205,log,logging,2205,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,3,['log'],['logging']
Testability,"< DataTypes >; computeRestEdgePlaneIntersection(EdgeID edgeID, sofa::type::Vec< 3, Real > pointOnPlane, sofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeRestHexahedronVolume(const HexaID h) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; computeRestQuadArea(const QuadID i) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; computeRestSquareEdgeLength(const EdgeID i) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeShapeFunction(const LocalCoord nc, const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawScaleHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showHexaIndicessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:9820,log,logging,9820,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"< DataTypes >; computeTriangleBarycoefs(const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenterBaryCoefs(sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleNormal(const TriangleID ind_t) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawScaleTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; d_showPointIndicessofa::component::topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:13473,log,logging,13473,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MappedObject< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_Vsofa::component::statecontainer::MappedObject< DataTypes >; d_Xsofa::component::statecontainer::MappedObject< DataTypes >; datasofa::component::statecontainer::MappedObject< DataTypes >protected; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; f_Vsofa::component::statecontainer::Mappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html:2597,log,logging,2597,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,1,['log'],['logging']
Testability,"< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::UniformMass< DataTypes >, and sofa::component::mass::UniformMass< DataTypes >. ◆ initGnuplot(). template<class DataTypes > . void sofa::core::behavior::Mass< DataTypes >::initGnuplot ; (; const std::string ; path). overridevirtual . initialization to export kinetic and potential energy to gnuplot files format ; Implements sofa::core::behavior::BaseMass. ◆ insertInNode(). template<class DataTypes > . bool sofa::core::behavior::Mass< DataTypes >::insertInNode ; (; objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::behavior::BaseMass. ◆ removeInNode(). template<class DataTypes > . bool sofa::core::behavior::Mass< DataTypes >::removeInNode ; (; objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::behavior::BaseMass. ◆ SOFA_CLASS2(). template<class DataTypes > . sofa::core::behavior::Mass< DataTypes >::SOFA_CLASS2 ; (; SOFA_TEMPLATE(Mass< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(ForceField, DataTypes) ; , . BaseMass< DataTypes > ;  . ). sofacorebehaviorMass; Generated on Mon Nov 11 2024 03:15:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:35440,test,test,35440,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,2,['test'],['test']
Testability,"< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", stiffness, d_stiffness)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", arrowSize, d_arrowSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_CLASS(AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AttachBodyButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected. Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:11147,log,logErrors,11147,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,1,['log'],['logErrors']
Testability,"=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::visual::VisualState< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualState()sofa::core::visual::VisualState< DataTypes >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< DataTypes >inlinevirtual; WriteCoord typedefsofa::core::State< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteDeriv typedefsofa::core::State< DataTypes >; writeDx()sofa::core::State< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html:12154,log,logErrors,12154,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,1,['log'],['logErrors']
Testability,"=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13727,log,logErrors,13727,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,1,['log'],['logErrors']
Testability,"> > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:240980,test,testing,240980,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,">::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4981,test,testing,4981,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,1,['test'],['testing']
Testability,">; SOFA_CLASS(SOFA_TEMPLATE(SkeletalMotionProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TProjectiveConstraintSet typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:18796,log,logErrors,18796,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['log'],['logErrors']
Testability,">;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:4300,test,testing,4300,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['test'],['testing']
Testability,">virtual; addForce(const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(const Spring &s)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpring(int m1, int m2, int p1, int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, int i, Spring &spring, Real kFactor)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protected; addSpringForce(SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, int i, Spring &spring)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:2397,log,logging,2397,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logging']
Testability,A - Topic: [SOLVED] Macro definition of snprintf conflicts. /3; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /6; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /main-clock-frequency-in-sofa; ; SOFA - Topic: [SOLVED] Main clock frequency in SOFA. /making-controlled-deformations-without-phantom; . /feed; ; [SOLVED] Making controlled deformations without Phantom – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /6; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /8; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /making-models-move-with-each-other-and-not-separate; ; SOFA - Topic: [SOLVED] making models move with each other and not separate. /many-nan-values-in-eulerimplicitsolver-log-for-tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] Many ‘nan’ values in EulerImplicitSolver log for TetrahedronFEMForceField. /mapping-2-states-to-one-state; ; SOFA - Topic: Mapping 2 states to one state. /mapping-between-beamfemforcefield-behavioral-model-and-oglmodel; . /embed; ; SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /feed; ; [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel – SOFA. SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /mapping-between-rigid-and-deformable-objects; ; SOFA - Topic: [SOLVED] Mapping between rigid and deformable objects. /mapping-between-the-haptic-device-and-a-deformable-instrument; ; SOFA - Topic: mapping between the haptic device and a deformable instrument. /mapping-different-meshes; ; SOFA - Topic: [SOLVED] Mapping different meshes. /mapping-from-grid-to-fem-triangle; ; SOFA - Topic: Mapping from Grid to FEM Triangle. /mapping-grid-to-fem; ; SOFA - Topic: [SOLVED] Mapping Grid to ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:344480,log,log-for-tetrahedronfemforcefield,344480,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['log'],"['log', 'log-for-tetrahedronfemforcefield']"
Testability,"A API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163807,log,loggingmessagehandler,163807,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['loggingmessagehandler']
Testability,A API: sofa::helper::IsEqual< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsI,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:236412,log,logging,236412,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"A API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163830,Log,LoggingMessageHandler,163830,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Log'],['LoggingMessageHandler']
Testability,"A API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164038,log,logging,164038,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:587318,log,logo-showcase-responsive-slider-slider,587318,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logo-showcase-responsive-slider-slider']
Testability,API: Member List; SOFA API: Member List; SOFA API: sofa::helper::io::TriangleLoader Class Reference; SOFA API: Member List; SOFA API: sofa::helper::io::XspLoader Class Reference; SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:161629,log,logging,161629,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Refe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:195163,test,testing,195163,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"AT, sofa::type::Vec< 2, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"AT, sofa::type::Vec< 3, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"AT, sofa::type::Vec< 4, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"ATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(GearSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spring typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; springssofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~GearSpringForceField()sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protectedvirtual; ~PairInteractionForceField() overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:20183,log,logErrors,20183,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logErrors']
Testability,"A_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(EdgePressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::EdgePressureForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateEdgeInformation()sofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecCoord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~EdgePressureForceField()sofa::component::mechanicalload::EdgePressureForceField< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:18530,log,logErrors,18530,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['log'],['logErrors']
Testability,"A_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16099,test,testIntersection,16099,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"A_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; spatial_dimensionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:18562,log,logErrors,18562,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['log'],['logErrors']
Testability,"AndRemoved matrixJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_updateJ instead"") DeprecatedAndRemoved updateJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobian instead"") DeprecatedAndRemoved eigenJacobian;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobians instead"") DeprecatedAndRemoved eigenJacobians;  used by getJs More...;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_geometricStiffnessMatrix instead"") DeprecatedAndRemoved geometricStiffnessMatrix;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:21928,test,testMechanicalState,21928,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['test'],['testMechanicalState']
Testability,AnimationLoopprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:5941,log,logging,5941,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['log'],['logging']
Testability,"AnyTypessofa::helper::logging::Messagestatic; CEmpty enum valuesofa::helper::logging::Message; Class enum namesofa::helper::logging::Message; ClassCount enum valuesofa::helper::logging::Message; componentInfo() constsofa::helper::logging::Messageinline; context() constsofa::helper::logging::Messageinline; Deprecated enum valuesofa::helper::logging::Message; Dev enum valuesofa::helper::logging::Message; empty() constsofa::helper::logging::Message; emptyMsgsofa::helper::logging::Messagestatic; Error enum valuesofa::helper::logging::Message; Fatal enum valuesofa::helper::logging::Message; fileInfo() constsofa::helper::logging::Messageinline; Info enum valuesofa::helper::logging::Message; Log enum valuesofa::helper::logging::Message; m_classsofa::helper::logging::Messageprotected; m_componentinfosofa::helper::logging::Messageprotected; m_fileInfosofa::helper::logging::Messageprotected; m_idsofa::helper::logging::Messageprotected; m_streamsofa::helper::logging::Messageprotected; m_typesofa::helper::logging::Messageprotected; message() constsofa::helper::logging::Messageinline; Message()sofa::helper::logging::Messageinline; Message(const Message &msg)sofa::helper::logging::Message; Message(Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::Message; messageAsString() constsofa::helper::logging::Messageinline; operator<<(const T &x)sofa::helper::logging::Messageinline; operator<<(const FileInfo::SPtr &fi)sofa::helper::logging::Message; operator=(const Message &msg)sofa::helper::logging::Message; Runtime enum valuesofa::helper::logging::Message; sender() constsofa::helper::logging::Messageinline; TEmpty enum valuesofa::helper::logging::Message; type() constsofa::helper::logging::Messageinline; Type enum namesofa::helper::logging::Message; TypeCount enum valuesofa::helper::logging::Message; TypeSet typedefsofa::helper::logging::Message; Warning enum valuesofa::helper::logging::Message.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html:1309,log,logging,1309,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,17,['log'],['logging']
Testability,"Attribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,1,['log'],['logging']
Testability,"Attribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,1,['log'],['logging']
Testability,"Attribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,1,['log'],['logging']
Testability,"Attribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,1,['log'],['logging']
Testability,"Attribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,1,['log'],['logging']
Testability,"Attribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,1,['log'],['logging']
Testability,"Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:2450,log,logging,2450,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,1,['log'],['logging']
Testability,"Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateCylinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html:2976,log,logging,2976,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,1,['log'],['logging']
Testability,"Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::TransformEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html:2976,log,logging,2976,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,1,['log'],['logging']
Testability,"Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEdgessofa::component::topology::mapping::SubsetTopologicalMapping; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleHexahedrasofa::component::topology::mapping::Sub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:7038,log,logging,7038,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logging']
Testability,"Base; getElementMass(sofa::Index index) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getFileMass() constsofa::component::mass::UniformMass< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *mparams, const DataVecDeriv &d_v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMass() constsofa::component::mass::UniformMass< DataTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getMomentumRigid3DImpl(const MechanicalParams *, const DataVecCoord &d_x, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:11758,log,logging,11758,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MakeDataAliasComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MakeDataAliasComponent() overridesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:10409,log,logErrors,10409,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['log'],['logErrors']
Testability,"BaseConstraintSet::getConstraintViolation ; (; const ConstraintParams * ; cParams, . linearalgebra::BaseVector * ; v . ). inlinevirtual . Construct the Constraint violations vector; Parameters. vis the result vector that contains the whole constraints violations ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC) . Reimplemented in sofa::core::behavior::PairInteractionConstraint< TDataTypes >, sofa::core::behavior::PairInteractionConstraint< sofa::defaulttype::StdVectorTypes >, sofa::core::behavior::PairInteractionConstraint< DataTypes >, sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >, and sofa::core::behavior::Constraint< DataTypes >. ◆ insertInNode(). bool sofa::core::behavior::BaseConstraintSet::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ processGeometricalData(). virtual void sofa::core::behavior::BaseConstraintSet::processGeometricalData ; (; ). inlinevirtual . Process geometrical data.; This function is called by the CollisionVisitor, it can be used to process a collision detection specific for the constraint . ◆ removeInNode(). bool sofa::core::behavior::BaseConstraintSet::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resetConstraint(). virtual void sofa::core::behavior::BaseConstraintSet::resetConstraint ; (; ). inlinevirtual . ◆ setConstraintId(). virtual void sofa::core::behavior::BaseConstraintSet::setConstraintId ; (; unsigned ; cId",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html:17266,test,test,17266,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,1,['test'],['test']
Testability,"BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0)=0sofa::core::CollisionModelpure virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, Index)sofa::core::CollisionModelinlinevirtual; draw(const core::visual::VisualParams *) overridesofa::core::CollisionModelinlinevirtual; empty() constsofa::core::CollisionModelinline; end()sofa::core::CollisionModelinline; enum_typesofa::core::CollisionModelprotected; ENUM_TYPE_SIZE enum valuesofa::core::CollisionModel; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html:3130,log,logging,3130,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,1,['log'],['logging']
Testability,"BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTotalMass()sofa::component::mass::UniformMass< DataTypes >virtual; checkVertexMass()sofa::component::mass::UniformMass< DataTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; Coord typedefsofa::component::mass::UniformMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMappingInertiasofa::component::mass::UniformMass< DataTypes >; d_filenameMasssofa::component::mass::UniformMass< DataTypes >; d_indicessofa::component::mass::UniformMass< DataTypes >; d_localRangesofa::component::mass::UniformMass< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_preserveTotalMasssofa::component::mass::UniformMass< DataTypes >; d_showAxisSizesofa::component::mass::UniformMass< DataTypes >; d_showCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showInitialCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showX0sofa::component::mass::UniformMass< DataTypes >; d_totalMasssofa::component::mass::UniformMass< DataTypes >; d_vertexMasssofa::component::mass::Un",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:6905,log,logging,6905,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecCoord2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecDeriv1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecDeriv2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Deriv1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Deriv2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:4111,log,logging,4111,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['log'],['logging']
Testability,"BaseMappingvirtual; setPathInputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setPathOutputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to) overridesofa::core::Mapping< TIn, TOut >virtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:14633,test,testMechanicalState,14633,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,2,"['log', 'test']","['logErrors', 'testMechanicalState']"
Testability,"BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::utility::TopologicalChangeProcessorinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::topology::utility::TopologicalChangeProcessor; d_edgesToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapBordersofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapPathsofa::component::topology::utility::TopologicalChangeProcessor; d_filenamesofa::component::topology::utility::TopologicalChangeProcessor; d_hexahedraToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_intervalsofa::component::topology::utility::TopologicalChangeProcessor; d_listChangessofa::component::topology::utility::TopologicalChangeProcessor; d_loopsofa::component::topology::utility::TopologicalChangeProcessor; d_messageLogCountsofa::core::objectmodel::Basemuta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html:2349,log,logging,2349,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,1,['log'],['logging']
Testability,"BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~QuadularBendingSprings()sofa::component::solidmechanics::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:18352,log,logErrors,18352,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['log'],['logErrors']
Testability,"BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getExtIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getExtPosition() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; getIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:10176,log,logging,10176,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,"BaseObject; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector))sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; sofa::component::linearsystem::TypedMatrixLinearSystem::SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:22176,log,logErrors,22176,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['log'],['logErrors']
Testability,"BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; enabledsofa::gl::component::shader::OglTexturePointerprotected; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualModelinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:2805,log,logging,2805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,1,['log'],['logging']
Testability,"BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_cubesDampingsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_cubesStiffnesssofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_linesDampingsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:6470,log,logging,6470,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_hexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_indicessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputEdgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputHexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputPositionsofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputQuadssofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTetrahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTrianglessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionsofa::component::engine::se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel1 typedefsofa::component::collision::response::contact::RayContact< CM2 >; CollisionModel2 typedefsofa::component::collision::response::contact::RayContact< CM2 >; collisionssofa::component::collision::response::contact::BaseRayContactprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *) overridesofa::component::collision::response::contact::BaseRayContactinlinevirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:2655,log,logging,2655,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['log'],['logging']
Testability,"Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const EdgeID i) const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; sofa::component::topology::container::dynamic::QuadSetTopologyContainer::getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalIndexFromBinaryIndex(const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; getLocalQuadsInHexahedron(const QuadID i) const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNextAdjacentQuad(const HexaID _hexaID, const QuadID _quadID, const EdgeID _edgeID)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:20449,log,logging,20449,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['log'],['logging']
Testability,ButtonSettingprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOperationType() overridesofa::gui::component::FixPickedParticleButtonSettinginlinevirtual; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::Base,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html:4657,log,logging,4657,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,1,['log'],['logging']
Testability,"CM2 > Class Template Reference . #include <DetectionOutput.h>; Generic description of a set of contact point between two specific collision models. ; More... Inheritance diagram for sofa::core::collision::TDetectionOutputVector< CM1, CM2 >:. [legend]; Detailed Description; template<class CM1, class CM2>; class sofa::core::collision::TDetectionOutputVector< CM1, CM2 >; Generic description of a set of contact point between two specific collision models. . Public Member Functions;  ~TDetectionOutputVector () override;  ; void clear () override;  Clear the content of this vector. More...;  ; unsigned int size () const override;  Current size (number of detected contacts) More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx) override;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx) override;  Const iterator end to iterate the detection pairs. More...;  ;  Public Member Functions inherited from sofa::core::collision::DetectionOutputVector; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ;  Public Member Functions inherited from sofa::type::vector< DetectionOutput >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const DetectionOutput &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< DetectionOutput, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< DetectionOutput > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< DetectionOutput, Alloc > &&v);  Move constructor. More...;  ;  vector (typename vector< DetectionOutput >::const_iterator first, typename vector< DetectionOutput >::const_iterator last);  Constructor. More...;  ; vector & operator= (const std::vector< DetectionOutput, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< DetectionO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html:1315,Test,Test,1315,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,1,['Test'],['Test']
Testability,"CT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedRotationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedRotationProjectiveConstraint() overridesofa::component::constraint::projective::Fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:16609,log,logErrors,16609,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"CT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(HermiteSplineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec2R typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Vec3R typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:19626,log,logErrors,19626,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['log'],['logErrors']
Testability,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1255,log,logging,1255,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,5,['log'],['logging']
Testability,Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163567,log,logging,163567,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference; SOFA API: sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexValueProduct< Scalar > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< index, T0, T2 > Class Template Reference; SOFA API: sofa::linearalgebra::type_selector< 0, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< 1, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateBeginEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BehaviorUpdatePositionVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BuildConstraintSystemEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::CleanupVisitor Class Reference; SOFA API: Member List; SOFA API: sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:177492,Test,TestBaseMatrix,177492,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Test'],['TestBaseMatrix']
Testability,Class() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:4761,log,logging,4761,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['log'],['logging']
Testability,Class()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFBO()sofa::gl::component::shader::VisualManagerPassinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputName()sofa::gl::component::shader::VisualManagerPass; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *) overridesofa::gl::component::shader::VisualManagerPassvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:6010,log,logging,6010,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,1,['log'],['logging']
Testability,"CollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *group) overridesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; d_componentStatesofa::core::objectmodel::Base; d_keepAlivesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; d_messageLogCountsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:3585,log,logging,3585,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,1,['log'],['logging']
Testability,"ConstraintAnimationLoopprotectedvirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getIndividualConstraintSolvingProcess(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getIndividualConstraintViolations(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:7549,log,logging,7549,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['log'],['logging']
Testability,"ConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html:2855,log,logging,2855,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,1,['log'],['logging']
Testability,"Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ setIndependentOnly(). void sofa::component::odesolver::testing::GetAssembledSizeVisitor::setIndependentOnly ; (; bool ; b). inline . ◆ velocitySize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::velocitySize ; (; ); const. inline . sofacomponentodesolvertestingGetAssembledSizeVisitor; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5916,test,testing,5916,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability,"Create (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BehaviorModel(). sofa::core::BehaviorModel::BehaviorModel ; (; ). inlineprotected . ◆ ~BehaviorModel(). sofa::core::BehaviorModel::~BehaviorModel ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ addBBox(). virtual bool sofa::core::BehaviorModel::addBBox ; (; SReal * ; , . SReal * ;  . ). inlinevirtual . ◆ insertInNode(). bool sofa::core::BehaviorModel::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::BehaviorModel::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::BehaviorModel::SOFA_ABSTRACT_CLASS ; (; BehaviorModel ; , . objectmodel::BaseObject ;  . ). ◆ updatePosition(). virtual void sofa::core::BehaviorModel::updatePosition ; (; SReal ; dt). pure virtual . Computation of a new simulation step. ; Implemented in sofa::gui::component::performer::BaseMouseInteractor. sofacoreBehaviorModel; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html:14026,test,test,14026,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,2,['test'],['test']
Testability,"D ind_t, bool is_tested, const sofa::type::Vec< 3, Real > &p, TriangleID &ind_t_test) const;  ; sofa::type::Vec< 3, Real > computeBaryEdgePoint (PointID p0, PointID p1, Real coord_p) const;  Computes the point defined by 2 indices of vertex and 1 barycentric coordinate. More...;  ; sofa::type::Vec< 3, Real > computeBaryEdgePoint (Edge e, Real coord_p) const;  ; sofa::type::Vec< 3, Real > computeBaryTrianglePoint (PointID p0, PointID p1, PointID p2, sofa::type::Vec< 3, Real > &coord_p) const;  Computes the point defined by 3 indices of vertex and 1 barycentric coordinate. More...;  ; sofa::type::Vec< 3, Real > computeBaryTrianglePoint (Triangle &t, sofa::type::Vec< 3, Real > &coord_p) const;  ; sofa::type::Vec< 3, Real > computeTriangleNormal (const TriangleID ind_t) const;  Computes the normal vector of a triangle indexed by ind_t (not normed) More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p_q1, const typename DataTypes::Coord &p_q2, QuadID ind_q3, QuadID ind_q4);  Tests how to triangularize a quad whose vertices are defined by (p_q1, p_q2, ind_q3, ind_q4) according to the Delaunay criterion. More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p1, const typename DataTypes::Coord &p2, const typename DataTypes::Coord &p3, const typename DataTypes::Coord &p4);  Tests how to triangularize a quad whose vertices are defined by (p1, p2, p3, p4) according to the Delaunay criterion. More...;  ; bool isDiagonalsIntersectionInQuad (const typename DataTypes::Coord triangle1[3], const typename DataTypes::Coord triangle2[3]);  Given two triangles, test if the intersection of the diagonals of the quad composed by the triangles is inside the quad or not. (test if triangles form a quad) More...;  ; sofa::type::Vec< 3, Real > getOppositePoint (PointID ind_p, const Edge &indices, Real coord_p) const;  Computes the opposite point to ind_p. More...;  ; bool isTriangleInPlane (const TriangleID ind_t, const PointID ind_p, const sofa::type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:13729,Test,Tests,13729,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['Test'],['Tests']
Testability,"DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes))sofa::component::engine::select::MeshROI< DataTypes >; sofa::component::engine::select::BaseROI::SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::MeshROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:19788,log,logErrors,19788,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['log'],['logErrors']
Testability,"DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TransformPosition, DataTypes), core::DataEngine)sofa::component::engine::transform::TransformPosition< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TransformationMethod enum namesofa::component::engine::transform::TransformPosition< DataTypes >; transformationMethodsofa::component::engine::transform::TransformPosition< DataTypes >protected; TransformPosition()sofa::component::engine::transform::TransformPosition< DataTypes >protected; TRANSLATION enum valuesofa::component::engine::transform::TransformPosition< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec16 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; Vec4 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecCoord typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TransformPosition() overridesofa::component::engine::transform::TransformPosition< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:15470,log,logErrors,15470,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logErrors']
Testability,"DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:2188,log,logging,2188,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,3,['log'],['logging']
Testability,"DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrixT(const core::MechanicalParams *mparams, MatrixWriter mwriter)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:3025,log,logging,3025,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"DataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModeli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19365,log,logErrors,19365,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['log'],['logErrors']
Testability,"DataTypes >inline; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:5582,log,logging,5582,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"Datasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() constsofa::core::collision::Detectioninlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:10928,Test,TestPair,10928,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['Test'],['TestPair']
Testability,"DefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5342,test,testing,5342,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['test'],['testing']
Testability,"DerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; constraint_Dsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_dofssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_Fsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_forcesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; Coord typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_debugViewFrameScalesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_fileCompliancesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_fileDirsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recomputesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_restRotationssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_rotationssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:7278,log,logging,7278,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['log'],['logging']
Testability,"DerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; convertConstraintMatrix(sofa::SignedIndex numberOfConstraints, const MatrixDeriv &inputConstraintMatrix)sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; Deriv typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Fsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >protected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:6271,log,logging,6271,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['log'],['logging']
Testability,"Description::getFullName ; (; ). virtual . Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) . ◆ getName(). std::string sofa::core::objectmodel::BaseObjectDescription::getName ; (; ). virtual . Get the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ getObject(). Base * sofa::core::objectmodel::BaseObjectDescription::getObject ; (; ). virtual . Get the associated object (or nullptr if it is not created yet) ; Reimplemented in sofa::simulation::xml::BaseElement, sofa::simulation::xml::Element< Object >, sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >, sofa::simulation::xml::Element< core::objectmodel::BaseObject >, and sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >. ◆ getParent(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::getParent ; (; ); const. virtual . Get the parent node. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ logError(). virtual void sofa::core::objectmodel::BaseObjectDescription::logError ; (; const std::string & ; s). inlinevirtual . ◆ logErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::logErrors ; (; const std::vector< std::string > & ; e). inlinevirtual . ◆ removeAttribute(). bool sofa::core::objectmodel::BaseObjectDescription::removeAttribute ; (; const std::string & ; attr). virtual . Remove an attribute given its name. ; Remove an attribute given its name, returns false if the attribute was not there. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ setAttribute(). void sofa::core::objectmodel::BaseObjectDescription::setAttribute ; (; const std::string & ; attr, . const std::string & ; val . ). virtual . Set an attribute. Override any existing value. . ◆ setName(). void sofa::core::objectmodel::BaseObjectDescription::setName ; (; const std::string & ; name). virtual . Set the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. sofaco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:6965,log,logError,6965,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['log'],['logError']
Testability,"DifferenceSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ getVelocityIntegrationFactor(). virtual SReal sofa::core::behavior::OdeSolver::getVelocityIntegrationFactor ; (; ); const. inlinevirtual . Given the solution dx of the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections ; Reimplemented in sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ insertInNode(). bool sofa::core::behavior::OdeSolver::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::OdeSolver::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::OdeSolver::SOFA_ABSTRACT_CLASS ; (; OdeSolver ; , . objectmodel::BaseObject ;  . ). ◆ solve() [1/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . MultiVecCoordId ; , . MultiVecDerivId ;  . ). pure virtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Im",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:18386,test,test,18386,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['test'],['test']
Testability,"Dimension() const overridesofa::core::behavior::MechanicalState< DataTypes >inlinevirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDerivDimension() const overridesofa::core::behavior::MechanicalState< DataTypes >inlinevirtual; getIndicesInSpace(sofa::type::vector< sofa::Index > &indices, Real xmin, Real xmax, Real ymin, Real ymax, Real zmin, Real zmax) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixBlockSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getMatrixSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPX(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getPY(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getPZ(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getReadAccessor(core::ConstVecId v)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; getRotation() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html:12402,log,logging,12402,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,1,['log'],['logging']
Testability,"Down (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html:1731,test,testTags,1731,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,1,['test'],['testTags']
Testability,"Down enum valuesofa::core::objectmodel::BaseContext; SearchParents enum valuesofa::core::objectmodel::BaseContext; SearchRoot enum valuesofa::core::objectmodel::BaseContext; SearchUp enum valuesofa::core::objectmodel::BaseContext; setActive(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setAnimate(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setChangeSleepingState(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDt(SReal)sofa::core::objectmodel::BaseContextinlinevirtual; setGravity(const Vec3 &)sofa::core::objectmodel::BaseContextinlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMechanicalState(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSleeping(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setTopology(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseContext, Base)sofa::core::objectmodel::BaseContext; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::core::objectmodel::BaseContext; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseContext() overridesofa::core::objectmodel::BaseContextprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:12642,log,logErrors,12642,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['log'],['logErrors']
Testability,"Down(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ressofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html:10819,test,testTags,10819,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html,1,['test'],['testTags']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSize() const overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:7293,log,logging,7293,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,2,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:5910,log,logging,5910,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,5,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *) overridesofa::gl::component::rendering2d::OglLabelvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; ha,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html:6172,log,logging,6172,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,1,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::gl::component::shader::PostProcessManagervirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html:5700,log,logging,5700,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,1,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:5754,log,logging,5754,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,7,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *) overridesofa::component::visual::TrailRenderer< DataTypes >virtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:5860,log,logging,5860,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['log'],['logging']
Testability,"E2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairInteractionForceField()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:21100,log,logErrors,21100,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logErrors']
Testability,"F, const DataVecCoord &dX, const DataVecDeriv &) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:2859,log,logging,2859,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"FEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffnessCorotational(Vector &f, const Vector &x, Index i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:7393,log,logging,7393,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"Fieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(SReal time)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:3288,log,logging,3288,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['log'],['logging']
Testability,"Fieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:3260,log,logging,3260,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logging']
Testability,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PointSplatModel, core::visual::VisualModel)sofa::gl::component::rendering3d::PointSplatModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PointSplatModel() overridesofa::gl::component::rendering3d::PointSplatModelprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html:11410,log,logErrors,11410,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,1,['log'],['logErrors']
Testability,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddRecordedCameraButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html:10647,log,logErrors,10647,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,1,['log'],['logErrors']
Testability,"FilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(AbstractTransformMatrixEngine, core::DataEngine)sofa::component::engine::transform::AbstractTransformMatrixEngine; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~AbstractTransformMatrixEngine() overridesofa::component::engine::transform::AbstractTransformMatrixEngineinlineprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html:12480,log,logErrors,12480,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,1,['log'],['logErrors']
Testability,"FilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:13719,test,testIntersection,13719,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersection']
Testability,ForceFeedbackprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:5276,log,logging,5276,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,3,['log'],['logging']
Testability,ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:4918,log,logging,4918,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['log'],['logging']
Testability,ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; haptic_freqsofa::co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:7139,log,logging,7139,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['log'],['logging']
Testability,"ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7012,test,testing,7012,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['test'],['testing']
Testability,Formatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Referenc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162744,log,logging,162744,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"GeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionPointWithPlane(const TetraID ind_ta, const sofa::type::Vec< 3, Real > &planP0, const sofa::type::Vec< 3, Real > &normal, sofa::type::vector< sofa::type::Vec< 3, Real > > &intersectedPoint, SeqEdges &intersectedEdge)sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOppositePoint(PointID ind_p, const Edge &indices, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:19478,log,logging,19478,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSlave(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:6811,log,logging,6811,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6743,log,logging,6743,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglShaderMacroinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglShaderDefineMacroinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglShaderDefineMacroinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html:4396,log,logging,4396,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() cons,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:5659,log,logging,5659,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglTextureinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglTextureinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglTextureinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:6208,log,logging,6208,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:5719,log,logging,5719,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5711,log,logging,5711,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5761,log,logging,5761,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,4,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html:5763,log,logging,5763,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html:5783,log,logging,5783,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,1,['log'],['logging']
Testability,"Grid Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::geometry::TriangleModelInRegularGrid Class Reference . #include <TriangleModelInRegularGrid.h>. Inheritance diagram for sofa::component::collision::geometry::TriangleModelInRegularGrid:. [legend]. Public Attributes; sofa::core::topology::BaseMeshTopology * _topology;  ; sofa::core::topology::BaseMeshTopology * _higher_topo;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * _higher_mstate;  ;  Public Attributes inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:1117,test,test,1117,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['test'],['test']
Testability,I: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163263,log,logging,163263,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"I: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::PrimitiveGroup Class Reference; SOFA API: Member List; SOFA API: sofa::type::Quat< Real > Class Template Refer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:195348,test,testing,195348,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,I: QDialog Class Reference; SOFA API: QGLViewer Class Reference; SOFA API: QGroupBox Class Reference; SOFA API: QLineEdit Class Reference; SOFA API: QLineSeries Class Reference; SOFA API: QObject Class Reference; SOFA API: QPushButton Class Reference; SOFA API: QTreeWidget Class Reference; SOFA API: QWidget Class Reference; SOFA API: StateLifeCycle Class Reference; SOFA API: StoragePolicy Class Reference; SOFA API: TBase Class Reference; SOFA API: TBaseMatrixAccumulator Class Reference; SOFA API: TMapping Class Reference; SOFA API: TMatrixAccumulator Class Reference; SOFA API: ThreadAccessPolicy Class Reference; SOFA API: VecReal Class Reference; SOFA API: VecValue Class Reference; SOFA API: VisualModelPolicyType Class Reference; SOFA API: WDoubleLineEdit Class Reference; SOFA API: Member List; SOFA API: bool Class Reference; SOFA API: char Class Reference; SOFA API: float Class Reference; SOFA API: sofa::TemplateAliasTest Class Reference; SOFA API: Member List; SOFA API: sofa::TestDataEngine< DataEngineType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::component::animationloop::ConstraintAnimationLoop Class Reference; SOFA API: Member List; SOFA API: sofa::component::animationloop::ConstraintProblem Class Reference; SOFA API: Member List; SOFA API: sofa::component::animationloop::FreeMotionAnimationLoop Class Reference; SOFA API: Member List; SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference; SOFA API: Member List; SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference; SOFA API: Member List; SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference; SOFA API: Member List; SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference; SOFA API: Member List; SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference; SOFA API: Member List; SOFA API: sofa::component::collision::detection::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:15230,Test,TestDataEngine,15230,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['Test'],['TestDataEngine']
Testability,"I: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: Memb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:242218,test,testing,242218,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"ION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateSimulationContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; UpdateSimulationContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateSimulationContextVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html:3973,test,testTags,3973,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,1,['test'],['testTags']
Testability,"InZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if this point is in the range of the area. then, element is accepted otherwise, element is rejected. Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing accepted element. . ◆ getNeighboorElements(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getNeighboorElements ; (; VecIds & ; elementsToTest). protected . Function to get all elements directly neighboor of a given list of elements compute the list without redundancy using container xxAroundVertex() (where xx is the type of element). Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing neighbour (without already accepted elements and redundancy). . ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::start. virtual . Functions called by Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:6434,Test,Test,6434,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,1,['Test'],['Test']
Testability,"Index > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1907,test,testing,1907,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,1,['test'],['testing']
Testability,"IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference; SOFA API: sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexValueProduct< Scalar > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< index, T0, T2 > Class Template Reference; SOFA API: sofa::linearalgebra::type_selector< 0, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< 1, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateBeginEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BehaviorUpdatePositionVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BuildConstraintSystemEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::CleanupVisitor Class Reference; SOFA API: Member List; SO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:177483,test,testing,177483,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"Init()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displacementssofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_scalessofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; d_xsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_x0sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html:3003,log,logging,3003,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,1,['log'],['logging']
Testability,"Intersection (collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:7400,test,testIntersection,7400,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"Intersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16100,test,testIntersection,16100,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"KDataIOpure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swap()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; write(ofstream &f, int n, int groups, int binary)=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseVTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:10724,log,logErrors,10724,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['log'],['logErrors']
Testability,"LASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; TriangleModelInRegularGrid()sofa::component::collision::geometry::TriangleModelInRegularGridprotected; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:20649,log,logErrors,20649,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['log'],['logErrors']
Testability,"LATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedronDiffusionFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedronDiffusionFEMForceField()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecCoord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VectorReal typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:17496,log,logErrors,17496,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - YummyMushroom's Profile. /yupeng; . /engagements; ; SOFA - yupeng',MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:580952,log,logos,580952,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logos']
Testability,"Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:20478,test,testIntersection,20478,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"List=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:18104,log,logErrors,18104,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['log'],['logErrors']
Testability,"MPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecBool typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecCoord typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; X0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; Y0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:22095,log,logErrors,22095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4326,Test,Testing,4326,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['Test'],['Testing']
Testability,Managervirtual; getContacts()sofa::core::collision::ContactManagerinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefaultResponseType() constsofa::component::collision::response::contact::CollisionResponseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::ContactManagerinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:6710,log,logging,6710,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['log'],['logging']
Testability,"Mapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(SquareMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, false))sofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, false >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:18426,log,logErrors,18426,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logErrors']
Testability,"MassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedralTensorMassForceField()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecType typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:18747,log,logErrors,18747,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logErrors']
